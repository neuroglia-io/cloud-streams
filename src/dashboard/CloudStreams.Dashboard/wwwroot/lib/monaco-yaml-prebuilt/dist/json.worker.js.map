{"version":3,"file":"json.worker.js","mappings":"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AAoB90G,YAAYvzB,GAC9B,EAGR,CACX,EAEJ,SAAS6oI,EAA4B/xE,GACjC,MAAqB,MAAdA,GAAmC,OAAdA,GAAoC,OAAdA,CACtD,8FCxLA,IAAIrzG,EAAM,CACT,kBAAmB,CAClB,+EAED,qBAAsB,CACrB,+EAED,uBAAwB,CACvB,oFAED,0BAA2B,CAC1B,oFAED,iBAAkB,CACjB,6EACA,QAED,oBAAqB,CACpB,6EACA,QAED,qBAAsB,CACrB,kFAED,wBAAyB,CACxB,kFAED,uBAAwB,CACvB,oFAED,0BAA2B,CAC1B,oFAED,mBAAoB,CACnB,+EACA,QAED,sBAAuB,CACtB,+EACA,QAED,4BAA6B,CAC5B,wFACA,QAED,+BAAgC,CAC/B,wFACA,QAED,qBAAsB,CACrB,iFACA,QAED,wBAAyB,CACxB,iFACA,QAED,4BAA6B,CAC5B,wFACA,QAED,+BAAgC,CAC/B,wFACA,QAED,oBAAqB,CACpB,gFACA,QAED,uBAAwB,CACvB,gFACA,QAED,0BAA2B,CAC1B,sFACA,QAED,6BAA8B,CAC7B,sFACA,QAED,sBAAuB,CACtB,kFACA,QAED,yBAA0B,CACzB,kFACA,QAED,sBAAuB,CACtB,kFACA,QAED,yBAA0B,CACzB,kFACA,QAED,6BAA8B,CAC7B,yFACA,QAED,gCAAiC,CAChC,yFACA,QAED,UAAW,CACV,sEACA,QAED,aAAc,CACb,sEACA,QAED,iBAAkB,CACjB,6EACA,QAED,oBAAqB,CACpB,6EACA,QAED,oBAAqB,CACpB,gFACA,QAED,uBAAwB,CACvB,gFACA,QAED,sBAAuB,CACtB,kFACA,QAED,yBAA0B,CACzB,kFACA,QAED,kCAAmC,CAClC,8FACA,QAED,qCAAsC,CACrC,8FACA,QAED,0BAA2B,CAC1B,sFACA,QAED,6BAA8B,CAC7B,sFACA,QAED,iCAAkC,CACjC,6FACA,QAED,oCAAqC,CACpC,6FACA,QAED,qCAAsC,CACrC,kGAED,wCAAyC,CACxC,kGAED,yCAA0C,CACzC,qGACA,QAED,4CAA6C,CAC5C,qGACA,QAED,8BAA+B,CAC9B,0FACA,QAED,i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","sources":["webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/arrays.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/arraysFind.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/assert.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/async.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/buffer.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/cache.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/cancellation.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/codicons.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/codiconsLibrary.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/codiconsUtil.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/collections.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/color.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/diff/diff.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/diff/diffChange.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/equals.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/errors.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/event.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/extpath.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/functional.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/glob.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/hash.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/iterator.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/keyCodes.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/lazy.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/lifecycle.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/linkedList.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/map.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/mime.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/network.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/numbers.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/objects.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/observableInternal/api.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/observableInternal/autorun.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/observableInternal/base.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/observableInternal/debugName.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/observableInternal/derived.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/observableInternal/lazyObservableValue.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/observableInternal/logging.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/observableInternal/promise.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/observableInternal/utils.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/path.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/platform.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/process.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/resources.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/severity.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/stopwatch.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/strings.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/symbols.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/themables.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/types.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/uint.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/uri.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/worker/simpleWorker.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/base/common/worker/ lazy ^.*$ namespace object","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/core/characterClassifier.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/core/cursorColumns.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/core/editorColorRegistry.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/core/eolCounter.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/core/indentation.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/core/lineRange.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/core/offsetRange.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/core/position.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/core/positionToOffset.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/core/range.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/core/selection.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/core/stringBuilder.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/core/textChange.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/core/textEdit.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/core/textLength.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/core/textModelDefaults.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/core/wordCharacterClassifier.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/core/wordHelper.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/algorithms/diffAlgorithm.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/algorithms/dynamicProgrammingDiffing.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/algorithms/myersDiffAlgorithm.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/computeMovedLines.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/defaultLinesDiffComputer.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/heuristicSequenceOptimizations.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/lineSequence.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/linesSliceCharSequence.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/utils.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/diff/legacyLinesDiffComputer.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/diff/linesDiffComputer.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/diff/linesDiffComputers.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/diff/rangeMapping.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/encodedTokenAttributes.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/languageFeatureRegistry.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/languageSelector.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/languages.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/languages/defaultDocumentColorsComputer.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/languages/language.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/languages/languageConfiguration.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/languages/languageConfigurationRegistry.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/languages/linkComputer.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/languages/modesRegistry.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/languages/nullTokenize.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/languages/supports.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/languages/supports/characterPair.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/languages/supports/electricCharacter.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/languages/supports/indentRules.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/languages/supports/inplaceReplaceSupport.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/languages/supports/languageBracketsConfiguration.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/languages/supports/onEnter.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/languages/supports/richEditBrackets.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/model.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/bracketPairsImpl.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/ast.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/beforeEditPositionMapper.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/bracketPairsTree.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/brackets.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/combineTextEditInfos.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/concat23Trees.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/length.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/nodeReader.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/parser.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/smallImmutableSet.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/tokenizer.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/colorizedBracketPairsDecorationProvider.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/model/editStack.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/model/fixedArray.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/model/guidesTextModelPart.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/model/indentationGuesser.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/model/intervalTree.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/model/mirrorTextModel.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/model/pieceTreeTextBuffer/pieceTreeBase.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBuffer.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBufferBuilder.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/model/pieceTreeTextBuffer/rbTreeBase.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/model/prefixSumComputer.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/model/textModel.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/model/textModelPart.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/model/textModelSearch.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/model/textModelTokens.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/model/tokenizationTextModelPart.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/model/tokens.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/model/treeSitterTokens.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/model/utils.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/services/editorBaseApi.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/services/editorWorker.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/services/editorWorkerHost.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/services/findSectionHeaders.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/services/getIconClasses.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/services/languageFeatureDebounce.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/services/languageFeatures.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/services/languageFeaturesService.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/services/languageService.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/services/languagesAssociations.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/services/languagesRegistry.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/services/markerDecorations.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/services/markerDecorationsService.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/services/model.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/services/modelService.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/services/resolverService.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/services/semanticTokensDto.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/services/semanticTokensProviderStyling.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/services/semanticTokensStyling.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/services/semanticTokensStylingService.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/services/textModelSync/textModelSync.impl.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/services/textResourceConfiguration.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/services/treeSitterParserService.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/services/treeViewsDnd.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/services/treeViewsDndService.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/services/unicodeTextModelHighlighter.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/services/ lazy ^.*$ namespace object","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/services/ sync ^.*$","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneEnums.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/textModelBracketPairs.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/textModelEvents.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/textModelGuides.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/tokenizationRegistry.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/tokens/contiguousMultilineTokens.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/tokens/contiguousMultilineTokensBuilder.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/tokens/contiguousTokensEditing.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/tokens/contiguousTokensStore.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/tokens/lineTokens.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/tokens/sparseMultilineTokens.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/common/tokens/sparseTokensStore.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/editor/editor.worker.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/nls.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/nls.messages.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/platform/configuration/common/configuration.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/platform/configuration/common/configurationRegistry.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/platform/contextkey/common/contextkey.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/platform/contextkey/common/scanner.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/platform/environment/common/environment.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/platform/files/common/files.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/platform/instantiation/common/descriptors.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/platform/instantiation/common/extensions.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/platform/instantiation/common/instantiation.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/platform/jsonschemas/common/jsonContributionRegistry.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/platform/log/common/log.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/platform/markers/common/markers.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/platform/registry/common/platform.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/platform/theme/common/colorUtils.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/platform/theme/common/colors/baseColors.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/platform/theme/common/colors/chartsColors.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/platform/theme/common/colors/editorColors.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/platform/theme/common/colors/inputColors.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/platform/theme/common/colors/listColors.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/platform/theme/common/colors/menuColors.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/platform/theme/common/colors/minimapColors.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/platform/theme/common/colors/miscColors.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/platform/theme/common/colors/quickpickColors.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/platform/theme/common/colors/searchColors.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/platform/theme/common/theme.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/platform/theme/common/themeService.js","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/platform/undoRedo/common/undoRedo.js","webpack://monaco-yaml-prebuilt/webpack/bootstrap","webpack://monaco-yaml-prebuilt/webpack/runtime/define property getters","webpack://monaco-yaml-prebuilt/webpack/runtime/ensure chunk","webpack://monaco-yaml-prebuilt/webpack/runtime/hasOwnProperty shorthand","webpack://monaco-yaml-prebuilt/webpack/runtime/make namespace object","webpack://monaco-yaml-prebuilt/./node_modules/monaco-editor/esm/vs/language/json/json.worker.js"],"sourcesContent":["/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail(array, n = 0) {\n    return array[array.length - (1 + n)];\n}\nexport function tail2(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function equals(one, other, itemEquals = (a, b) => a === b) {\n    if (one === other) {\n        return true;\n    }\n    if (!one || !other) {\n        return false;\n    }\n    if (one.length !== other.length) {\n        return false;\n    }\n    for (let i = 0, len = one.length; i < len; i++) {\n        if (!itemEquals(one[i], other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Remove the element at `index` by replacing it with the last element. This is faster than `splice`\n * but changes the order of the array\n */\nexport function removeFastWithoutKeepingOrder(array, index) {\n    const last = array.length - 1;\n    if (index < last) {\n        array[index] = array[last];\n    }\n    array.pop();\n}\n/**\n * Performs a binary search algorithm over a sorted array.\n *\n * @param array The array being searched.\n * @param key The value we search for.\n * @param comparator A function that takes two array elements and returns zero\n *   if they are equal, a negative number if the first element precedes the\n *   second one in the sorting order, or a positive number if the second element\n *   precedes the first one.\n * @return See {@link binarySearch2}\n */\nexport function binarySearch(array, key, comparator) {\n    return binarySearch2(array.length, i => comparator(array[i], key));\n}\n/**\n * Performs a binary search algorithm over a sorted collection. Useful for cases\n * when we need to perform a binary search over something that isn't actually an\n * array, and converting data to an array would defeat the use of binary search\n * in the first place.\n *\n * @param length The collection length.\n * @param compareToKey A function that takes an index of an element in the\n *   collection and returns zero if the value at this index is equal to the\n *   search key, a negative number if the value precedes the search key in the\n *   sorting order, or a positive number if the search key precedes the value.\n * @return A non-negative index of an element, if found. If not found, the\n *   result is -(n+1) (or ~n, using bitwise notation), where n is the index\n *   where the key should be inserted to maintain the sorting order.\n */\nexport function binarySearch2(length, compareToKey) {\n    let low = 0, high = length - 1;\n    while (low <= high) {\n        const mid = ((low + high) / 2) | 0;\n        const comp = compareToKey(mid);\n        if (comp < 0) {\n            low = mid + 1;\n        }\n        else if (comp > 0) {\n            high = mid - 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return -(low + 1);\n}\nexport function quickSelect(nth, data, compare) {\n    nth = nth | 0;\n    if (nth >= data.length) {\n        throw new TypeError('invalid index');\n    }\n    const pivotValue = data[Math.floor(data.length * Math.random())];\n    const lower = [];\n    const higher = [];\n    const pivots = [];\n    for (const value of data) {\n        const val = compare(value, pivotValue);\n        if (val < 0) {\n            lower.push(value);\n        }\n        else if (val > 0) {\n            higher.push(value);\n        }\n        else {\n            pivots.push(value);\n        }\n    }\n    if (nth < lower.length) {\n        return quickSelect(nth, lower, compare);\n    }\n    else if (nth < lower.length + pivots.length) {\n        return pivots[0];\n    }\n    else {\n        return quickSelect(nth - (lower.length + pivots.length), higher, compare);\n    }\n}\nexport function groupBy(data, compare) {\n    const result = [];\n    let currentGroup = undefined;\n    for (const element of data.slice(0).sort(compare)) {\n        if (!currentGroup || compare(currentGroup[0], element) !== 0) {\n            currentGroup = [element];\n            result.push(currentGroup);\n        }\n        else {\n            currentGroup.push(element);\n        }\n    }\n    return result;\n}\n/**\n * Splits the given items into a list of (non-empty) groups.\n * `shouldBeGrouped` is used to decide if two consecutive items should be in the same group.\n * The order of the items is preserved.\n */\nexport function* groupAdjacentBy(items, shouldBeGrouped) {\n    let currentGroup;\n    let last;\n    for (const item of items) {\n        if (last !== undefined && shouldBeGrouped(last, item)) {\n            currentGroup.push(item);\n        }\n        else {\n            if (currentGroup) {\n                yield currentGroup;\n            }\n            currentGroup = [item];\n        }\n        last = item;\n    }\n    if (currentGroup) {\n        yield currentGroup;\n    }\n}\nexport function forEachAdjacent(arr, f) {\n    for (let i = 0; i <= arr.length; i++) {\n        f(i === 0 ? undefined : arr[i - 1], i === arr.length ? undefined : arr[i]);\n    }\n}\nexport function forEachWithNeighbors(arr, f) {\n    for (let i = 0; i < arr.length; i++) {\n        f(i === 0 ? undefined : arr[i - 1], arr[i], i + 1 === arr.length ? undefined : arr[i + 1]);\n    }\n}\n/**\n * @returns New array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce(array) {\n    return array.filter((e) => !!e);\n}\n/**\n * Remove all falsy values from `array`. The original array IS modified.\n */\nexport function coalesceInPlace(array) {\n    let to = 0;\n    for (let i = 0; i < array.length; i++) {\n        if (!!array[i]) {\n            array[to] = array[i];\n            to += 1;\n        }\n    }\n    array.length = to;\n}\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj) {\n    return !Array.isArray(obj) || obj.length === 0;\n}\nexport function isNonEmptyArray(obj) {\n    return Array.isArray(obj) && obj.length > 0;\n}\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equality by returning an alternate value for each.\n */\nexport function distinct(array, keyFn = value => value) {\n    const seen = new Set();\n    return array.filter(element => {\n        const key = keyFn(element);\n        if (seen.has(key)) {\n            return false;\n        }\n        seen.add(key);\n        return true;\n    });\n}\nexport function firstOrDefault(array, notFoundValue) {\n    return array.length > 0 ? array[0] : notFoundValue;\n}\nexport function range(arg, to) {\n    let from = typeof to === 'number' ? arg : 0;\n    if (typeof to === 'number') {\n        from = arg;\n    }\n    else {\n        from = 0;\n        to = arg;\n    }\n    const result = [];\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert(target, insertIndex, insertArr) {\n    const before = target.slice(0, insertIndex);\n    const after = target.slice(insertIndex);\n    return before.concat(insertArr, after);\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function pushMany(arr, items) {\n    for (const item of items) {\n        arr.push(item);\n    }\n}\nexport function asArray(x) {\n    return Array.isArray(x) ? x : [x];\n}\n/**\n * Insert the new items in the array.\n * @param array The original array.\n * @param start The zero-based location in the array from which to start inserting elements.\n * @param newItems The items to be inserted\n */\nexport function insertInto(array, start, newItems) {\n    const startIdx = getActualStartIndex(array, start);\n    const originalLength = array.length;\n    const newItemsLength = newItems.length;\n    array.length = originalLength + newItemsLength;\n    // Move the items after the start index, start from the end so that we don't overwrite any value.\n    for (let i = originalLength - 1; i >= startIdx; i--) {\n        array[i + newItemsLength] = array[i];\n    }\n    for (let i = 0; i < newItemsLength; i++) {\n        array[i + startIdx] = newItems[i];\n    }\n}\n/**\n * Removes elements from an array and inserts new elements in their place, returning the deleted elements. Alternative to the native Array.splice method, it\n * can only support limited number of items due to the maximum call stack size limit.\n * @param array The original array.\n * @param start The zero-based location in the array from which to start removing elements.\n * @param deleteCount The number of elements to remove.\n * @returns An array containing the elements that were deleted.\n */\nexport function splice(array, start, deleteCount, newItems) {\n    const index = getActualStartIndex(array, start);\n    let result = array.splice(index, deleteCount);\n    if (result === undefined) {\n        // see https://bugs.webkit.org/show_bug.cgi?id=261140\n        result = [];\n    }\n    insertInto(array, index, newItems);\n    return result;\n}\n/**\n * Determine the actual start index (same logic as the native splice() or slice())\n * If greater than the length of the array, start will be set to the length of the array. In this case, no element will be deleted but the method will behave as an adding function, adding as many element as item[n*] provided.\n * If negative, it will begin that many elements from the end of the array. (In this case, the origin -1, meaning -n is the index of the nth last element, and is therefore equivalent to the index of array.length - n.) If array.length + start is less than 0, it will begin from index 0.\n * @param array The target array.\n * @param start The operation index.\n */\nfunction getActualStartIndex(array, start) {\n    return start < 0 ? Math.max(start + array.length, 0) : Math.min(start, array.length);\n}\nexport var CompareResult;\n(function (CompareResult) {\n    function isLessThan(result) {\n        return result < 0;\n    }\n    CompareResult.isLessThan = isLessThan;\n    function isLessThanOrEqual(result) {\n        return result <= 0;\n    }\n    CompareResult.isLessThanOrEqual = isLessThanOrEqual;\n    function isGreaterThan(result) {\n        return result > 0;\n    }\n    CompareResult.isGreaterThan = isGreaterThan;\n    function isNeitherLessOrGreaterThan(result) {\n        return result === 0;\n    }\n    CompareResult.isNeitherLessOrGreaterThan = isNeitherLessOrGreaterThan;\n    CompareResult.greaterThan = 1;\n    CompareResult.lessThan = -1;\n    CompareResult.neitherLessOrGreaterThan = 0;\n})(CompareResult || (CompareResult = {}));\nexport function compareBy(selector, comparator) {\n    return (a, b) => comparator(selector(a), selector(b));\n}\nexport function tieBreakComparators(...comparators) {\n    return (item1, item2) => {\n        for (const comparator of comparators) {\n            const result = comparator(item1, item2);\n            if (!CompareResult.isNeitherLessOrGreaterThan(result)) {\n                return result;\n            }\n        }\n        return CompareResult.neitherLessOrGreaterThan;\n    };\n}\n/**\n * The natural order on numbers.\n*/\nexport const numberComparator = (a, b) => a - b;\nexport const booleanComparator = (a, b) => numberComparator(a ? 1 : 0, b ? 1 : 0);\nexport function reverseOrder(comparator) {\n    return (a, b) => -comparator(a, b);\n}\nexport class ArrayQueue {\n    /**\n     * Constructs a queue that is backed by the given array. Runtime is O(1).\n    */\n    constructor(items) {\n        this.items = items;\n        this.firstIdx = 0;\n        this.lastIdx = this.items.length - 1;\n    }\n    get length() {\n        return this.lastIdx - this.firstIdx + 1;\n    }\n    /**\n     * Consumes elements from the beginning of the queue as long as the predicate returns true.\n     * If no elements were consumed, `null` is returned. Has a runtime of O(result.length).\n    */\n    takeWhile(predicate) {\n        // P(k) := k <= this.lastIdx && predicate(this.items[k])\n        // Find s := min { k | k >= this.firstIdx && !P(k) } and return this.data[this.firstIdx...s)\n        let startIdx = this.firstIdx;\n        while (startIdx < this.items.length && predicate(this.items[startIdx])) {\n            startIdx++;\n        }\n        const result = startIdx === this.firstIdx ? null : this.items.slice(this.firstIdx, startIdx);\n        this.firstIdx = startIdx;\n        return result;\n    }\n    /**\n     * Consumes elements from the end of the queue as long as the predicate returns true.\n     * If no elements were consumed, `null` is returned.\n     * The result has the same order as the underlying array!\n    */\n    takeFromEndWhile(predicate) {\n        // P(k) := this.firstIdx >= k && predicate(this.items[k])\n        // Find s := max { k | k <= this.lastIdx && !P(k) } and return this.data(s...this.lastIdx]\n        let endIdx = this.lastIdx;\n        while (endIdx >= 0 && predicate(this.items[endIdx])) {\n            endIdx--;\n        }\n        const result = endIdx === this.lastIdx ? null : this.items.slice(endIdx + 1, this.lastIdx + 1);\n        this.lastIdx = endIdx;\n        return result;\n    }\n    peek() {\n        if (this.length === 0) {\n            return undefined;\n        }\n        return this.items[this.firstIdx];\n    }\n    dequeue() {\n        const result = this.items[this.firstIdx];\n        this.firstIdx++;\n        return result;\n    }\n    takeCount(count) {\n        const result = this.items.slice(this.firstIdx, this.firstIdx + count);\n        this.firstIdx += count;\n        return result;\n    }\n}\n/**\n * This class is faster than an iterator and array for lazy computed data.\n*/\nexport class CallbackIterable {\n    static { this.empty = new CallbackIterable(_callback => { }); }\n    constructor(\n    /**\n     * Calls the callback for every item.\n     * Stops when the callback returns false.\n    */\n    iterate) {\n        this.iterate = iterate;\n    }\n    toArray() {\n        const result = [];\n        this.iterate(item => { result.push(item); return true; });\n        return result;\n    }\n    filter(predicate) {\n        return new CallbackIterable(cb => this.iterate(item => predicate(item) ? cb(item) : true));\n    }\n    map(mapFn) {\n        return new CallbackIterable(cb => this.iterate(item => cb(mapFn(item))));\n    }\n    findLast(predicate) {\n        let result;\n        this.iterate(item => {\n            if (predicate(item)) {\n                result = item;\n            }\n            return true;\n        });\n        return result;\n    }\n    findLastMaxBy(comparator) {\n        let result;\n        let first = true;\n        this.iterate(item => {\n            if (first || CompareResult.isGreaterThan(comparator(item, result))) {\n                first = false;\n                result = item;\n            }\n            return true;\n        });\n        return result;\n    }\n}\n/**\n * Represents a re-arrangement of items in an array.\n */\nexport class Permutation {\n    constructor(_indexMap) {\n        this._indexMap = _indexMap;\n    }\n    /**\n     * Returns a permutation that sorts the given array according to the given compare function.\n     */\n    static createSortPermutation(arr, compareFn) {\n        const sortIndices = Array.from(arr.keys()).sort((index1, index2) => compareFn(arr[index1], arr[index2]));\n        return new Permutation(sortIndices);\n    }\n    /**\n     * Returns a new array with the elements of the given array re-arranged according to this permutation.\n     */\n    apply(arr) {\n        return arr.map((_, index) => arr[this._indexMap[index]]);\n    }\n    /**\n     * Returns a new permutation that undoes the re-arrangement of this permutation.\n    */\n    inverse() {\n        const inverseIndexMap = this._indexMap.slice();\n        for (let i = 0; i < this._indexMap.length; i++) {\n            inverseIndexMap[this._indexMap[i]] = i;\n        }\n        return new Permutation(inverseIndexMap);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function findLast(array, predicate) {\n    const idx = findLastIdx(array, predicate);\n    if (idx === -1) {\n        return undefined;\n    }\n    return array[idx];\n}\nexport function findLastIdx(array, predicate, fromIndex = array.length - 1) {\n    for (let i = fromIndex; i >= 0; i--) {\n        const element = array[i];\n        if (predicate(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Finds the last item where predicate is true using binary search.\n * `predicate` must be monotonous, i.e. `arr.map(predicate)` must be like `[true, ..., true, false, ..., false]`!\n *\n * @returns `undefined` if no item matches, otherwise the last item that matches the predicate.\n */\nexport function findLastMonotonous(array, predicate) {\n    const idx = findLastIdxMonotonous(array, predicate);\n    return idx === -1 ? undefined : array[idx];\n}\n/**\n * Finds the last item where predicate is true using binary search.\n * `predicate` must be monotonous, i.e. `arr.map(predicate)` must be like `[true, ..., true, false, ..., false]`!\n *\n * @returns `startIdx - 1` if predicate is false for all items, otherwise the index of the last item that matches the predicate.\n */\nexport function findLastIdxMonotonous(array, predicate, startIdx = 0, endIdxEx = array.length) {\n    let i = startIdx;\n    let j = endIdxEx;\n    while (i < j) {\n        const k = Math.floor((i + j) / 2);\n        if (predicate(array[k])) {\n            i = k + 1;\n        }\n        else {\n            j = k;\n        }\n    }\n    return i - 1;\n}\n/**\n * Finds the first item where predicate is true using binary search.\n * `predicate` must be monotonous, i.e. `arr.map(predicate)` must be like `[false, ..., false, true, ..., true]`!\n *\n * @returns `undefined` if no item matches, otherwise the first item that matches the predicate.\n */\nexport function findFirstMonotonous(array, predicate) {\n    const idx = findFirstIdxMonotonousOrArrLen(array, predicate);\n    return idx === array.length ? undefined : array[idx];\n}\n/**\n * Finds the first item where predicate is true using binary search.\n * `predicate` must be monotonous, i.e. `arr.map(predicate)` must be like `[false, ..., false, true, ..., true]`!\n *\n * @returns `endIdxEx` if predicate is false for all items, otherwise the index of the first item that matches the predicate.\n */\nexport function findFirstIdxMonotonousOrArrLen(array, predicate, startIdx = 0, endIdxEx = array.length) {\n    let i = startIdx;\n    let j = endIdxEx;\n    while (i < j) {\n        const k = Math.floor((i + j) / 2);\n        if (predicate(array[k])) {\n            j = k;\n        }\n        else {\n            i = k + 1;\n        }\n    }\n    return i;\n}\n/**\n * Use this when\n * * You have a sorted array\n * * You query this array with a monotonous predicate to find the last item that has a certain property.\n * * You query this array multiple times with monotonous predicates that get weaker and weaker.\n */\nexport class MonotonousArray {\n    static { this.assertInvariants = false; }\n    constructor(_array) {\n        this._array = _array;\n        this._findLastMonotonousLastIdx = 0;\n    }\n    /**\n     * The predicate must be monotonous, i.e. `arr.map(predicate)` must be like `[true, ..., true, false, ..., false]`!\n     * For subsequent calls, current predicate must be weaker than (or equal to) the previous predicate, i.e. more entries must be `true`.\n     */\n    findLastMonotonous(predicate) {\n        if (MonotonousArray.assertInvariants) {\n            if (this._prevFindLastPredicate) {\n                for (const item of this._array) {\n                    if (this._prevFindLastPredicate(item) && !predicate(item)) {\n                        throw new Error('MonotonousArray: current predicate must be weaker than (or equal to) the previous predicate.');\n                    }\n                }\n            }\n            this._prevFindLastPredicate = predicate;\n        }\n        const idx = findLastIdxMonotonous(this._array, predicate, this._findLastMonotonousLastIdx);\n        this._findLastMonotonousLastIdx = idx + 1;\n        return idx === -1 ? undefined : this._array[idx];\n    }\n}\n/**\n * Returns the first item that is equal to or greater than every other item.\n*/\nexport function findFirstMax(array, comparator) {\n    if (array.length === 0) {\n        return undefined;\n    }\n    let max = array[0];\n    for (let i = 1; i < array.length; i++) {\n        const item = array[i];\n        if (comparator(item, max) > 0) {\n            max = item;\n        }\n    }\n    return max;\n}\n/**\n * Returns the last item that is equal to or greater than every other item.\n*/\nexport function findLastMax(array, comparator) {\n    if (array.length === 0) {\n        return undefined;\n    }\n    let max = array[0];\n    for (let i = 1; i < array.length; i++) {\n        const item = array[i];\n        if (comparator(item, max) >= 0) {\n            max = item;\n        }\n    }\n    return max;\n}\n/**\n * Returns the first item that is equal to or less than every other item.\n*/\nexport function findFirstMin(array, comparator) {\n    return findFirstMax(array, (a, b) => -comparator(a, b));\n}\nexport function findMaxIdx(array, comparator) {\n    if (array.length === 0) {\n        return -1;\n    }\n    let maxIdx = 0;\n    for (let i = 1; i < array.length; i++) {\n        const item = array[i];\n        if (comparator(item, array[maxIdx]) > 0) {\n            maxIdx = i;\n        }\n    }\n    return maxIdx;\n}\n/**\n * Returns the first mapped value of the array which is not undefined.\n */\nexport function mapFindFirst(items, mapFn) {\n    for (const value of items) {\n        const mapped = mapFn(value);\n        if (mapped !== undefined) {\n            return mapped;\n        }\n    }\n    return undefined;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { BugIndicatingError, onUnexpectedError } from './errors.js';\n/**\n * Throws an error with the provided message if the provided value does not evaluate to a true Javascript value.\n *\n * @deprecated Use `assert(...)` instead.\n * This method is usually used like this:\n * ```ts\n * import * as assert from 'vs/base/common/assert';\n * assert.ok(...);\n * ```\n *\n * However, `assert` in that example is a user chosen name.\n * There is no tooling for generating such an import statement.\n * Thus, the `assert(...)` function should be used instead.\n */\nexport function ok(value, message) {\n    if (!value) {\n        throw new Error(message ? `Assertion failed (${message})` : 'Assertion Failed');\n    }\n}\nexport function assertNever(value, message = 'Unreachable') {\n    throw new Error(message);\n}\n/**\n * Like assert, but doesn't throw.\n */\nexport function softAssert(condition) {\n    if (!condition) {\n        onUnexpectedError(new BugIndicatingError('Soft Assertion Failed'));\n    }\n}\n/**\n * condition must be side-effect free!\n */\nexport function assertFn(condition) {\n    if (!condition()) {\n        // eslint-disable-next-line no-debugger\n        debugger;\n        // Reevaluate `condition` again to make debugging easier\n        condition();\n        onUnexpectedError(new BugIndicatingError('Assertion Failed'));\n    }\n}\nexport function checkAdjacentItems(items, predicate) {\n    let i = 0;\n    while (i < items.length - 1) {\n        const a = items[i];\n        const b = items[i + 1];\n        if (!predicate(a, b)) {\n            return false;\n        }\n        i++;\n    }\n    return true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationTokenSource } from './cancellation.js';\nimport { BugIndicatingError, CancellationError } from './errors.js';\nimport { Emitter, Event } from './event.js';\nimport { toDisposable } from './lifecycle.js';\nimport { setTimeout0 } from './platform.js';\nimport { MicrotaskDelay } from './symbols.js';\nexport function isThenable(obj) {\n    return !!obj && typeof obj.then === 'function';\n}\nexport function createCancelablePromise(callback) {\n    const source = new CancellationTokenSource();\n    const thenable = callback(source.token);\n    const promise = new Promise((resolve, reject) => {\n        const subscription = source.token.onCancellationRequested(() => {\n            subscription.dispose();\n            reject(new CancellationError());\n        });\n        Promise.resolve(thenable).then(value => {\n            subscription.dispose();\n            source.dispose();\n            resolve(value);\n        }, err => {\n            subscription.dispose();\n            source.dispose();\n            reject(err);\n        });\n    });\n    return new class {\n        cancel() {\n            source.cancel();\n            source.dispose();\n        }\n        then(resolve, reject) {\n            return promise.then(resolve, reject);\n        }\n        catch(reject) {\n            return this.then(undefined, reject);\n        }\n        finally(onfinally) {\n            return promise.finally(onfinally);\n        }\n    };\n}\nexport function raceCancellation(promise, token, defaultValue) {\n    return new Promise((resolve, reject) => {\n        const ref = token.onCancellationRequested(() => {\n            ref.dispose();\n            resolve(defaultValue);\n        });\n        promise.then(resolve, reject).finally(() => ref.dispose());\n    });\n}\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler {\n    constructor() {\n        this.isDisposed = false;\n        this.activePromise = null;\n        this.queuedPromise = null;\n        this.queuedPromiseFactory = null;\n    }\n    queue(promiseFactory) {\n        if (this.isDisposed) {\n            return Promise.reject(new Error('Throttler is disposed'));\n        }\n        if (this.activePromise) {\n            this.queuedPromiseFactory = promiseFactory;\n            if (!this.queuedPromise) {\n                const onComplete = () => {\n                    this.queuedPromise = null;\n                    if (this.isDisposed) {\n                        return;\n                    }\n                    const result = this.queue(this.queuedPromiseFactory);\n                    this.queuedPromiseFactory = null;\n                    return result;\n                };\n                this.queuedPromise = new Promise(resolve => {\n                    this.activePromise.then(onComplete, onComplete).then(resolve);\n                });\n            }\n            return new Promise((resolve, reject) => {\n                this.queuedPromise.then(resolve, reject);\n            });\n        }\n        this.activePromise = promiseFactory();\n        return new Promise((resolve, reject) => {\n            this.activePromise.then((result) => {\n                this.activePromise = null;\n                resolve(result);\n            }, (err) => {\n                this.activePromise = null;\n                reject(err);\n            });\n        });\n    }\n    dispose() {\n        this.isDisposed = true;\n    }\n}\nconst timeoutDeferred = (timeout, fn) => {\n    let scheduled = true;\n    const handle = setTimeout(() => {\n        scheduled = false;\n        fn();\n    }, timeout);\n    return {\n        isTriggered: () => scheduled,\n        dispose: () => {\n            clearTimeout(handle);\n            scheduled = false;\n        },\n    };\n};\nconst microtaskDeferred = (fn) => {\n    let scheduled = true;\n    queueMicrotask(() => {\n        if (scheduled) {\n            scheduled = false;\n            fn();\n        }\n    });\n    return {\n        isTriggered: () => scheduled,\n        dispose: () => { scheduled = false; },\n    };\n};\n/**\n * A helper to delay (debounce) execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer {\n    constructor(defaultDelay) {\n        this.defaultDelay = defaultDelay;\n        this.deferred = null;\n        this.completionPromise = null;\n        this.doResolve = null;\n        this.doReject = null;\n        this.task = null;\n    }\n    trigger(task, delay = this.defaultDelay) {\n        this.task = task;\n        this.cancelTimeout();\n        if (!this.completionPromise) {\n            this.completionPromise = new Promise((resolve, reject) => {\n                this.doResolve = resolve;\n                this.doReject = reject;\n            }).then(() => {\n                this.completionPromise = null;\n                this.doResolve = null;\n                if (this.task) {\n                    const task = this.task;\n                    this.task = null;\n                    return task();\n                }\n                return undefined;\n            });\n        }\n        const fn = () => {\n            this.deferred = null;\n            this.doResolve?.(null);\n        };\n        this.deferred = delay === MicrotaskDelay ? microtaskDeferred(fn) : timeoutDeferred(delay, fn);\n        return this.completionPromise;\n    }\n    isTriggered() {\n        return !!this.deferred?.isTriggered();\n    }\n    cancel() {\n        this.cancelTimeout();\n        if (this.completionPromise) {\n            this.doReject?.(new CancellationError());\n            this.completionPromise = null;\n        }\n    }\n    cancelTimeout() {\n        this.deferred?.dispose();\n        this.deferred = null;\n    }\n    dispose() {\n        this.cancel();\n    }\n}\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer {\n    constructor(defaultDelay) {\n        this.delayer = new Delayer(defaultDelay);\n        this.throttler = new Throttler();\n    }\n    trigger(promiseFactory, delay) {\n        return this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay);\n    }\n    cancel() {\n        this.delayer.cancel();\n    }\n    dispose() {\n        this.delayer.dispose();\n        this.throttler.dispose();\n    }\n}\nexport function timeout(millis, token) {\n    if (!token) {\n        return createCancelablePromise(token => timeout(millis, token));\n    }\n    return new Promise((resolve, reject) => {\n        const handle = setTimeout(() => {\n            disposable.dispose();\n            resolve();\n        }, millis);\n        const disposable = token.onCancellationRequested(() => {\n            clearTimeout(handle);\n            disposable.dispose();\n            reject(new CancellationError());\n        });\n    });\n}\n/**\n * Creates a timeout that can be disposed using its returned value.\n * @param handler The timeout handler.\n * @param timeout An optional timeout in milliseconds.\n * @param store An optional {@link DisposableStore} that will have the timeout disposable managed automatically.\n *\n * @example\n * const store = new DisposableStore;\n * // Call the timeout after 1000ms at which point it will be automatically\n * // evicted from the store.\n * const timeoutDisposable = disposableTimeout(() => {}, 1000, store);\n *\n * if (foo) {\n *   // Cancel the timeout and evict it from store.\n *   timeoutDisposable.dispose();\n * }\n */\nexport function disposableTimeout(handler, timeout = 0, store) {\n    const timer = setTimeout(() => {\n        handler();\n        if (store) {\n            disposable.dispose();\n        }\n    }, timeout);\n    const disposable = toDisposable(() => {\n        clearTimeout(timer);\n        store?.deleteAndLeak(disposable);\n    });\n    store?.add(disposable);\n    return disposable;\n}\nexport function first(promiseFactories, shouldStop = t => !!t, defaultValue = null) {\n    let index = 0;\n    const len = promiseFactories.length;\n    const loop = () => {\n        if (index >= len) {\n            return Promise.resolve(defaultValue);\n        }\n        const factory = promiseFactories[index++];\n        const promise = Promise.resolve(factory());\n        return promise.then(result => {\n            if (shouldStop(result)) {\n                return Promise.resolve(result);\n            }\n            return loop();\n        });\n    };\n    return loop();\n}\nexport class TimeoutTimer {\n    constructor(runner, timeout) {\n        this._isDisposed = false;\n        this._token = -1;\n        if (typeof runner === 'function' && typeof timeout === 'number') {\n            this.setIfNotSet(runner, timeout);\n        }\n    }\n    dispose() {\n        this.cancel();\n        this._isDisposed = true;\n    }\n    cancel() {\n        if (this._token !== -1) {\n            clearTimeout(this._token);\n            this._token = -1;\n        }\n    }\n    cancelAndSet(runner, timeout) {\n        if (this._isDisposed) {\n            throw new BugIndicatingError(`Calling 'cancelAndSet' on a disposed TimeoutTimer`);\n        }\n        this.cancel();\n        this._token = setTimeout(() => {\n            this._token = -1;\n            runner();\n        }, timeout);\n    }\n    setIfNotSet(runner, timeout) {\n        if (this._isDisposed) {\n            throw new BugIndicatingError(`Calling 'setIfNotSet' on a disposed TimeoutTimer`);\n        }\n        if (this._token !== -1) {\n            // timer is already set\n            return;\n        }\n        this._token = setTimeout(() => {\n            this._token = -1;\n            runner();\n        }, timeout);\n    }\n}\nexport class IntervalTimer {\n    constructor() {\n        this.disposable = undefined;\n        this.isDisposed = false;\n    }\n    cancel() {\n        this.disposable?.dispose();\n        this.disposable = undefined;\n    }\n    cancelAndSet(runner, interval, context = globalThis) {\n        if (this.isDisposed) {\n            throw new BugIndicatingError(`Calling 'cancelAndSet' on a disposed IntervalTimer`);\n        }\n        this.cancel();\n        const handle = context.setInterval(() => {\n            runner();\n        }, interval);\n        this.disposable = toDisposable(() => {\n            context.clearInterval(handle);\n            this.disposable = undefined;\n        });\n    }\n    dispose() {\n        this.cancel();\n        this.isDisposed = true;\n    }\n}\nexport class RunOnceScheduler {\n    constructor(runner, delay) {\n        this.timeoutToken = -1;\n        this.runner = runner;\n        this.timeout = delay;\n        this.timeoutHandler = this.onTimeout.bind(this);\n    }\n    /**\n     * Dispose RunOnceScheduler\n     */\n    dispose() {\n        this.cancel();\n        this.runner = null;\n    }\n    /**\n     * Cancel current scheduled runner (if any).\n     */\n    cancel() {\n        if (this.isScheduled()) {\n            clearTimeout(this.timeoutToken);\n            this.timeoutToken = -1;\n        }\n    }\n    /**\n     * Cancel previous runner (if any) & schedule a new runner.\n     */\n    schedule(delay = this.timeout) {\n        this.cancel();\n        this.timeoutToken = setTimeout(this.timeoutHandler, delay);\n    }\n    get delay() {\n        return this.timeout;\n    }\n    set delay(value) {\n        this.timeout = value;\n    }\n    /**\n     * Returns true if scheduled.\n     */\n    isScheduled() {\n        return this.timeoutToken !== -1;\n    }\n    onTimeout() {\n        this.timeoutToken = -1;\n        if (this.runner) {\n            this.doRun();\n        }\n    }\n    doRun() {\n        this.runner?.();\n    }\n}\n/**\n * Execute the callback the next time the browser is idle, returning an\n * {@link IDisposable} that will cancel the callback when disposed. This wraps\n * [requestIdleCallback] so it will fallback to [setTimeout] if the environment\n * doesn't support it.\n *\n * @param callback The callback to run when idle, this includes an\n * [IdleDeadline] that provides the time alloted for the idle callback by the\n * browser. Not respecting this deadline will result in a degraded user\n * experience.\n * @param timeout A timeout at which point to queue no longer wait for an idle\n * callback but queue it on the regular event loop (like setTimeout). Typically\n * this should not be used.\n *\n * [IdleDeadline]: https://developer.mozilla.org/en-US/docs/Web/API/IdleDeadline\n * [requestIdleCallback]: https://developer.mozilla.org/en-US/docs/Web/API/Window/requestIdleCallback\n * [setTimeout]: https://developer.mozilla.org/en-US/docs/Web/API/Window/setTimeout\n *\n * **Note** that there is `dom.ts#runWhenWindowIdle` which is better suited when running inside a browser\n * context\n */\nexport let runWhenGlobalIdle;\nexport let _runWhenIdle;\n(function () {\n    if (typeof globalThis.requestIdleCallback !== 'function' || typeof globalThis.cancelIdleCallback !== 'function') {\n        _runWhenIdle = (_targetWindow, runner) => {\n            setTimeout0(() => {\n                if (disposed) {\n                    return;\n                }\n                const end = Date.now() + 15; // one frame at 64fps\n                const deadline = {\n                    didTimeout: true,\n                    timeRemaining() {\n                        return Math.max(0, end - Date.now());\n                    }\n                };\n                runner(Object.freeze(deadline));\n            });\n            let disposed = false;\n            return {\n                dispose() {\n                    if (disposed) {\n                        return;\n                    }\n                    disposed = true;\n                }\n            };\n        };\n    }\n    else {\n        _runWhenIdle = (targetWindow, runner, timeout) => {\n            const handle = targetWindow.requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n            let disposed = false;\n            return {\n                dispose() {\n                    if (disposed) {\n                        return;\n                    }\n                    disposed = true;\n                    targetWindow.cancelIdleCallback(handle);\n                }\n            };\n        };\n    }\n    runWhenGlobalIdle = (runner) => _runWhenIdle(globalThis, runner);\n})();\nexport class AbstractIdleValue {\n    constructor(targetWindow, executor) {\n        this._didRun = false;\n        this._executor = () => {\n            try {\n                this._value = executor();\n            }\n            catch (err) {\n                this._error = err;\n            }\n            finally {\n                this._didRun = true;\n            }\n        };\n        this._handle = _runWhenIdle(targetWindow, () => this._executor());\n    }\n    dispose() {\n        this._handle.dispose();\n    }\n    get value() {\n        if (!this._didRun) {\n            this._handle.dispose();\n            this._executor();\n        }\n        if (this._error) {\n            throw this._error;\n        }\n        return this._value;\n    }\n    get isInitialized() {\n        return this._didRun;\n    }\n}\n/**\n * An `IdleValue` that always uses the current window (which might be throttled or inactive)\n *\n * **Note** that there is `dom.ts#WindowIdleValue` which is better suited when running inside a browser\n * context\n */\nexport class GlobalIdleValue extends AbstractIdleValue {\n    constructor(executor) {\n        super(globalThis, executor);\n    }\n}\n/**\n * Creates a promise whose resolution or rejection can be controlled imperatively.\n */\nexport class DeferredPromise {\n    get isRejected() {\n        return this.outcome?.outcome === 1 /* DeferredOutcome.Rejected */;\n    }\n    get isSettled() {\n        return !!this.outcome;\n    }\n    constructor() {\n        this.p = new Promise((c, e) => {\n            this.completeCallback = c;\n            this.errorCallback = e;\n        });\n    }\n    complete(value) {\n        return new Promise(resolve => {\n            this.completeCallback(value);\n            this.outcome = { outcome: 0 /* DeferredOutcome.Resolved */, value };\n            resolve();\n        });\n    }\n    error(err) {\n        return new Promise(resolve => {\n            this.errorCallback(err);\n            this.outcome = { outcome: 1 /* DeferredOutcome.Rejected */, value: err };\n            resolve();\n        });\n    }\n    cancel() {\n        return this.error(new CancellationError());\n    }\n}\n//#endregion\n//#region Promises\nexport var Promises;\n(function (Promises) {\n    /**\n     * A drop-in replacement for `Promise.all` with the only difference\n     * that the method awaits every promise to either fulfill or reject.\n     *\n     * Similar to `Promise.all`, only the first error will be returned\n     * if any.\n     */\n    async function settled(promises) {\n        let firstError = undefined;\n        const result = await Promise.all(promises.map(promise => promise.then(value => value, error => {\n            if (!firstError) {\n                firstError = error;\n            }\n            return undefined; // do not rethrow so that other promises can settle\n        })));\n        if (typeof firstError !== 'undefined') {\n            throw firstError;\n        }\n        return result; // cast is needed and protected by the `throw` above\n    }\n    Promises.settled = settled;\n    /**\n     * A helper to create a new `Promise<T>` with a body that is a promise\n     * itself. By default, an error that raises from the async body will\n     * end up as a unhandled rejection, so this utility properly awaits the\n     * body and rejects the promise as a normal promise does without async\n     * body.\n     *\n     * This method should only be used in rare cases where otherwise `async`\n     * cannot be used (e.g. when callbacks are involved that require this).\n     */\n    function withAsyncBody(bodyFn) {\n        // eslint-disable-next-line no-async-promise-executor\n        return new Promise(async (resolve, reject) => {\n            try {\n                await bodyFn(resolve, reject);\n            }\n            catch (error) {\n                reject(error);\n            }\n        });\n    }\n    Promises.withAsyncBody = withAsyncBody;\n})(Promises || (Promises = {}));\n/**\n * A rich implementation for an `AsyncIterable<T>`.\n */\nexport class AsyncIterableObject {\n    static fromArray(items) {\n        return new AsyncIterableObject((writer) => {\n            writer.emitMany(items);\n        });\n    }\n    static fromPromise(promise) {\n        return new AsyncIterableObject(async (emitter) => {\n            emitter.emitMany(await promise);\n        });\n    }\n    static fromPromises(promises) {\n        return new AsyncIterableObject(async (emitter) => {\n            await Promise.all(promises.map(async (p) => emitter.emitOne(await p)));\n        });\n    }\n    static merge(iterables) {\n        return new AsyncIterableObject(async (emitter) => {\n            await Promise.all(iterables.map(async (iterable) => {\n                for await (const item of iterable) {\n                    emitter.emitOne(item);\n                }\n            }));\n        });\n    }\n    static { this.EMPTY = AsyncIterableObject.fromArray([]); }\n    constructor(executor, onReturn) {\n        this._state = 0 /* AsyncIterableSourceState.Initial */;\n        this._results = [];\n        this._error = null;\n        this._onReturn = onReturn;\n        this._onStateChanged = new Emitter();\n        queueMicrotask(async () => {\n            const writer = {\n                emitOne: (item) => this.emitOne(item),\n                emitMany: (items) => this.emitMany(items),\n                reject: (error) => this.reject(error)\n            };\n            try {\n                await Promise.resolve(executor(writer));\n                this.resolve();\n            }\n            catch (err) {\n                this.reject(err);\n            }\n            finally {\n                writer.emitOne = undefined;\n                writer.emitMany = undefined;\n                writer.reject = undefined;\n            }\n        });\n    }\n    [Symbol.asyncIterator]() {\n        let i = 0;\n        return {\n            next: async () => {\n                do {\n                    if (this._state === 2 /* AsyncIterableSourceState.DoneError */) {\n                        throw this._error;\n                    }\n                    if (i < this._results.length) {\n                        return { done: false, value: this._results[i++] };\n                    }\n                    if (this._state === 1 /* AsyncIterableSourceState.DoneOK */) {\n                        return { done: true, value: undefined };\n                    }\n                    await Event.toPromise(this._onStateChanged.event);\n                } while (true);\n            },\n            return: async () => {\n                this._onReturn?.();\n                return { done: true, value: undefined };\n            }\n        };\n    }\n    static map(iterable, mapFn) {\n        return new AsyncIterableObject(async (emitter) => {\n            for await (const item of iterable) {\n                emitter.emitOne(mapFn(item));\n            }\n        });\n    }\n    map(mapFn) {\n        return AsyncIterableObject.map(this, mapFn);\n    }\n    static filter(iterable, filterFn) {\n        return new AsyncIterableObject(async (emitter) => {\n            for await (const item of iterable) {\n                if (filterFn(item)) {\n                    emitter.emitOne(item);\n                }\n            }\n        });\n    }\n    filter(filterFn) {\n        return AsyncIterableObject.filter(this, filterFn);\n    }\n    static coalesce(iterable) {\n        return AsyncIterableObject.filter(iterable, item => !!item);\n    }\n    coalesce() {\n        return AsyncIterableObject.coalesce(this);\n    }\n    static async toPromise(iterable) {\n        const result = [];\n        for await (const item of iterable) {\n            result.push(item);\n        }\n        return result;\n    }\n    toPromise() {\n        return AsyncIterableObject.toPromise(this);\n    }\n    /**\n     * The value will be appended at the end.\n     *\n     * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n     */\n    emitOne(value) {\n        if (this._state !== 0 /* AsyncIterableSourceState.Initial */) {\n            return;\n        }\n        // it is important to add new values at the end,\n        // as we may have iterators already running on the array\n        this._results.push(value);\n        this._onStateChanged.fire();\n    }\n    /**\n     * The values will be appended at the end.\n     *\n     * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n     */\n    emitMany(values) {\n        if (this._state !== 0 /* AsyncIterableSourceState.Initial */) {\n            return;\n        }\n        // it is important to add new values at the end,\n        // as we may have iterators already running on the array\n        this._results = this._results.concat(values);\n        this._onStateChanged.fire();\n    }\n    /**\n     * Calling `resolve()` will mark the result array as complete.\n     *\n     * **NOTE** `resolve()` must be called, otherwise all consumers of this iterable will hang indefinitely, similar to a non-resolved promise.\n     * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n     */\n    resolve() {\n        if (this._state !== 0 /* AsyncIterableSourceState.Initial */) {\n            return;\n        }\n        this._state = 1 /* AsyncIterableSourceState.DoneOK */;\n        this._onStateChanged.fire();\n    }\n    /**\n     * Writing an error will permanently invalidate this iterable.\n     * The current users will receive an error thrown, as will all future users.\n     *\n     * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n     */\n    reject(error) {\n        if (this._state !== 0 /* AsyncIterableSourceState.Initial */) {\n            return;\n        }\n        this._state = 2 /* AsyncIterableSourceState.DoneError */;\n        this._error = error;\n        this._onStateChanged.fire();\n    }\n}\nexport class CancelableAsyncIterableObject extends AsyncIterableObject {\n    constructor(_source, executor) {\n        super(executor);\n        this._source = _source;\n    }\n    cancel() {\n        this._source.cancel();\n    }\n}\nexport function createCancelableAsyncIterable(callback) {\n    const source = new CancellationTokenSource();\n    const innerIterable = callback(source.token);\n    return new CancelableAsyncIterableObject(source, async (emitter) => {\n        const subscription = source.token.onCancellationRequested(() => {\n            subscription.dispose();\n            source.dispose();\n            emitter.reject(new CancellationError());\n        });\n        try {\n            for await (const item of innerIterable) {\n                if (source.token.isCancellationRequested) {\n                    // canceled in the meantime\n                    return;\n                }\n                emitter.emitOne(item);\n            }\n            subscription.dispose();\n            source.dispose();\n        }\n        catch (err) {\n            subscription.dispose();\n            source.dispose();\n            emitter.reject(err);\n        }\n    });\n}\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Lazy } from './lazy.js';\nconst hasBuffer = (typeof Buffer !== 'undefined');\nconst indexOfTable = new Lazy(() => new Uint8Array(256));\nlet textDecoder;\nexport class VSBuffer {\n    /**\n     * When running in a nodejs context, if `actual` is not a nodejs Buffer, the backing store for\n     * the returned `VSBuffer` instance might use a nodejs Buffer allocated from node's Buffer pool,\n     * which is not transferrable.\n     */\n    static wrap(actual) {\n        if (hasBuffer && !(Buffer.isBuffer(actual))) {\n            // https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n            // Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n            actual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n        }\n        return new VSBuffer(actual);\n    }\n    constructor(buffer) {\n        this.buffer = buffer;\n        this.byteLength = this.buffer.byteLength;\n    }\n    toString() {\n        if (hasBuffer) {\n            return this.buffer.toString();\n        }\n        else {\n            if (!textDecoder) {\n                textDecoder = new TextDecoder();\n            }\n            return textDecoder.decode(this.buffer);\n        }\n    }\n}\nexport function readUInt16LE(source, offset) {\n    return (((source[offset + 0] << 0) >>> 0) |\n        ((source[offset + 1] << 8) >>> 0));\n}\nexport function writeUInt16LE(destination, value, offset) {\n    destination[offset + 0] = (value & 0b11111111);\n    value = value >>> 8;\n    destination[offset + 1] = (value & 0b11111111);\n}\nexport function readUInt32BE(source, offset) {\n    return (source[offset] * 2 ** 24\n        + source[offset + 1] * 2 ** 16\n        + source[offset + 2] * 2 ** 8\n        + source[offset + 3]);\n}\nexport function writeUInt32BE(destination, value, offset) {\n    destination[offset + 3] = value;\n    value = value >>> 8;\n    destination[offset + 2] = value;\n    value = value >>> 8;\n    destination[offset + 1] = value;\n    value = value >>> 8;\n    destination[offset] = value;\n}\nexport function readUInt8(source, offset) {\n    return source[offset];\n}\nexport function writeUInt8(destination, value, offset) {\n    destination[offset] = value;\n}\n","export function identity(t) {\n    return t;\n}\n/**\n * Uses a LRU cache to make a given parametrized function cached.\n * Caches just the last key/value.\n*/\nexport class LRUCachedFunction {\n    constructor(arg1, arg2) {\n        this.lastCache = undefined;\n        this.lastArgKey = undefined;\n        if (typeof arg1 === 'function') {\n            this._fn = arg1;\n            this._computeKey = identity;\n        }\n        else {\n            this._fn = arg2;\n            this._computeKey = arg1.getCacheKey;\n        }\n    }\n    get(arg) {\n        const key = this._computeKey(arg);\n        if (this.lastArgKey !== key) {\n            this.lastArgKey = key;\n            this.lastCache = this._fn(arg);\n        }\n        return this.lastCache;\n    }\n}\n/**\n * Uses an unbounded cache to memoize the results of the given function.\n*/\nexport class CachedFunction {\n    get cachedValues() {\n        return this._map;\n    }\n    constructor(arg1, arg2) {\n        this._map = new Map();\n        this._map2 = new Map();\n        if (typeof arg1 === 'function') {\n            this._fn = arg1;\n            this._computeKey = identity;\n        }\n        else {\n            this._fn = arg2;\n            this._computeKey = arg1.getCacheKey;\n        }\n    }\n    get(arg) {\n        const key = this._computeKey(arg);\n        if (this._map2.has(key)) {\n            return this._map2.get(key);\n        }\n        const value = this._fn(arg);\n        this._map.set(arg, value);\n        this._map2.set(key, value);\n        return value;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter, Event } from './event.js';\nconst shortcutEvent = Object.freeze(function (callback, context) {\n    const handle = setTimeout(callback.bind(context), 0);\n    return { dispose() { clearTimeout(handle); } };\n});\nexport var CancellationToken;\n(function (CancellationToken) {\n    function isCancellationToken(thing) {\n        if (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n            return true;\n        }\n        if (thing instanceof MutableToken) {\n            return true;\n        }\n        if (!thing || typeof thing !== 'object') {\n            return false;\n        }\n        return typeof thing.isCancellationRequested === 'boolean'\n            && typeof thing.onCancellationRequested === 'function';\n    }\n    CancellationToken.isCancellationToken = isCancellationToken;\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: shortcutEvent\n    });\n})(CancellationToken || (CancellationToken = {}));\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n        this._emitter = null;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = new Emitter();\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = null;\n        }\n    }\n}\nexport class CancellationTokenSource {\n    constructor(parent) {\n        this._token = undefined;\n        this._parentListener = undefined;\n        this._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n    }\n    get token() {\n        if (!this._token) {\n            // be lazy and create the token only when\n            // actually needed\n            this._token = new MutableToken();\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually cancel\n            this._token.cancel();\n        }\n    }\n    dispose(cancel = false) {\n        if (cancel) {\n            this.cancel();\n        }\n        this._parentListener?.dispose();\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    }\n}\nexport function cancelOnDispose(store) {\n    const source = new CancellationTokenSource();\n    store.add({ dispose() { source.cancel(); } });\n    return source.token;\n}\n","import { register } from './codiconsUtil.js';\nimport { codiconsLibrary } from './codiconsLibrary.js';\n/**\n * Derived icons, that could become separate icons.\n * These mappings should be moved into the mapping file in the vscode-codicons repo at some point.\n */\nexport const codiconsDerived = {\n    dialogError: register('dialog-error', 'error'),\n    dialogWarning: register('dialog-warning', 'warning'),\n    dialogInfo: register('dialog-info', 'info'),\n    dialogClose: register('dialog-close', 'close'),\n    treeItemExpanded: register('tree-item-expanded', 'chevron-down'), // collapsed is done with rotation\n    treeFilterOnTypeOn: register('tree-filter-on-type-on', 'list-filter'),\n    treeFilterOnTypeOff: register('tree-filter-on-type-off', 'list-selection'),\n    treeFilterClear: register('tree-filter-clear', 'close'),\n    treeItemLoading: register('tree-item-loading', 'loading'),\n    menuSelection: register('menu-selection', 'check'),\n    menuSubmenu: register('menu-submenu', 'chevron-right'),\n    menuBarMore: register('menubar-more', 'more'),\n    scrollbarButtonLeft: register('scrollbar-button-left', 'triangle-left'),\n    scrollbarButtonRight: register('scrollbar-button-right', 'triangle-right'),\n    scrollbarButtonUp: register('scrollbar-button-up', 'triangle-up'),\n    scrollbarButtonDown: register('scrollbar-button-down', 'triangle-down'),\n    toolBarMore: register('toolbar-more', 'more'),\n    quickInputBack: register('quick-input-back', 'arrow-left'),\n    dropDownButton: register('drop-down-button', 0xeab4),\n    symbolCustomColor: register('symbol-customcolor', 0xeb5c),\n    exportIcon: register('export', 0xebac),\n    workspaceUnspecified: register('workspace-unspecified', 0xebc3),\n    newLine: register('newline', 0xebea),\n    thumbsDownFilled: register('thumbsdown-filled', 0xec13),\n    thumbsUpFilled: register('thumbsup-filled', 0xec14),\n    gitFetch: register('git-fetch', 0xec1d),\n    lightbulbSparkleAutofix: register('lightbulb-sparkle-autofix', 0xec1f),\n    debugBreakpointPending: register('debug-breakpoint-pending', 0xebd9),\n};\n/**\n * The Codicon library is a set of default icons that are built-in in VS Code.\n *\n * In the product (outside of base) Codicons should only be used as defaults. In order to have all icons in VS Code\n * themeable, component should define new, UI component specific icons using `iconRegistry.registerIcon`.\n * In that call a Codicon can be named as default.\n */\nexport const Codicon = {\n    ...codiconsLibrary,\n    ...codiconsDerived\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { register } from './codiconsUtil.js';\n// This file is automatically generated by (microsoft/vscode-codicons)/scripts/export-to-ts.js\n// Please don't edit it, as your changes will be overwritten.\n// Instead, add mappings to codiconsDerived in codicons.ts.\nexport const codiconsLibrary = {\n    add: register('add', 0xea60),\n    plus: register('plus', 0xea60),\n    gistNew: register('gist-new', 0xea60),\n    repoCreate: register('repo-create', 0xea60),\n    lightbulb: register('lightbulb', 0xea61),\n    lightBulb: register('light-bulb', 0xea61),\n    repo: register('repo', 0xea62),\n    repoDelete: register('repo-delete', 0xea62),\n    gistFork: register('gist-fork', 0xea63),\n    repoForked: register('repo-forked', 0xea63),\n    gitPullRequest: register('git-pull-request', 0xea64),\n    gitPullRequestAbandoned: register('git-pull-request-abandoned', 0xea64),\n    recordKeys: register('record-keys', 0xea65),\n    keyboard: register('keyboard', 0xea65),\n    tag: register('tag', 0xea66),\n    gitPullRequestLabel: register('git-pull-request-label', 0xea66),\n    tagAdd: register('tag-add', 0xea66),\n    tagRemove: register('tag-remove', 0xea66),\n    person: register('person', 0xea67),\n    personFollow: register('person-follow', 0xea67),\n    personOutline: register('person-outline', 0xea67),\n    personFilled: register('person-filled', 0xea67),\n    gitBranch: register('git-branch', 0xea68),\n    gitBranchCreate: register('git-branch-create', 0xea68),\n    gitBranchDelete: register('git-branch-delete', 0xea68),\n    sourceControl: register('source-control', 0xea68),\n    mirror: register('mirror', 0xea69),\n    mirrorPublic: register('mirror-public', 0xea69),\n    star: register('star', 0xea6a),\n    starAdd: register('star-add', 0xea6a),\n    starDelete: register('star-delete', 0xea6a),\n    starEmpty: register('star-empty', 0xea6a),\n    comment: register('comment', 0xea6b),\n    commentAdd: register('comment-add', 0xea6b),\n    alert: register('alert', 0xea6c),\n    warning: register('warning', 0xea6c),\n    search: register('search', 0xea6d),\n    searchSave: register('search-save', 0xea6d),\n    logOut: register('log-out', 0xea6e),\n    signOut: register('sign-out', 0xea6e),\n    logIn: register('log-in', 0xea6f),\n    signIn: register('sign-in', 0xea6f),\n    eye: register('eye', 0xea70),\n    eyeUnwatch: register('eye-unwatch', 0xea70),\n    eyeWatch: register('eye-watch', 0xea70),\n    circleFilled: register('circle-filled', 0xea71),\n    primitiveDot: register('primitive-dot', 0xea71),\n    closeDirty: register('close-dirty', 0xea71),\n    debugBreakpoint: register('debug-breakpoint', 0xea71),\n    debugBreakpointDisabled: register('debug-breakpoint-disabled', 0xea71),\n    debugHint: register('debug-hint', 0xea71),\n    terminalDecorationSuccess: register('terminal-decoration-success', 0xea71),\n    primitiveSquare: register('primitive-square', 0xea72),\n    edit: register('edit', 0xea73),\n    pencil: register('pencil', 0xea73),\n    info: register('info', 0xea74),\n    issueOpened: register('issue-opened', 0xea74),\n    gistPrivate: register('gist-private', 0xea75),\n    gitForkPrivate: register('git-fork-private', 0xea75),\n    lock: register('lock', 0xea75),\n    mirrorPrivate: register('mirror-private', 0xea75),\n    close: register('close', 0xea76),\n    removeClose: register('remove-close', 0xea76),\n    x: register('x', 0xea76),\n    repoSync: register('repo-sync', 0xea77),\n    sync: register('sync', 0xea77),\n    clone: register('clone', 0xea78),\n    desktopDownload: register('desktop-download', 0xea78),\n    beaker: register('beaker', 0xea79),\n    microscope: register('microscope', 0xea79),\n    vm: register('vm', 0xea7a),\n    deviceDesktop: register('device-desktop', 0xea7a),\n    file: register('file', 0xea7b),\n    fileText: register('file-text', 0xea7b),\n    more: register('more', 0xea7c),\n    ellipsis: register('ellipsis', 0xea7c),\n    kebabHorizontal: register('kebab-horizontal', 0xea7c),\n    mailReply: register('mail-reply', 0xea7d),\n    reply: register('reply', 0xea7d),\n    organization: register('organization', 0xea7e),\n    organizationFilled: register('organization-filled', 0xea7e),\n    organizationOutline: register('organization-outline', 0xea7e),\n    newFile: register('new-file', 0xea7f),\n    fileAdd: register('file-add', 0xea7f),\n    newFolder: register('new-folder', 0xea80),\n    fileDirectoryCreate: register('file-directory-create', 0xea80),\n    trash: register('trash', 0xea81),\n    trashcan: register('trashcan', 0xea81),\n    history: register('history', 0xea82),\n    clock: register('clock', 0xea82),\n    folder: register('folder', 0xea83),\n    fileDirectory: register('file-directory', 0xea83),\n    symbolFolder: register('symbol-folder', 0xea83),\n    logoGithub: register('logo-github', 0xea84),\n    markGithub: register('mark-github', 0xea84),\n    github: register('github', 0xea84),\n    terminal: register('terminal', 0xea85),\n    console: register('console', 0xea85),\n    repl: register('repl', 0xea85),\n    zap: register('zap', 0xea86),\n    symbolEvent: register('symbol-event', 0xea86),\n    error: register('error', 0xea87),\n    stop: register('stop', 0xea87),\n    variable: register('variable', 0xea88),\n    symbolVariable: register('symbol-variable', 0xea88),\n    array: register('array', 0xea8a),\n    symbolArray: register('symbol-array', 0xea8a),\n    symbolModule: register('symbol-module', 0xea8b),\n    symbolPackage: register('symbol-package', 0xea8b),\n    symbolNamespace: register('symbol-namespace', 0xea8b),\n    symbolObject: register('symbol-object', 0xea8b),\n    symbolMethod: register('symbol-method', 0xea8c),\n    symbolFunction: register('symbol-function', 0xea8c),\n    symbolConstructor: register('symbol-constructor', 0xea8c),\n    symbolBoolean: register('symbol-boolean', 0xea8f),\n    symbolNull: register('symbol-null', 0xea8f),\n    symbolNumeric: register('symbol-numeric', 0xea90),\n    symbolNumber: register('symbol-number', 0xea90),\n    symbolStructure: register('symbol-structure', 0xea91),\n    symbolStruct: register('symbol-struct', 0xea91),\n    symbolParameter: register('symbol-parameter', 0xea92),\n    symbolTypeParameter: register('symbol-type-parameter', 0xea92),\n    symbolKey: register('symbol-key', 0xea93),\n    symbolText: register('symbol-text', 0xea93),\n    symbolReference: register('symbol-reference', 0xea94),\n    goToFile: register('go-to-file', 0xea94),\n    symbolEnum: register('symbol-enum', 0xea95),\n    symbolValue: register('symbol-value', 0xea95),\n    symbolRuler: register('symbol-ruler', 0xea96),\n    symbolUnit: register('symbol-unit', 0xea96),\n    activateBreakpoints: register('activate-breakpoints', 0xea97),\n    archive: register('archive', 0xea98),\n    arrowBoth: register('arrow-both', 0xea99),\n    arrowDown: register('arrow-down', 0xea9a),\n    arrowLeft: register('arrow-left', 0xea9b),\n    arrowRight: register('arrow-right', 0xea9c),\n    arrowSmallDown: register('arrow-small-down', 0xea9d),\n    arrowSmallLeft: register('arrow-small-left', 0xea9e),\n    arrowSmallRight: register('arrow-small-right', 0xea9f),\n    arrowSmallUp: register('arrow-small-up', 0xeaa0),\n    arrowUp: register('arrow-up', 0xeaa1),\n    bell: register('bell', 0xeaa2),\n    bold: register('bold', 0xeaa3),\n    book: register('book', 0xeaa4),\n    bookmark: register('bookmark', 0xeaa5),\n    debugBreakpointConditionalUnverified: register('debug-breakpoint-conditional-unverified', 0xeaa6),\n    debugBreakpointConditional: register('debug-breakpoint-conditional', 0xeaa7),\n    debugBreakpointConditionalDisabled: register('debug-breakpoint-conditional-disabled', 0xeaa7),\n    debugBreakpointDataUnverified: register('debug-breakpoint-data-unverified', 0xeaa8),\n    debugBreakpointData: register('debug-breakpoint-data', 0xeaa9),\n    debugBreakpointDataDisabled: register('debug-breakpoint-data-disabled', 0xeaa9),\n    debugBreakpointLogUnverified: register('debug-breakpoint-log-unverified', 0xeaaa),\n    debugBreakpointLog: register('debug-breakpoint-log', 0xeaab),\n    debugBreakpointLogDisabled: register('debug-breakpoint-log-disabled', 0xeaab),\n    briefcase: register('briefcase', 0xeaac),\n    broadcast: register('broadcast', 0xeaad),\n    browser: register('browser', 0xeaae),\n    bug: register('bug', 0xeaaf),\n    calendar: register('calendar', 0xeab0),\n    caseSensitive: register('case-sensitive', 0xeab1),\n    check: register('check', 0xeab2),\n    checklist: register('checklist', 0xeab3),\n    chevronDown: register('chevron-down', 0xeab4),\n    chevronLeft: register('chevron-left', 0xeab5),\n    chevronRight: register('chevron-right', 0xeab6),\n    chevronUp: register('chevron-up', 0xeab7),\n    chromeClose: register('chrome-close', 0xeab8),\n    chromeMaximize: register('chrome-maximize', 0xeab9),\n    chromeMinimize: register('chrome-minimize', 0xeaba),\n    chromeRestore: register('chrome-restore', 0xeabb),\n    circleOutline: register('circle-outline', 0xeabc),\n    circle: register('circle', 0xeabc),\n    debugBreakpointUnverified: register('debug-breakpoint-unverified', 0xeabc),\n    terminalDecorationIncomplete: register('terminal-decoration-incomplete', 0xeabc),\n    circleSlash: register('circle-slash', 0xeabd),\n    circuitBoard: register('circuit-board', 0xeabe),\n    clearAll: register('clear-all', 0xeabf),\n    clippy: register('clippy', 0xeac0),\n    closeAll: register('close-all', 0xeac1),\n    cloudDownload: register('cloud-download', 0xeac2),\n    cloudUpload: register('cloud-upload', 0xeac3),\n    code: register('code', 0xeac4),\n    collapseAll: register('collapse-all', 0xeac5),\n    colorMode: register('color-mode', 0xeac6),\n    commentDiscussion: register('comment-discussion', 0xeac7),\n    creditCard: register('credit-card', 0xeac9),\n    dash: register('dash', 0xeacc),\n    dashboard: register('dashboard', 0xeacd),\n    database: register('database', 0xeace),\n    debugContinue: register('debug-continue', 0xeacf),\n    debugDisconnect: register('debug-disconnect', 0xead0),\n    debugPause: register('debug-pause', 0xead1),\n    debugRestart: register('debug-restart', 0xead2),\n    debugStart: register('debug-start', 0xead3),\n    debugStepInto: register('debug-step-into', 0xead4),\n    debugStepOut: register('debug-step-out', 0xead5),\n    debugStepOver: register('debug-step-over', 0xead6),\n    debugStop: register('debug-stop', 0xead7),\n    debug: register('debug', 0xead8),\n    deviceCameraVideo: register('device-camera-video', 0xead9),\n    deviceCamera: register('device-camera', 0xeada),\n    deviceMobile: register('device-mobile', 0xeadb),\n    diffAdded: register('diff-added', 0xeadc),\n    diffIgnored: register('diff-ignored', 0xeadd),\n    diffModified: register('diff-modified', 0xeade),\n    diffRemoved: register('diff-removed', 0xeadf),\n    diffRenamed: register('diff-renamed', 0xeae0),\n    diff: register('diff', 0xeae1),\n    diffSidebyside: register('diff-sidebyside', 0xeae1),\n    discard: register('discard', 0xeae2),\n    editorLayout: register('editor-layout', 0xeae3),\n    emptyWindow: register('empty-window', 0xeae4),\n    exclude: register('exclude', 0xeae5),\n    extensions: register('extensions', 0xeae6),\n    eyeClosed: register('eye-closed', 0xeae7),\n    fileBinary: register('file-binary', 0xeae8),\n    fileCode: register('file-code', 0xeae9),\n    fileMedia: register('file-media', 0xeaea),\n    filePdf: register('file-pdf', 0xeaeb),\n    fileSubmodule: register('file-submodule', 0xeaec),\n    fileSymlinkDirectory: register('file-symlink-directory', 0xeaed),\n    fileSymlinkFile: register('file-symlink-file', 0xeaee),\n    fileZip: register('file-zip', 0xeaef),\n    files: register('files', 0xeaf0),\n    filter: register('filter', 0xeaf1),\n    flame: register('flame', 0xeaf2),\n    foldDown: register('fold-down', 0xeaf3),\n    foldUp: register('fold-up', 0xeaf4),\n    fold: register('fold', 0xeaf5),\n    folderActive: register('folder-active', 0xeaf6),\n    folderOpened: register('folder-opened', 0xeaf7),\n    gear: register('gear', 0xeaf8),\n    gift: register('gift', 0xeaf9),\n    gistSecret: register('gist-secret', 0xeafa),\n    gist: register('gist', 0xeafb),\n    gitCommit: register('git-commit', 0xeafc),\n    gitCompare: register('git-compare', 0xeafd),\n    compareChanges: register('compare-changes', 0xeafd),\n    gitMerge: register('git-merge', 0xeafe),\n    githubAction: register('github-action', 0xeaff),\n    githubAlt: register('github-alt', 0xeb00),\n    globe: register('globe', 0xeb01),\n    grabber: register('grabber', 0xeb02),\n    graph: register('graph', 0xeb03),\n    gripper: register('gripper', 0xeb04),\n    heart: register('heart', 0xeb05),\n    home: register('home', 0xeb06),\n    horizontalRule: register('horizontal-rule', 0xeb07),\n    hubot: register('hubot', 0xeb08),\n    inbox: register('inbox', 0xeb09),\n    issueReopened: register('issue-reopened', 0xeb0b),\n    issues: register('issues', 0xeb0c),\n    italic: register('italic', 0xeb0d),\n    jersey: register('jersey', 0xeb0e),\n    json: register('json', 0xeb0f),\n    kebabVertical: register('kebab-vertical', 0xeb10),\n    key: register('key', 0xeb11),\n    law: register('law', 0xeb12),\n    lightbulbAutofix: register('lightbulb-autofix', 0xeb13),\n    linkExternal: register('link-external', 0xeb14),\n    link: register('link', 0xeb15),\n    listOrdered: register('list-ordered', 0xeb16),\n    listUnordered: register('list-unordered', 0xeb17),\n    liveShare: register('live-share', 0xeb18),\n    loading: register('loading', 0xeb19),\n    location: register('location', 0xeb1a),\n    mailRead: register('mail-read', 0xeb1b),\n    mail: register('mail', 0xeb1c),\n    markdown: register('markdown', 0xeb1d),\n    megaphone: register('megaphone', 0xeb1e),\n    mention: register('mention', 0xeb1f),\n    milestone: register('milestone', 0xeb20),\n    gitPullRequestMilestone: register('git-pull-request-milestone', 0xeb20),\n    mortarBoard: register('mortar-board', 0xeb21),\n    move: register('move', 0xeb22),\n    multipleWindows: register('multiple-windows', 0xeb23),\n    mute: register('mute', 0xeb24),\n    noNewline: register('no-newline', 0xeb25),\n    note: register('note', 0xeb26),\n    octoface: register('octoface', 0xeb27),\n    openPreview: register('open-preview', 0xeb28),\n    package: register('package', 0xeb29),\n    paintcan: register('paintcan', 0xeb2a),\n    pin: register('pin', 0xeb2b),\n    play: register('play', 0xeb2c),\n    run: register('run', 0xeb2c),\n    plug: register('plug', 0xeb2d),\n    preserveCase: register('preserve-case', 0xeb2e),\n    preview: register('preview', 0xeb2f),\n    project: register('project', 0xeb30),\n    pulse: register('pulse', 0xeb31),\n    question: register('question', 0xeb32),\n    quote: register('quote', 0xeb33),\n    radioTower: register('radio-tower', 0xeb34),\n    reactions: register('reactions', 0xeb35),\n    references: register('references', 0xeb36),\n    refresh: register('refresh', 0xeb37),\n    regex: register('regex', 0xeb38),\n    remoteExplorer: register('remote-explorer', 0xeb39),\n    remote: register('remote', 0xeb3a),\n    remove: register('remove', 0xeb3b),\n    replaceAll: register('replace-all', 0xeb3c),\n    replace: register('replace', 0xeb3d),\n    repoClone: register('repo-clone', 0xeb3e),\n    repoForcePush: register('repo-force-push', 0xeb3f),\n    repoPull: register('repo-pull', 0xeb40),\n    repoPush: register('repo-push', 0xeb41),\n    report: register('report', 0xeb42),\n    requestChanges: register('request-changes', 0xeb43),\n    rocket: register('rocket', 0xeb44),\n    rootFolderOpened: register('root-folder-opened', 0xeb45),\n    rootFolder: register('root-folder', 0xeb46),\n    rss: register('rss', 0xeb47),\n    ruby: register('ruby', 0xeb48),\n    saveAll: register('save-all', 0xeb49),\n    saveAs: register('save-as', 0xeb4a),\n    save: register('save', 0xeb4b),\n    screenFull: register('screen-full', 0xeb4c),\n    screenNormal: register('screen-normal', 0xeb4d),\n    searchStop: register('search-stop', 0xeb4e),\n    server: register('server', 0xeb50),\n    settingsGear: register('settings-gear', 0xeb51),\n    settings: register('settings', 0xeb52),\n    shield: register('shield', 0xeb53),\n    smiley: register('smiley', 0xeb54),\n    sortPrecedence: register('sort-precedence', 0xeb55),\n    splitHorizontal: register('split-horizontal', 0xeb56),\n    splitVertical: register('split-vertical', 0xeb57),\n    squirrel: register('squirrel', 0xeb58),\n    starFull: register('star-full', 0xeb59),\n    starHalf: register('star-half', 0xeb5a),\n    symbolClass: register('symbol-class', 0xeb5b),\n    symbolColor: register('symbol-color', 0xeb5c),\n    symbolConstant: register('symbol-constant', 0xeb5d),\n    symbolEnumMember: register('symbol-enum-member', 0xeb5e),\n    symbolField: register('symbol-field', 0xeb5f),\n    symbolFile: register('symbol-file', 0xeb60),\n    symbolInterface: register('symbol-interface', 0xeb61),\n    symbolKeyword: register('symbol-keyword', 0xeb62),\n    symbolMisc: register('symbol-misc', 0xeb63),\n    symbolOperator: register('symbol-operator', 0xeb64),\n    symbolProperty: register('symbol-property', 0xeb65),\n    wrench: register('wrench', 0xeb65),\n    wrenchSubaction: register('wrench-subaction', 0xeb65),\n    symbolSnippet: register('symbol-snippet', 0xeb66),\n    tasklist: register('tasklist', 0xeb67),\n    telescope: register('telescope', 0xeb68),\n    textSize: register('text-size', 0xeb69),\n    threeBars: register('three-bars', 0xeb6a),\n    thumbsdown: register('thumbsdown', 0xeb6b),\n    thumbsup: register('thumbsup', 0xeb6c),\n    tools: register('tools', 0xeb6d),\n    triangleDown: register('triangle-down', 0xeb6e),\n    triangleLeft: register('triangle-left', 0xeb6f),\n    triangleRight: register('triangle-right', 0xeb70),\n    triangleUp: register('triangle-up', 0xeb71),\n    twitter: register('twitter', 0xeb72),\n    unfold: register('unfold', 0xeb73),\n    unlock: register('unlock', 0xeb74),\n    unmute: register('unmute', 0xeb75),\n    unverified: register('unverified', 0xeb76),\n    verified: register('verified', 0xeb77),\n    versions: register('versions', 0xeb78),\n    vmActive: register('vm-active', 0xeb79),\n    vmOutline: register('vm-outline', 0xeb7a),\n    vmRunning: register('vm-running', 0xeb7b),\n    watch: register('watch', 0xeb7c),\n    whitespace: register('whitespace', 0xeb7d),\n    wholeWord: register('whole-word', 0xeb7e),\n    window: register('window', 0xeb7f),\n    wordWrap: register('word-wrap', 0xeb80),\n    zoomIn: register('zoom-in', 0xeb81),\n    zoomOut: register('zoom-out', 0xeb82),\n    listFilter: register('list-filter', 0xeb83),\n    listFlat: register('list-flat', 0xeb84),\n    listSelection: register('list-selection', 0xeb85),\n    selection: register('selection', 0xeb85),\n    listTree: register('list-tree', 0xeb86),\n    debugBreakpointFunctionUnverified: register('debug-breakpoint-function-unverified', 0xeb87),\n    debugBreakpointFunction: register('debug-breakpoint-function', 0xeb88),\n    debugBreakpointFunctionDisabled: register('debug-breakpoint-function-disabled', 0xeb88),\n    debugStackframeActive: register('debug-stackframe-active', 0xeb89),\n    circleSmallFilled: register('circle-small-filled', 0xeb8a),\n    debugStackframeDot: register('debug-stackframe-dot', 0xeb8a),\n    terminalDecorationMark: register('terminal-decoration-mark', 0xeb8a),\n    debugStackframe: register('debug-stackframe', 0xeb8b),\n    debugStackframeFocused: register('debug-stackframe-focused', 0xeb8b),\n    debugBreakpointUnsupported: register('debug-breakpoint-unsupported', 0xeb8c),\n    symbolString: register('symbol-string', 0xeb8d),\n    debugReverseContinue: register('debug-reverse-continue', 0xeb8e),\n    debugStepBack: register('debug-step-back', 0xeb8f),\n    debugRestartFrame: register('debug-restart-frame', 0xeb90),\n    debugAlt: register('debug-alt', 0xeb91),\n    callIncoming: register('call-incoming', 0xeb92),\n    callOutgoing: register('call-outgoing', 0xeb93),\n    menu: register('menu', 0xeb94),\n    expandAll: register('expand-all', 0xeb95),\n    feedback: register('feedback', 0xeb96),\n    gitPullRequestReviewer: register('git-pull-request-reviewer', 0xeb96),\n    groupByRefType: register('group-by-ref-type', 0xeb97),\n    ungroupByRefType: register('ungroup-by-ref-type', 0xeb98),\n    account: register('account', 0xeb99),\n    gitPullRequestAssignee: register('git-pull-request-assignee', 0xeb99),\n    bellDot: register('bell-dot', 0xeb9a),\n    debugConsole: register('debug-console', 0xeb9b),\n    library: register('library', 0xeb9c),\n    output: register('output', 0xeb9d),\n    runAll: register('run-all', 0xeb9e),\n    syncIgnored: register('sync-ignored', 0xeb9f),\n    pinned: register('pinned', 0xeba0),\n    githubInverted: register('github-inverted', 0xeba1),\n    serverProcess: register('server-process', 0xeba2),\n    serverEnvironment: register('server-environment', 0xeba3),\n    pass: register('pass', 0xeba4),\n    issueClosed: register('issue-closed', 0xeba4),\n    stopCircle: register('stop-circle', 0xeba5),\n    playCircle: register('play-circle', 0xeba6),\n    record: register('record', 0xeba7),\n    debugAltSmall: register('debug-alt-small', 0xeba8),\n    vmConnect: register('vm-connect', 0xeba9),\n    cloud: register('cloud', 0xebaa),\n    merge: register('merge', 0xebab),\n    export: register('export', 0xebac),\n    graphLeft: register('graph-left', 0xebad),\n    magnet: register('magnet', 0xebae),\n    notebook: register('notebook', 0xebaf),\n    redo: register('redo', 0xebb0),\n    checkAll: register('check-all', 0xebb1),\n    pinnedDirty: register('pinned-dirty', 0xebb2),\n    passFilled: register('pass-filled', 0xebb3),\n    circleLargeFilled: register('circle-large-filled', 0xebb4),\n    circleLarge: register('circle-large', 0xebb5),\n    circleLargeOutline: register('circle-large-outline', 0xebb5),\n    combine: register('combine', 0xebb6),\n    gather: register('gather', 0xebb6),\n    table: register('table', 0xebb7),\n    variableGroup: register('variable-group', 0xebb8),\n    typeHierarchy: register('type-hierarchy', 0xebb9),\n    typeHierarchySub: register('type-hierarchy-sub', 0xebba),\n    typeHierarchySuper: register('type-hierarchy-super', 0xebbb),\n    gitPullRequestCreate: register('git-pull-request-create', 0xebbc),\n    runAbove: register('run-above', 0xebbd),\n    runBelow: register('run-below', 0xebbe),\n    notebookTemplate: register('notebook-template', 0xebbf),\n    debugRerun: register('debug-rerun', 0xebc0),\n    workspaceTrusted: register('workspace-trusted', 0xebc1),\n    workspaceUntrusted: register('workspace-untrusted', 0xebc2),\n    workspaceUnknown: register('workspace-unknown', 0xebc3),\n    terminalCmd: register('terminal-cmd', 0xebc4),\n    terminalDebian: register('terminal-debian', 0xebc5),\n    terminalLinux: register('terminal-linux', 0xebc6),\n    terminalPowershell: register('terminal-powershell', 0xebc7),\n    terminalTmux: register('terminal-tmux', 0xebc8),\n    terminalUbuntu: register('terminal-ubuntu', 0xebc9),\n    terminalBash: register('terminal-bash', 0xebca),\n    arrowSwap: register('arrow-swap', 0xebcb),\n    copy: register('copy', 0xebcc),\n    personAdd: register('person-add', 0xebcd),\n    filterFilled: register('filter-filled', 0xebce),\n    wand: register('wand', 0xebcf),\n    debugLineByLine: register('debug-line-by-line', 0xebd0),\n    inspect: register('inspect', 0xebd1),\n    layers: register('layers', 0xebd2),\n    layersDot: register('layers-dot', 0xebd3),\n    layersActive: register('layers-active', 0xebd4),\n    compass: register('compass', 0xebd5),\n    compassDot: register('compass-dot', 0xebd6),\n    compassActive: register('compass-active', 0xebd7),\n    azure: register('azure', 0xebd8),\n    issueDraft: register('issue-draft', 0xebd9),\n    gitPullRequestClosed: register('git-pull-request-closed', 0xebda),\n    gitPullRequestDraft: register('git-pull-request-draft', 0xebdb),\n    debugAll: register('debug-all', 0xebdc),\n    debugCoverage: register('debug-coverage', 0xebdd),\n    runErrors: register('run-errors', 0xebde),\n    folderLibrary: register('folder-library', 0xebdf),\n    debugContinueSmall: register('debug-continue-small', 0xebe0),\n    beakerStop: register('beaker-stop', 0xebe1),\n    graphLine: register('graph-line', 0xebe2),\n    graphScatter: register('graph-scatter', 0xebe3),\n    pieChart: register('pie-chart', 0xebe4),\n    bracket: register('bracket', 0xeb0f),\n    bracketDot: register('bracket-dot', 0xebe5),\n    bracketError: register('bracket-error', 0xebe6),\n    lockSmall: register('lock-small', 0xebe7),\n    azureDevops: register('azure-devops', 0xebe8),\n    verifiedFilled: register('verified-filled', 0xebe9),\n    newline: register('newline', 0xebea),\n    layout: register('layout', 0xebeb),\n    layoutActivitybarLeft: register('layout-activitybar-left', 0xebec),\n    layoutActivitybarRight: register('layout-activitybar-right', 0xebed),\n    layoutPanelLeft: register('layout-panel-left', 0xebee),\n    layoutPanelCenter: register('layout-panel-center', 0xebef),\n    layoutPanelJustify: register('layout-panel-justify', 0xebf0),\n    layoutPanelRight: register('layout-panel-right', 0xebf1),\n    layoutPanel: register('layout-panel', 0xebf2),\n    layoutSidebarLeft: register('layout-sidebar-left', 0xebf3),\n    layoutSidebarRight: register('layout-sidebar-right', 0xebf4),\n    layoutStatusbar: register('layout-statusbar', 0xebf5),\n    layoutMenubar: register('layout-menubar', 0xebf6),\n    layoutCentered: register('layout-centered', 0xebf7),\n    target: register('target', 0xebf8),\n    indent: register('indent', 0xebf9),\n    recordSmall: register('record-small', 0xebfa),\n    errorSmall: register('error-small', 0xebfb),\n    terminalDecorationError: register('terminal-decoration-error', 0xebfb),\n    arrowCircleDown: register('arrow-circle-down', 0xebfc),\n    arrowCircleLeft: register('arrow-circle-left', 0xebfd),\n    arrowCircleRight: register('arrow-circle-right', 0xebfe),\n    arrowCircleUp: register('arrow-circle-up', 0xebff),\n    layoutSidebarRightOff: register('layout-sidebar-right-off', 0xec00),\n    layoutPanelOff: register('layout-panel-off', 0xec01),\n    layoutSidebarLeftOff: register('layout-sidebar-left-off', 0xec02),\n    blank: register('blank', 0xec03),\n    heartFilled: register('heart-filled', 0xec04),\n    map: register('map', 0xec05),\n    mapHorizontal: register('map-horizontal', 0xec05),\n    foldHorizontal: register('fold-horizontal', 0xec05),\n    mapFilled: register('map-filled', 0xec06),\n    mapHorizontalFilled: register('map-horizontal-filled', 0xec06),\n    foldHorizontalFilled: register('fold-horizontal-filled', 0xec06),\n    circleSmall: register('circle-small', 0xec07),\n    bellSlash: register('bell-slash', 0xec08),\n    bellSlashDot: register('bell-slash-dot', 0xec09),\n    commentUnresolved: register('comment-unresolved', 0xec0a),\n    gitPullRequestGoToChanges: register('git-pull-request-go-to-changes', 0xec0b),\n    gitPullRequestNewChanges: register('git-pull-request-new-changes', 0xec0c),\n    searchFuzzy: register('search-fuzzy', 0xec0d),\n    commentDraft: register('comment-draft', 0xec0e),\n    send: register('send', 0xec0f),\n    sparkle: register('sparkle', 0xec10),\n    insert: register('insert', 0xec11),\n    mic: register('mic', 0xec12),\n    thumbsdownFilled: register('thumbsdown-filled', 0xec13),\n    thumbsupFilled: register('thumbsup-filled', 0xec14),\n    coffee: register('coffee', 0xec15),\n    snake: register('snake', 0xec16),\n    game: register('game', 0xec17),\n    vr: register('vr', 0xec18),\n    chip: register('chip', 0xec19),\n    piano: register('piano', 0xec1a),\n    music: register('music', 0xec1b),\n    micFilled: register('mic-filled', 0xec1c),\n    repoFetch: register('repo-fetch', 0xec1d),\n    copilot: register('copilot', 0xec1e),\n    lightbulbSparkle: register('lightbulb-sparkle', 0xec1f),\n    robot: register('robot', 0xec20),\n    sparkleFilled: register('sparkle-filled', 0xec21),\n    diffSingle: register('diff-single', 0xec22),\n    diffMultiple: register('diff-multiple', 0xec23),\n    surroundWith: register('surround-with', 0xec24),\n    share: register('share', 0xec25),\n    gitStash: register('git-stash', 0xec26),\n    gitStashApply: register('git-stash-apply', 0xec27),\n    gitStashPop: register('git-stash-pop', 0xec28),\n    vscode: register('vscode', 0xec29),\n    vscodeInsiders: register('vscode-insiders', 0xec2a),\n    codeOss: register('code-oss', 0xec2b),\n    runCoverage: register('run-coverage', 0xec2c),\n    runAllCoverage: register('run-all-coverage', 0xec2d),\n    coverage: register('coverage', 0xec2e),\n    githubProject: register('github-project', 0xec2f),\n    mapVertical: register('map-vertical', 0xec30),\n    foldVertical: register('fold-vertical', 0xec30),\n    mapVerticalFilled: register('map-vertical-filled', 0xec31),\n    foldVerticalFilled: register('fold-vertical-filled', 0xec31),\n    goToSearch: register('go-to-search', 0xec32),\n    percentage: register('percentage', 0xec33),\n    sortPercentage: register('sort-percentage', 0xec33),\n    attach: register('attach', 0xec34),\n};\n","import { isString } from './types.js';\nconst _codiconFontCharacters = Object.create(null);\nexport function register(id, fontCharacter) {\n    if (isString(fontCharacter)) {\n        const val = _codiconFontCharacters[fontCharacter];\n        if (val === undefined) {\n            throw new Error(`${id} references an unknown codicon: ${fontCharacter}`);\n        }\n        fontCharacter = val;\n    }\n    _codiconFontCharacters[id] = fontCharacter;\n    return { id };\n}\n/**\n * Only to be used by the iconRegistry.\n */\nexport function getCodiconFontCharacters() {\n    return _codiconFontCharacters;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function diffSets(before, after) {\n    const removed = [];\n    const added = [];\n    for (const element of before) {\n        if (!after.has(element)) {\n            removed.push(element);\n        }\n    }\n    for (const element of after) {\n        if (!before.has(element)) {\n            added.push(element);\n        }\n    }\n    return { removed, added };\n}\n/**\n * Computes the intersection of two sets.\n *\n * @param setA - The first set.\n * @param setB - The second iterable.\n * @returns A new set containing the elements that are in both `setA` and `setB`.\n */\nexport function intersection(setA, setB) {\n    const result = new Set();\n    for (const elem of setB) {\n        if (setA.has(elem)) {\n            result.add(elem);\n        }\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nfunction roundFloat(number, decimalPoints) {\n    const decimal = Math.pow(10, decimalPoints);\n    return Math.round(number * decimal) / decimal;\n}\nexport class RGBA {\n    constructor(r, g, b, a = 1) {\n        this._rgbaBrand = undefined;\n        this.r = Math.min(255, Math.max(0, r)) | 0;\n        this.g = Math.min(255, Math.max(0, g)) | 0;\n        this.b = Math.min(255, Math.max(0, b)) | 0;\n        this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n    }\n    static equals(a, b) {\n        return a.r === b.r && a.g === b.g && a.b === b.b && a.a === b.a;\n    }\n}\nexport class HSLA {\n    constructor(h, s, l, a) {\n        this._hslaBrand = undefined;\n        this.h = Math.max(Math.min(360, h), 0) | 0;\n        this.s = roundFloat(Math.max(Math.min(1, s), 0), 3);\n        this.l = roundFloat(Math.max(Math.min(1, l), 0), 3);\n        this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n    }\n    static equals(a, b) {\n        return a.h === b.h && a.s === b.s && a.l === b.l && a.a === b.a;\n    }\n    /**\n     * Converts an RGB color value to HSL. Conversion formula\n     * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n     * Assumes r, g, and b are contained in the set [0, 255] and\n     * returns h in the set [0, 360], s, and l in the set [0, 1].\n     */\n    static fromRGBA(rgba) {\n        const r = rgba.r / 255;\n        const g = rgba.g / 255;\n        const b = rgba.b / 255;\n        const a = rgba.a;\n        const max = Math.max(r, g, b);\n        const min = Math.min(r, g, b);\n        let h = 0;\n        let s = 0;\n        const l = (min + max) / 2;\n        const chroma = max - min;\n        if (chroma > 0) {\n            s = Math.min((l <= 0.5 ? chroma / (2 * l) : chroma / (2 - (2 * l))), 1);\n            switch (max) {\n                case r:\n                    h = (g - b) / chroma + (g < b ? 6 : 0);\n                    break;\n                case g:\n                    h = (b - r) / chroma + 2;\n                    break;\n                case b:\n                    h = (r - g) / chroma + 4;\n                    break;\n            }\n            h *= 60;\n            h = Math.round(h);\n        }\n        return new HSLA(h, s, l, a);\n    }\n    static _hue2rgb(p, q, t) {\n        if (t < 0) {\n            t += 1;\n        }\n        if (t > 1) {\n            t -= 1;\n        }\n        if (t < 1 / 6) {\n            return p + (q - p) * 6 * t;\n        }\n        if (t < 1 / 2) {\n            return q;\n        }\n        if (t < 2 / 3) {\n            return p + (q - p) * (2 / 3 - t) * 6;\n        }\n        return p;\n    }\n    /**\n     * Converts an HSL color value to RGB. Conversion formula\n     * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n     * Assumes h in the set [0, 360] s, and l are contained in the set [0, 1] and\n     * returns r, g, and b in the set [0, 255].\n     */\n    static toRGBA(hsla) {\n        const h = hsla.h / 360;\n        const { s, l, a } = hsla;\n        let r, g, b;\n        if (s === 0) {\n            r = g = b = l; // achromatic\n        }\n        else {\n            const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n            const p = 2 * l - q;\n            r = HSLA._hue2rgb(p, q, h + 1 / 3);\n            g = HSLA._hue2rgb(p, q, h);\n            b = HSLA._hue2rgb(p, q, h - 1 / 3);\n        }\n        return new RGBA(Math.round(r * 255), Math.round(g * 255), Math.round(b * 255), a);\n    }\n}\nexport class HSVA {\n    constructor(h, s, v, a) {\n        this._hsvaBrand = undefined;\n        this.h = Math.max(Math.min(360, h), 0) | 0;\n        this.s = roundFloat(Math.max(Math.min(1, s), 0), 3);\n        this.v = roundFloat(Math.max(Math.min(1, v), 0), 3);\n        this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n    }\n    static equals(a, b) {\n        return a.h === b.h && a.s === b.s && a.v === b.v && a.a === b.a;\n    }\n    // from http://www.rapidtables.com/convert/color/rgb-to-hsv.htm\n    static fromRGBA(rgba) {\n        const r = rgba.r / 255;\n        const g = rgba.g / 255;\n        const b = rgba.b / 255;\n        const cmax = Math.max(r, g, b);\n        const cmin = Math.min(r, g, b);\n        const delta = cmax - cmin;\n        const s = cmax === 0 ? 0 : (delta / cmax);\n        let m;\n        if (delta === 0) {\n            m = 0;\n        }\n        else if (cmax === r) {\n            m = ((((g - b) / delta) % 6) + 6) % 6;\n        }\n        else if (cmax === g) {\n            m = ((b - r) / delta) + 2;\n        }\n        else {\n            m = ((r - g) / delta) + 4;\n        }\n        return new HSVA(Math.round(m * 60), s, cmax, rgba.a);\n    }\n    // from http://www.rapidtables.com/convert/color/hsv-to-rgb.htm\n    static toRGBA(hsva) {\n        const { h, s, v, a } = hsva;\n        const c = v * s;\n        const x = c * (1 - Math.abs((h / 60) % 2 - 1));\n        const m = v - c;\n        let [r, g, b] = [0, 0, 0];\n        if (h < 60) {\n            r = c;\n            g = x;\n        }\n        else if (h < 120) {\n            r = x;\n            g = c;\n        }\n        else if (h < 180) {\n            g = c;\n            b = x;\n        }\n        else if (h < 240) {\n            g = x;\n            b = c;\n        }\n        else if (h < 300) {\n            r = x;\n            b = c;\n        }\n        else if (h <= 360) {\n            r = c;\n            b = x;\n        }\n        r = Math.round((r + m) * 255);\n        g = Math.round((g + m) * 255);\n        b = Math.round((b + m) * 255);\n        return new RGBA(r, g, b, a);\n    }\n}\nexport class Color {\n    static fromHex(hex) {\n        return Color.Format.CSS.parseHex(hex) || Color.red;\n    }\n    static equals(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        if (!a || !b) {\n            return false;\n        }\n        return a.equals(b);\n    }\n    get hsla() {\n        if (this._hsla) {\n            return this._hsla;\n        }\n        else {\n            return HSLA.fromRGBA(this.rgba);\n        }\n    }\n    get hsva() {\n        if (this._hsva) {\n            return this._hsva;\n        }\n        return HSVA.fromRGBA(this.rgba);\n    }\n    constructor(arg) {\n        if (!arg) {\n            throw new Error('Color needs a value');\n        }\n        else if (arg instanceof RGBA) {\n            this.rgba = arg;\n        }\n        else if (arg instanceof HSLA) {\n            this._hsla = arg;\n            this.rgba = HSLA.toRGBA(arg);\n        }\n        else if (arg instanceof HSVA) {\n            this._hsva = arg;\n            this.rgba = HSVA.toRGBA(arg);\n        }\n        else {\n            throw new Error('Invalid color ctor argument');\n        }\n    }\n    equals(other) {\n        return !!other && RGBA.equals(this.rgba, other.rgba) && HSLA.equals(this.hsla, other.hsla) && HSVA.equals(this.hsva, other.hsva);\n    }\n    /**\n     * http://www.w3.org/TR/WCAG20/#relativeluminancedef\n     * Returns the number in the set [0, 1]. O => Darkest Black. 1 => Lightest white.\n     */\n    getRelativeLuminance() {\n        const R = Color._relativeLuminanceForComponent(this.rgba.r);\n        const G = Color._relativeLuminanceForComponent(this.rgba.g);\n        const B = Color._relativeLuminanceForComponent(this.rgba.b);\n        const luminance = 0.2126 * R + 0.7152 * G + 0.0722 * B;\n        return roundFloat(luminance, 4);\n    }\n    static _relativeLuminanceForComponent(color) {\n        const c = color / 255;\n        return (c <= 0.03928) ? c / 12.92 : Math.pow(((c + 0.055) / 1.055), 2.4);\n    }\n    /**\n     *\thttp://24ways.org/2010/calculating-color-contrast\n     *  Return 'true' if lighter color otherwise 'false'\n     */\n    isLighter() {\n        const yiq = (this.rgba.r * 299 + this.rgba.g * 587 + this.rgba.b * 114) / 1000;\n        return yiq >= 128;\n    }\n    isLighterThan(another) {\n        const lum1 = this.getRelativeLuminance();\n        const lum2 = another.getRelativeLuminance();\n        return lum1 > lum2;\n    }\n    isDarkerThan(another) {\n        const lum1 = this.getRelativeLuminance();\n        const lum2 = another.getRelativeLuminance();\n        return lum1 < lum2;\n    }\n    lighten(factor) {\n        return new Color(new HSLA(this.hsla.h, this.hsla.s, this.hsla.l + this.hsla.l * factor, this.hsla.a));\n    }\n    darken(factor) {\n        return new Color(new HSLA(this.hsla.h, this.hsla.s, this.hsla.l - this.hsla.l * factor, this.hsla.a));\n    }\n    transparent(factor) {\n        const { r, g, b, a } = this.rgba;\n        return new Color(new RGBA(r, g, b, a * factor));\n    }\n    isTransparent() {\n        return this.rgba.a === 0;\n    }\n    isOpaque() {\n        return this.rgba.a === 1;\n    }\n    opposite() {\n        return new Color(new RGBA(255 - this.rgba.r, 255 - this.rgba.g, 255 - this.rgba.b, this.rgba.a));\n    }\n    makeOpaque(opaqueBackground) {\n        if (this.isOpaque() || opaqueBackground.rgba.a !== 1) {\n            // only allow to blend onto a non-opaque color onto a opaque color\n            return this;\n        }\n        const { r, g, b, a } = this.rgba;\n        // https://stackoverflow.com/questions/12228548/finding-equivalent-color-with-opacity\n        return new Color(new RGBA(opaqueBackground.rgba.r - a * (opaqueBackground.rgba.r - r), opaqueBackground.rgba.g - a * (opaqueBackground.rgba.g - g), opaqueBackground.rgba.b - a * (opaqueBackground.rgba.b - b), 1));\n    }\n    toString() {\n        if (!this._toString) {\n            this._toString = Color.Format.CSS.format(this);\n        }\n        return this._toString;\n    }\n    static getLighterColor(of, relative, factor) {\n        if (of.isLighterThan(relative)) {\n            return of;\n        }\n        factor = factor ? factor : 0.5;\n        const lum1 = of.getRelativeLuminance();\n        const lum2 = relative.getRelativeLuminance();\n        factor = factor * (lum2 - lum1) / lum2;\n        return of.lighten(factor);\n    }\n    static getDarkerColor(of, relative, factor) {\n        if (of.isDarkerThan(relative)) {\n            return of;\n        }\n        factor = factor ? factor : 0.5;\n        const lum1 = of.getRelativeLuminance();\n        const lum2 = relative.getRelativeLuminance();\n        factor = factor * (lum1 - lum2) / lum1;\n        return of.darken(factor);\n    }\n    static { this.white = new Color(new RGBA(255, 255, 255, 1)); }\n    static { this.black = new Color(new RGBA(0, 0, 0, 1)); }\n    static { this.red = new Color(new RGBA(255, 0, 0, 1)); }\n    static { this.blue = new Color(new RGBA(0, 0, 255, 1)); }\n    static { this.green = new Color(new RGBA(0, 255, 0, 1)); }\n    static { this.cyan = new Color(new RGBA(0, 255, 255, 1)); }\n    static { this.lightgrey = new Color(new RGBA(211, 211, 211, 1)); }\n    static { this.transparent = new Color(new RGBA(0, 0, 0, 0)); }\n}\n(function (Color) {\n    let Format;\n    (function (Format) {\n        let CSS;\n        (function (CSS) {\n            function formatRGB(color) {\n                if (color.rgba.a === 1) {\n                    return `rgb(${color.rgba.r}, ${color.rgba.g}, ${color.rgba.b})`;\n                }\n                return Color.Format.CSS.formatRGBA(color);\n            }\n            CSS.formatRGB = formatRGB;\n            function formatRGBA(color) {\n                return `rgba(${color.rgba.r}, ${color.rgba.g}, ${color.rgba.b}, ${+(color.rgba.a).toFixed(2)})`;\n            }\n            CSS.formatRGBA = formatRGBA;\n            function formatHSL(color) {\n                if (color.hsla.a === 1) {\n                    return `hsl(${color.hsla.h}, ${(color.hsla.s * 100).toFixed(2)}%, ${(color.hsla.l * 100).toFixed(2)}%)`;\n                }\n                return Color.Format.CSS.formatHSLA(color);\n            }\n            CSS.formatHSL = formatHSL;\n            function formatHSLA(color) {\n                return `hsla(${color.hsla.h}, ${(color.hsla.s * 100).toFixed(2)}%, ${(color.hsla.l * 100).toFixed(2)}%, ${color.hsla.a.toFixed(2)})`;\n            }\n            CSS.formatHSLA = formatHSLA;\n            function _toTwoDigitHex(n) {\n                const r = n.toString(16);\n                return r.length !== 2 ? '0' + r : r;\n            }\n            /**\n             * Formats the color as #RRGGBB\n             */\n            function formatHex(color) {\n                return `#${_toTwoDigitHex(color.rgba.r)}${_toTwoDigitHex(color.rgba.g)}${_toTwoDigitHex(color.rgba.b)}`;\n            }\n            CSS.formatHex = formatHex;\n            /**\n             * Formats the color as #RRGGBBAA\n             * If 'compact' is set, colors without transparancy will be printed as #RRGGBB\n             */\n            function formatHexA(color, compact = false) {\n                if (compact && color.rgba.a === 1) {\n                    return Color.Format.CSS.formatHex(color);\n                }\n                return `#${_toTwoDigitHex(color.rgba.r)}${_toTwoDigitHex(color.rgba.g)}${_toTwoDigitHex(color.rgba.b)}${_toTwoDigitHex(Math.round(color.rgba.a * 255))}`;\n            }\n            CSS.formatHexA = formatHexA;\n            /**\n             * The default format will use HEX if opaque and RGBA otherwise.\n             */\n            function format(color) {\n                if (color.isOpaque()) {\n                    return Color.Format.CSS.formatHex(color);\n                }\n                return Color.Format.CSS.formatRGBA(color);\n            }\n            CSS.format = format;\n            /**\n             * Converts an Hex color value to a Color.\n             * returns r, g, and b are contained in the set [0, 255]\n             * @param hex string (#RGB, #RGBA, #RRGGBB or #RRGGBBAA).\n             */\n            function parseHex(hex) {\n                const length = hex.length;\n                if (length === 0) {\n                    // Invalid color\n                    return null;\n                }\n                if (hex.charCodeAt(0) !== 35 /* CharCode.Hash */) {\n                    // Does not begin with a #\n                    return null;\n                }\n                if (length === 7) {\n                    // #RRGGBB format\n                    const r = 16 * _parseHexDigit(hex.charCodeAt(1)) + _parseHexDigit(hex.charCodeAt(2));\n                    const g = 16 * _parseHexDigit(hex.charCodeAt(3)) + _parseHexDigit(hex.charCodeAt(4));\n                    const b = 16 * _parseHexDigit(hex.charCodeAt(5)) + _parseHexDigit(hex.charCodeAt(6));\n                    return new Color(new RGBA(r, g, b, 1));\n                }\n                if (length === 9) {\n                    // #RRGGBBAA format\n                    const r = 16 * _parseHexDigit(hex.charCodeAt(1)) + _parseHexDigit(hex.charCodeAt(2));\n                    const g = 16 * _parseHexDigit(hex.charCodeAt(3)) + _parseHexDigit(hex.charCodeAt(4));\n                    const b = 16 * _parseHexDigit(hex.charCodeAt(5)) + _parseHexDigit(hex.charCodeAt(6));\n                    const a = 16 * _parseHexDigit(hex.charCodeAt(7)) + _parseHexDigit(hex.charCodeAt(8));\n                    return new Color(new RGBA(r, g, b, a / 255));\n                }\n                if (length === 4) {\n                    // #RGB format\n                    const r = _parseHexDigit(hex.charCodeAt(1));\n                    const g = _parseHexDigit(hex.charCodeAt(2));\n                    const b = _parseHexDigit(hex.charCodeAt(3));\n                    return new Color(new RGBA(16 * r + r, 16 * g + g, 16 * b + b));\n                }\n                if (length === 5) {\n                    // #RGBA format\n                    const r = _parseHexDigit(hex.charCodeAt(1));\n                    const g = _parseHexDigit(hex.charCodeAt(2));\n                    const b = _parseHexDigit(hex.charCodeAt(3));\n                    const a = _parseHexDigit(hex.charCodeAt(4));\n                    return new Color(new RGBA(16 * r + r, 16 * g + g, 16 * b + b, (16 * a + a) / 255));\n                }\n                // Invalid color\n                return null;\n            }\n            CSS.parseHex = parseHex;\n            function _parseHexDigit(charCode) {\n                switch (charCode) {\n                    case 48 /* CharCode.Digit0 */: return 0;\n                    case 49 /* CharCode.Digit1 */: return 1;\n                    case 50 /* CharCode.Digit2 */: return 2;\n                    case 51 /* CharCode.Digit3 */: return 3;\n                    case 52 /* CharCode.Digit4 */: return 4;\n                    case 53 /* CharCode.Digit5 */: return 5;\n                    case 54 /* CharCode.Digit6 */: return 6;\n                    case 55 /* CharCode.Digit7 */: return 7;\n                    case 56 /* CharCode.Digit8 */: return 8;\n                    case 57 /* CharCode.Digit9 */: return 9;\n                    case 97 /* CharCode.a */: return 10;\n                    case 65 /* CharCode.A */: return 10;\n                    case 98 /* CharCode.b */: return 11;\n                    case 66 /* CharCode.B */: return 11;\n                    case 99 /* CharCode.c */: return 12;\n                    case 67 /* CharCode.C */: return 12;\n                    case 100 /* CharCode.d */: return 13;\n                    case 68 /* CharCode.D */: return 13;\n                    case 101 /* CharCode.e */: return 14;\n                    case 69 /* CharCode.E */: return 14;\n                    case 102 /* CharCode.f */: return 15;\n                    case 70 /* CharCode.F */: return 15;\n                }\n                return 0;\n            }\n        })(CSS = Format.CSS || (Format.CSS = {}));\n    })(Format = Color.Format || (Color.Format = {}));\n})(Color || (Color = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { DiffChange } from './diffChange.js';\nimport { stringHash } from '../hash.js';\nexport class StringDiffSequence {\n    constructor(source) {\n        this.source = source;\n    }\n    getElements() {\n        const source = this.source;\n        const characters = new Int32Array(source.length);\n        for (let i = 0, len = source.length; i < len; i++) {\n            characters[i] = source.charCodeAt(i);\n        }\n        return characters;\n    }\n}\nexport function stringDiff(original, modified, pretty) {\n    return new LcsDiff(new StringDiffSequence(original), new StringDiffSequence(modified)).ComputeDiff(pretty).changes;\n}\n//\n// The code below has been ported from a C# implementation in VS\n//\nclass Debug {\n    static Assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n}\nclass MyArray {\n    /**\n     * Copies a range of elements from an Array starting at the specified source index and pastes\n     * them to another Array starting at the specified destination index. The length and the indexes\n     * are specified as 64-bit integers.\n     * sourceArray:\n     *\t\tThe Array that contains the data to copy.\n     * sourceIndex:\n     *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\n     * destinationArray:\n     *\t\tThe Array that receives the data.\n     * destinationIndex:\n     *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\n     * length:\n     *\t\tA 64-bit integer that represents the number of elements to copy.\n     */\n    static Copy(sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (let i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    }\n    static Copy2(sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (let i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    }\n}\n/**\n * A utility class which helps to create the set of DiffChanges from\n * a difference operation. This class accepts original DiffElements and\n * modified DiffElements that are involved in a particular change. The\n * MarkNextChange() method can be called to mark the separation between\n * distinct changes. At the end, the Changes property can be called to retrieve\n * the constructed changes.\n */\nclass DiffChangeHelper {\n    /**\n     * Constructs a new DiffChangeHelper for the given DiffSequences.\n     */\n    constructor() {\n        this.m_changes = [];\n        this.m_originalStart = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n        this.m_modifiedStart = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n    }\n    /**\n     * Marks the beginning of the next change in the set of differences.\n     */\n    MarkNextChange() {\n        // Only add to the list if there is something to add\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Add the new change to our list\n            this.m_changes.push(new DiffChange(this.m_originalStart, this.m_originalCount, this.m_modifiedStart, this.m_modifiedCount));\n        }\n        // Reset for the next change\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n        this.m_originalStart = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n        this.m_modifiedStart = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n    }\n    /**\n     * Adds the original element at the given position to the elements\n     * affected by the current change. The modified index gives context\n     * to the change position with respect to the original sequence.\n     * @param originalIndex The index of the original element to add.\n     * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\n     */\n    AddOriginalElement(originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_originalCount++;\n    }\n    /**\n     * Adds the modified element at the given position to the elements\n     * affected by the current change. The original index gives context\n     * to the change position with respect to the modified sequence.\n     * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\n     * @param modifiedIndex The index of the modified element to add.\n     */\n    AddModifiedElement(originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_modifiedCount++;\n    }\n    /**\n     * Retrieves all of the changes marked by the class.\n     */\n    getChanges() {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        return this.m_changes;\n    }\n    /**\n     * Retrieves all of the changes marked by the class in the reverse order\n     */\n    getReverseChanges() {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        this.m_changes.reverse();\n        return this.m_changes;\n    }\n}\n/**\n * An implementation of the difference algorithm described in\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n */\nexport class LcsDiff {\n    /**\n     * Constructs the DiffFinder\n     */\n    constructor(originalSequence, modifiedSequence, continueProcessingPredicate = null) {\n        this.ContinueProcessingPredicate = continueProcessingPredicate;\n        this._originalSequence = originalSequence;\n        this._modifiedSequence = modifiedSequence;\n        const [originalStringElements, originalElementsOrHash, originalHasStrings] = LcsDiff._getElements(originalSequence);\n        const [modifiedStringElements, modifiedElementsOrHash, modifiedHasStrings] = LcsDiff._getElements(modifiedSequence);\n        this._hasStrings = (originalHasStrings && modifiedHasStrings);\n        this._originalStringElements = originalStringElements;\n        this._originalElementsOrHash = originalElementsOrHash;\n        this._modifiedStringElements = modifiedStringElements;\n        this._modifiedElementsOrHash = modifiedElementsOrHash;\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n    }\n    static _isStringArray(arr) {\n        return (arr.length > 0 && typeof arr[0] === 'string');\n    }\n    static _getElements(sequence) {\n        const elements = sequence.getElements();\n        if (LcsDiff._isStringArray(elements)) {\n            const hashes = new Int32Array(elements.length);\n            for (let i = 0, len = elements.length; i < len; i++) {\n                hashes[i] = stringHash(elements[i], 0);\n            }\n            return [elements, hashes, true];\n        }\n        if (elements instanceof Int32Array) {\n            return [[], elements, false];\n        }\n        return [[], new Int32Array(elements), false];\n    }\n    ElementsAreEqual(originalIndex, newIndex) {\n        if (this._originalElementsOrHash[originalIndex] !== this._modifiedElementsOrHash[newIndex]) {\n            return false;\n        }\n        return (this._hasStrings ? this._originalStringElements[originalIndex] === this._modifiedStringElements[newIndex] : true);\n    }\n    ElementsAreStrictEqual(originalIndex, newIndex) {\n        if (!this.ElementsAreEqual(originalIndex, newIndex)) {\n            return false;\n        }\n        const originalElement = LcsDiff._getStrictElement(this._originalSequence, originalIndex);\n        const modifiedElement = LcsDiff._getStrictElement(this._modifiedSequence, newIndex);\n        return (originalElement === modifiedElement);\n    }\n    static _getStrictElement(sequence, index) {\n        if (typeof sequence.getStrictElement === 'function') {\n            return sequence.getStrictElement(index);\n        }\n        return null;\n    }\n    OriginalElementsAreEqual(index1, index2) {\n        if (this._originalElementsOrHash[index1] !== this._originalElementsOrHash[index2]) {\n            return false;\n        }\n        return (this._hasStrings ? this._originalStringElements[index1] === this._originalStringElements[index2] : true);\n    }\n    ModifiedElementsAreEqual(index1, index2) {\n        if (this._modifiedElementsOrHash[index1] !== this._modifiedElementsOrHash[index2]) {\n            return false;\n        }\n        return (this._hasStrings ? this._modifiedStringElements[index1] === this._modifiedStringElements[index2] : true);\n    }\n    ComputeDiff(pretty) {\n        return this._ComputeDiff(0, this._originalElementsOrHash.length - 1, 0, this._modifiedElementsOrHash.length - 1, pretty);\n    }\n    /**\n     * Computes the differences between the original and modified input\n     * sequences on the bounded range.\n     * @returns An array of the differences between the two input sequences.\n     */\n    _ComputeDiff(originalStart, originalEnd, modifiedStart, modifiedEnd, pretty) {\n        const quitEarlyArr = [false];\n        let changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n        if (pretty) {\n            // We have to clean up the computed diff to be more intuitive\n            // but it turns out this cannot be done correctly until the entire set\n            // of diffs have been computed\n            changes = this.PrettifyChanges(changes);\n        }\n        return {\n            quitEarly: quitEarlyArr[0],\n            changes: changes\n        };\n    }\n    /**\n     * Private helper method which computes the differences on the bounded range\n     * recursively.\n     * @returns An array of the differences between the two input sequences.\n     */\n    ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr) {\n        quitEarlyArr[0] = false;\n        // Find the start of the differences\n        while (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n            originalStart++;\n            modifiedStart++;\n        }\n        // Find the end of the differences\n        while (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n            originalEnd--;\n            modifiedEnd--;\n        }\n        // In the special case where we either have all insertions or all deletions or the sequences are identical\n        if (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n            let changes;\n            if (modifiedStart <= modifiedEnd) {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                // All insertions\n                changes = [\n                    new DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\n                ];\n            }\n            else if (originalStart <= originalEnd) {\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // All deletions\n                changes = [\n                    new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\n                ];\n            }\n            else {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // Identical sequences - No differences\n                changes = [];\n            }\n            return changes;\n        }\n        // This problem can be solved using the Divide-And-Conquer technique.\n        const midOriginalArr = [0];\n        const midModifiedArr = [0];\n        const result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n        const midOriginal = midOriginalArr[0];\n        const midModified = midModifiedArr[0];\n        if (result !== null) {\n            // Result is not-null when there was enough memory to compute the changes while\n            // searching for the recursion point\n            return result;\n        }\n        else if (!quitEarlyArr[0]) {\n            // We can break the problem down recursively by finding the changes in the\n            // First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\n            // Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\n            // NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\n            const leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n            let rightChanges = [];\n            if (!quitEarlyArr[0]) {\n                rightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n            }\n            else {\n                // We didn't have time to finish the first half, so we don't have time to compute this half.\n                // Consider the entire rest of the sequence different.\n                rightChanges = [\n                    new DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\n                ];\n            }\n            return this.ConcatenateChanges(leftChanges, rightChanges);\n        }\n        // If we hit here, we quit early, and so can't return anything meaningful\n        return [\n            new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n        ];\n    }\n    WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr) {\n        let forwardChanges = null;\n        let reverseChanges = null;\n        // First, walk backward through the forward diagonals history\n        let changeHelper = new DiffChangeHelper();\n        let diagonalMin = diagonalForwardStart;\n        let diagonalMax = diagonalForwardEnd;\n        let diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n        let lastOriginalIndex = -1073741824 /* Constants.MIN_SAFE_SMALL_INTEGER */;\n        let historyIndex = this.m_forwardHistory.length - 1;\n        do {\n            // Get the diagonal index from the relative diagonal number\n            const diagonal = diagonalRelative + diagonalForwardBase;\n            // Figure out where we came from\n            if (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                // Vertical line (the element is an insert)\n                originalIndex = forwardPoints[diagonal + 1];\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex;\n                changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n                diagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            else {\n                // Horizontal line (the element is a deletion)\n                originalIndex = forwardPoints[diagonal - 1] + 1;\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex - 1;\n                changeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n                diagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            if (historyIndex >= 0) {\n                forwardPoints = this.m_forwardHistory[historyIndex];\n                diagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\n                diagonalMin = 1;\n                diagonalMax = forwardPoints.length - 1;\n            }\n        } while (--historyIndex >= -1);\n        // Ironically, we get the forward changes as the reverse of the\n        // order we added them since we technically added them backwards\n        forwardChanges = changeHelper.getReverseChanges();\n        if (quitEarlyArr[0]) {\n            // TODO: Calculate a partial from the reverse diagonals.\n            //       For now, just assume everything after the midOriginal/midModified point is a diff\n            let originalStartPoint = midOriginalArr[0] + 1;\n            let modifiedStartPoint = midModifiedArr[0] + 1;\n            if (forwardChanges !== null && forwardChanges.length > 0) {\n                const lastForwardChange = forwardChanges[forwardChanges.length - 1];\n                originalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n                modifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n            }\n            reverseChanges = [\n                new DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1, modifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\n            ];\n        }\n        else {\n            // Now walk backward through the reverse diagonals history\n            changeHelper = new DiffChangeHelper();\n            diagonalMin = diagonalReverseStart;\n            diagonalMax = diagonalReverseEnd;\n            diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n            lastOriginalIndex = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n            historyIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n            do {\n                // Get the diagonal index from the relative diagonal number\n                const diagonal = diagonalRelative + diagonalReverseBase;\n                // Figure out where we came from\n                if (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    // Horizontal line (the element is a deletion))\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex + 1;\n                    changeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                else {\n                    // Vertical line (the element is an insertion)\n                    originalIndex = reversePoints[diagonal - 1];\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex;\n                    changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                if (historyIndex >= 0) {\n                    reversePoints = this.m_reverseHistory[historyIndex];\n                    diagonalReverseBase = reversePoints[0]; //We stored this in the first spot\n                    diagonalMin = 1;\n                    diagonalMax = reversePoints.length - 1;\n                }\n            } while (--historyIndex >= -1);\n            // There are cases where the reverse history will find diffs that\n            // are correct, but not intuitive, so we need shift them.\n            reverseChanges = changeHelper.getChanges();\n        }\n        return this.ConcatenateChanges(forwardChanges, reverseChanges);\n    }\n    /**\n     * Given the range to compute the diff on, this method finds the point:\n     * (midOriginal, midModified)\n     * that exists in the middle of the LCS of the two sequences and\n     * is the point at which the LCS problem may be broken down recursively.\n     * This method will try to keep the LCS trace in memory. If the LCS recursion\n     * point is calculated and the full trace is available in memory, then this method\n     * will return the change list.\n     * @param originalStart The start bound of the original sequence range\n     * @param originalEnd The end bound of the original sequence range\n     * @param modifiedStart The start bound of the modified sequence range\n     * @param modifiedEnd The end bound of the modified sequence range\n     * @param midOriginal The middle point of the original sequence range\n     * @param midModified The middle point of the modified sequence range\n     * @returns The diff changes, if available, otherwise null\n     */\n    ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr) {\n        let originalIndex = 0, modifiedIndex = 0;\n        let diagonalForwardStart = 0, diagonalForwardEnd = 0;\n        let diagonalReverseStart = 0, diagonalReverseEnd = 0;\n        // To traverse the edit graph and produce the proper LCS, our actual\n        // start position is just outside the given boundary\n        originalStart--;\n        modifiedStart--;\n        // We set these up to make the compiler happy, but they will\n        // be replaced before we return with the actual recursion point\n        midOriginalArr[0] = 0;\n        midModifiedArr[0] = 0;\n        // Clear out the history\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n        // Each cell in the two arrays corresponds to a diagonal in the edit graph.\n        // The integer value in the cell represents the originalIndex of the furthest\n        // reaching point found so far that ends in that diagonal.\n        // The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\n        const maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n        const numDiagonals = maxDifferences + 1;\n        const forwardPoints = new Int32Array(numDiagonals);\n        const reversePoints = new Int32Array(numDiagonals);\n        // diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\n        // diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\n        const diagonalForwardBase = (modifiedEnd - modifiedStart);\n        const diagonalReverseBase = (originalEnd - originalStart);\n        // diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalForwardBase)\n        // diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalReverseBase)\n        const diagonalForwardOffset = (originalStart - modifiedStart);\n        const diagonalReverseOffset = (originalEnd - modifiedEnd);\n        // delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\n        //   relative to the start diagonal with diagonal numbers relative to the end diagonal.\n        // The Even/Oddn-ness of this delta is important for determining when we should check for overlap\n        const delta = diagonalReverseBase - diagonalForwardBase;\n        const deltaIsEven = (delta % 2 === 0);\n        // Here we set up the start and end points as the furthest points found so far\n        // in both the forward and reverse directions, respectively\n        forwardPoints[diagonalForwardBase] = originalStart;\n        reversePoints[diagonalReverseBase] = originalEnd;\n        // Remember if we quit early, and thus need to do a best-effort result instead of a real result.\n        quitEarlyArr[0] = false;\n        // A couple of points:\n        // --With this method, we iterate on the number of differences between the two sequences.\n        //   The more differences there actually are, the longer this will take.\n        // --Also, as the number of differences increases, we have to search on diagonals further\n        //   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\n        // --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\n        //   is even and odd diagonals only when numDifferences is odd.\n        for (let numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n            let furthestOriginalIndex = 0;\n            let furthestModifiedIndex = 0;\n            // Run the algorithm in the forward direction\n            diagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            diagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            for (let diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalStart, modifiedStart)\n                if (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                    originalIndex = forwardPoints[diagonal + 1];\n                }\n                else {\n                    originalIndex = forwardPoints[diagonal - 1] + 1;\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n                // Save the current originalIndex so we can test for false overlap in step 3\n                const tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // so long as the elements are equal.\n                while (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n                    originalIndex++;\n                    modifiedIndex++;\n                }\n                forwardPoints[diagonal] = originalIndex;\n                if (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n                    furthestOriginalIndex = originalIndex;\n                    furthestModifiedIndex = modifiedIndex;\n                }\n                // STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\n                // and diagonal is in the range of reverse diagonals computed for numDifferences-1\n                // (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\n                // then check for overlap.\n                if (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n                    if (originalIndex >= reversePoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex <= reversePoints[diagonal] && 1447 /* LocalConstants.MaxDifferencesHistory */ > 0 && numDifferences <= (1447 /* LocalConstants.MaxDifferencesHistory */ + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Check to see if we should be quitting early, before moving on to the next iteration.\n            const matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n            if (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, matchLengthOfLongest)) {\n                // We can't finish, so skip ahead to generating a result from what we have.\n                quitEarlyArr[0] = true;\n                // Use the furthest distance we got in the forward direction.\n                midOriginalArr[0] = furthestOriginalIndex;\n                midModifiedArr[0] = furthestModifiedIndex;\n                if (matchLengthOfLongest > 0 && 1447 /* LocalConstants.MaxDifferencesHistory */ > 0 && numDifferences <= (1447 /* LocalConstants.MaxDifferencesHistory */ + 1)) {\n                    // Enough of the history is in memory to walk it backwards\n                    return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                }\n                else {\n                    // We didn't actually remember enough of the history.\n                    //Since we are quitting the diff early, we need to shift back the originalStart and modified start\n                    //back into the boundary limits since we decremented their value above beyond the boundary limit.\n                    originalStart++;\n                    modifiedStart++;\n                    return [\n                        new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n                    ];\n                }\n            }\n            // Run the algorithm in the reverse direction\n            diagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            diagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            for (let diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalEnd, modifiedEnd)\n                if (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                }\n                else {\n                    originalIndex = reversePoints[diagonal - 1];\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n                // Save the current originalIndex so we can test for false overlap\n                const tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // as long as the elements are equal.\n                while (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n                    originalIndex--;\n                    modifiedIndex--;\n                }\n                reversePoints[diagonal] = originalIndex;\n                // STEP 4: If delta is even (overlap first happens on reverse when delta is even)\n                // and diagonal is in the range of forward diagonals computed for numDifferences\n                // then check for overlap.\n                if (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n                    if (originalIndex <= forwardPoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex >= forwardPoints[diagonal] && 1447 /* LocalConstants.MaxDifferencesHistory */ > 0 && numDifferences <= (1447 /* LocalConstants.MaxDifferencesHistory */ + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Save current vectors to history before the next iteration\n            if (numDifferences <= 1447 /* LocalConstants.MaxDifferencesHistory */) {\n                // We are allocating space for one extra int, which we fill with\n                // the index of the diagonal base index\n                let temp = new Int32Array(diagonalForwardEnd - diagonalForwardStart + 2);\n                temp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n                MyArray.Copy2(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n                this.m_forwardHistory.push(temp);\n                temp = new Int32Array(diagonalReverseEnd - diagonalReverseStart + 2);\n                temp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n                MyArray.Copy2(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n                this.m_reverseHistory.push(temp);\n            }\n        }\n        // If we got here, then we have the full trace in history. We just have to convert it to a change list\n        // NOTE: This part is a bit messy\n        return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n    }\n    /**\n     * Shifts the given changes to provide a more intuitive diff.\n     * While the first element in a diff matches the first element after the diff,\n     * we shift the diff down.\n     *\n     * @param changes The list of changes to shift\n     * @returns The shifted changes\n     */\n    PrettifyChanges(changes) {\n        // Shift all the changes down first\n        for (let i = 0; i < changes.length; i++) {\n            const change = changes[i];\n            const originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this._originalElementsOrHash.length;\n            const modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this._modifiedElementsOrHash.length;\n            const checkOriginal = change.originalLength > 0;\n            const checkModified = change.modifiedLength > 0;\n            while (change.originalStart + change.originalLength < originalStop\n                && change.modifiedStart + change.modifiedLength < modifiedStop\n                && (!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength))\n                && (!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\n                const startStrictEqual = this.ElementsAreStrictEqual(change.originalStart, change.modifiedStart);\n                const endStrictEqual = this.ElementsAreStrictEqual(change.originalStart + change.originalLength, change.modifiedStart + change.modifiedLength);\n                if (endStrictEqual && !startStrictEqual) {\n                    // moving the change down would create an equal change, but the elements are not strict equal\n                    break;\n                }\n                change.originalStart++;\n                change.modifiedStart++;\n            }\n            const mergedChangeArr = [null];\n            if (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n                changes[i] = mergedChangeArr[0];\n                changes.splice(i + 1, 1);\n                i--;\n                continue;\n            }\n        }\n        // Shift changes back up until we hit empty or whitespace-only lines\n        for (let i = changes.length - 1; i >= 0; i--) {\n            const change = changes[i];\n            let originalStop = 0;\n            let modifiedStop = 0;\n            if (i > 0) {\n                const prevChange = changes[i - 1];\n                originalStop = prevChange.originalStart + prevChange.originalLength;\n                modifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n            }\n            const checkOriginal = change.originalLength > 0;\n            const checkModified = change.modifiedLength > 0;\n            let bestDelta = 0;\n            let bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n            for (let delta = 1;; delta++) {\n                const originalStart = change.originalStart - delta;\n                const modifiedStart = change.modifiedStart - delta;\n                if (originalStart < originalStop || modifiedStart < modifiedStop) {\n                    break;\n                }\n                if (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n                    break;\n                }\n                if (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n                    break;\n                }\n                const touchingPreviousChange = (originalStart === originalStop && modifiedStart === modifiedStop);\n                const score = ((touchingPreviousChange ? 5 : 0)\n                    + this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength));\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestDelta = delta;\n                }\n            }\n            change.originalStart -= bestDelta;\n            change.modifiedStart -= bestDelta;\n            const mergedChangeArr = [null];\n            if (i > 0 && this.ChangesOverlap(changes[i - 1], changes[i], mergedChangeArr)) {\n                changes[i - 1] = mergedChangeArr[0];\n                changes.splice(i, 1);\n                i++;\n                continue;\n            }\n        }\n        // There could be multiple longest common substrings.\n        // Give preference to the ones containing longer lines\n        if (this._hasStrings) {\n            for (let i = 1, len = changes.length; i < len; i++) {\n                const aChange = changes[i - 1];\n                const bChange = changes[i];\n                const matchedLength = bChange.originalStart - aChange.originalStart - aChange.originalLength;\n                const aOriginalStart = aChange.originalStart;\n                const bOriginalEnd = bChange.originalStart + bChange.originalLength;\n                const abOriginalLength = bOriginalEnd - aOriginalStart;\n                const aModifiedStart = aChange.modifiedStart;\n                const bModifiedEnd = bChange.modifiedStart + bChange.modifiedLength;\n                const abModifiedLength = bModifiedEnd - aModifiedStart;\n                // Avoid wasting a lot of time with these searches\n                if (matchedLength < 5 && abOriginalLength < 20 && abModifiedLength < 20) {\n                    const t = this._findBetterContiguousSequence(aOriginalStart, abOriginalLength, aModifiedStart, abModifiedLength, matchedLength);\n                    if (t) {\n                        const [originalMatchStart, modifiedMatchStart] = t;\n                        if (originalMatchStart !== aChange.originalStart + aChange.originalLength || modifiedMatchStart !== aChange.modifiedStart + aChange.modifiedLength) {\n                            // switch to another sequence that has a better score\n                            aChange.originalLength = originalMatchStart - aChange.originalStart;\n                            aChange.modifiedLength = modifiedMatchStart - aChange.modifiedStart;\n                            bChange.originalStart = originalMatchStart + matchedLength;\n                            bChange.modifiedStart = modifiedMatchStart + matchedLength;\n                            bChange.originalLength = bOriginalEnd - bChange.originalStart;\n                            bChange.modifiedLength = bModifiedEnd - bChange.modifiedStart;\n                        }\n                    }\n                }\n            }\n        }\n        return changes;\n    }\n    _findBetterContiguousSequence(originalStart, originalLength, modifiedStart, modifiedLength, desiredLength) {\n        if (originalLength < desiredLength || modifiedLength < desiredLength) {\n            return null;\n        }\n        const originalMax = originalStart + originalLength - desiredLength + 1;\n        const modifiedMax = modifiedStart + modifiedLength - desiredLength + 1;\n        let bestScore = 0;\n        let bestOriginalStart = 0;\n        let bestModifiedStart = 0;\n        for (let i = originalStart; i < originalMax; i++) {\n            for (let j = modifiedStart; j < modifiedMax; j++) {\n                const score = this._contiguousSequenceScore(i, j, desiredLength);\n                if (score > 0 && score > bestScore) {\n                    bestScore = score;\n                    bestOriginalStart = i;\n                    bestModifiedStart = j;\n                }\n            }\n        }\n        if (bestScore > 0) {\n            return [bestOriginalStart, bestModifiedStart];\n        }\n        return null;\n    }\n    _contiguousSequenceScore(originalStart, modifiedStart, length) {\n        let score = 0;\n        for (let l = 0; l < length; l++) {\n            if (!this.ElementsAreEqual(originalStart + l, modifiedStart + l)) {\n                return 0;\n            }\n            score += this._originalStringElements[originalStart + l].length;\n        }\n        return score;\n    }\n    _OriginalIsBoundary(index) {\n        if (index <= 0 || index >= this._originalElementsOrHash.length - 1) {\n            return true;\n        }\n        return (this._hasStrings && /^\\s*$/.test(this._originalStringElements[index]));\n    }\n    _OriginalRegionIsBoundary(originalStart, originalLength) {\n        if (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n            return true;\n        }\n        if (originalLength > 0) {\n            const originalEnd = originalStart + originalLength;\n            if (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    _ModifiedIsBoundary(index) {\n        if (index <= 0 || index >= this._modifiedElementsOrHash.length - 1) {\n            return true;\n        }\n        return (this._hasStrings && /^\\s*$/.test(this._modifiedStringElements[index]));\n    }\n    _ModifiedRegionIsBoundary(modifiedStart, modifiedLength) {\n        if (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n            return true;\n        }\n        if (modifiedLength > 0) {\n            const modifiedEnd = modifiedStart + modifiedLength;\n            if (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    _boundaryScore(originalStart, originalLength, modifiedStart, modifiedLength) {\n        const originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\n        const modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\n        return (originalScore + modifiedScore);\n    }\n    /**\n     * Concatenates the two input DiffChange lists and returns the resulting\n     * list.\n     * @param The left changes\n     * @param The right changes\n     * @returns The concatenated list\n     */\n    ConcatenateChanges(left, right) {\n        const mergedChangeArr = [];\n        if (left.length === 0 || right.length === 0) {\n            return (right.length > 0) ? right : left;\n        }\n        else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n            // Since we break the problem down recursively, it is possible that we\n            // might recurse in the middle of a change thereby splitting it into\n            // two changes. Here in the combining stage, we detect and fuse those\n            // changes back together\n            const result = new Array(left.length + right.length - 1);\n            MyArray.Copy(left, 0, result, 0, left.length - 1);\n            result[left.length - 1] = mergedChangeArr[0];\n            MyArray.Copy(right, 1, result, left.length, right.length - 1);\n            return result;\n        }\n        else {\n            const result = new Array(left.length + right.length);\n            MyArray.Copy(left, 0, result, 0, left.length);\n            MyArray.Copy(right, 0, result, left.length, right.length);\n            return result;\n        }\n    }\n    /**\n     * Returns true if the two changes overlap and can be merged into a single\n     * change\n     * @param left The left change\n     * @param right The right change\n     * @param mergedChange The merged change if the two overlap, null otherwise\n     * @returns True if the two changes overlap\n     */\n    ChangesOverlap(left, right, mergedChangeArr) {\n        Debug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n        Debug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n        if (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n            const originalStart = left.originalStart;\n            let originalLength = left.originalLength;\n            const modifiedStart = left.modifiedStart;\n            let modifiedLength = left.modifiedLength;\n            if (left.originalStart + left.originalLength >= right.originalStart) {\n                originalLength = right.originalStart + right.originalLength - left.originalStart;\n            }\n            if (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n                modifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n            }\n            mergedChangeArr[0] = new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\n            return true;\n        }\n        else {\n            mergedChangeArr[0] = null;\n            return false;\n        }\n    }\n    /**\n     * Helper method used to clip a diagonal index to the range of valid\n     * diagonals. This also decides whether or not the diagonal index,\n     * if it exceeds the boundary, should be clipped to the boundary or clipped\n     * one inside the boundary depending on the Even/Odd status of the boundary\n     * and numDifferences.\n     * @param diagonal The index of the diagonal to clip.\n     * @param numDifferences The current number of differences being iterated upon.\n     * @param diagonalBaseIndex The base reference diagonal.\n     * @param numDiagonals The total number of diagonals.\n     * @returns The clipped diagonal index.\n     */\n    ClipDiagonalBound(diagonal, numDifferences, diagonalBaseIndex, numDiagonals) {\n        if (diagonal >= 0 && diagonal < numDiagonals) {\n            // Nothing to clip, its in range\n            return diagonal;\n        }\n        // diagonalsBelow: The number of diagonals below the reference diagonal\n        // diagonalsAbove: The number of diagonals above the reference diagonal\n        const diagonalsBelow = diagonalBaseIndex;\n        const diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n        const diffEven = (numDifferences % 2 === 0);\n        if (diagonal < 0) {\n            const lowerBoundEven = (diagonalsBelow % 2 === 0);\n            return (diffEven === lowerBoundEven) ? 0 : 1;\n        }\n        else {\n            const upperBoundEven = (diagonalsAbove % 2 === 0);\n            return (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Represents information about a specific difference between two sequences.\n */\nexport class DiffChange {\n    /**\n     * Constructs a new DiffChange with the given sequence information\n     * and content.\n     */\n    constructor(originalStart, originalLength, modifiedStart, modifiedLength) {\n        //Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n        this.originalStart = originalStart;\n        this.originalLength = originalLength;\n        this.modifiedStart = modifiedStart;\n        this.modifiedLength = modifiedLength;\n    }\n    /**\n     * The end point (exclusive) of the change in the original sequence.\n     */\n    getOriginalEnd() {\n        return this.originalStart + this.originalLength;\n    }\n    /**\n     * The end point (exclusive) of the change in the modified sequence.\n     */\n    getModifiedEnd() {\n        return this.modifiedStart + this.modifiedLength;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as arrays from './arrays.js';\n/**\n * Compares two items for equality using strict equality.\n*/\nexport const strictEquals = (a, b) => a === b;\n/**\n * Checks if the items of two arrays are equal.\n * By default, strict equality is used to compare elements, but a custom equality comparer can be provided.\n */\nexport function itemsEquals(itemEquals = strictEquals) {\n    return (a, b) => arrays.equals(a, b, itemEquals);\n}\n/**\n * Uses `item.equals(other)` to determine equality.\n */\nexport function itemEquals() {\n    return (a, b) => a.equals(b);\n}\nexport function equalsIfDefined(equalsOrV1, v2, equals) {\n    if (equals !== undefined) {\n        const v1 = equalsOrV1;\n        if (v1 === undefined || v1 === null || v2 === undefined || v2 === null) {\n            return v2 === v1;\n        }\n        return equals(v1, v2);\n    }\n    else {\n        const equals = equalsOrV1;\n        return (v1, v2) => {\n            if (v1 === undefined || v1 === null || v2 === undefined || v2 === null) {\n                return v2 === v1;\n            }\n            return equals(v1, v2);\n        };\n    }\n}\n/**\n * Drills into arrays (items ordered) and objects (keys unordered) and uses strict equality on everything else.\n*/\nexport function structuralEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n            if (!structuralEquals(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    if (a && typeof a === 'object' && b && typeof b === 'object') {\n        if (Object.getPrototypeOf(a) === Object.prototype && Object.getPrototypeOf(b) === Object.prototype) {\n            const aObj = a;\n            const bObj = b;\n            const keysA = Object.keys(aObj);\n            const keysB = Object.keys(bObj);\n            const keysBSet = new Set(keysB);\n            if (keysA.length !== keysB.length) {\n                return false;\n            }\n            for (const key of keysA) {\n                if (!keysBSet.has(key)) {\n                    return false;\n                }\n                if (!structuralEquals(aObj[key], bObj[key])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n}\nconst objIds = new WeakMap();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n    constructor() {\n        this.listeners = [];\n        this.unexpectedErrorHandler = function (e) {\n            setTimeout(() => {\n                if (e.stack) {\n                    if (ErrorNoTelemetry.isErrorNoTelemetry(e)) {\n                        throw new ErrorNoTelemetry(e.message + '\\n\\n' + e.stack);\n                    }\n                    throw new Error(e.message + '\\n\\n' + e.stack);\n                }\n                throw e;\n            }, 0);\n        };\n    }\n    emit(e) {\n        this.listeners.forEach((listener) => {\n            listener(e);\n        });\n    }\n    onUnexpectedError(e) {\n        this.unexpectedErrorHandler(e);\n        this.emit(e);\n    }\n    // For external errors, we don't want the listeners to be called\n    onUnexpectedExternalError(e) {\n        this.unexpectedErrorHandler(e);\n    }\n}\nexport const errorHandler = new ErrorHandler();\nexport function onUnexpectedError(e) {\n    // ignore errors from cancelled promises\n    if (!isCancellationError(e)) {\n        errorHandler.onUnexpectedError(e);\n    }\n    return undefined;\n}\nexport function onUnexpectedExternalError(e) {\n    // ignore errors from cancelled promises\n    if (!isCancellationError(e)) {\n        errorHandler.onUnexpectedExternalError(e);\n    }\n    return undefined;\n}\nexport function transformErrorForSerialization(error) {\n    if (error instanceof Error) {\n        const { name, message } = error;\n        const stack = error.stacktrace || error.stack;\n        return {\n            $isError: true,\n            name,\n            message,\n            stack,\n            noTelemetry: ErrorNoTelemetry.isErrorNoTelemetry(error)\n        };\n    }\n    // return as is\n    return error;\n}\nconst canceledName = 'Canceled';\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isCancellationError(error) {\n    if (error instanceof CancellationError) {\n        return true;\n    }\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n// !!!IMPORTANT!!!\n// Do NOT change this class because it is also used as an API-type.\nexport class CancellationError extends Error {\n    constructor() {\n        super(canceledName);\n        this.name = this.message;\n    }\n}\n/**\n * @deprecated use {@link CancellationError `new CancellationError()`} instead\n */\nexport function canceled() {\n    const error = new Error(canceledName);\n    error.name = error.message;\n    return error;\n}\nexport function illegalArgument(name) {\n    if (name) {\n        return new Error(`Illegal argument: ${name}`);\n    }\n    else {\n        return new Error('Illegal argument');\n    }\n}\nexport function illegalState(name) {\n    if (name) {\n        return new Error(`Illegal state: ${name}`);\n    }\n    else {\n        return new Error('Illegal state');\n    }\n}\nexport class NotSupportedError extends Error {\n    constructor(message) {\n        super('NotSupported');\n        if (message) {\n            this.message = message;\n        }\n    }\n}\n/**\n * Error that when thrown won't be logged in telemetry as an unhandled error.\n */\nexport class ErrorNoTelemetry extends Error {\n    constructor(msg) {\n        super(msg);\n        this.name = 'CodeExpectedError';\n    }\n    static fromError(err) {\n        if (err instanceof ErrorNoTelemetry) {\n            return err;\n        }\n        const result = new ErrorNoTelemetry();\n        result.message = err.message;\n        result.stack = err.stack;\n        return result;\n    }\n    static isErrorNoTelemetry(err) {\n        return err.name === 'CodeExpectedError';\n    }\n}\n/**\n * This error indicates a bug.\n * Do not throw this for invalid user input.\n * Only catch this error to recover gracefully from bugs.\n */\nexport class BugIndicatingError extends Error {\n    constructor(message) {\n        super(message || 'An unexpected bug occurred.');\n        Object.setPrototypeOf(this, BugIndicatingError.prototype);\n        // Because we know for sure only buggy code throws this,\n        // we definitely want to break here and fix the bug.\n        // eslint-disable-next-line no-debugger\n        // debugger;\n    }\n}\n","import { onUnexpectedError } from './errors.js';\nimport { createSingleCallFunction } from './functional.js';\nimport { combinedDisposable, Disposable, DisposableStore, toDisposable } from './lifecycle.js';\nimport { LinkedList } from './linkedList.js';\nimport { StopWatch } from './stopwatch.js';\n// -----------------------------------------------------------------------------------------------------------------------\n// Uncomment the next line to print warnings whenever a listener is GC'ed without having been disposed. This is a LEAK.\n// -----------------------------------------------------------------------------------------------------------------------\nconst _enableListenerGCedWarning = false;\n// -----------------------------------------------------------------------------------------------------------------------\n// Uncomment the next line to print warnings whenever an emitter with listeners is disposed. That is a sign of code smell.\n// -----------------------------------------------------------------------------------------------------------------------\nconst _enableDisposeWithListenerWarning = false;\n// -----------------------------------------------------------------------------------------------------------------------\n// Uncomment the next line to print warnings whenever a snapshotted event is used repeatedly without cleanup.\n// See https://github.com/microsoft/vscode/issues/142851\n// -----------------------------------------------------------------------------------------------------------------------\nconst _enableSnapshotPotentialLeakWarning = false;\nexport var Event;\n(function (Event) {\n    Event.None = () => Disposable.None;\n    function _addLeakageTraceLogic(options) {\n        if (_enableSnapshotPotentialLeakWarning) {\n            const { onDidAddListener: origListenerDidAdd } = options;\n            const stack = Stacktrace.create();\n            let count = 0;\n            options.onDidAddListener = () => {\n                if (++count === 2) {\n                    console.warn('snapshotted emitter LIKELY used public and SHOULD HAVE BEEN created with DisposableStore. snapshotted here');\n                    stack.print();\n                }\n                origListenerDidAdd?.();\n            };\n        }\n    }\n    /**\n     * Given an event, returns another event which debounces calls and defers the listeners to a later task via a shared\n     * `setTimeout`. The event is converted into a signal (`Event<void>`) to avoid additional object creation as a\n     * result of merging events and to try prevent race conditions that could arise when using related deferred and\n     * non-deferred events.\n     *\n     * This is useful for deferring non-critical work (eg. general UI updates) to ensure it does not block critical work\n     * (eg. latency of keypress to text rendered).\n     *\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     *\n     * @param event The event source for the new event.\n     * @param disposable A disposable store to add the new EventEmitter to.\n     */\n    function defer(event, disposable) {\n        return debounce(event, () => void 0, 0, undefined, true, undefined, disposable);\n    }\n    Event.defer = defer;\n    /**\n     * Given an event, returns another event which only fires once.\n     *\n     * @param event The event source for the new event.\n     */\n    function once(event) {\n        return (listener, thisArgs = null, disposables) => {\n            // we need this, in case the event fires during the listener call\n            let didFire = false;\n            let result = undefined;\n            result = event(e => {\n                if (didFire) {\n                    return;\n                }\n                else if (result) {\n                    result.dispose();\n                }\n                else {\n                    didFire = true;\n                }\n                return listener.call(thisArgs, e);\n            }, null, disposables);\n            if (didFire) {\n                result.dispose();\n            }\n            return result;\n        };\n    }\n    Event.once = once;\n    /**\n     * Given an event, returns another event which only fires once, and only when the condition is met.\n     *\n     * @param event The event source for the new event.\n     */\n    function onceIf(event, condition) {\n        return Event.once(Event.filter(event, condition));\n    }\n    Event.onceIf = onceIf;\n    /**\n     * Maps an event of one type into an event of another type using a mapping function, similar to how\n     * `Array.prototype.map` works.\n     *\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     *\n     * @param event The event source for the new event.\n     * @param map The mapping function.\n     * @param disposable A disposable store to add the new EventEmitter to.\n     */\n    function map(event, map, disposable) {\n        return snapshot((listener, thisArgs = null, disposables) => event(i => listener.call(thisArgs, map(i)), null, disposables), disposable);\n    }\n    Event.map = map;\n    /**\n     * Wraps an event in another event that performs some function on the event object before firing.\n     *\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     *\n     * @param event The event source for the new event.\n     * @param each The function to perform on the event object.\n     * @param disposable A disposable store to add the new EventEmitter to.\n     */\n    function forEach(event, each, disposable) {\n        return snapshot((listener, thisArgs = null, disposables) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables), disposable);\n    }\n    Event.forEach = forEach;\n    function filter(event, filter, disposable) {\n        return snapshot((listener, thisArgs = null, disposables) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables), disposable);\n    }\n    Event.filter = filter;\n    /**\n     * Given an event, returns the same event but typed as `Event<void>`.\n     */\n    function signal(event) {\n        return event;\n    }\n    Event.signal = signal;\n    function any(...events) {\n        return (listener, thisArgs = null, disposables) => {\n            const disposable = combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e))));\n            return addAndReturnDisposable(disposable, disposables);\n        };\n    }\n    Event.any = any;\n    /**\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     */\n    function reduce(event, merge, initial, disposable) {\n        let output = initial;\n        return map(event, e => {\n            output = merge(output, e);\n            return output;\n        }, disposable);\n    }\n    Event.reduce = reduce;\n    function snapshot(event, disposable) {\n        let listener;\n        const options = {\n            onWillAddFirstListener() {\n                listener = event(emitter.fire, emitter);\n            },\n            onDidRemoveLastListener() {\n                listener?.dispose();\n            }\n        };\n        if (!disposable) {\n            _addLeakageTraceLogic(options);\n        }\n        const emitter = new Emitter(options);\n        disposable?.add(emitter);\n        return emitter.event;\n    }\n    /**\n     * Adds the IDisposable to the store if it's set, and returns it. Useful to\n     * Event function implementation.\n     */\n    function addAndReturnDisposable(d, store) {\n        if (store instanceof Array) {\n            store.push(d);\n        }\n        else if (store) {\n            store.add(d);\n        }\n        return d;\n    }\n    function debounce(event, merge, delay = 100, leading = false, flushOnListenerRemove = false, leakWarningThreshold, disposable) {\n        let subscription;\n        let output = undefined;\n        let handle = undefined;\n        let numDebouncedCalls = 0;\n        let doFire;\n        const options = {\n            leakWarningThreshold,\n            onWillAddFirstListener() {\n                subscription = event(cur => {\n                    numDebouncedCalls++;\n                    output = merge(output, cur);\n                    if (leading && !handle) {\n                        emitter.fire(output);\n                        output = undefined;\n                    }\n                    doFire = () => {\n                        const _output = output;\n                        output = undefined;\n                        handle = undefined;\n                        if (!leading || numDebouncedCalls > 1) {\n                            emitter.fire(_output);\n                        }\n                        numDebouncedCalls = 0;\n                    };\n                    if (typeof delay === 'number') {\n                        clearTimeout(handle);\n                        handle = setTimeout(doFire, delay);\n                    }\n                    else {\n                        if (handle === undefined) {\n                            handle = 0;\n                            queueMicrotask(doFire);\n                        }\n                    }\n                });\n            },\n            onWillRemoveListener() {\n                if (flushOnListenerRemove && numDebouncedCalls > 0) {\n                    doFire?.();\n                }\n            },\n            onDidRemoveLastListener() {\n                doFire = undefined;\n                subscription.dispose();\n            }\n        };\n        if (!disposable) {\n            _addLeakageTraceLogic(options);\n        }\n        const emitter = new Emitter(options);\n        disposable?.add(emitter);\n        return emitter.event;\n    }\n    Event.debounce = debounce;\n    /**\n     * Debounces an event, firing after some delay (default=0) with an array of all event original objects.\n     *\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     */\n    function accumulate(event, delay = 0, disposable) {\n        return Event.debounce(event, (last, e) => {\n            if (!last) {\n                return [e];\n            }\n            last.push(e);\n            return last;\n        }, delay, undefined, true, undefined, disposable);\n    }\n    Event.accumulate = accumulate;\n    /**\n     * Filters an event such that some condition is _not_ met more than once in a row, effectively ensuring duplicate\n     * event objects from different sources do not fire the same event object.\n     *\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     *\n     * @param event The event source for the new event.\n     * @param equals The equality condition.\n     * @param disposable A disposable store to add the new EventEmitter to.\n     *\n     * @example\n     * ```\n     * // Fire only one time when a single window is opened or focused\n     * Event.latch(Event.any(onDidOpenWindow, onDidFocusWindow))\n     * ```\n     */\n    function latch(event, equals = (a, b) => a === b, disposable) {\n        let firstCall = true;\n        let cache;\n        return filter(event, value => {\n            const shouldEmit = firstCall || !equals(value, cache);\n            firstCall = false;\n            cache = value;\n            return shouldEmit;\n        }, disposable);\n    }\n    Event.latch = latch;\n    /**\n     * Splits an event whose parameter is a union type into 2 separate events for each type in the union.\n     *\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     *\n     * @example\n     * ```\n     * const event = new EventEmitter<number | undefined>().event;\n     * const [numberEvent, undefinedEvent] = Event.split(event, isUndefined);\n     * ```\n     *\n     * @param event The event source for the new event.\n     * @param isT A function that determines what event is of the first type.\n     * @param disposable A disposable store to add the new EventEmitter to.\n     */\n    function split(event, isT, disposable) {\n        return [\n            Event.filter(event, isT, disposable),\n            Event.filter(event, e => !isT(e), disposable),\n        ];\n    }\n    Event.split = split;\n    /**\n     * Buffers an event until it has a listener attached.\n     *\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     *\n     * @param event The event source for the new event.\n     * @param flushAfterTimeout Determines whether to flush the buffer after a timeout immediately or after a\n     * `setTimeout` when the first event listener is added.\n     * @param _buffer Internal: A source event array used for tests.\n     *\n     * @example\n     * ```\n     * // Start accumulating events, when the first listener is attached, flush\n     * // the event after a timeout such that multiple listeners attached before\n     * // the timeout would receive the event\n     * this.onInstallExtension = Event.buffer(service.onInstallExtension, true);\n     * ```\n     */\n    function buffer(event, flushAfterTimeout = false, _buffer = [], disposable) {\n        let buffer = _buffer.slice();\n        let listener = event(e => {\n            if (buffer) {\n                buffer.push(e);\n            }\n            else {\n                emitter.fire(e);\n            }\n        });\n        if (disposable) {\n            disposable.add(listener);\n        }\n        const flush = () => {\n            buffer?.forEach(e => emitter.fire(e));\n            buffer = null;\n        };\n        const emitter = new Emitter({\n            onWillAddFirstListener() {\n                if (!listener) {\n                    listener = event(e => emitter.fire(e));\n                    if (disposable) {\n                        disposable.add(listener);\n                    }\n                }\n            },\n            onDidAddFirstListener() {\n                if (buffer) {\n                    if (flushAfterTimeout) {\n                        setTimeout(flush);\n                    }\n                    else {\n                        flush();\n                    }\n                }\n            },\n            onDidRemoveLastListener() {\n                if (listener) {\n                    listener.dispose();\n                }\n                listener = null;\n            }\n        });\n        if (disposable) {\n            disposable.add(emitter);\n        }\n        return emitter.event;\n    }\n    Event.buffer = buffer;\n    /**\n     * Wraps the event in an {@link IChainableEvent}, allowing a more functional programming style.\n     *\n     * @example\n     * ```\n     * // Normal\n     * const onEnterPressNormal = Event.filter(\n     *   Event.map(onKeyPress.event, e => new StandardKeyboardEvent(e)),\n     *   e.keyCode === KeyCode.Enter\n     * ).event;\n     *\n     * // Using chain\n     * const onEnterPressChain = Event.chain(onKeyPress.event, $ => $\n     *   .map(e => new StandardKeyboardEvent(e))\n     *   .filter(e => e.keyCode === KeyCode.Enter)\n     * );\n     * ```\n     */\n    function chain(event, sythensize) {\n        const fn = (listener, thisArgs, disposables) => {\n            const cs = sythensize(new ChainableSynthesis());\n            return event(function (value) {\n                const result = cs.evaluate(value);\n                if (result !== HaltChainable) {\n                    listener.call(thisArgs, result);\n                }\n            }, undefined, disposables);\n        };\n        return fn;\n    }\n    Event.chain = chain;\n    const HaltChainable = Symbol('HaltChainable');\n    class ChainableSynthesis {\n        constructor() {\n            this.steps = [];\n        }\n        map(fn) {\n            this.steps.push(fn);\n            return this;\n        }\n        forEach(fn) {\n            this.steps.push(v => {\n                fn(v);\n                return v;\n            });\n            return this;\n        }\n        filter(fn) {\n            this.steps.push(v => fn(v) ? v : HaltChainable);\n            return this;\n        }\n        reduce(merge, initial) {\n            let last = initial;\n            this.steps.push(v => {\n                last = merge(last, v);\n                return last;\n            });\n            return this;\n        }\n        latch(equals = (a, b) => a === b) {\n            let firstCall = true;\n            let cache;\n            this.steps.push(value => {\n                const shouldEmit = firstCall || !equals(value, cache);\n                firstCall = false;\n                cache = value;\n                return shouldEmit ? value : HaltChainable;\n            });\n            return this;\n        }\n        evaluate(value) {\n            for (const step of this.steps) {\n                value = step(value);\n                if (value === HaltChainable) {\n                    break;\n                }\n            }\n            return value;\n        }\n    }\n    /**\n     * Creates an {@link Event} from a node event emitter.\n     */\n    function fromNodeEventEmitter(emitter, eventName, map = id => id) {\n        const fn = (...args) => result.fire(map(...args));\n        const onFirstListenerAdd = () => emitter.on(eventName, fn);\n        const onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n        const result = new Emitter({ onWillAddFirstListener: onFirstListenerAdd, onDidRemoveLastListener: onLastListenerRemove });\n        return result.event;\n    }\n    Event.fromNodeEventEmitter = fromNodeEventEmitter;\n    /**\n     * Creates an {@link Event} from a DOM event emitter.\n     */\n    function fromDOMEventEmitter(emitter, eventName, map = id => id) {\n        const fn = (...args) => result.fire(map(...args));\n        const onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n        const onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n        const result = new Emitter({ onWillAddFirstListener: onFirstListenerAdd, onDidRemoveLastListener: onLastListenerRemove });\n        return result.event;\n    }\n    Event.fromDOMEventEmitter = fromDOMEventEmitter;\n    /**\n     * Creates a promise out of an event, using the {@link Event.once} helper.\n     */\n    function toPromise(event) {\n        return new Promise(resolve => once(event)(resolve));\n    }\n    Event.toPromise = toPromise;\n    /**\n     * Creates an event out of a promise that fires once when the promise is\n     * resolved with the result of the promise or `undefined`.\n     */\n    function fromPromise(promise) {\n        const result = new Emitter();\n        promise.then(res => {\n            result.fire(res);\n        }, () => {\n            result.fire(undefined);\n        }).finally(() => {\n            result.dispose();\n        });\n        return result.event;\n    }\n    Event.fromPromise = fromPromise;\n    /**\n     * A convenience function for forwarding an event to another emitter which\n     * improves readability.\n     *\n     * This is similar to {@link Relay} but allows instantiating and forwarding\n     * on a single line and also allows for multiple source events.\n     * @param from The event to forward.\n     * @param to The emitter to forward the event to.\n     * @example\n     * Event.forward(event, emitter);\n     * // equivalent to\n     * event(e => emitter.fire(e));\n     * // equivalent to\n     * event(emitter.fire, emitter);\n     */\n    function forward(from, to) {\n        return from(e => to.fire(e));\n    }\n    Event.forward = forward;\n    function runAndSubscribe(event, handler, initial) {\n        handler(initial);\n        return event(e => handler(e));\n    }\n    Event.runAndSubscribe = runAndSubscribe;\n    class EmitterObserver {\n        constructor(_observable, store) {\n            this._observable = _observable;\n            this._counter = 0;\n            this._hasChanged = false;\n            const options = {\n                onWillAddFirstListener: () => {\n                    _observable.addObserver(this);\n                    // Communicate to the observable that we received its current value and would like to be notified about future changes.\n                    this._observable.reportChanges();\n                },\n                onDidRemoveLastListener: () => {\n                    _observable.removeObserver(this);\n                }\n            };\n            if (!store) {\n                _addLeakageTraceLogic(options);\n            }\n            this.emitter = new Emitter(options);\n            if (store) {\n                store.add(this.emitter);\n            }\n        }\n        beginUpdate(_observable) {\n            // assert(_observable === this.obs);\n            this._counter++;\n        }\n        handlePossibleChange(_observable) {\n            // assert(_observable === this.obs);\n        }\n        handleChange(_observable, _change) {\n            // assert(_observable === this.obs);\n            this._hasChanged = true;\n        }\n        endUpdate(_observable) {\n            // assert(_observable === this.obs);\n            this._counter--;\n            if (this._counter === 0) {\n                this._observable.reportChanges();\n                if (this._hasChanged) {\n                    this._hasChanged = false;\n                    this.emitter.fire(this._observable.get());\n                }\n            }\n        }\n    }\n    /**\n     * Creates an event emitter that is fired when the observable changes.\n     * Each listeners subscribes to the emitter.\n     */\n    function fromObservable(obs, store) {\n        const observer = new EmitterObserver(obs, store);\n        return observer.emitter.event;\n    }\n    Event.fromObservable = fromObservable;\n    /**\n     * Each listener is attached to the observable directly.\n     */\n    function fromObservableLight(observable) {\n        return (listener, thisArgs, disposables) => {\n            let count = 0;\n            let didChange = false;\n            const observer = {\n                beginUpdate() {\n                    count++;\n                },\n                endUpdate() {\n                    count--;\n                    if (count === 0) {\n                        observable.reportChanges();\n                        if (didChange) {\n                            didChange = false;\n                            listener.call(thisArgs);\n                        }\n                    }\n                },\n                handlePossibleChange() {\n                    // noop\n                },\n                handleChange() {\n                    didChange = true;\n                }\n            };\n            observable.addObserver(observer);\n            observable.reportChanges();\n            const disposable = {\n                dispose() {\n                    observable.removeObserver(observer);\n                }\n            };\n            if (disposables instanceof DisposableStore) {\n                disposables.add(disposable);\n            }\n            else if (Array.isArray(disposables)) {\n                disposables.push(disposable);\n            }\n            return disposable;\n        };\n    }\n    Event.fromObservableLight = fromObservableLight;\n})(Event || (Event = {}));\nexport class EventProfiling {\n    static { this.all = new Set(); }\n    static { this._idPool = 0; }\n    constructor(name) {\n        this.listenerCount = 0;\n        this.invocationCount = 0;\n        this.elapsedOverall = 0;\n        this.durations = [];\n        this.name = `${name}_${EventProfiling._idPool++}`;\n        EventProfiling.all.add(this);\n    }\n    start(listenerCount) {\n        this._stopWatch = new StopWatch();\n        this.listenerCount = listenerCount;\n    }\n    stop() {\n        if (this._stopWatch) {\n            const elapsed = this._stopWatch.elapsed();\n            this.durations.push(elapsed);\n            this.elapsedOverall += elapsed;\n            this.invocationCount += 1;\n            this._stopWatch = undefined;\n        }\n    }\n}\nlet _globalLeakWarningThreshold = -1;\nclass LeakageMonitor {\n    static { this._idPool = 1; }\n    constructor(_errorHandler, threshold, name = (LeakageMonitor._idPool++).toString(16).padStart(3, '0')) {\n        this._errorHandler = _errorHandler;\n        this.threshold = threshold;\n        this.name = name;\n        this._warnCountdown = 0;\n    }\n    dispose() {\n        this._stacks?.clear();\n    }\n    check(stack, listenerCount) {\n        const threshold = this.threshold;\n        if (threshold <= 0 || listenerCount < threshold) {\n            return undefined;\n        }\n        if (!this._stacks) {\n            this._stacks = new Map();\n        }\n        const count = (this._stacks.get(stack.value) || 0);\n        this._stacks.set(stack.value, count + 1);\n        this._warnCountdown -= 1;\n        if (this._warnCountdown <= 0) {\n            // only warn on first exceed and then every time the limit\n            // is exceeded by 50% again\n            this._warnCountdown = threshold * 0.5;\n            const [topStack, topCount] = this.getMostFrequentStack();\n            const message = `[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`;\n            console.warn(message);\n            console.warn(topStack);\n            const error = new ListenerLeakError(message, topStack);\n            this._errorHandler(error);\n        }\n        return () => {\n            const count = (this._stacks.get(stack.value) || 0);\n            this._stacks.set(stack.value, count - 1);\n        };\n    }\n    getMostFrequentStack() {\n        if (!this._stacks) {\n            return undefined;\n        }\n        let topStack;\n        let topCount = 0;\n        for (const [stack, count] of this._stacks) {\n            if (!topStack || topCount < count) {\n                topStack = [stack, count];\n                topCount = count;\n            }\n        }\n        return topStack;\n    }\n}\nclass Stacktrace {\n    static create() {\n        const err = new Error();\n        return new Stacktrace(err.stack ?? '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn(this.value.split('\\n').slice(2).join('\\n'));\n    }\n}\n// error that is logged when going over the configured listener threshold\nexport class ListenerLeakError extends Error {\n    constructor(message, stack) {\n        super(message);\n        this.name = 'ListenerLeakError';\n        this.stack = stack;\n    }\n}\n// SEVERE error that is logged when having gone way over the configured listener\n// threshold so that the emitter refuses to accept more listeners\nexport class ListenerRefusalError extends Error {\n    constructor(message, stack) {\n        super(message);\n        this.name = 'ListenerRefusalError';\n        this.stack = stack;\n    }\n}\nclass UniqueContainer {\n    constructor(value) {\n        this.value = value;\n    }\n}\nconst compactionThreshold = 2;\nconst forEachListener = (listeners, fn) => {\n    if (listeners instanceof UniqueContainer) {\n        fn(listeners);\n    }\n    else {\n        for (let i = 0; i < listeners.length; i++) {\n            const l = listeners[i];\n            if (l) {\n                fn(l);\n            }\n        }\n    }\n};\nlet _listenerFinalizers;\nif (_enableListenerGCedWarning) {\n    const leaks = [];\n    setInterval(() => {\n        if (leaks.length === 0) {\n            return;\n        }\n        console.warn('[LEAKING LISTENERS] GC\\'ed these listeners that were NOT yet disposed:');\n        console.warn(leaks.join('\\n'));\n        leaks.length = 0;\n    }, 3000);\n    _listenerFinalizers = new FinalizationRegistry(heldValue => {\n        if (typeof heldValue === 'string') {\n            leaks.push(heldValue);\n        }\n    });\n}\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n    class Document {\n\n        private readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n        public onDidChange = this._onDidChange.event;\n\n        // getter-style\n        // get onDidChange(): Event<(value:string)=>any> {\n        // \treturn this._onDidChange.event;\n        // }\n\n        private _doIt() {\n            //...\n            this._onDidChange.fire(value);\n        }\n    }\n */\nexport class Emitter {\n    constructor(options) {\n        this._size = 0;\n        this._options = options;\n        this._leakageMon = (_globalLeakWarningThreshold > 0 || this._options?.leakWarningThreshold)\n            ? new LeakageMonitor(options?.onListenerError ?? onUnexpectedError, this._options?.leakWarningThreshold ?? _globalLeakWarningThreshold) :\n            undefined;\n        this._perfMon = this._options?._profName ? new EventProfiling(this._options._profName) : undefined;\n        this._deliveryQueue = this._options?.deliveryQueue;\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            // It is bad to have listeners at the time of disposing an emitter, it is worst to have listeners keep the emitter\n            // alive via the reference that's embedded in their disposables. Therefore we loop over all remaining listeners and\n            // unset their subscriptions/disposables. Looping and blaming remaining listeners is done on next tick because the\n            // the following programming pattern is very popular:\n            //\n            // const someModel = this._disposables.add(new ModelObject()); // (1) create and register model\n            // this._disposables.add(someModel.onDidChange(() => { ... }); // (2) subscribe and register model-event listener\n            // ...later...\n            // this._disposables.dispose(); disposes (1) then (2): don't warn after (1) but after the \"overall dispose\" is done\n            if (this._deliveryQueue?.current === this) {\n                this._deliveryQueue.reset();\n            }\n            if (this._listeners) {\n                if (_enableDisposeWithListenerWarning) {\n                    const listeners = this._listeners;\n                    queueMicrotask(() => {\n                        forEachListener(listeners, l => l.stack?.print());\n                    });\n                }\n                this._listeners = undefined;\n                this._size = 0;\n            }\n            this._options?.onDidRemoveLastListener?.();\n            this._leakageMon?.dispose();\n        }\n    }\n    /**\n     * For the public to allow to subscribe\n     * to events from this Emitter\n     */\n    get event() {\n        this._event ??= (callback, thisArgs, disposables) => {\n            if (this._leakageMon && this._size > this._leakageMon.threshold ** 2) {\n                const message = `[${this._leakageMon.name}] REFUSES to accept new listeners because it exceeded its threshold by far (${this._size} vs ${this._leakageMon.threshold})`;\n                console.warn(message);\n                const tuple = this._leakageMon.getMostFrequentStack() ?? ['UNKNOWN stack', -1];\n                const error = new ListenerRefusalError(`${message}. HINT: Stack shows most frequent listener (${tuple[1]}-times)`, tuple[0]);\n                const errorHandler = this._options?.onListenerError || onUnexpectedError;\n                errorHandler(error);\n                return Disposable.None;\n            }\n            if (this._disposed) {\n                // todo: should we warn if a listener is added to a disposed emitter? This happens often\n                return Disposable.None;\n            }\n            if (thisArgs) {\n                callback = callback.bind(thisArgs);\n            }\n            const contained = new UniqueContainer(callback);\n            let removeMonitor;\n            let stack;\n            if (this._leakageMon && this._size >= Math.ceil(this._leakageMon.threshold * 0.2)) {\n                // check and record this emitter for potential leakage\n                contained.stack = Stacktrace.create();\n                removeMonitor = this._leakageMon.check(contained.stack, this._size + 1);\n            }\n            if (_enableDisposeWithListenerWarning) {\n                contained.stack = stack ?? Stacktrace.create();\n            }\n            if (!this._listeners) {\n                this._options?.onWillAddFirstListener?.(this);\n                this._listeners = contained;\n                this._options?.onDidAddFirstListener?.(this);\n            }\n            else if (this._listeners instanceof UniqueContainer) {\n                this._deliveryQueue ??= new EventDeliveryQueuePrivate();\n                this._listeners = [this._listeners, contained];\n            }\n            else {\n                this._listeners.push(contained);\n            }\n            this._size++;\n            const result = toDisposable(() => {\n                _listenerFinalizers?.unregister(result);\n                removeMonitor?.();\n                this._removeListener(contained);\n            });\n            if (disposables instanceof DisposableStore) {\n                disposables.add(result);\n            }\n            else if (Array.isArray(disposables)) {\n                disposables.push(result);\n            }\n            if (_listenerFinalizers) {\n                const stack = new Error().stack.split('\\n').slice(2, 3).join('\\n').trim();\n                const match = /(file:|vscode-file:\\/\\/vscode-app)?(\\/[^:]*:\\d+:\\d+)/.exec(stack);\n                _listenerFinalizers.register(result, match?.[2] ?? stack, result);\n            }\n            return result;\n        };\n        return this._event;\n    }\n    _removeListener(listener) {\n        this._options?.onWillRemoveListener?.(this);\n        if (!this._listeners) {\n            return; // expected if a listener gets disposed\n        }\n        if (this._size === 1) {\n            this._listeners = undefined;\n            this._options?.onDidRemoveLastListener?.(this);\n            this._size = 0;\n            return;\n        }\n        // size > 1 which requires that listeners be a list:\n        const listeners = this._listeners;\n        const index = listeners.indexOf(listener);\n        if (index === -1) {\n            console.log('disposed?', this._disposed);\n            console.log('size?', this._size);\n            console.log('arr?', JSON.stringify(this._listeners));\n            throw new Error('Attempted to dispose unknown listener');\n        }\n        this._size--;\n        listeners[index] = undefined;\n        const adjustDeliveryQueue = this._deliveryQueue.current === this;\n        if (this._size * compactionThreshold <= listeners.length) {\n            let n = 0;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listeners[i]) {\n                    listeners[n++] = listeners[i];\n                }\n                else if (adjustDeliveryQueue) {\n                    this._deliveryQueue.end--;\n                    if (n < this._deliveryQueue.i) {\n                        this._deliveryQueue.i--;\n                    }\n                }\n            }\n            listeners.length = n;\n        }\n    }\n    _deliver(listener, value) {\n        if (!listener) {\n            return;\n        }\n        const errorHandler = this._options?.onListenerError || onUnexpectedError;\n        if (!errorHandler) {\n            listener.value(value);\n            return;\n        }\n        try {\n            listener.value(value);\n        }\n        catch (e) {\n            errorHandler(e);\n        }\n    }\n    /** Delivers items in the queue. Assumes the queue is ready to go. */\n    _deliverQueue(dq) {\n        const listeners = dq.current._listeners;\n        while (dq.i < dq.end) {\n            // important: dq.i is incremented before calling deliver() because it might reenter deliverQueue()\n            this._deliver(listeners[dq.i++], dq.value);\n        }\n        dq.reset();\n    }\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    fire(event) {\n        if (this._deliveryQueue?.current) {\n            this._deliverQueue(this._deliveryQueue);\n            this._perfMon?.stop(); // last fire() will have starting perfmon, stop it before starting the next dispatch\n        }\n        this._perfMon?.start(this._size);\n        if (!this._listeners) {\n            // no-op\n        }\n        else if (this._listeners instanceof UniqueContainer) {\n            this._deliver(this._listeners, event);\n        }\n        else {\n            const dq = this._deliveryQueue;\n            dq.enqueue(this, event, this._listeners.length);\n            this._deliverQueue(dq);\n        }\n        this._perfMon?.stop();\n    }\n    hasListeners() {\n        return this._size > 0;\n    }\n}\nexport const createEventDeliveryQueue = () => new EventDeliveryQueuePrivate();\nclass EventDeliveryQueuePrivate {\n    constructor() {\n        /**\n         * Index in current's listener list.\n         */\n        this.i = -1;\n        /**\n         * The last index in the listener's list to deliver.\n         */\n        this.end = 0;\n    }\n    enqueue(emitter, value, end) {\n        this.i = 0;\n        this.end = end;\n        this.current = emitter;\n        this.value = value;\n    }\n    reset() {\n        this.i = this.end; // force any current emission loop to stop, mainly for during dispose\n        this.current = undefined;\n        this.value = undefined;\n    }\n}\nexport class PauseableEmitter extends Emitter {\n    constructor(options) {\n        super(options);\n        this._isPaused = 0;\n        this._eventQueue = new LinkedList();\n        this._mergeFn = options?.merge;\n    }\n    pause() {\n        this._isPaused++;\n    }\n    resume() {\n        if (this._isPaused !== 0 && --this._isPaused === 0) {\n            if (this._mergeFn) {\n                // use the merge function to create a single composite\n                // event. make a copy in case firing pauses this emitter\n                if (this._eventQueue.size > 0) {\n                    const events = Array.from(this._eventQueue);\n                    this._eventQueue.clear();\n                    super.fire(this._mergeFn(events));\n                }\n            }\n            else {\n                // no merging, fire each event individually and test\n                // that this emitter isn't paused halfway through\n                while (!this._isPaused && this._eventQueue.size !== 0) {\n                    super.fire(this._eventQueue.shift());\n                }\n            }\n        }\n    }\n    fire(event) {\n        if (this._size) {\n            if (this._isPaused !== 0) {\n                this._eventQueue.push(event);\n            }\n            else {\n                super.fire(event);\n            }\n        }\n    }\n}\nexport class DebounceEmitter extends PauseableEmitter {\n    constructor(options) {\n        super(options);\n        this._delay = options.delay ?? 100;\n    }\n    fire(event) {\n        if (!this._handle) {\n            this.pause();\n            this._handle = setTimeout(() => {\n                this._handle = undefined;\n                this.resume();\n            }, this._delay);\n        }\n        super.fire(event);\n    }\n}\n/**\n * An emitter which queue all events and then process them at the\n * end of the event loop.\n */\nexport class MicrotaskEmitter extends Emitter {\n    constructor(options) {\n        super(options);\n        this._queuedEvents = [];\n        this._mergeFn = options?.merge;\n    }\n    fire(event) {\n        if (!this.hasListeners()) {\n            return;\n        }\n        this._queuedEvents.push(event);\n        if (this._queuedEvents.length === 1) {\n            queueMicrotask(() => {\n                if (this._mergeFn) {\n                    super.fire(this._mergeFn(this._queuedEvents));\n                }\n                else {\n                    this._queuedEvents.forEach(e => super.fire(e));\n                }\n                this._queuedEvents = [];\n            });\n        }\n    }\n}\n/**\n * An event emitter that multiplexes many events into a single event.\n *\n * @example Listen to the `onData` event of all `Thing`s, dynamically adding and removing `Thing`s\n * to the multiplexer as needed.\n *\n * ```typescript\n * const anythingDataMultiplexer = new EventMultiplexer<{ data: string }>();\n *\n * const thingListeners = DisposableMap<Thing, IDisposable>();\n *\n * thingService.onDidAddThing(thing => {\n *   thingListeners.set(thing, anythingDataMultiplexer.add(thing.onData);\n * });\n * thingService.onDidRemoveThing(thing => {\n *   thingListeners.deleteAndDispose(thing);\n * });\n *\n * anythingDataMultiplexer.event(e => {\n *   console.log('Something fired data ' + e.data)\n * });\n * ```\n */\nexport class EventMultiplexer {\n    constructor() {\n        this.hasListeners = false;\n        this.events = [];\n        this.emitter = new Emitter({\n            onWillAddFirstListener: () => this.onFirstListenerAdd(),\n            onDidRemoveLastListener: () => this.onLastListenerRemove()\n        });\n    }\n    get event() {\n        return this.emitter.event;\n    }\n    add(event) {\n        const e = { event: event, listener: null };\n        this.events.push(e);\n        if (this.hasListeners) {\n            this.hook(e);\n        }\n        const dispose = () => {\n            if (this.hasListeners) {\n                this.unhook(e);\n            }\n            const idx = this.events.indexOf(e);\n            this.events.splice(idx, 1);\n        };\n        return toDisposable(createSingleCallFunction(dispose));\n    }\n    onFirstListenerAdd() {\n        this.hasListeners = true;\n        this.events.forEach(e => this.hook(e));\n    }\n    onLastListenerRemove() {\n        this.hasListeners = false;\n        this.events.forEach(e => this.unhook(e));\n    }\n    hook(e) {\n        e.listener = e.event(r => this.emitter.fire(r));\n    }\n    unhook(e) {\n        e.listener?.dispose();\n        e.listener = null;\n    }\n    dispose() {\n        this.emitter.dispose();\n        for (const e of this.events) {\n            e.listener?.dispose();\n        }\n        this.events = [];\n    }\n}\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n    constructor() {\n        this.data = [];\n    }\n    wrapEvent(event, reduce, initial) {\n        return (listener, thisArgs, disposables) => {\n            return event(i => {\n                const data = this.data[this.data.length - 1];\n                // Non-reduce scenario\n                if (!reduce) {\n                    // Buffering case\n                    if (data) {\n                        data.buffers.push(() => listener.call(thisArgs, i));\n                    }\n                    else {\n                        // Not buffering case\n                        listener.call(thisArgs, i);\n                    }\n                    return;\n                }\n                // Reduce scenario\n                const reduceData = data;\n                // Not buffering case\n                if (!reduceData) {\n                    // TODO: Is there a way to cache this reduce call for all listeners?\n                    listener.call(thisArgs, reduce(initial, i));\n                    return;\n                }\n                // Buffering case\n                reduceData.items ??= [];\n                reduceData.items.push(i);\n                if (reduceData.buffers.length === 0) {\n                    // Include a single buffered function that will reduce all events when we're done buffering events\n                    data.buffers.push(() => {\n                        // cache the reduced result so that the value can be shared across all listeners\n                        reduceData.reducedResult ??= initial\n                            ? reduceData.items.reduce(reduce, initial)\n                            : reduceData.items.reduce(reduce);\n                        listener.call(thisArgs, reduceData.reducedResult);\n                    });\n                }\n            }, undefined, disposables);\n        };\n    }\n    bufferEvents(fn) {\n        const data = { buffers: new Array() };\n        this.data.push(data);\n        const r = fn();\n        this.data.pop();\n        data.buffers.forEach(flush => flush());\n        return r;\n    }\n}\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay {\n    constructor() {\n        this.listening = false;\n        this.inputEvent = Event.None;\n        this.inputEventListener = Disposable.None;\n        this.emitter = new Emitter({\n            onDidAddFirstListener: () => {\n                this.listening = true;\n                this.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n            },\n            onDidRemoveLastListener: () => {\n                this.listening = false;\n                this.inputEventListener.dispose();\n            }\n        });\n        this.event = this.emitter.event;\n    }\n    set input(event) {\n        this.inputEvent = event;\n        if (this.listening) {\n            this.inputEventListener.dispose();\n            this.inputEventListener = event(this.emitter.fire, this.emitter);\n        }\n    }\n    dispose() {\n        this.inputEventListener.dispose();\n        this.emitter.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { posix, sep } from './path.js';\nimport { isWindows } from './platform.js';\nimport { startsWithIgnoreCase } from './strings.js';\nexport function isPathSeparator(code) {\n    return code === 47 /* CharCode.Slash */ || code === 92 /* CharCode.Backslash */;\n}\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath) {\n    return osPath.replace(/[\\\\/]/g, posix.sep);\n}\n/**\n * Takes a Windows OS path (using backward or forward slashes) and turns it into a posix path:\n * - turns backward slashes into forward slashes\n * - makes it absolute if it starts with a drive letter\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toPosixPath(osPath) {\n    if (osPath.indexOf('/') === -1) {\n        osPath = toSlashes(osPath);\n    }\n    if (/^[a-zA-Z]:(\\/|$)/.test(osPath)) { // starts with a drive letter\n        osPath = '/' + osPath;\n    }\n    return osPath;\n}\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path, sep = posix.sep) {\n    if (!path) {\n        return '';\n    }\n    const len = path.length;\n    const firstLetter = path.charCodeAt(0);\n    if (isPathSeparator(firstLetter)) {\n        if (isPathSeparator(path.charCodeAt(1))) {\n            // UNC candidate \\\\localhost\\shares\\ddd\n            //               ^^^^^^^^^^^^^^^^^^^\n            if (!isPathSeparator(path.charCodeAt(2))) {\n                let pos = 3;\n                const start = pos;\n                for (; pos < len; pos++) {\n                    if (isPathSeparator(path.charCodeAt(pos))) {\n                        break;\n                    }\n                }\n                if (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n                    pos += 1;\n                    for (; pos < len; pos++) {\n                        if (isPathSeparator(path.charCodeAt(pos))) {\n                            return path.slice(0, pos + 1) // consume this separator\n                                .replace(/[\\\\/]/g, sep);\n                        }\n                    }\n                }\n            }\n        }\n        // /user/far\n        // ^\n        return sep;\n    }\n    else if (isWindowsDriveLetter(firstLetter)) {\n        // check for windows drive letter c:\\ or c:\n        if (path.charCodeAt(1) === 58 /* CharCode.Colon */) {\n            if (isPathSeparator(path.charCodeAt(2))) {\n                // C:\\fff\n                // ^^^\n                return path.slice(0, 2) + sep;\n            }\n            else {\n                // C:\n                // ^^\n                return path.slice(0, 2);\n            }\n        }\n    }\n    // check for URI\n    // scheme://authority/path\n    // ^^^^^^^^^^^^^^^^^^^\n    let pos = path.indexOf('://');\n    if (pos !== -1) {\n        pos += 3; // 3 -> \"://\".length\n        for (; pos < len; pos++) {\n            if (isPathSeparator(path.charCodeAt(pos))) {\n                return path.slice(0, pos + 1); // consume this separator\n            }\n        }\n    }\n    return '';\n}\n/**\n * @deprecated please use `IUriIdentityService.extUri.isEqualOrParent` instead. If\n * you are in a context without services, consider to pass down the `extUri` from the\n * outside, or use `extUriBiasedIgnorePathCase` if you know what you are doing.\n */\nexport function isEqualOrParent(base, parentCandidate, ignoreCase, separator = sep) {\n    if (base === parentCandidate) {\n        return true;\n    }\n    if (!base || !parentCandidate) {\n        return false;\n    }\n    if (parentCandidate.length > base.length) {\n        return false;\n    }\n    if (ignoreCase) {\n        const beginsWith = startsWithIgnoreCase(base, parentCandidate);\n        if (!beginsWith) {\n            return false;\n        }\n        if (parentCandidate.length === base.length) {\n            return true; // same path, different casing\n        }\n        let sepOffset = parentCandidate.length;\n        if (parentCandidate.charAt(parentCandidate.length - 1) === separator) {\n            sepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n        }\n        return base.charAt(sepOffset) === separator;\n    }\n    if (parentCandidate.charAt(parentCandidate.length - 1) !== separator) {\n        parentCandidate += separator;\n    }\n    return base.indexOf(parentCandidate) === 0;\n}\nexport function isWindowsDriveLetter(char0) {\n    return char0 >= 65 /* CharCode.A */ && char0 <= 90 /* CharCode.Z */ || char0 >= 97 /* CharCode.a */ && char0 <= 122 /* CharCode.z */;\n}\nexport function hasDriveLetter(path, isWindowsOS = isWindows) {\n    if (isWindowsOS) {\n        return isWindowsDriveLetter(path.charCodeAt(0)) && path.charCodeAt(1) === 58 /* CharCode.Colon */;\n    }\n    return false;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Given a function, returns a function that is only calling that function once.\n */\nexport function createSingleCallFunction(fn, fnDidRunCallback) {\n    const _this = this;\n    let didCall = false;\n    let result;\n    return function () {\n        if (didCall) {\n            return result;\n        }\n        didCall = true;\n        if (fnDidRunCallback) {\n            try {\n                result = fn.apply(_this, arguments);\n            }\n            finally {\n                fnDidRunCallback();\n            }\n        }\n        else {\n            result = fn.apply(_this, arguments);\n        }\n        return result;\n    };\n}\n","import { isThenable } from './async.js';\nimport { isEqualOrParent } from './extpath.js';\nimport { LRUCache } from './map.js';\nimport { basename, extname, posix, sep } from './path.js';\nimport { isLinux } from './platform.js';\nimport { escapeRegExpCharacters, ltrim } from './strings.js';\nexport const GLOBSTAR = '**';\nexport const GLOB_SPLIT = '/';\nconst PATH_REGEX = '[/\\\\\\\\]'; // any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]'; // any non-slash and non-backslash\nconst ALL_FORWARD_SLASHES = /\\//g;\nfunction starsToRegExp(starCount, isLastPattern) {\n    switch (starCount) {\n        case 0:\n            return '';\n        case 1:\n            return `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n        default:\n            // Matches:  (Path Sep OR Path Val followed by Path Sep) 0-many times except when it's the last pattern\n            //           in which case also matches (Path Sep followed by Path Val)\n            // Group is non capturing because we don't need to capture at all (?:...)\n            // Overall we use non-greedy matching because it could be that we match too much\n            return `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}${isLastPattern ? `|${PATH_REGEX}${NO_PATH_REGEX}+` : ''})*?`;\n    }\n}\nexport function splitGlobAware(pattern, splitChar) {\n    if (!pattern) {\n        return [];\n    }\n    const segments = [];\n    let inBraces = false;\n    let inBrackets = false;\n    let curVal = '';\n    for (const char of pattern) {\n        switch (char) {\n            case splitChar:\n                if (!inBraces && !inBrackets) {\n                    segments.push(curVal);\n                    curVal = '';\n                    continue;\n                }\n                break;\n            case '{':\n                inBraces = true;\n                break;\n            case '}':\n                inBraces = false;\n                break;\n            case '[':\n                inBrackets = true;\n                break;\n            case ']':\n                inBrackets = false;\n                break;\n        }\n        curVal += char;\n    }\n    // Tail\n    if (curVal) {\n        segments.push(curVal);\n    }\n    return segments;\n}\nfunction parseRegExp(pattern) {\n    if (!pattern) {\n        return '';\n    }\n    let regEx = '';\n    // Split up into segments for each slash found\n    const segments = splitGlobAware(pattern, GLOB_SPLIT);\n    // Special case where we only have globstars\n    if (segments.every(segment => segment === GLOBSTAR)) {\n        regEx = '.*';\n    }\n    // Build regex over segments\n    else {\n        let previousSegmentWasGlobStar = false;\n        segments.forEach((segment, index) => {\n            // Treat globstar specially\n            if (segment === GLOBSTAR) {\n                // if we have more than one globstar after another, just ignore it\n                if (previousSegmentWasGlobStar) {\n                    return;\n                }\n                regEx += starsToRegExp(2, index === segments.length - 1);\n            }\n            // Anything else, not globstar\n            else {\n                // States\n                let inBraces = false;\n                let braceVal = '';\n                let inBrackets = false;\n                let bracketVal = '';\n                for (const char of segment) {\n                    // Support brace expansion\n                    if (char !== '}' && inBraces) {\n                        braceVal += char;\n                        continue;\n                    }\n                    // Support brackets\n                    if (inBrackets && (char !== ']' || !bracketVal) /* ] is literally only allowed as first character in brackets to match it */) {\n                        let res;\n                        // range operator\n                        if (char === '-') {\n                            res = char;\n                        }\n                        // negation operator (only valid on first index in bracket)\n                        else if ((char === '^' || char === '!') && !bracketVal) {\n                            res = '^';\n                        }\n                        // glob split matching is not allowed within character ranges\n                        // see http://man7.org/linux/man-pages/man7/glob.7.html\n                        else if (char === GLOB_SPLIT) {\n                            res = '';\n                        }\n                        // anything else gets escaped\n                        else {\n                            res = escapeRegExpCharacters(char);\n                        }\n                        bracketVal += res;\n                        continue;\n                    }\n                    switch (char) {\n                        case '{':\n                            inBraces = true;\n                            continue;\n                        case '[':\n                            inBrackets = true;\n                            continue;\n                        case '}': {\n                            const choices = splitGlobAware(braceVal, ',');\n                            // Converts {foo,bar} => [foo|bar]\n                            const braceRegExp = `(?:${choices.map(choice => parseRegExp(choice)).join('|')})`;\n                            regEx += braceRegExp;\n                            inBraces = false;\n                            braceVal = '';\n                            break;\n                        }\n                        case ']': {\n                            regEx += ('[' + bracketVal + ']');\n                            inBrackets = false;\n                            bracketVal = '';\n                            break;\n                        }\n                        case '?':\n                            regEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n                            continue;\n                        case '*':\n                            regEx += starsToRegExp(1);\n                            continue;\n                        default:\n                            regEx += escapeRegExpCharacters(char);\n                    }\n                }\n                // Tail: Add the slash we had split on if there is more to\n                // come and the remaining pattern is not a globstar\n                // For example if pattern: some/**/*.js we want the \"/\" after\n                // some to be included in the RegEx to prevent a folder called\n                // \"something\" to match as well.\n                if (index < segments.length - 1 && // more segments to come after this\n                    (segments[index + 1] !== GLOBSTAR || // next segment is not **, or...\n                        index + 2 < segments.length // ...next segment is ** but there is more segments after that\n                    )) {\n                    regEx += PATH_REGEX;\n                }\n            }\n            // update globstar state\n            previousSegmentWasGlobStar = (segment === GLOBSTAR);\n        });\n    }\n    return regEx;\n}\n// regexes to check for trivial glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; // **/*.something\nconst T2 = /^\\*\\*\\/([\\w\\.-]+)\\/?$/; // **/something\nconst T3 = /^{\\*\\*\\/\\*?[\\w\\.-]+\\/?(,\\*\\*\\/\\*?[\\w\\.-]+\\/?)*}$/; // {**/*.something,**/*.else} or {**/package.json,**/project.json}\nconst T3_2 = /^{\\*\\*\\/\\*?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/\\*?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$/; // Like T3, with optional trailing /**\nconst T4 = /^\\*\\*((\\/[\\w\\.-]+)+)\\/?$/; // **/something/else\nconst T5 = /^([\\w\\.-]+(\\/[\\w\\.-]+)*)\\/?$/; // something/else\nconst CACHE = new LRUCache(10000); // bounded to 10000 elements\nconst FALSE = function () {\n    return false;\n};\nconst NULL = function () {\n    return null;\n};\nfunction parsePattern(arg1, options) {\n    if (!arg1) {\n        return NULL;\n    }\n    // Handle relative patterns\n    let pattern;\n    if (typeof arg1 !== 'string') {\n        pattern = arg1.pattern;\n    }\n    else {\n        pattern = arg1;\n    }\n    // Whitespace trimming\n    pattern = pattern.trim();\n    // Check cache\n    const patternKey = `${pattern}_${!!options.trimForExclusions}`;\n    let parsedPattern = CACHE.get(patternKey);\n    if (parsedPattern) {\n        return wrapRelativePattern(parsedPattern, arg1);\n    }\n    // Check for Trivials\n    let match;\n    if (T1.test(pattern)) {\n        parsedPattern = trivia1(pattern.substr(4), pattern); // common pattern: **/*.txt just need endsWith check\n    }\n    else if (match = T2.exec(trimForExclusions(pattern, options))) { // common pattern: **/some.txt just need basename check\n        parsedPattern = trivia2(match[1], pattern);\n    }\n    else if ((options.trimForExclusions ? T3_2 : T3).test(pattern)) { // repetition of common patterns (see above) {**/*.txt,**/*.png}\n        parsedPattern = trivia3(pattern, options);\n    }\n    else if (match = T4.exec(trimForExclusions(pattern, options))) { // common pattern: **/something/else just need endsWith check\n        parsedPattern = trivia4and5(match[1].substr(1), pattern, true);\n    }\n    else if (match = T5.exec(trimForExclusions(pattern, options))) { // common pattern: something/else just need equals check\n        parsedPattern = trivia4and5(match[1], pattern, false);\n    }\n    // Otherwise convert to pattern\n    else {\n        parsedPattern = toRegExp(pattern);\n    }\n    // Cache\n    CACHE.set(patternKey, parsedPattern);\n    return wrapRelativePattern(parsedPattern, arg1);\n}\nfunction wrapRelativePattern(parsedPattern, arg2) {\n    if (typeof arg2 === 'string') {\n        return parsedPattern;\n    }\n    const wrappedPattern = function (path, basename) {\n        if (!isEqualOrParent(path, arg2.base, !isLinux)) {\n            // skip glob matching if `base` is not a parent of `path`\n            return null;\n        }\n        // Given we have checked `base` being a parent of `path`,\n        // we can now remove the `base` portion of the `path`\n        // and only match on the remaining path components\n        // For that we try to extract the portion of the `path`\n        // that comes after the `base` portion. We have to account\n        // for the fact that `base` might end in a path separator\n        // (https://github.com/microsoft/vscode/issues/162498)\n        return parsedPattern(ltrim(path.substr(arg2.base.length), sep), basename);\n    };\n    // Make sure to preserve associated metadata\n    wrappedPattern.allBasenames = parsedPattern.allBasenames;\n    wrappedPattern.allPaths = parsedPattern.allPaths;\n    wrappedPattern.basenames = parsedPattern.basenames;\n    wrappedPattern.patterns = parsedPattern.patterns;\n    return wrappedPattern;\n}\nfunction trimForExclusions(pattern, options) {\n    return options.trimForExclusions && pattern.endsWith('/**') ? pattern.substr(0, pattern.length - 2) : pattern; // dropping **, tailing / is dropped later\n}\n// common pattern: **/*.txt just need endsWith check\nfunction trivia1(base, pattern) {\n    return function (path, basename) {\n        return typeof path === 'string' && path.endsWith(base) ? pattern : null;\n    };\n}\n// common pattern: **/some.txt just need basename check\nfunction trivia2(base, pattern) {\n    const slashBase = `/${base}`;\n    const backslashBase = `\\\\${base}`;\n    const parsedPattern = function (path, basename) {\n        if (typeof path !== 'string') {\n            return null;\n        }\n        if (basename) {\n            return basename === base ? pattern : null;\n        }\n        return path === base || path.endsWith(slashBase) || path.endsWith(backslashBase) ? pattern : null;\n    };\n    const basenames = [base];\n    parsedPattern.basenames = basenames;\n    parsedPattern.patterns = [pattern];\n    parsedPattern.allBasenames = basenames;\n    return parsedPattern;\n}\n// repetition of common patterns (see above) {**/*.txt,**/*.png}\nfunction trivia3(pattern, options) {\n    const parsedPatterns = aggregateBasenameMatches(pattern.slice(1, -1)\n        .split(',')\n        .map(pattern => parsePattern(pattern, options))\n        .filter(pattern => pattern !== NULL), pattern);\n    const patternsLength = parsedPatterns.length;\n    if (!patternsLength) {\n        return NULL;\n    }\n    if (patternsLength === 1) {\n        return parsedPatterns[0];\n    }\n    const parsedPattern = function (path, basename) {\n        for (let i = 0, n = parsedPatterns.length; i < n; i++) {\n            if (parsedPatterns[i](path, basename)) {\n                return pattern;\n            }\n        }\n        return null;\n    };\n    const withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n    if (withBasenames) {\n        parsedPattern.allBasenames = withBasenames.allBasenames;\n    }\n    const allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, []);\n    if (allPaths.length) {\n        parsedPattern.allPaths = allPaths;\n    }\n    return parsedPattern;\n}\n// common patterns: **/something/else just need endsWith check, something/else just needs and equals check\nfunction trivia4and5(targetPath, pattern, matchPathEnds) {\n    const usingPosixSep = sep === posix.sep;\n    const nativePath = usingPosixSep ? targetPath : targetPath.replace(ALL_FORWARD_SLASHES, sep);\n    const nativePathEnd = sep + nativePath;\n    const targetPathEnd = posix.sep + targetPath;\n    let parsedPattern;\n    if (matchPathEnds) {\n        parsedPattern = function (path, basename) {\n            return typeof path === 'string' && ((path === nativePath || path.endsWith(nativePathEnd)) || !usingPosixSep && (path === targetPath || path.endsWith(targetPathEnd))) ? pattern : null;\n        };\n    }\n    else {\n        parsedPattern = function (path, basename) {\n            return typeof path === 'string' && (path === nativePath || (!usingPosixSep && path === targetPath)) ? pattern : null;\n        };\n    }\n    parsedPattern.allPaths = [(matchPathEnds ? '*/' : './') + targetPath];\n    return parsedPattern;\n}\nfunction toRegExp(pattern) {\n    try {\n        const regExp = new RegExp(`^${parseRegExp(pattern)}$`);\n        return function (path) {\n            regExp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n            return typeof path === 'string' && regExp.test(path) ? pattern : null;\n        };\n    }\n    catch (error) {\n        return NULL;\n    }\n}\nexport function match(arg1, path, hasSibling) {\n    if (!arg1 || typeof path !== 'string') {\n        return false;\n    }\n    return parse(arg1)(path, undefined, hasSibling);\n}\nexport function parse(arg1, options = {}) {\n    if (!arg1) {\n        return FALSE;\n    }\n    // Glob with String\n    if (typeof arg1 === 'string' || isRelativePattern(arg1)) {\n        const parsedPattern = parsePattern(arg1, options);\n        if (parsedPattern === NULL) {\n            return FALSE;\n        }\n        const resultPattern = function (path, basename) {\n            return !!parsedPattern(path, basename);\n        };\n        if (parsedPattern.allBasenames) {\n            resultPattern.allBasenames = parsedPattern.allBasenames;\n        }\n        if (parsedPattern.allPaths) {\n            resultPattern.allPaths = parsedPattern.allPaths;\n        }\n        return resultPattern;\n    }\n    // Glob with Expression\n    return parsedExpression(arg1, options);\n}\nexport function isRelativePattern(obj) {\n    const rp = obj;\n    if (!rp) {\n        return false;\n    }\n    return typeof rp.base === 'string' && typeof rp.pattern === 'string';\n}\nfunction parsedExpression(expression, options) {\n    const parsedPatterns = aggregateBasenameMatches(Object.getOwnPropertyNames(expression)\n        .map(pattern => parseExpressionPattern(pattern, expression[pattern], options))\n        .filter(pattern => pattern !== NULL));\n    const patternsLength = parsedPatterns.length;\n    if (!patternsLength) {\n        return NULL;\n    }\n    if (!parsedPatterns.some(parsedPattern => !!parsedPattern.requiresSiblings)) {\n        if (patternsLength === 1) {\n            return parsedPatterns[0];\n        }\n        const resultExpression = function (path, basename) {\n            let resultPromises = undefined;\n            for (let i = 0, n = parsedPatterns.length; i < n; i++) {\n                const result = parsedPatterns[i](path, basename);\n                if (typeof result === 'string') {\n                    return result; // immediately return as soon as the first expression matches\n                }\n                // If the result is a promise, we have to keep it for\n                // later processing and await the result properly.\n                if (isThenable(result)) {\n                    if (!resultPromises) {\n                        resultPromises = [];\n                    }\n                    resultPromises.push(result);\n                }\n            }\n            // With result promises, we have to loop over each and\n            // await the result before we can return any result.\n            if (resultPromises) {\n                return (async () => {\n                    for (const resultPromise of resultPromises) {\n                        const result = await resultPromise;\n                        if (typeof result === 'string') {\n                            return result;\n                        }\n                    }\n                    return null;\n                })();\n            }\n            return null;\n        };\n        const withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n        if (withBasenames) {\n            resultExpression.allBasenames = withBasenames.allBasenames;\n        }\n        const allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, []);\n        if (allPaths.length) {\n            resultExpression.allPaths = allPaths;\n        }\n        return resultExpression;\n    }\n    const resultExpression = function (path, base, hasSibling) {\n        let name = undefined;\n        let resultPromises = undefined;\n        for (let i = 0, n = parsedPatterns.length; i < n; i++) {\n            // Pattern matches path\n            const parsedPattern = parsedPatterns[i];\n            if (parsedPattern.requiresSiblings && hasSibling) {\n                if (!base) {\n                    base = basename(path);\n                }\n                if (!name) {\n                    name = base.substr(0, base.length - extname(path).length);\n                }\n            }\n            const result = parsedPattern(path, base, name, hasSibling);\n            if (typeof result === 'string') {\n                return result; // immediately return as soon as the first expression matches\n            }\n            // If the result is a promise, we have to keep it for\n            // later processing and await the result properly.\n            if (isThenable(result)) {\n                if (!resultPromises) {\n                    resultPromises = [];\n                }\n                resultPromises.push(result);\n            }\n        }\n        // With result promises, we have to loop over each and\n        // await the result before we can return any result.\n        if (resultPromises) {\n            return (async () => {\n                for (const resultPromise of resultPromises) {\n                    const result = await resultPromise;\n                    if (typeof result === 'string') {\n                        return result;\n                    }\n                }\n                return null;\n            })();\n        }\n        return null;\n    };\n    const withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n    if (withBasenames) {\n        resultExpression.allBasenames = withBasenames.allBasenames;\n    }\n    const allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, []);\n    if (allPaths.length) {\n        resultExpression.allPaths = allPaths;\n    }\n    return resultExpression;\n}\nfunction parseExpressionPattern(pattern, value, options) {\n    if (value === false) {\n        return NULL; // pattern is disabled\n    }\n    const parsedPattern = parsePattern(pattern, options);\n    if (parsedPattern === NULL) {\n        return NULL;\n    }\n    // Expression Pattern is <boolean>\n    if (typeof value === 'boolean') {\n        return parsedPattern;\n    }\n    // Expression Pattern is <SiblingClause>\n    if (value) {\n        const when = value.when;\n        if (typeof when === 'string') {\n            const result = (path, basename, name, hasSibling) => {\n                if (!hasSibling || !parsedPattern(path, basename)) {\n                    return null;\n                }\n                const clausePattern = when.replace('$(basename)', () => name);\n                const matched = hasSibling(clausePattern);\n                return isThenable(matched) ?\n                    matched.then(match => match ? pattern : null) :\n                    matched ? pattern : null;\n            };\n            result.requiresSiblings = true;\n            return result;\n        }\n    }\n    // Expression is anything\n    return parsedPattern;\n}\nfunction aggregateBasenameMatches(parsedPatterns, result) {\n    const basenamePatterns = parsedPatterns.filter(parsedPattern => !!parsedPattern.basenames);\n    if (basenamePatterns.length < 2) {\n        return parsedPatterns;\n    }\n    const basenames = basenamePatterns.reduce((all, current) => {\n        const basenames = current.basenames;\n        return basenames ? all.concat(basenames) : all;\n    }, []);\n    let patterns;\n    if (result) {\n        patterns = [];\n        for (let i = 0, n = basenames.length; i < n; i++) {\n            patterns.push(result);\n        }\n    }\n    else {\n        patterns = basenamePatterns.reduce((all, current) => {\n            const patterns = current.patterns;\n            return patterns ? all.concat(patterns) : all;\n        }, []);\n    }\n    const aggregate = function (path, basename) {\n        if (typeof path !== 'string') {\n            return null;\n        }\n        if (!basename) {\n            let i;\n            for (i = path.length; i > 0; i--) {\n                const ch = path.charCodeAt(i - 1);\n                if (ch === 47 /* CharCode.Slash */ || ch === 92 /* CharCode.Backslash */) {\n                    break;\n                }\n            }\n            basename = path.substr(i);\n        }\n        const index = basenames.indexOf(basename);\n        return index !== -1 ? patterns[index] : null;\n    };\n    aggregate.basenames = basenames;\n    aggregate.patterns = patterns;\n    aggregate.allBasenames = basenames;\n    const aggregatedPatterns = parsedPatterns.filter(parsedPattern => !parsedPattern.basenames);\n    aggregatedPatterns.push(aggregate);\n    return aggregatedPatterns;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\n/**\n * Return a hash value for an object.\n */\nexport function hash(obj) {\n    return doHash(obj, 0);\n}\nexport function doHash(obj, hashVal) {\n    switch (typeof obj) {\n        case 'object':\n            if (obj === null) {\n                return numberHash(349, hashVal);\n            }\n            else if (Array.isArray(obj)) {\n                return arrayHash(obj, hashVal);\n            }\n            return objectHash(obj, hashVal);\n        case 'string':\n            return stringHash(obj, hashVal);\n        case 'boolean':\n            return booleanHash(obj, hashVal);\n        case 'number':\n            return numberHash(obj, hashVal);\n        case 'undefined':\n            return numberHash(937, hashVal);\n        default:\n            return numberHash(617, hashVal);\n    }\n}\nexport function numberHash(val, initialHashVal) {\n    return (((initialHashVal << 5) - initialHashVal) + val) | 0; // hashVal * 31 + ch, keep as int32\n}\nfunction booleanHash(b, initialHashVal) {\n    return numberHash(b ? 433 : 863, initialHashVal);\n}\nexport function stringHash(s, hashVal) {\n    hashVal = numberHash(149417, hashVal);\n    for (let i = 0, length = s.length; i < length; i++) {\n        hashVal = numberHash(s.charCodeAt(i), hashVal);\n    }\n    return hashVal;\n}\nfunction arrayHash(arr, initialHashVal) {\n    initialHashVal = numberHash(104579, initialHashVal);\n    return arr.reduce((hashVal, item) => doHash(item, hashVal), initialHashVal);\n}\nfunction objectHash(obj, initialHashVal) {\n    initialHashVal = numberHash(181387, initialHashVal);\n    return Object.keys(obj).sort().reduce((hashVal, key) => {\n        hashVal = stringHash(key, hashVal);\n        return doHash(obj[key], hashVal);\n    }, initialHashVal);\n}\nfunction leftRotate(value, bits, totalBits = 32) {\n    // delta + bits = totalBits\n    const delta = totalBits - bits;\n    // All ones, expect `delta` zeros aligned to the right\n    const mask = ~((1 << delta) - 1);\n    // Join (value left-shifted `bits` bits) with (masked value right-shifted `delta` bits)\n    return ((value << bits) | ((mask & value) >>> delta)) >>> 0;\n}\nfunction fill(dest, index = 0, count = dest.byteLength, value = 0) {\n    for (let i = 0; i < count; i++) {\n        dest[index + i] = value;\n    }\n}\nfunction leftPad(value, length, char = '0') {\n    while (value.length < length) {\n        value = char + value;\n    }\n    return value;\n}\nexport function toHexString(bufferOrValue, bitsize = 32) {\n    if (bufferOrValue instanceof ArrayBuffer) {\n        return Array.from(new Uint8Array(bufferOrValue)).map(b => b.toString(16).padStart(2, '0')).join('');\n    }\n    return leftPad((bufferOrValue >>> 0).toString(16), bitsize / 4);\n}\n/**\n * A SHA1 implementation that works with strings and does not allocate.\n */\nexport class StringSHA1 {\n    static { this._bigBlock32 = new DataView(new ArrayBuffer(320)); } // 80 * 4 = 320\n    constructor() {\n        this._h0 = 0x67452301;\n        this._h1 = 0xEFCDAB89;\n        this._h2 = 0x98BADCFE;\n        this._h3 = 0x10325476;\n        this._h4 = 0xC3D2E1F0;\n        this._buff = new Uint8Array(64 /* SHA1Constant.BLOCK_SIZE */ + 3 /* to fit any utf-8 */);\n        this._buffDV = new DataView(this._buff.buffer);\n        this._buffLen = 0;\n        this._totalLen = 0;\n        this._leftoverHighSurrogate = 0;\n        this._finished = false;\n    }\n    update(str) {\n        const strLen = str.length;\n        if (strLen === 0) {\n            return;\n        }\n        const buff = this._buff;\n        let buffLen = this._buffLen;\n        let leftoverHighSurrogate = this._leftoverHighSurrogate;\n        let charCode;\n        let offset;\n        if (leftoverHighSurrogate !== 0) {\n            charCode = leftoverHighSurrogate;\n            offset = -1;\n            leftoverHighSurrogate = 0;\n        }\n        else {\n            charCode = str.charCodeAt(0);\n            offset = 0;\n        }\n        while (true) {\n            let codePoint = charCode;\n            if (strings.isHighSurrogate(charCode)) {\n                if (offset + 1 < strLen) {\n                    const nextCharCode = str.charCodeAt(offset + 1);\n                    if (strings.isLowSurrogate(nextCharCode)) {\n                        offset++;\n                        codePoint = strings.computeCodePoint(charCode, nextCharCode);\n                    }\n                    else {\n                        // illegal => unicode replacement character\n                        codePoint = 65533 /* SHA1Constant.UNICODE_REPLACEMENT */;\n                    }\n                }\n                else {\n                    // last character is a surrogate pair\n                    leftoverHighSurrogate = charCode;\n                    break;\n                }\n            }\n            else if (strings.isLowSurrogate(charCode)) {\n                // illegal => unicode replacement character\n                codePoint = 65533 /* SHA1Constant.UNICODE_REPLACEMENT */;\n            }\n            buffLen = this._push(buff, buffLen, codePoint);\n            offset++;\n            if (offset < strLen) {\n                charCode = str.charCodeAt(offset);\n            }\n            else {\n                break;\n            }\n        }\n        this._buffLen = buffLen;\n        this._leftoverHighSurrogate = leftoverHighSurrogate;\n    }\n    _push(buff, buffLen, codePoint) {\n        if (codePoint < 0x0080) {\n            buff[buffLen++] = codePoint;\n        }\n        else if (codePoint < 0x0800) {\n            buff[buffLen++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else if (codePoint < 0x10000) {\n            buff[buffLen++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else {\n            buff[buffLen++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        if (buffLen >= 64 /* SHA1Constant.BLOCK_SIZE */) {\n            this._step();\n            buffLen -= 64 /* SHA1Constant.BLOCK_SIZE */;\n            this._totalLen += 64 /* SHA1Constant.BLOCK_SIZE */;\n            // take last 3 in case of UTF8 overflow\n            buff[0] = buff[64 /* SHA1Constant.BLOCK_SIZE */ + 0];\n            buff[1] = buff[64 /* SHA1Constant.BLOCK_SIZE */ + 1];\n            buff[2] = buff[64 /* SHA1Constant.BLOCK_SIZE */ + 2];\n        }\n        return buffLen;\n    }\n    digest() {\n        if (!this._finished) {\n            this._finished = true;\n            if (this._leftoverHighSurrogate) {\n                // illegal => unicode replacement character\n                this._leftoverHighSurrogate = 0;\n                this._buffLen = this._push(this._buff, this._buffLen, 65533 /* SHA1Constant.UNICODE_REPLACEMENT */);\n            }\n            this._totalLen += this._buffLen;\n            this._wrapUp();\n        }\n        return toHexString(this._h0) + toHexString(this._h1) + toHexString(this._h2) + toHexString(this._h3) + toHexString(this._h4);\n    }\n    _wrapUp() {\n        this._buff[this._buffLen++] = 0x80;\n        fill(this._buff, this._buffLen);\n        if (this._buffLen > 56) {\n            this._step();\n            fill(this._buff);\n        }\n        // this will fit because the mantissa can cover up to 52 bits\n        const ml = 8 * this._totalLen;\n        this._buffDV.setUint32(56, Math.floor(ml / 4294967296), false);\n        this._buffDV.setUint32(60, ml % 4294967296, false);\n        this._step();\n    }\n    _step() {\n        const bigBlock32 = StringSHA1._bigBlock32;\n        const data = this._buffDV;\n        for (let j = 0; j < 64 /* 16*4 */; j += 4) {\n            bigBlock32.setUint32(j, data.getUint32(j, false), false);\n        }\n        for (let j = 64; j < 320 /* 80*4 */; j += 4) {\n            bigBlock32.setUint32(j, leftRotate((bigBlock32.getUint32(j - 12, false) ^ bigBlock32.getUint32(j - 32, false) ^ bigBlock32.getUint32(j - 56, false) ^ bigBlock32.getUint32(j - 64, false)), 1), false);\n        }\n        let a = this._h0;\n        let b = this._h1;\n        let c = this._h2;\n        let d = this._h3;\n        let e = this._h4;\n        let f, k;\n        let temp;\n        for (let j = 0; j < 80; j++) {\n            if (j < 20) {\n                f = (b & c) | ((~b) & d);\n                k = 0x5A827999;\n            }\n            else if (j < 40) {\n                f = b ^ c ^ d;\n                k = 0x6ED9EBA1;\n            }\n            else if (j < 60) {\n                f = (b & c) | (b & d) | (c & d);\n                k = 0x8F1BBCDC;\n            }\n            else {\n                f = b ^ c ^ d;\n                k = 0xCA62C1D6;\n            }\n            temp = (leftRotate(a, 5) + f + e + k + bigBlock32.getUint32(j * 4, false)) & 0xffffffff;\n            e = d;\n            d = c;\n            c = leftRotate(b, 30);\n            b = a;\n            a = temp;\n        }\n        this._h0 = (this._h0 + a) & 0xffffffff;\n        this._h1 = (this._h1 + b) & 0xffffffff;\n        this._h2 = (this._h2 + c) & 0xffffffff;\n        this._h3 = (this._h3 + d) & 0xffffffff;\n        this._h4 = (this._h4 + e) & 0xffffffff;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var Iterable;\n(function (Iterable) {\n    function is(thing) {\n        return thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n    }\n    Iterable.is = is;\n    const _empty = Object.freeze([]);\n    function empty() {\n        return _empty;\n    }\n    Iterable.empty = empty;\n    function* single(element) {\n        yield element;\n    }\n    Iterable.single = single;\n    function wrap(iterableOrElement) {\n        if (is(iterableOrElement)) {\n            return iterableOrElement;\n        }\n        else {\n            return single(iterableOrElement);\n        }\n    }\n    Iterable.wrap = wrap;\n    function from(iterable) {\n        return iterable || _empty;\n    }\n    Iterable.from = from;\n    function* reverse(array) {\n        for (let i = array.length - 1; i >= 0; i--) {\n            yield array[i];\n        }\n    }\n    Iterable.reverse = reverse;\n    function isEmpty(iterable) {\n        return !iterable || iterable[Symbol.iterator]().next().done === true;\n    }\n    Iterable.isEmpty = isEmpty;\n    function first(iterable) {\n        return iterable[Symbol.iterator]().next().value;\n    }\n    Iterable.first = first;\n    function some(iterable, predicate) {\n        let i = 0;\n        for (const element of iterable) {\n            if (predicate(element, i++)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    Iterable.some = some;\n    function find(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return undefined;\n    }\n    Iterable.find = find;\n    function* filter(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                yield element;\n            }\n        }\n    }\n    Iterable.filter = filter;\n    function* map(iterable, fn) {\n        let index = 0;\n        for (const element of iterable) {\n            yield fn(element, index++);\n        }\n    }\n    Iterable.map = map;\n    function* flatMap(iterable, fn) {\n        let index = 0;\n        for (const element of iterable) {\n            yield* fn(element, index++);\n        }\n    }\n    Iterable.flatMap = flatMap;\n    function* concat(...iterables) {\n        for (const iterable of iterables) {\n            yield* iterable;\n        }\n    }\n    Iterable.concat = concat;\n    function reduce(iterable, reducer, initialValue) {\n        let value = initialValue;\n        for (const element of iterable) {\n            value = reducer(value, element);\n        }\n        return value;\n    }\n    Iterable.reduce = reduce;\n    /**\n     * Returns an iterable slice of the array, with the same semantics as `array.slice()`.\n     */\n    function* slice(arr, from, to = arr.length) {\n        if (from < 0) {\n            from += arr.length;\n        }\n        if (to < 0) {\n            to += arr.length;\n        }\n        else if (to > arr.length) {\n            to = arr.length;\n        }\n        for (; from < to; from++) {\n            yield arr[from];\n        }\n    }\n    Iterable.slice = slice;\n    /**\n     * Consumes `atMost` elements from iterable and returns the consumed elements,\n     * and an iterable for the rest of the elements.\n     */\n    function consume(iterable, atMost = Number.POSITIVE_INFINITY) {\n        const consumed = [];\n        if (atMost === 0) {\n            return [consumed, iterable];\n        }\n        const iterator = iterable[Symbol.iterator]();\n        for (let i = 0; i < atMost; i++) {\n            const next = iterator.next();\n            if (next.done) {\n                return [consumed, Iterable.empty()];\n            }\n            consumed.push(next.value);\n        }\n        return [consumed, { [Symbol.iterator]() { return iterator; } }];\n    }\n    Iterable.consume = consume;\n    async function asyncToArray(iterable) {\n        const result = [];\n        for await (const item of iterable) {\n            result.push(item);\n        }\n        return Promise.resolve(result);\n    }\n    Iterable.asyncToArray = asyncToArray;\n})(Iterable || (Iterable = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nclass KeyCodeStrMap {\n    constructor() {\n        this._keyCodeToStr = [];\n        this._strToKeyCode = Object.create(null);\n    }\n    define(keyCode, str) {\n        this._keyCodeToStr[keyCode] = str;\n        this._strToKeyCode[str.toLowerCase()] = keyCode;\n    }\n    keyCodeToStr(keyCode) {\n        return this._keyCodeToStr[keyCode];\n    }\n    strToKeyCode(str) {\n        return this._strToKeyCode[str.toLowerCase()] || 0 /* KeyCode.Unknown */;\n    }\n}\nconst uiMap = new KeyCodeStrMap();\nconst userSettingsUSMap = new KeyCodeStrMap();\nconst userSettingsGeneralMap = new KeyCodeStrMap();\nexport const EVENT_KEY_CODE_MAP = new Array(230);\nexport const NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE = {};\nconst scanCodeIntToStr = [];\nconst scanCodeStrToInt = Object.create(null);\nconst scanCodeLowerCaseStrToInt = Object.create(null);\n/**\n * -1 if a ScanCode => KeyCode mapping depends on kb layout.\n */\nexport const IMMUTABLE_CODE_TO_KEY_CODE = [];\n/**\n * -1 if a KeyCode => ScanCode mapping depends on kb layout.\n */\nexport const IMMUTABLE_KEY_CODE_TO_CODE = [];\nfor (let i = 0; i <= 193 /* ScanCode.MAX_VALUE */; i++) {\n    IMMUTABLE_CODE_TO_KEY_CODE[i] = -1 /* KeyCode.DependsOnKbLayout */;\n}\nfor (let i = 0; i <= 132 /* KeyCode.MAX_VALUE */; i++) {\n    IMMUTABLE_KEY_CODE_TO_CODE[i] = -1 /* ScanCode.DependsOnKbLayout */;\n}\n(function () {\n    // See https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n    // See https://github.com/microsoft/node-native-keymap/blob/88c0b0e5/deps/chromium/keyboard_codes_win.h\n    const empty = '';\n    const mappings = [\n        // immutable, scanCode, scanCodeStr, keyCode, keyCodeStr, eventKeyCode, vkey, usUserSettingsLabel, generalUserSettingsLabel\n        [1, 0 /* ScanCode.None */, 'None', 0 /* KeyCode.Unknown */, 'unknown', 0, 'VK_UNKNOWN', empty, empty],\n        [1, 1 /* ScanCode.Hyper */, 'Hyper', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 2 /* ScanCode.Super */, 'Super', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 3 /* ScanCode.Fn */, 'Fn', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 4 /* ScanCode.FnLock */, 'FnLock', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 5 /* ScanCode.Suspend */, 'Suspend', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 6 /* ScanCode.Resume */, 'Resume', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 7 /* ScanCode.Turbo */, 'Turbo', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 8 /* ScanCode.Sleep */, 'Sleep', 0 /* KeyCode.Unknown */, empty, 0, 'VK_SLEEP', empty, empty],\n        [1, 9 /* ScanCode.WakeUp */, 'WakeUp', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 10 /* ScanCode.KeyA */, 'KeyA', 31 /* KeyCode.KeyA */, 'A', 65, 'VK_A', empty, empty],\n        [0, 11 /* ScanCode.KeyB */, 'KeyB', 32 /* KeyCode.KeyB */, 'B', 66, 'VK_B', empty, empty],\n        [0, 12 /* ScanCode.KeyC */, 'KeyC', 33 /* KeyCode.KeyC */, 'C', 67, 'VK_C', empty, empty],\n        [0, 13 /* ScanCode.KeyD */, 'KeyD', 34 /* KeyCode.KeyD */, 'D', 68, 'VK_D', empty, empty],\n        [0, 14 /* ScanCode.KeyE */, 'KeyE', 35 /* KeyCode.KeyE */, 'E', 69, 'VK_E', empty, empty],\n        [0, 15 /* ScanCode.KeyF */, 'KeyF', 36 /* KeyCode.KeyF */, 'F', 70, 'VK_F', empty, empty],\n        [0, 16 /* ScanCode.KeyG */, 'KeyG', 37 /* KeyCode.KeyG */, 'G', 71, 'VK_G', empty, empty],\n        [0, 17 /* ScanCode.KeyH */, 'KeyH', 38 /* KeyCode.KeyH */, 'H', 72, 'VK_H', empty, empty],\n        [0, 18 /* ScanCode.KeyI */, 'KeyI', 39 /* KeyCode.KeyI */, 'I', 73, 'VK_I', empty, empty],\n        [0, 19 /* ScanCode.KeyJ */, 'KeyJ', 40 /* KeyCode.KeyJ */, 'J', 74, 'VK_J', empty, empty],\n        [0, 20 /* ScanCode.KeyK */, 'KeyK', 41 /* KeyCode.KeyK */, 'K', 75, 'VK_K', empty, empty],\n        [0, 21 /* ScanCode.KeyL */, 'KeyL', 42 /* KeyCode.KeyL */, 'L', 76, 'VK_L', empty, empty],\n        [0, 22 /* ScanCode.KeyM */, 'KeyM', 43 /* KeyCode.KeyM */, 'M', 77, 'VK_M', empty, empty],\n        [0, 23 /* ScanCode.KeyN */, 'KeyN', 44 /* KeyCode.KeyN */, 'N', 78, 'VK_N', empty, empty],\n        [0, 24 /* ScanCode.KeyO */, 'KeyO', 45 /* KeyCode.KeyO */, 'O', 79, 'VK_O', empty, empty],\n        [0, 25 /* ScanCode.KeyP */, 'KeyP', 46 /* KeyCode.KeyP */, 'P', 80, 'VK_P', empty, empty],\n        [0, 26 /* ScanCode.KeyQ */, 'KeyQ', 47 /* KeyCode.KeyQ */, 'Q', 81, 'VK_Q', empty, empty],\n        [0, 27 /* ScanCode.KeyR */, 'KeyR', 48 /* KeyCode.KeyR */, 'R', 82, 'VK_R', empty, empty],\n        [0, 28 /* ScanCode.KeyS */, 'KeyS', 49 /* KeyCode.KeyS */, 'S', 83, 'VK_S', empty, empty],\n        [0, 29 /* ScanCode.KeyT */, 'KeyT', 50 /* KeyCode.KeyT */, 'T', 84, 'VK_T', empty, empty],\n        [0, 30 /* ScanCode.KeyU */, 'KeyU', 51 /* KeyCode.KeyU */, 'U', 85, 'VK_U', empty, empty],\n        [0, 31 /* ScanCode.KeyV */, 'KeyV', 52 /* KeyCode.KeyV */, 'V', 86, 'VK_V', empty, empty],\n        [0, 32 /* ScanCode.KeyW */, 'KeyW', 53 /* KeyCode.KeyW */, 'W', 87, 'VK_W', empty, empty],\n        [0, 33 /* ScanCode.KeyX */, 'KeyX', 54 /* KeyCode.KeyX */, 'X', 88, 'VK_X', empty, empty],\n        [0, 34 /* ScanCode.KeyY */, 'KeyY', 55 /* KeyCode.KeyY */, 'Y', 89, 'VK_Y', empty, empty],\n        [0, 35 /* ScanCode.KeyZ */, 'KeyZ', 56 /* KeyCode.KeyZ */, 'Z', 90, 'VK_Z', empty, empty],\n        [0, 36 /* ScanCode.Digit1 */, 'Digit1', 22 /* KeyCode.Digit1 */, '1', 49, 'VK_1', empty, empty],\n        [0, 37 /* ScanCode.Digit2 */, 'Digit2', 23 /* KeyCode.Digit2 */, '2', 50, 'VK_2', empty, empty],\n        [0, 38 /* ScanCode.Digit3 */, 'Digit3', 24 /* KeyCode.Digit3 */, '3', 51, 'VK_3', empty, empty],\n        [0, 39 /* ScanCode.Digit4 */, 'Digit4', 25 /* KeyCode.Digit4 */, '4', 52, 'VK_4', empty, empty],\n        [0, 40 /* ScanCode.Digit5 */, 'Digit5', 26 /* KeyCode.Digit5 */, '5', 53, 'VK_5', empty, empty],\n        [0, 41 /* ScanCode.Digit6 */, 'Digit6', 27 /* KeyCode.Digit6 */, '6', 54, 'VK_6', empty, empty],\n        [0, 42 /* ScanCode.Digit7 */, 'Digit7', 28 /* KeyCode.Digit7 */, '7', 55, 'VK_7', empty, empty],\n        [0, 43 /* ScanCode.Digit8 */, 'Digit8', 29 /* KeyCode.Digit8 */, '8', 56, 'VK_8', empty, empty],\n        [0, 44 /* ScanCode.Digit9 */, 'Digit9', 30 /* KeyCode.Digit9 */, '9', 57, 'VK_9', empty, empty],\n        [0, 45 /* ScanCode.Digit0 */, 'Digit0', 21 /* KeyCode.Digit0 */, '0', 48, 'VK_0', empty, empty],\n        [1, 46 /* ScanCode.Enter */, 'Enter', 3 /* KeyCode.Enter */, 'Enter', 13, 'VK_RETURN', empty, empty],\n        [1, 47 /* ScanCode.Escape */, 'Escape', 9 /* KeyCode.Escape */, 'Escape', 27, 'VK_ESCAPE', empty, empty],\n        [1, 48 /* ScanCode.Backspace */, 'Backspace', 1 /* KeyCode.Backspace */, 'Backspace', 8, 'VK_BACK', empty, empty],\n        [1, 49 /* ScanCode.Tab */, 'Tab', 2 /* KeyCode.Tab */, 'Tab', 9, 'VK_TAB', empty, empty],\n        [1, 50 /* ScanCode.Space */, 'Space', 10 /* KeyCode.Space */, 'Space', 32, 'VK_SPACE', empty, empty],\n        [0, 51 /* ScanCode.Minus */, 'Minus', 88 /* KeyCode.Minus */, '-', 189, 'VK_OEM_MINUS', '-', 'OEM_MINUS'],\n        [0, 52 /* ScanCode.Equal */, 'Equal', 86 /* KeyCode.Equal */, '=', 187, 'VK_OEM_PLUS', '=', 'OEM_PLUS'],\n        [0, 53 /* ScanCode.BracketLeft */, 'BracketLeft', 92 /* KeyCode.BracketLeft */, '[', 219, 'VK_OEM_4', '[', 'OEM_4'],\n        [0, 54 /* ScanCode.BracketRight */, 'BracketRight', 94 /* KeyCode.BracketRight */, ']', 221, 'VK_OEM_6', ']', 'OEM_6'],\n        [0, 55 /* ScanCode.Backslash */, 'Backslash', 93 /* KeyCode.Backslash */, '\\\\', 220, 'VK_OEM_5', '\\\\', 'OEM_5'],\n        [0, 56 /* ScanCode.IntlHash */, 'IntlHash', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty], // has been dropped from the w3c spec\n        [0, 57 /* ScanCode.Semicolon */, 'Semicolon', 85 /* KeyCode.Semicolon */, ';', 186, 'VK_OEM_1', ';', 'OEM_1'],\n        [0, 58 /* ScanCode.Quote */, 'Quote', 95 /* KeyCode.Quote */, '\\'', 222, 'VK_OEM_7', '\\'', 'OEM_7'],\n        [0, 59 /* ScanCode.Backquote */, 'Backquote', 91 /* KeyCode.Backquote */, '`', 192, 'VK_OEM_3', '`', 'OEM_3'],\n        [0, 60 /* ScanCode.Comma */, 'Comma', 87 /* KeyCode.Comma */, ',', 188, 'VK_OEM_COMMA', ',', 'OEM_COMMA'],\n        [0, 61 /* ScanCode.Period */, 'Period', 89 /* KeyCode.Period */, '.', 190, 'VK_OEM_PERIOD', '.', 'OEM_PERIOD'],\n        [0, 62 /* ScanCode.Slash */, 'Slash', 90 /* KeyCode.Slash */, '/', 191, 'VK_OEM_2', '/', 'OEM_2'],\n        [1, 63 /* ScanCode.CapsLock */, 'CapsLock', 8 /* KeyCode.CapsLock */, 'CapsLock', 20, 'VK_CAPITAL', empty, empty],\n        [1, 64 /* ScanCode.F1 */, 'F1', 59 /* KeyCode.F1 */, 'F1', 112, 'VK_F1', empty, empty],\n        [1, 65 /* ScanCode.F2 */, 'F2', 60 /* KeyCode.F2 */, 'F2', 113, 'VK_F2', empty, empty],\n        [1, 66 /* ScanCode.F3 */, 'F3', 61 /* KeyCode.F3 */, 'F3', 114, 'VK_F3', empty, empty],\n        [1, 67 /* ScanCode.F4 */, 'F4', 62 /* KeyCode.F4 */, 'F4', 115, 'VK_F4', empty, empty],\n        [1, 68 /* ScanCode.F5 */, 'F5', 63 /* KeyCode.F5 */, 'F5', 116, 'VK_F5', empty, empty],\n        [1, 69 /* ScanCode.F6 */, 'F6', 64 /* KeyCode.F6 */, 'F6', 117, 'VK_F6', empty, empty],\n        [1, 70 /* ScanCode.F7 */, 'F7', 65 /* KeyCode.F7 */, 'F7', 118, 'VK_F7', empty, empty],\n        [1, 71 /* ScanCode.F8 */, 'F8', 66 /* KeyCode.F8 */, 'F8', 119, 'VK_F8', empty, empty],\n        [1, 72 /* ScanCode.F9 */, 'F9', 67 /* KeyCode.F9 */, 'F9', 120, 'VK_F9', empty, empty],\n        [1, 73 /* ScanCode.F10 */, 'F10', 68 /* KeyCode.F10 */, 'F10', 121, 'VK_F10', empty, empty],\n        [1, 74 /* ScanCode.F11 */, 'F11', 69 /* KeyCode.F11 */, 'F11', 122, 'VK_F11', empty, empty],\n        [1, 75 /* ScanCode.F12 */, 'F12', 70 /* KeyCode.F12 */, 'F12', 123, 'VK_F12', empty, empty],\n        [1, 76 /* ScanCode.PrintScreen */, 'PrintScreen', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 77 /* ScanCode.ScrollLock */, 'ScrollLock', 84 /* KeyCode.ScrollLock */, 'ScrollLock', 145, 'VK_SCROLL', empty, empty],\n        [1, 78 /* ScanCode.Pause */, 'Pause', 7 /* KeyCode.PauseBreak */, 'PauseBreak', 19, 'VK_PAUSE', empty, empty],\n        [1, 79 /* ScanCode.Insert */, 'Insert', 19 /* KeyCode.Insert */, 'Insert', 45, 'VK_INSERT', empty, empty],\n        [1, 80 /* ScanCode.Home */, 'Home', 14 /* KeyCode.Home */, 'Home', 36, 'VK_HOME', empty, empty],\n        [1, 81 /* ScanCode.PageUp */, 'PageUp', 11 /* KeyCode.PageUp */, 'PageUp', 33, 'VK_PRIOR', empty, empty],\n        [1, 82 /* ScanCode.Delete */, 'Delete', 20 /* KeyCode.Delete */, 'Delete', 46, 'VK_DELETE', empty, empty],\n        [1, 83 /* ScanCode.End */, 'End', 13 /* KeyCode.End */, 'End', 35, 'VK_END', empty, empty],\n        [1, 84 /* ScanCode.PageDown */, 'PageDown', 12 /* KeyCode.PageDown */, 'PageDown', 34, 'VK_NEXT', empty, empty],\n        [1, 85 /* ScanCode.ArrowRight */, 'ArrowRight', 17 /* KeyCode.RightArrow */, 'RightArrow', 39, 'VK_RIGHT', 'Right', empty],\n        [1, 86 /* ScanCode.ArrowLeft */, 'ArrowLeft', 15 /* KeyCode.LeftArrow */, 'LeftArrow', 37, 'VK_LEFT', 'Left', empty],\n        [1, 87 /* ScanCode.ArrowDown */, 'ArrowDown', 18 /* KeyCode.DownArrow */, 'DownArrow', 40, 'VK_DOWN', 'Down', empty],\n        [1, 88 /* ScanCode.ArrowUp */, 'ArrowUp', 16 /* KeyCode.UpArrow */, 'UpArrow', 38, 'VK_UP', 'Up', empty],\n        [1, 89 /* ScanCode.NumLock */, 'NumLock', 83 /* KeyCode.NumLock */, 'NumLock', 144, 'VK_NUMLOCK', empty, empty],\n        [1, 90 /* ScanCode.NumpadDivide */, 'NumpadDivide', 113 /* KeyCode.NumpadDivide */, 'NumPad_Divide', 111, 'VK_DIVIDE', empty, empty],\n        [1, 91 /* ScanCode.NumpadMultiply */, 'NumpadMultiply', 108 /* KeyCode.NumpadMultiply */, 'NumPad_Multiply', 106, 'VK_MULTIPLY', empty, empty],\n        [1, 92 /* ScanCode.NumpadSubtract */, 'NumpadSubtract', 111 /* KeyCode.NumpadSubtract */, 'NumPad_Subtract', 109, 'VK_SUBTRACT', empty, empty],\n        [1, 93 /* ScanCode.NumpadAdd */, 'NumpadAdd', 109 /* KeyCode.NumpadAdd */, 'NumPad_Add', 107, 'VK_ADD', empty, empty],\n        [1, 94 /* ScanCode.NumpadEnter */, 'NumpadEnter', 3 /* KeyCode.Enter */, empty, 0, empty, empty, empty],\n        [1, 95 /* ScanCode.Numpad1 */, 'Numpad1', 99 /* KeyCode.Numpad1 */, 'NumPad1', 97, 'VK_NUMPAD1', empty, empty],\n        [1, 96 /* ScanCode.Numpad2 */, 'Numpad2', 100 /* KeyCode.Numpad2 */, 'NumPad2', 98, 'VK_NUMPAD2', empty, empty],\n        [1, 97 /* ScanCode.Numpad3 */, 'Numpad3', 101 /* KeyCode.Numpad3 */, 'NumPad3', 99, 'VK_NUMPAD3', empty, empty],\n        [1, 98 /* ScanCode.Numpad4 */, 'Numpad4', 102 /* KeyCode.Numpad4 */, 'NumPad4', 100, 'VK_NUMPAD4', empty, empty],\n        [1, 99 /* ScanCode.Numpad5 */, 'Numpad5', 103 /* KeyCode.Numpad5 */, 'NumPad5', 101, 'VK_NUMPAD5', empty, empty],\n        [1, 100 /* ScanCode.Numpad6 */, 'Numpad6', 104 /* KeyCode.Numpad6 */, 'NumPad6', 102, 'VK_NUMPAD6', empty, empty],\n        [1, 101 /* ScanCode.Numpad7 */, 'Numpad7', 105 /* KeyCode.Numpad7 */, 'NumPad7', 103, 'VK_NUMPAD7', empty, empty],\n        [1, 102 /* ScanCode.Numpad8 */, 'Numpad8', 106 /* KeyCode.Numpad8 */, 'NumPad8', 104, 'VK_NUMPAD8', empty, empty],\n        [1, 103 /* ScanCode.Numpad9 */, 'Numpad9', 107 /* KeyCode.Numpad9 */, 'NumPad9', 105, 'VK_NUMPAD9', empty, empty],\n        [1, 104 /* ScanCode.Numpad0 */, 'Numpad0', 98 /* KeyCode.Numpad0 */, 'NumPad0', 96, 'VK_NUMPAD0', empty, empty],\n        [1, 105 /* ScanCode.NumpadDecimal */, 'NumpadDecimal', 112 /* KeyCode.NumpadDecimal */, 'NumPad_Decimal', 110, 'VK_DECIMAL', empty, empty],\n        [0, 106 /* ScanCode.IntlBackslash */, 'IntlBackslash', 97 /* KeyCode.IntlBackslash */, 'OEM_102', 226, 'VK_OEM_102', empty, empty],\n        [1, 107 /* ScanCode.ContextMenu */, 'ContextMenu', 58 /* KeyCode.ContextMenu */, 'ContextMenu', 93, empty, empty, empty],\n        [1, 108 /* ScanCode.Power */, 'Power', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 109 /* ScanCode.NumpadEqual */, 'NumpadEqual', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 110 /* ScanCode.F13 */, 'F13', 71 /* KeyCode.F13 */, 'F13', 124, 'VK_F13', empty, empty],\n        [1, 111 /* ScanCode.F14 */, 'F14', 72 /* KeyCode.F14 */, 'F14', 125, 'VK_F14', empty, empty],\n        [1, 112 /* ScanCode.F15 */, 'F15', 73 /* KeyCode.F15 */, 'F15', 126, 'VK_F15', empty, empty],\n        [1, 113 /* ScanCode.F16 */, 'F16', 74 /* KeyCode.F16 */, 'F16', 127, 'VK_F16', empty, empty],\n        [1, 114 /* ScanCode.F17 */, 'F17', 75 /* KeyCode.F17 */, 'F17', 128, 'VK_F17', empty, empty],\n        [1, 115 /* ScanCode.F18 */, 'F18', 76 /* KeyCode.F18 */, 'F18', 129, 'VK_F18', empty, empty],\n        [1, 116 /* ScanCode.F19 */, 'F19', 77 /* KeyCode.F19 */, 'F19', 130, 'VK_F19', empty, empty],\n        [1, 117 /* ScanCode.F20 */, 'F20', 78 /* KeyCode.F20 */, 'F20', 131, 'VK_F20', empty, empty],\n        [1, 118 /* ScanCode.F21 */, 'F21', 79 /* KeyCode.F21 */, 'F21', 132, 'VK_F21', empty, empty],\n        [1, 119 /* ScanCode.F22 */, 'F22', 80 /* KeyCode.F22 */, 'F22', 133, 'VK_F22', empty, empty],\n        [1, 120 /* ScanCode.F23 */, 'F23', 81 /* KeyCode.F23 */, 'F23', 134, 'VK_F23', empty, empty],\n        [1, 121 /* ScanCode.F24 */, 'F24', 82 /* KeyCode.F24 */, 'F24', 135, 'VK_F24', empty, empty],\n        [1, 122 /* ScanCode.Open */, 'Open', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 123 /* ScanCode.Help */, 'Help', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 124 /* ScanCode.Select */, 'Select', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 125 /* ScanCode.Again */, 'Again', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 126 /* ScanCode.Undo */, 'Undo', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 127 /* ScanCode.Cut */, 'Cut', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 128 /* ScanCode.Copy */, 'Copy', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 129 /* ScanCode.Paste */, 'Paste', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 130 /* ScanCode.Find */, 'Find', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 131 /* ScanCode.AudioVolumeMute */, 'AudioVolumeMute', 117 /* KeyCode.AudioVolumeMute */, 'AudioVolumeMute', 173, 'VK_VOLUME_MUTE', empty, empty],\n        [1, 132 /* ScanCode.AudioVolumeUp */, 'AudioVolumeUp', 118 /* KeyCode.AudioVolumeUp */, 'AudioVolumeUp', 175, 'VK_VOLUME_UP', empty, empty],\n        [1, 133 /* ScanCode.AudioVolumeDown */, 'AudioVolumeDown', 119 /* KeyCode.AudioVolumeDown */, 'AudioVolumeDown', 174, 'VK_VOLUME_DOWN', empty, empty],\n        [1, 134 /* ScanCode.NumpadComma */, 'NumpadComma', 110 /* KeyCode.NUMPAD_SEPARATOR */, 'NumPad_Separator', 108, 'VK_SEPARATOR', empty, empty],\n        [0, 135 /* ScanCode.IntlRo */, 'IntlRo', 115 /* KeyCode.ABNT_C1 */, 'ABNT_C1', 193, 'VK_ABNT_C1', empty, empty],\n        [1, 136 /* ScanCode.KanaMode */, 'KanaMode', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 137 /* ScanCode.IntlYen */, 'IntlYen', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 138 /* ScanCode.Convert */, 'Convert', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 139 /* ScanCode.NonConvert */, 'NonConvert', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 140 /* ScanCode.Lang1 */, 'Lang1', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 141 /* ScanCode.Lang2 */, 'Lang2', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 142 /* ScanCode.Lang3 */, 'Lang3', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 143 /* ScanCode.Lang4 */, 'Lang4', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 144 /* ScanCode.Lang5 */, 'Lang5', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 145 /* ScanCode.Abort */, 'Abort', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 146 /* ScanCode.Props */, 'Props', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 147 /* ScanCode.NumpadParenLeft */, 'NumpadParenLeft', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 148 /* ScanCode.NumpadParenRight */, 'NumpadParenRight', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 149 /* ScanCode.NumpadBackspace */, 'NumpadBackspace', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 150 /* ScanCode.NumpadMemoryStore */, 'NumpadMemoryStore', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 151 /* ScanCode.NumpadMemoryRecall */, 'NumpadMemoryRecall', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 152 /* ScanCode.NumpadMemoryClear */, 'NumpadMemoryClear', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 153 /* ScanCode.NumpadMemoryAdd */, 'NumpadMemoryAdd', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 154 /* ScanCode.NumpadMemorySubtract */, 'NumpadMemorySubtract', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 155 /* ScanCode.NumpadClear */, 'NumpadClear', 131 /* KeyCode.Clear */, 'Clear', 12, 'VK_CLEAR', empty, empty],\n        [1, 156 /* ScanCode.NumpadClearEntry */, 'NumpadClearEntry', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 5 /* KeyCode.Ctrl */, 'Ctrl', 17, 'VK_CONTROL', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 4 /* KeyCode.Shift */, 'Shift', 16, 'VK_SHIFT', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 6 /* KeyCode.Alt */, 'Alt', 18, 'VK_MENU', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 57 /* KeyCode.Meta */, 'Meta', 91, 'VK_COMMAND', empty, empty],\n        [1, 157 /* ScanCode.ControlLeft */, 'ControlLeft', 5 /* KeyCode.Ctrl */, empty, 0, 'VK_LCONTROL', empty, empty],\n        [1, 158 /* ScanCode.ShiftLeft */, 'ShiftLeft', 4 /* KeyCode.Shift */, empty, 0, 'VK_LSHIFT', empty, empty],\n        [1, 159 /* ScanCode.AltLeft */, 'AltLeft', 6 /* KeyCode.Alt */, empty, 0, 'VK_LMENU', empty, empty],\n        [1, 160 /* ScanCode.MetaLeft */, 'MetaLeft', 57 /* KeyCode.Meta */, empty, 0, 'VK_LWIN', empty, empty],\n        [1, 161 /* ScanCode.ControlRight */, 'ControlRight', 5 /* KeyCode.Ctrl */, empty, 0, 'VK_RCONTROL', empty, empty],\n        [1, 162 /* ScanCode.ShiftRight */, 'ShiftRight', 4 /* KeyCode.Shift */, empty, 0, 'VK_RSHIFT', empty, empty],\n        [1, 163 /* ScanCode.AltRight */, 'AltRight', 6 /* KeyCode.Alt */, empty, 0, 'VK_RMENU', empty, empty],\n        [1, 164 /* ScanCode.MetaRight */, 'MetaRight', 57 /* KeyCode.Meta */, empty, 0, 'VK_RWIN', empty, empty],\n        [1, 165 /* ScanCode.BrightnessUp */, 'BrightnessUp', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 166 /* ScanCode.BrightnessDown */, 'BrightnessDown', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 167 /* ScanCode.MediaPlay */, 'MediaPlay', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 168 /* ScanCode.MediaRecord */, 'MediaRecord', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 169 /* ScanCode.MediaFastForward */, 'MediaFastForward', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 170 /* ScanCode.MediaRewind */, 'MediaRewind', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 171 /* ScanCode.MediaTrackNext */, 'MediaTrackNext', 124 /* KeyCode.MediaTrackNext */, 'MediaTrackNext', 176, 'VK_MEDIA_NEXT_TRACK', empty, empty],\n        [1, 172 /* ScanCode.MediaTrackPrevious */, 'MediaTrackPrevious', 125 /* KeyCode.MediaTrackPrevious */, 'MediaTrackPrevious', 177, 'VK_MEDIA_PREV_TRACK', empty, empty],\n        [1, 173 /* ScanCode.MediaStop */, 'MediaStop', 126 /* KeyCode.MediaStop */, 'MediaStop', 178, 'VK_MEDIA_STOP', empty, empty],\n        [1, 174 /* ScanCode.Eject */, 'Eject', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 175 /* ScanCode.MediaPlayPause */, 'MediaPlayPause', 127 /* KeyCode.MediaPlayPause */, 'MediaPlayPause', 179, 'VK_MEDIA_PLAY_PAUSE', empty, empty],\n        [1, 176 /* ScanCode.MediaSelect */, 'MediaSelect', 128 /* KeyCode.LaunchMediaPlayer */, 'LaunchMediaPlayer', 181, 'VK_MEDIA_LAUNCH_MEDIA_SELECT', empty, empty],\n        [1, 177 /* ScanCode.LaunchMail */, 'LaunchMail', 129 /* KeyCode.LaunchMail */, 'LaunchMail', 180, 'VK_MEDIA_LAUNCH_MAIL', empty, empty],\n        [1, 178 /* ScanCode.LaunchApp2 */, 'LaunchApp2', 130 /* KeyCode.LaunchApp2 */, 'LaunchApp2', 183, 'VK_MEDIA_LAUNCH_APP2', empty, empty],\n        [1, 179 /* ScanCode.LaunchApp1 */, 'LaunchApp1', 0 /* KeyCode.Unknown */, empty, 0, 'VK_MEDIA_LAUNCH_APP1', empty, empty],\n        [1, 180 /* ScanCode.SelectTask */, 'SelectTask', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 181 /* ScanCode.LaunchScreenSaver */, 'LaunchScreenSaver', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 182 /* ScanCode.BrowserSearch */, 'BrowserSearch', 120 /* KeyCode.BrowserSearch */, 'BrowserSearch', 170, 'VK_BROWSER_SEARCH', empty, empty],\n        [1, 183 /* ScanCode.BrowserHome */, 'BrowserHome', 121 /* KeyCode.BrowserHome */, 'BrowserHome', 172, 'VK_BROWSER_HOME', empty, empty],\n        [1, 184 /* ScanCode.BrowserBack */, 'BrowserBack', 122 /* KeyCode.BrowserBack */, 'BrowserBack', 166, 'VK_BROWSER_BACK', empty, empty],\n        [1, 185 /* ScanCode.BrowserForward */, 'BrowserForward', 123 /* KeyCode.BrowserForward */, 'BrowserForward', 167, 'VK_BROWSER_FORWARD', empty, empty],\n        [1, 186 /* ScanCode.BrowserStop */, 'BrowserStop', 0 /* KeyCode.Unknown */, empty, 0, 'VK_BROWSER_STOP', empty, empty],\n        [1, 187 /* ScanCode.BrowserRefresh */, 'BrowserRefresh', 0 /* KeyCode.Unknown */, empty, 0, 'VK_BROWSER_REFRESH', empty, empty],\n        [1, 188 /* ScanCode.BrowserFavorites */, 'BrowserFavorites', 0 /* KeyCode.Unknown */, empty, 0, 'VK_BROWSER_FAVORITES', empty, empty],\n        [1, 189 /* ScanCode.ZoomToggle */, 'ZoomToggle', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 190 /* ScanCode.MailReply */, 'MailReply', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 191 /* ScanCode.MailForward */, 'MailForward', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 192 /* ScanCode.MailSend */, 'MailSend', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        // See https://lists.w3.org/Archives/Public/www-dom/2010JulSep/att-0182/keyCode-spec.html\n        // If an Input Method Editor is processing key input and the event is keydown, return 229.\n        [1, 0 /* ScanCode.None */, empty, 114 /* KeyCode.KEY_IN_COMPOSITION */, 'KeyInComposition', 229, empty, empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 116 /* KeyCode.ABNT_C2 */, 'ABNT_C2', 194, 'VK_ABNT_C2', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 96 /* KeyCode.OEM_8 */, 'OEM_8', 223, 'VK_OEM_8', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_KANA', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_HANGUL', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_JUNJA', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_FINAL', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_HANJA', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_KANJI', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_CONVERT', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_NONCONVERT', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_ACCEPT', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_MODECHANGE', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_SELECT', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_PRINT', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_EXECUTE', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_SNAPSHOT', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_HELP', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_APPS', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_PROCESSKEY', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_PACKET', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_DBE_SBCSCHAR', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_DBE_DBCSCHAR', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_ATTN', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_CRSEL', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_EXSEL', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_EREOF', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_PLAY', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_ZOOM', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_NONAME', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_PA1', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_OEM_CLEAR', empty, empty],\n    ];\n    const seenKeyCode = [];\n    const seenScanCode = [];\n    for (const mapping of mappings) {\n        const [immutable, scanCode, scanCodeStr, keyCode, keyCodeStr, eventKeyCode, vkey, usUserSettingsLabel, generalUserSettingsLabel] = mapping;\n        if (!seenScanCode[scanCode]) {\n            seenScanCode[scanCode] = true;\n            scanCodeIntToStr[scanCode] = scanCodeStr;\n            scanCodeStrToInt[scanCodeStr] = scanCode;\n            scanCodeLowerCaseStrToInt[scanCodeStr.toLowerCase()] = scanCode;\n            if (immutable) {\n                IMMUTABLE_CODE_TO_KEY_CODE[scanCode] = keyCode;\n                if ((keyCode !== 0 /* KeyCode.Unknown */)\n                    && (keyCode !== 3 /* KeyCode.Enter */)\n                    && (keyCode !== 5 /* KeyCode.Ctrl */)\n                    && (keyCode !== 4 /* KeyCode.Shift */)\n                    && (keyCode !== 6 /* KeyCode.Alt */)\n                    && (keyCode !== 57 /* KeyCode.Meta */)) {\n                    IMMUTABLE_KEY_CODE_TO_CODE[keyCode] = scanCode;\n                }\n            }\n        }\n        if (!seenKeyCode[keyCode]) {\n            seenKeyCode[keyCode] = true;\n            if (!keyCodeStr) {\n                throw new Error(`String representation missing for key code ${keyCode} around scan code ${scanCodeStr}`);\n            }\n            uiMap.define(keyCode, keyCodeStr);\n            userSettingsUSMap.define(keyCode, usUserSettingsLabel || keyCodeStr);\n            userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel || usUserSettingsLabel || keyCodeStr);\n        }\n        if (eventKeyCode) {\n            EVENT_KEY_CODE_MAP[eventKeyCode] = keyCode;\n        }\n        if (vkey) {\n            NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE[vkey] = keyCode;\n        }\n    }\n    // Manually added due to the exclusion above (due to duplication with NumpadEnter)\n    IMMUTABLE_KEY_CODE_TO_CODE[3 /* KeyCode.Enter */] = 46 /* ScanCode.Enter */;\n})();\nexport var KeyCodeUtils;\n(function (KeyCodeUtils) {\n    function toString(keyCode) {\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toString = toString;\n    function fromString(key) {\n        return uiMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromString = fromString;\n    function toUserSettingsUS(keyCode) {\n        return userSettingsUSMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\n    function toUserSettingsGeneral(keyCode) {\n        return userSettingsGeneralMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\n    function fromUserSettings(key) {\n        return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromUserSettings = fromUserSettings;\n    function toElectronAccelerator(keyCode) {\n        if (keyCode >= 98 /* KeyCode.Numpad0 */ && keyCode <= 113 /* KeyCode.NumpadDivide */) {\n            // [Electron Accelerators] Electron is able to parse numpad keys, but unfortunately it\n            // renders them just as regular keys in menus. For example, num0 is rendered as \"0\",\n            // numdiv is rendered as \"/\", numsub is rendered as \"-\".\n            //\n            // This can lead to incredible confusion, as it makes numpad based keybindings indistinguishable\n            // from keybindings based on regular keys.\n            //\n            // We therefore need to fall back to custom rendering for numpad keys.\n            return null;\n        }\n        switch (keyCode) {\n            case 16 /* KeyCode.UpArrow */:\n                return 'Up';\n            case 18 /* KeyCode.DownArrow */:\n                return 'Down';\n            case 15 /* KeyCode.LeftArrow */:\n                return 'Left';\n            case 17 /* KeyCode.RightArrow */:\n                return 'Right';\n        }\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toElectronAccelerator = toElectronAccelerator;\n})(KeyCodeUtils || (KeyCodeUtils = {}));\nexport function KeyChord(firstPart, secondPart) {\n    const chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\n    return (firstPart | chordPart) >>> 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class Lazy {\n    constructor(executor) {\n        this.executor = executor;\n        this._didRun = false;\n    }\n    /**\n     * Get the wrapped value.\n     *\n     * This will force evaluation of the lazy value if it has not been resolved yet. Lazy values are only\n     * resolved once. `getValue` will re-throw exceptions that are hit while resolving the value\n     */\n    get value() {\n        if (!this._didRun) {\n            try {\n                this._value = this.executor();\n            }\n            catch (err) {\n                this._error = err;\n            }\n            finally {\n                this._didRun = true;\n            }\n        }\n        if (this._error) {\n            throw this._error;\n        }\n        return this._value;\n    }\n    /**\n     * Get the wrapped value without forcing evaluation.\n     */\n    get rawValue() { return this._value; }\n}\n","import { createSingleCallFunction } from './functional.js';\nimport { Iterable } from './iterator.js';\n// #region Disposable Tracking\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\nlet disposableTracker = null;\nexport function setDisposableTracker(tracker) {\n    disposableTracker = tracker;\n}\nif (TRACK_DISPOSABLES) {\n    const __is_disposable_tracked__ = '__is_disposable_tracked__';\n    setDisposableTracker(new class {\n        trackDisposable(x) {\n            const stack = new Error('Potentially leaked disposable').stack;\n            setTimeout(() => {\n                if (!x[__is_disposable_tracked__]) {\n                    console.log(stack);\n                }\n            }, 3000);\n        }\n        setParent(child, parent) {\n            if (child && child !== Disposable.None) {\n                try {\n                    child[__is_disposable_tracked__] = true;\n                }\n                catch {\n                    // noop\n                }\n            }\n        }\n        markAsDisposed(disposable) {\n            if (disposable && disposable !== Disposable.None) {\n                try {\n                    disposable[__is_disposable_tracked__] = true;\n                }\n                catch {\n                    // noop\n                }\n            }\n        }\n        markAsSingleton(disposable) { }\n    });\n}\nexport function trackDisposable(x) {\n    disposableTracker?.trackDisposable(x);\n    return x;\n}\nexport function markAsDisposed(disposable) {\n    disposableTracker?.markAsDisposed(disposable);\n}\nfunction setParentOfDisposable(child, parent) {\n    disposableTracker?.setParent(child, parent);\n}\nfunction setParentOfDisposables(children, parent) {\n    if (!disposableTracker) {\n        return;\n    }\n    for (const child of children) {\n        disposableTracker.setParent(child, parent);\n    }\n}\n/**\n * Indicates that the given object is a singleton which does not need to be disposed.\n*/\nexport function markAsSingleton(singleton) {\n    disposableTracker?.markAsSingleton(singleton);\n    return singleton;\n}\n/**\n * Check if `thing` is {@link IDisposable disposable}.\n */\nexport function isDisposable(thing) {\n    return typeof thing === 'object' && thing !== null && typeof thing.dispose === 'function' && thing.dispose.length === 0;\n}\nexport function dispose(arg) {\n    if (Iterable.is(arg)) {\n        const errors = [];\n        for (const d of arg) {\n            if (d) {\n                try {\n                    d.dispose();\n                }\n                catch (e) {\n                    errors.push(e);\n                }\n            }\n        }\n        if (errors.length === 1) {\n            throw errors[0];\n        }\n        else if (errors.length > 1) {\n            throw new AggregateError(errors, 'Encountered errors while disposing of store');\n        }\n        return Array.isArray(arg) ? [] : arg;\n    }\n    else if (arg) {\n        arg.dispose();\n        return arg;\n    }\n}\n/**\n * Combine multiple disposable values into a single {@link IDisposable}.\n */\nexport function combinedDisposable(...disposables) {\n    const parent = toDisposable(() => dispose(disposables));\n    setParentOfDisposables(disposables, parent);\n    return parent;\n}\n/**\n * Turn a function that implements dispose into an {@link IDisposable}.\n *\n * @param fn Clean up function, guaranteed to be called only **once**.\n */\nexport function toDisposable(fn) {\n    const self = trackDisposable({\n        dispose: createSingleCallFunction(() => {\n            markAsDisposed(self);\n            fn();\n        })\n    });\n    return self;\n}\n/**\n * Manages a collection of disposable values.\n *\n * This is the preferred way to manage multiple disposables. A `DisposableStore` is safer to work with than an\n * `IDisposable[]` as it considers edge cases, such as registering the same value multiple times or adding an item to a\n * store that has already been disposed of.\n */\nexport class DisposableStore {\n    static { this.DISABLE_DISPOSED_WARNING = false; }\n    constructor() {\n        this._toDispose = new Set();\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    /**\n     * Dispose of all registered disposables and mark this object as disposed.\n     *\n     * Any future disposables added to this object will be disposed of on `add`.\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        markAsDisposed(this);\n        this._isDisposed = true;\n        this.clear();\n    }\n    /**\n     * @return `true` if this object has been disposed of.\n     */\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    /**\n     * Dispose of all registered disposables but do not mark this object as disposed.\n     */\n    clear() {\n        if (this._toDispose.size === 0) {\n            return;\n        }\n        try {\n            dispose(this._toDispose);\n        }\n        finally {\n            this._toDispose.clear();\n        }\n    }\n    /**\n     * Add a new {@link IDisposable disposable} to the collection.\n     */\n    add(o) {\n        if (!o) {\n            return o;\n        }\n        if (o === this) {\n            throw new Error('Cannot register a disposable on itself!');\n        }\n        setParentOfDisposable(o, this);\n        if (this._isDisposed) {\n            if (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n                console.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n            }\n        }\n        else {\n            this._toDispose.add(o);\n        }\n        return o;\n    }\n    /**\n     * Deletes the value from the store, but does not dispose it.\n     */\n    deleteAndLeak(o) {\n        if (!o) {\n            return;\n        }\n        if (this._toDispose.has(o)) {\n            this._toDispose.delete(o);\n            setParentOfDisposable(o, null);\n        }\n    }\n}\n/**\n * Abstract base class for a {@link IDisposable disposable} object.\n *\n * Subclasses can {@linkcode _register} disposables that will be automatically cleaned up when this object is disposed of.\n */\nexport class Disposable {\n    /**\n     * A disposable that does nothing when it is disposed of.\n     *\n     * TODO: This should not be a static property.\n     */\n    static { this.None = Object.freeze({ dispose() { } }); }\n    constructor() {\n        this._store = new DisposableStore();\n        trackDisposable(this);\n        setParentOfDisposable(this._store, this);\n    }\n    dispose() {\n        markAsDisposed(this);\n        this._store.dispose();\n    }\n    /**\n     * Adds `o` to the collection of disposables managed by this object.\n     */\n    _register(o) {\n        if (o === this) {\n            throw new Error('Cannot register a disposable on itself!');\n        }\n        return this._store.add(o);\n    }\n}\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable {\n    constructor() {\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    get value() {\n        return this._isDisposed ? undefined : this._value;\n    }\n    set value(value) {\n        if (this._isDisposed || value === this._value) {\n            return;\n        }\n        this._value?.dispose();\n        if (value) {\n            setParentOfDisposable(value, this);\n        }\n        this._value = value;\n    }\n    /**\n     * Resets the stored value and disposed of the previously stored value.\n     */\n    clear() {\n        this.value = undefined;\n    }\n    dispose() {\n        this._isDisposed = true;\n        markAsDisposed(this);\n        this._value?.dispose();\n        this._value = undefined;\n    }\n}\nexport class RefCountedDisposable {\n    constructor(_disposable) {\n        this._disposable = _disposable;\n        this._counter = 1;\n    }\n    acquire() {\n        this._counter++;\n        return this;\n    }\n    release() {\n        if (--this._counter === 0) {\n            this._disposable.dispose();\n        }\n        return this;\n    }\n}\nexport class ImmortalReference {\n    constructor(object) {\n        this.object = object;\n    }\n    dispose() { }\n}\n/**\n * A map the manages the lifecycle of the values that it stores.\n */\nexport class DisposableMap {\n    constructor() {\n        this._store = new Map();\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    /**\n     * Disposes of all stored values and mark this object as disposed.\n     *\n     * Trying to use this object after it has been disposed of is an error.\n     */\n    dispose() {\n        markAsDisposed(this);\n        this._isDisposed = true;\n        this.clearAndDisposeAll();\n    }\n    /**\n     * Disposes of all stored values and clear the map, but DO NOT mark this object as disposed.\n     */\n    clearAndDisposeAll() {\n        if (!this._store.size) {\n            return;\n        }\n        try {\n            dispose(this._store.values());\n        }\n        finally {\n            this._store.clear();\n        }\n    }\n    get(key) {\n        return this._store.get(key);\n    }\n    set(key, value, skipDisposeOnOverwrite = false) {\n        if (this._isDisposed) {\n            console.warn(new Error('Trying to add a disposable to a DisposableMap that has already been disposed of. The added object will be leaked!').stack);\n        }\n        if (!skipDisposeOnOverwrite) {\n            this._store.get(key)?.dispose();\n        }\n        this._store.set(key, value);\n    }\n    /**\n     * Delete the value stored for `key` from this map and also dispose of it.\n     */\n    deleteAndDispose(key) {\n        this._store.get(key)?.dispose();\n        this._store.delete(key);\n    }\n    [Symbol.iterator]() {\n        return this._store[Symbol.iterator]();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nclass Node {\n    static { this.Undefined = new Node(undefined); }\n    constructor(element) {\n        this.element = element;\n        this.next = Node.Undefined;\n        this.prev = Node.Undefined;\n    }\n}\nexport class LinkedList {\n    constructor() {\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    get size() {\n        return this._size;\n    }\n    isEmpty() {\n        return this._first === Node.Undefined;\n    }\n    clear() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            const next = node.next;\n            node.prev = Node.Undefined;\n            node.next = Node.Undefined;\n            node = next;\n        }\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    unshift(element) {\n        return this._insert(element, false);\n    }\n    push(element) {\n        return this._insert(element, true);\n    }\n    _insert(element, atTheEnd) {\n        const newNode = new Node(element);\n        if (this._first === Node.Undefined) {\n            this._first = newNode;\n            this._last = newNode;\n        }\n        else if (atTheEnd) {\n            // push\n            const oldLast = this._last;\n            this._last = newNode;\n            newNode.prev = oldLast;\n            oldLast.next = newNode;\n        }\n        else {\n            // unshift\n            const oldFirst = this._first;\n            this._first = newNode;\n            newNode.next = oldFirst;\n            oldFirst.prev = newNode;\n        }\n        this._size += 1;\n        let didRemove = false;\n        return () => {\n            if (!didRemove) {\n                didRemove = true;\n                this._remove(newNode);\n            }\n        };\n    }\n    shift() {\n        if (this._first === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._first.element;\n            this._remove(this._first);\n            return res;\n        }\n    }\n    pop() {\n        if (this._last === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._last.element;\n            this._remove(this._last);\n            return res;\n        }\n    }\n    _remove(node) {\n        if (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n            // middle\n            const anchor = node.prev;\n            anchor.next = node.next;\n            node.next.prev = anchor;\n        }\n        else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n            // only node\n            this._first = Node.Undefined;\n            this._last = Node.Undefined;\n        }\n        else if (node.next === Node.Undefined) {\n            // last\n            this._last = this._last.prev;\n            this._last.next = Node.Undefined;\n        }\n        else if (node.prev === Node.Undefined) {\n            // first\n            this._first = this._first.next;\n            this._first.prev = Node.Undefined;\n        }\n        // done\n        this._size -= 1;\n    }\n    *[Symbol.iterator]() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            yield node.element;\n            node = node.next;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a, _b;\nclass ResourceMapEntry {\n    constructor(uri, value) {\n        this.uri = uri;\n        this.value = value;\n    }\n}\nfunction isEntries(arg) {\n    return Array.isArray(arg);\n}\nexport class ResourceMap {\n    static { this.defaultToKey = (resource) => resource.toString(); }\n    constructor(arg, toKey) {\n        this[_a] = 'ResourceMap';\n        if (arg instanceof ResourceMap) {\n            this.map = new Map(arg.map);\n            this.toKey = toKey ?? ResourceMap.defaultToKey;\n        }\n        else if (isEntries(arg)) {\n            this.map = new Map();\n            this.toKey = toKey ?? ResourceMap.defaultToKey;\n            for (const [resource, value] of arg) {\n                this.set(resource, value);\n            }\n        }\n        else {\n            this.map = new Map();\n            this.toKey = arg ?? ResourceMap.defaultToKey;\n        }\n    }\n    set(resource, value) {\n        this.map.set(this.toKey(resource), new ResourceMapEntry(resource, value));\n        return this;\n    }\n    get(resource) {\n        return this.map.get(this.toKey(resource))?.value;\n    }\n    has(resource) {\n        return this.map.has(this.toKey(resource));\n    }\n    get size() {\n        return this.map.size;\n    }\n    clear() {\n        this.map.clear();\n    }\n    delete(resource) {\n        return this.map.delete(this.toKey(resource));\n    }\n    forEach(clb, thisArg) {\n        if (typeof thisArg !== 'undefined') {\n            clb = clb.bind(thisArg);\n        }\n        for (const [_, entry] of this.map) {\n            clb(entry.value, entry.uri, this);\n        }\n    }\n    *values() {\n        for (const entry of this.map.values()) {\n            yield entry.value;\n        }\n    }\n    *keys() {\n        for (const entry of this.map.values()) {\n            yield entry.uri;\n        }\n    }\n    *entries() {\n        for (const entry of this.map.values()) {\n            yield [entry.uri, entry.value];\n        }\n    }\n    *[(_a = Symbol.toStringTag, Symbol.iterator)]() {\n        for (const [, entry] of this.map) {\n            yield [entry.uri, entry.value];\n        }\n    }\n}\nexport class LinkedMap {\n    constructor() {\n        this[_b] = 'LinkedMap';\n        this._map = new Map();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state = 0;\n    }\n    clear() {\n        this._map.clear();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state++;\n    }\n    isEmpty() {\n        return !this._head && !this._tail;\n    }\n    get size() {\n        return this._size;\n    }\n    get first() {\n        return this._head?.value;\n    }\n    get last() {\n        return this._tail?.value;\n    }\n    has(key) {\n        return this._map.has(key);\n    }\n    get(key, touch = 0 /* Touch.None */) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        if (touch !== 0 /* Touch.None */) {\n            this.touch(item, touch);\n        }\n        return item.value;\n    }\n    set(key, value, touch = 0 /* Touch.None */) {\n        let item = this._map.get(key);\n        if (item) {\n            item.value = value;\n            if (touch !== 0 /* Touch.None */) {\n                this.touch(item, touch);\n            }\n        }\n        else {\n            item = { key, value, next: undefined, previous: undefined };\n            switch (touch) {\n                case 0 /* Touch.None */:\n                    this.addItemLast(item);\n                    break;\n                case 1 /* Touch.AsOld */:\n                    this.addItemFirst(item);\n                    break;\n                case 2 /* Touch.AsNew */:\n                    this.addItemLast(item);\n                    break;\n                default:\n                    this.addItemLast(item);\n                    break;\n            }\n            this._map.set(key, item);\n            this._size++;\n        }\n        return this;\n    }\n    delete(key) {\n        return !!this.remove(key);\n    }\n    remove(key) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        this._map.delete(key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    shift() {\n        if (!this._head && !this._tail) {\n            return undefined;\n        }\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        const item = this._head;\n        this._map.delete(item.key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    forEach(callbackfn, thisArg) {\n        const state = this._state;\n        let current = this._head;\n        while (current) {\n            if (thisArg) {\n                callbackfn.bind(thisArg)(current.value, current.key, this);\n            }\n            else {\n                callbackfn(current.value, current.key, this);\n            }\n            if (this._state !== state) {\n                throw new Error(`LinkedMap got modified during iteration.`);\n            }\n            current = current.next;\n        }\n    }\n    keys() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: current.key, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    values() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: current.value, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    entries() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: [current.key, current.value], done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    [(_b = Symbol.toStringTag, Symbol.iterator)]() {\n        return this.entries();\n    }\n    trimOld(newSize) {\n        if (newSize >= this.size) {\n            return;\n        }\n        if (newSize === 0) {\n            this.clear();\n            return;\n        }\n        let current = this._head;\n        let currentSize = this.size;\n        while (current && currentSize > newSize) {\n            this._map.delete(current.key);\n            current = current.next;\n            currentSize--;\n        }\n        this._head = current;\n        this._size = currentSize;\n        if (current) {\n            current.previous = undefined;\n        }\n        this._state++;\n    }\n    trimNew(newSize) {\n        if (newSize >= this.size) {\n            return;\n        }\n        if (newSize === 0) {\n            this.clear();\n            return;\n        }\n        let current = this._tail;\n        let currentSize = this.size;\n        while (current && currentSize > newSize) {\n            this._map.delete(current.key);\n            current = current.previous;\n            currentSize--;\n        }\n        this._tail = current;\n        this._size = currentSize;\n        if (current) {\n            current.next = undefined;\n        }\n        this._state++;\n    }\n    addItemFirst(item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._tail = item;\n        }\n        else if (!this._head) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.next = this._head;\n            this._head.previous = item;\n        }\n        this._head = item;\n        this._state++;\n    }\n    addItemLast(item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._head = item;\n        }\n        else if (!this._tail) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.previous = this._tail;\n            this._tail.next = item;\n        }\n        this._tail = item;\n        this._state++;\n    }\n    removeItem(item) {\n        if (item === this._head && item === this._tail) {\n            this._head = undefined;\n            this._tail = undefined;\n        }\n        else if (item === this._head) {\n            // This can only happen if size === 1 which is handled\n            // by the case above.\n            if (!item.next) {\n                throw new Error('Invalid list');\n            }\n            item.next.previous = undefined;\n            this._head = item.next;\n        }\n        else if (item === this._tail) {\n            // This can only happen if size === 1 which is handled\n            // by the case above.\n            if (!item.previous) {\n                throw new Error('Invalid list');\n            }\n            item.previous.next = undefined;\n            this._tail = item.previous;\n        }\n        else {\n            const next = item.next;\n            const previous = item.previous;\n            if (!next || !previous) {\n                throw new Error('Invalid list');\n            }\n            next.previous = previous;\n            previous.next = next;\n        }\n        item.next = undefined;\n        item.previous = undefined;\n        this._state++;\n    }\n    touch(item, touch) {\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        if ((touch !== 1 /* Touch.AsOld */ && touch !== 2 /* Touch.AsNew */)) {\n            return;\n        }\n        if (touch === 1 /* Touch.AsOld */) {\n            if (item === this._head) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            // Unlink the item\n            if (item === this._tail) {\n                // previous must be defined since item was not head but is tail\n                // So there are more than on item in the map\n                previous.next = undefined;\n                this._tail = previous;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            // Insert the node at head\n            item.previous = undefined;\n            item.next = this._head;\n            this._head.previous = item;\n            this._head = item;\n            this._state++;\n        }\n        else if (touch === 2 /* Touch.AsNew */) {\n            if (item === this._tail) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            // Unlink the item.\n            if (item === this._head) {\n                // next must be defined since item was not tail but is head\n                // So there are more than on item in the map\n                next.previous = undefined;\n                this._head = next;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            item.next = undefined;\n            item.previous = this._tail;\n            this._tail.next = item;\n            this._tail = item;\n            this._state++;\n        }\n    }\n    toJSON() {\n        const data = [];\n        this.forEach((value, key) => {\n            data.push([key, value]);\n        });\n        return data;\n    }\n    fromJSON(data) {\n        this.clear();\n        for (const [key, value] of data) {\n            this.set(key, value);\n        }\n    }\n}\nclass Cache extends LinkedMap {\n    constructor(limit, ratio = 1) {\n        super();\n        this._limit = limit;\n        this._ratio = Math.min(Math.max(0, ratio), 1);\n    }\n    get limit() {\n        return this._limit;\n    }\n    set limit(limit) {\n        this._limit = limit;\n        this.checkTrim();\n    }\n    get(key, touch = 2 /* Touch.AsNew */) {\n        return super.get(key, touch);\n    }\n    peek(key) {\n        return super.get(key, 0 /* Touch.None */);\n    }\n    set(key, value) {\n        super.set(key, value, 2 /* Touch.AsNew */);\n        return this;\n    }\n    checkTrim() {\n        if (this.size > this._limit) {\n            this.trim(Math.round(this._limit * this._ratio));\n        }\n    }\n}\nexport class LRUCache extends Cache {\n    constructor(limit, ratio = 1) {\n        super(limit, ratio);\n    }\n    trim(newSize) {\n        this.trimOld(newSize);\n    }\n    set(key, value) {\n        super.set(key, value);\n        this.checkTrim();\n        return this;\n    }\n}\n/**\n * A map that allows access both by keys and values.\n * **NOTE**: values need to be unique.\n */\nexport class BidirectionalMap {\n    constructor(entries) {\n        this._m1 = new Map();\n        this._m2 = new Map();\n        if (entries) {\n            for (const [key, value] of entries) {\n                this.set(key, value);\n            }\n        }\n    }\n    clear() {\n        this._m1.clear();\n        this._m2.clear();\n    }\n    set(key, value) {\n        this._m1.set(key, value);\n        this._m2.set(value, key);\n    }\n    get(key) {\n        return this._m1.get(key);\n    }\n    getKey(value) {\n        return this._m2.get(value);\n    }\n    delete(key) {\n        const value = this._m1.get(key);\n        if (value === undefined) {\n            return false;\n        }\n        this._m1.delete(key);\n        this._m2.delete(value);\n        return true;\n    }\n    keys() {\n        return this._m1.keys();\n    }\n    values() {\n        return this._m1.values();\n    }\n}\nexport class SetMap {\n    constructor() {\n        this.map = new Map();\n    }\n    add(key, value) {\n        let values = this.map.get(key);\n        if (!values) {\n            values = new Set();\n            this.map.set(key, values);\n        }\n        values.add(value);\n    }\n    delete(key, value) {\n        const values = this.map.get(key);\n        if (!values) {\n            return;\n        }\n        values.delete(value);\n        if (values.size === 0) {\n            this.map.delete(key);\n        }\n    }\n    forEach(key, fn) {\n        const values = this.map.get(key);\n        if (!values) {\n            return;\n        }\n        values.forEach(fn);\n    }\n    get(key) {\n        const values = this.map.get(key);\n        if (!values) {\n            return new Set();\n        }\n        return values;\n    }\n}\n","export const Mimes = Object.freeze({\n    text: 'text/plain',\n    binary: 'application/octet-stream',\n    unknown: 'application/unknown',\n    markdown: 'text/markdown',\n    latex: 'text/latex',\n    uriList: 'text/uri-list',\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as errors from './errors.js';\nimport * as platform from './platform.js';\nimport { equalsIgnoreCase, startsWithIgnoreCase } from './strings.js';\nimport { URI } from './uri.js';\nimport * as paths from './path.js';\nexport var Schemas;\n(function (Schemas) {\n    /**\n     * A schema that is used for models that exist in memory\n     * only and that have no correspondence on a server or such.\n     */\n    Schemas.inMemory = 'inmemory';\n    /**\n     * A schema that is used for setting files\n     */\n    Schemas.vscode = 'vscode';\n    /**\n     * A schema that is used for internal private files\n     */\n    Schemas.internal = 'private';\n    /**\n     * A walk-through document.\n     */\n    Schemas.walkThrough = 'walkThrough';\n    /**\n     * An embedded code snippet.\n     */\n    Schemas.walkThroughSnippet = 'walkThroughSnippet';\n    Schemas.http = 'http';\n    Schemas.https = 'https';\n    Schemas.file = 'file';\n    Schemas.mailto = 'mailto';\n    Schemas.untitled = 'untitled';\n    Schemas.data = 'data';\n    Schemas.command = 'command';\n    Schemas.vscodeRemote = 'vscode-remote';\n    Schemas.vscodeRemoteResource = 'vscode-remote-resource';\n    Schemas.vscodeManagedRemoteResource = 'vscode-managed-remote-resource';\n    Schemas.vscodeUserData = 'vscode-userdata';\n    Schemas.vscodeCustomEditor = 'vscode-custom-editor';\n    Schemas.vscodeNotebookCell = 'vscode-notebook-cell';\n    Schemas.vscodeNotebookCellMetadata = 'vscode-notebook-cell-metadata';\n    Schemas.vscodeNotebookCellMetadataDiff = 'vscode-notebook-cell-metadata-diff';\n    Schemas.vscodeNotebookCellOutput = 'vscode-notebook-cell-output';\n    Schemas.vscodeNotebookCellOutputDiff = 'vscode-notebook-cell-output-diff';\n    Schemas.vscodeNotebookMetadata = 'vscode-notebook-metadata';\n    Schemas.vscodeInteractiveInput = 'vscode-interactive-input';\n    Schemas.vscodeSettings = 'vscode-settings';\n    Schemas.vscodeWorkspaceTrust = 'vscode-workspace-trust';\n    Schemas.vscodeTerminal = 'vscode-terminal';\n    /** Scheme used for code blocks in chat. */\n    Schemas.vscodeChatCodeBlock = 'vscode-chat-code-block';\n    /** Scheme used for LHS of code compare (aka diff) blocks in chat. */\n    Schemas.vscodeChatCodeCompareBlock = 'vscode-chat-code-compare-block';\n    /** Scheme used for the chat input editor. */\n    Schemas.vscodeChatSesssion = 'vscode-chat-editor';\n    /**\n     * Scheme used internally for webviews that aren't linked to a resource (i.e. not custom editors)\n     */\n    Schemas.webviewPanel = 'webview-panel';\n    /**\n     * Scheme used for loading the wrapper html and script in webviews.\n     */\n    Schemas.vscodeWebview = 'vscode-webview';\n    /**\n     * Scheme used for extension pages\n     */\n    Schemas.extension = 'extension';\n    /**\n     * Scheme used as a replacement of `file` scheme to load\n     * files with our custom protocol handler (desktop only).\n     */\n    Schemas.vscodeFileResource = 'vscode-file';\n    /**\n     * Scheme used for temporary resources\n     */\n    Schemas.tmp = 'tmp';\n    /**\n     * Scheme used vs live share\n     */\n    Schemas.vsls = 'vsls';\n    /**\n     * Scheme used for the Source Control commit input's text document\n     */\n    Schemas.vscodeSourceControl = 'vscode-scm';\n    /**\n     * Scheme used for input box for creating comments.\n     */\n    Schemas.commentsInput = 'comment';\n    /**\n     * Scheme used for special rendering of settings in the release notes\n     */\n    Schemas.codeSetting = 'code-setting';\n    /**\n     * Scheme used for output panel resources\n     */\n    Schemas.outputChannel = 'output';\n})(Schemas || (Schemas = {}));\nexport function matchesScheme(target, scheme) {\n    if (URI.isUri(target)) {\n        return equalsIgnoreCase(target.scheme, scheme);\n    }\n    else {\n        return startsWithIgnoreCase(target, scheme + ':');\n    }\n}\nexport function matchesSomeScheme(target, ...schemes) {\n    return schemes.some(scheme => matchesScheme(target, scheme));\n}\nexport const connectionTokenQueryName = 'tkn';\nclass RemoteAuthoritiesImpl {\n    constructor() {\n        this._hosts = Object.create(null);\n        this._ports = Object.create(null);\n        this._connectionTokens = Object.create(null);\n        this._preferredWebSchema = 'http';\n        this._delegate = null;\n        this._serverRootPath = '/';\n    }\n    setPreferredWebSchema(schema) {\n        this._preferredWebSchema = schema;\n    }\n    get _remoteResourcesPath() {\n        return paths.posix.join(this._serverRootPath, Schemas.vscodeRemoteResource);\n    }\n    rewrite(uri) {\n        if (this._delegate) {\n            try {\n                return this._delegate(uri);\n            }\n            catch (err) {\n                errors.onUnexpectedError(err);\n                return uri;\n            }\n        }\n        const authority = uri.authority;\n        let host = this._hosts[authority];\n        if (host && host.indexOf(':') !== -1 && host.indexOf('[') === -1) {\n            host = `[${host}]`;\n        }\n        const port = this._ports[authority];\n        const connectionToken = this._connectionTokens[authority];\n        let query = `path=${encodeURIComponent(uri.path)}`;\n        if (typeof connectionToken === 'string') {\n            query += `&${connectionTokenQueryName}=${encodeURIComponent(connectionToken)}`;\n        }\n        return URI.from({\n            scheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n            authority: `${host}:${port}`,\n            path: this._remoteResourcesPath,\n            query\n        });\n    }\n}\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\nexport const VSCODE_AUTHORITY = 'vscode-app';\nclass FileAccessImpl {\n    static { this.FALLBACK_AUTHORITY = VSCODE_AUTHORITY; }\n    /**\n     * Returns a URI to use in contexts where the browser is responsible\n     * for loading (e.g. fetch()) or when used within the DOM.\n     *\n     * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n     */\n    asBrowserUri(resourcePath) {\n        // ESM-comment-begin\n        // \t\tconst uri = this.toUri(resourcePath, require);\n        // ESM-comment-end\n        // ESM-uncomment-begin\n        const uri = this.toUri(resourcePath);\n        // ESM-uncomment-end\n        return this.uriToBrowserUri(uri);\n    }\n    /**\n     * Returns a URI to use in contexts where the browser is responsible\n     * for loading (e.g. fetch()) or when used within the DOM.\n     *\n     * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n     */\n    uriToBrowserUri(uri) {\n        // Handle remote URIs via `RemoteAuthorities`\n        if (uri.scheme === Schemas.vscodeRemote) {\n            return RemoteAuthorities.rewrite(uri);\n        }\n        // Convert to `vscode-file` resource..\n        if (\n        // ...only ever for `file` resources\n        uri.scheme === Schemas.file &&\n            (\n            // ...and we run in native environments\n            platform.isNative ||\n                // ...or web worker extensions on desktop\n                (platform.webWorkerOrigin === `${Schemas.vscodeFileResource}://${FileAccessImpl.FALLBACK_AUTHORITY}`))) {\n            return uri.with({\n                scheme: Schemas.vscodeFileResource,\n                // We need to provide an authority here so that it can serve\n                // as origin for network and loading matters in chromium.\n                // If the URI is not coming with an authority already, we\n                // add our own\n                authority: uri.authority || FileAccessImpl.FALLBACK_AUTHORITY,\n                query: null,\n                fragment: null\n            });\n        }\n        return uri;\n    }\n    toUri(uriOrModule, moduleIdToUrl) {\n        if (URI.isUri(uriOrModule)) {\n            return uriOrModule;\n        }\n        if (globalThis._VSCODE_FILE_ROOT) {\n            const rootUriOrPath = globalThis._VSCODE_FILE_ROOT;\n            // File URL (with scheme)\n            if (/^\\w[\\w\\d+.-]*:\\/\\//.test(rootUriOrPath)) {\n                return URI.joinPath(URI.parse(rootUriOrPath, true), uriOrModule);\n            }\n            // File Path (no scheme)\n            const modulePath = paths.join(rootUriOrPath, uriOrModule);\n            return URI.file(modulePath);\n        }\n        return URI.parse(moduleIdToUrl.toUrl(uriOrModule));\n    }\n}\nexport const FileAccess = new FileAccessImpl();\nexport var COI;\n(function (COI) {\n    const coiHeaders = new Map([\n        ['1', { 'Cross-Origin-Opener-Policy': 'same-origin' }],\n        ['2', { 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n        ['3', { 'Cross-Origin-Opener-Policy': 'same-origin', 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n    ]);\n    COI.CoopAndCoep = Object.freeze(coiHeaders.get('3'));\n    const coiSearchParamName = 'vscode-coi';\n    /**\n     * Extract desired headers from `vscode-coi` invocation\n     */\n    function getHeadersFromQuery(url) {\n        let params;\n        if (typeof url === 'string') {\n            params = new URL(url).searchParams;\n        }\n        else if (url instanceof URL) {\n            params = url.searchParams;\n        }\n        else if (URI.isUri(url)) {\n            params = new URL(url.toString(true)).searchParams;\n        }\n        const value = params?.get(coiSearchParamName);\n        if (!value) {\n            return undefined;\n        }\n        return coiHeaders.get(value);\n    }\n    COI.getHeadersFromQuery = getHeadersFromQuery;\n    /**\n     * Add the `vscode-coi` query attribute based on wanting `COOP` and `COEP`. Will be a noop when `crossOriginIsolated`\n     * isn't enabled the current context\n     */\n    function addSearchParam(urlOrSearch, coop, coep) {\n        if (!globalThis.crossOriginIsolated) {\n            // depends on the current context being COI\n            return;\n        }\n        const value = coop && coep ? '3' : coep ? '2' : '1';\n        if (urlOrSearch instanceof URLSearchParams) {\n            urlOrSearch.set(coiSearchParamName, value);\n        }\n        else {\n            urlOrSearch[coiSearchParamName] = value;\n        }\n    }\n    COI.addSearchParam = addSearchParam;\n})(COI || (COI = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\nexport class MovingAverage {\n    constructor() {\n        this._n = 1;\n        this._val = 0;\n    }\n    update(value) {\n        this._val = this._val + (value - this._val) / this._n;\n        this._n += 1;\n        return this._val;\n    }\n    get value() {\n        return this._val;\n    }\n}\nexport class SlidingWindowAverage {\n    constructor(size) {\n        this._n = 0;\n        this._val = 0;\n        this._values = [];\n        this._index = 0;\n        this._sum = 0;\n        this._values = new Array(size);\n        this._values.fill(0, 0, size);\n    }\n    update(value) {\n        const oldValue = this._values[this._index];\n        this._values[this._index] = value;\n        this._index = (this._index + 1) % this._values.length;\n        this._sum -= oldValue;\n        this._sum += value;\n        if (this._n < this._values.length) {\n            this._n += 1;\n        }\n        this._val = this._sum / this._n;\n        return this._val;\n    }\n    get value() {\n        return this._val;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isTypedArray, isObject, isUndefinedOrNull } from './types.js';\nexport function deepClone(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    if (obj instanceof RegExp) {\n        return obj;\n    }\n    const result = Array.isArray(obj) ? [] : {};\n    Object.entries(obj).forEach(([key, value]) => {\n        result[key] = value && typeof value === 'object' ? deepClone(value) : value;\n    });\n    return result;\n}\nexport function deepFreeze(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    const stack = [obj];\n    while (stack.length > 0) {\n        const obj = stack.shift();\n        Object.freeze(obj);\n        for (const key in obj) {\n            if (_hasOwnProperty.call(obj, key)) {\n                const prop = obj[key];\n                if (typeof prop === 'object' && !Object.isFrozen(prop) && !isTypedArray(prop)) {\n                    stack.push(prop);\n                }\n            }\n        }\n    }\n    return obj;\n}\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function cloneAndChange(obj, changer) {\n    return _cloneAndChange(obj, changer, new Set());\n}\nfunction _cloneAndChange(obj, changer, seen) {\n    if (isUndefinedOrNull(obj)) {\n        return obj;\n    }\n    const changed = changer(obj);\n    if (typeof changed !== 'undefined') {\n        return changed;\n    }\n    if (Array.isArray(obj)) {\n        const r1 = [];\n        for (const e of obj) {\n            r1.push(_cloneAndChange(e, changer, seen));\n        }\n        return r1;\n    }\n    if (isObject(obj)) {\n        if (seen.has(obj)) {\n            throw new Error('Cannot clone recursive data-structure');\n        }\n        seen.add(obj);\n        const r2 = {};\n        for (const i2 in obj) {\n            if (_hasOwnProperty.call(obj, i2)) {\n                r2[i2] = _cloneAndChange(obj[i2], changer, seen);\n            }\n        }\n        seen.delete(obj);\n        return r2;\n    }\n    return obj;\n}\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination, source, overwrite = true) {\n    if (!isObject(destination)) {\n        return source;\n    }\n    if (isObject(source)) {\n        Object.keys(source).forEach(key => {\n            if (key in destination) {\n                if (overwrite) {\n                    if (isObject(destination[key]) && isObject(source[key])) {\n                        mixin(destination[key], source[key], overwrite);\n                    }\n                    else {\n                        destination[key] = source[key];\n                    }\n                }\n            }\n            else {\n                destination[key] = source[key];\n            }\n        });\n    }\n    return destination;\n}\nexport function equals(one, other) {\n    if (one === other) {\n        return true;\n    }\n    if (one === null || one === undefined || other === null || other === undefined) {\n        return false;\n    }\n    if (typeof one !== typeof other) {\n        return false;\n    }\n    if (typeof one !== 'object') {\n        return false;\n    }\n    if ((Array.isArray(one)) !== (Array.isArray(other))) {\n        return false;\n    }\n    let i;\n    let key;\n    if (Array.isArray(one)) {\n        if (one.length !== other.length) {\n            return false;\n        }\n        for (i = 0; i < one.length; i++) {\n            if (!equals(one[i], other[i])) {\n                return false;\n            }\n        }\n    }\n    else {\n        const oneKeys = [];\n        for (key in one) {\n            oneKeys.push(key);\n        }\n        oneKeys.sort();\n        const otherKeys = [];\n        for (key in other) {\n            otherKeys.push(key);\n        }\n        otherKeys.sort();\n        if (!equals(oneKeys, otherKeys)) {\n            return false;\n        }\n        for (i = 0; i < oneKeys.length; i++) {\n            if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nexport function getAllPropertyNames(obj) {\n    let res = [];\n    while (Object.prototype !== obj) {\n        res = res.concat(Object.getOwnPropertyNames(obj));\n        obj = Object.getPrototypeOf(obj);\n    }\n    return res;\n}\nexport function getAllMethodNames(obj) {\n    const methods = [];\n    for (const prop of getAllPropertyNames(obj)) {\n        if (typeof obj[prop] === 'function') {\n            methods.push(prop);\n        }\n    }\n    return methods;\n}\nexport function createProxyObject(methodNames, invoke) {\n    const createProxyMethod = (method) => {\n        return function () {\n            const args = Array.prototype.slice.call(arguments, 0);\n            return invoke(method, args);\n        };\n    };\n    const result = {};\n    for (const methodName of methodNames) {\n        result[methodName] = createProxyMethod(methodName);\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { strictEquals } from '../equals.js';\nimport { ObservableValue } from './base.js';\nimport { DebugNameData } from './debugName.js';\nimport { LazyObservableValue } from './lazyObservableValue.js';\nexport function observableValueOpts(options, initialValue) {\n    if (options.lazy) {\n        return new LazyObservableValue(new DebugNameData(options.owner, options.debugName, undefined), initialValue, options.equalsFn ?? strictEquals);\n    }\n    return new ObservableValue(new DebugNameData(options.owner, options.debugName, undefined), initialValue, options.equalsFn ?? strictEquals);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { assertFn } from '../assert.js';\nimport { DisposableStore, markAsDisposed, toDisposable, trackDisposable } from '../lifecycle.js';\nimport { DebugNameData } from './debugName.js';\nimport { getLogger } from './logging.js';\n/**\n * Runs immediately and whenever a transaction ends and an observed observable changed.\n * {@link fn} should start with a JS Doc using `@description` to name the autorun.\n */\nexport function autorun(fn) {\n    return new AutorunObserver(new DebugNameData(undefined, undefined, fn), fn, undefined, undefined);\n}\n/**\n * Runs immediately and whenever a transaction ends and an observed observable changed.\n * {@link fn} should start with a JS Doc using `@description` to name the autorun.\n */\nexport function autorunOpts(options, fn) {\n    return new AutorunObserver(new DebugNameData(options.owner, options.debugName, options.debugReferenceFn ?? fn), fn, undefined, undefined);\n}\n/**\n * Runs immediately and whenever a transaction ends and an observed observable changed.\n * {@link fn} should start with a JS Doc using `@description` to name the autorun.\n *\n * Use `createEmptyChangeSummary` to create a \"change summary\" that can collect the changes.\n * Use `handleChange` to add a reported change to the change summary.\n * The run function is given the last change summary.\n * The change summary is discarded after the run function was called.\n *\n * @see autorun\n */\nexport function autorunHandleChanges(options, fn) {\n    return new AutorunObserver(new DebugNameData(options.owner, options.debugName, options.debugReferenceFn ?? fn), fn, options.createEmptyChangeSummary, options.handleChange);\n}\n/**\n * @see autorunHandleChanges (but with a disposable store that is cleared before the next run or on dispose)\n */\nexport function autorunWithStoreHandleChanges(options, fn) {\n    const store = new DisposableStore();\n    const disposable = autorunHandleChanges({\n        owner: options.owner,\n        debugName: options.debugName,\n        debugReferenceFn: options.debugReferenceFn ?? fn,\n        createEmptyChangeSummary: options.createEmptyChangeSummary,\n        handleChange: options.handleChange,\n    }, (reader, changeSummary) => {\n        store.clear();\n        fn(reader, changeSummary, store);\n    });\n    return toDisposable(() => {\n        disposable.dispose();\n        store.dispose();\n    });\n}\n/**\n * @see autorun (but with a disposable store that is cleared before the next run or on dispose)\n */\nexport function autorunWithStore(fn) {\n    const store = new DisposableStore();\n    const disposable = autorunOpts({\n        owner: undefined,\n        debugName: undefined,\n        debugReferenceFn: fn,\n    }, reader => {\n        store.clear();\n        fn(reader, store);\n    });\n    return toDisposable(() => {\n        disposable.dispose();\n        store.dispose();\n    });\n}\nexport class AutorunObserver {\n    get debugName() {\n        return this._debugNameData.getDebugName(this) ?? '(anonymous)';\n    }\n    constructor(_debugNameData, _runFn, createChangeSummary, _handleChange) {\n        this._debugNameData = _debugNameData;\n        this._runFn = _runFn;\n        this.createChangeSummary = createChangeSummary;\n        this._handleChange = _handleChange;\n        this.state = 2 /* AutorunState.stale */;\n        this.updateCount = 0;\n        this.disposed = false;\n        this.dependencies = new Set();\n        this.dependenciesToBeRemoved = new Set();\n        this.changeSummary = this.createChangeSummary?.();\n        getLogger()?.handleAutorunCreated(this);\n        this._runIfNeeded();\n        trackDisposable(this);\n    }\n    dispose() {\n        this.disposed = true;\n        for (const o of this.dependencies) {\n            o.removeObserver(this);\n        }\n        this.dependencies.clear();\n        markAsDisposed(this);\n    }\n    _runIfNeeded() {\n        if (this.state === 3 /* AutorunState.upToDate */) {\n            return;\n        }\n        const emptySet = this.dependenciesToBeRemoved;\n        this.dependenciesToBeRemoved = this.dependencies;\n        this.dependencies = emptySet;\n        this.state = 3 /* AutorunState.upToDate */;\n        const isDisposed = this.disposed;\n        try {\n            if (!isDisposed) {\n                getLogger()?.handleAutorunTriggered(this);\n                const changeSummary = this.changeSummary;\n                this.changeSummary = this.createChangeSummary?.();\n                this._runFn(this, changeSummary);\n            }\n        }\n        finally {\n            if (!isDisposed) {\n                getLogger()?.handleAutorunFinished(this);\n            }\n            // We don't want our observed observables to think that they are (not even temporarily) not being observed.\n            // Thus, we only unsubscribe from observables that are definitely not read anymore.\n            for (const o of this.dependenciesToBeRemoved) {\n                o.removeObserver(this);\n            }\n            this.dependenciesToBeRemoved.clear();\n        }\n    }\n    toString() {\n        return `Autorun<${this.debugName}>`;\n    }\n    // IObserver implementation\n    beginUpdate() {\n        if (this.state === 3 /* AutorunState.upToDate */) {\n            this.state = 1 /* AutorunState.dependenciesMightHaveChanged */;\n        }\n        this.updateCount++;\n    }\n    endUpdate() {\n        if (this.updateCount === 1) {\n            do {\n                if (this.state === 1 /* AutorunState.dependenciesMightHaveChanged */) {\n                    this.state = 3 /* AutorunState.upToDate */;\n                    for (const d of this.dependencies) {\n                        d.reportChanges();\n                        if (this.state === 2 /* AutorunState.stale */) {\n                            // The other dependencies will refresh on demand\n                            break;\n                        }\n                    }\n                }\n                this._runIfNeeded();\n            } while (this.state !== 3 /* AutorunState.upToDate */);\n        }\n        this.updateCount--;\n        assertFn(() => this.updateCount >= 0);\n    }\n    handlePossibleChange(observable) {\n        if (this.state === 3 /* AutorunState.upToDate */ && this.dependencies.has(observable) && !this.dependenciesToBeRemoved.has(observable)) {\n            this.state = 1 /* AutorunState.dependenciesMightHaveChanged */;\n        }\n    }\n    handleChange(observable, change) {\n        if (this.dependencies.has(observable) && !this.dependenciesToBeRemoved.has(observable)) {\n            const shouldReact = this._handleChange ? this._handleChange({\n                changedObservable: observable,\n                change,\n                didChange: (o) => o === observable,\n            }, this.changeSummary) : true;\n            if (shouldReact) {\n                this.state = 2 /* AutorunState.stale */;\n            }\n        }\n    }\n    // IReader implementation\n    readObservable(observable) {\n        // In case the run action disposes the autorun\n        if (this.disposed) {\n            return observable.get();\n        }\n        observable.addObserver(this);\n        const value = observable.get();\n        this.dependencies.add(observable);\n        this.dependenciesToBeRemoved.delete(observable);\n        return value;\n    }\n}\n(function (autorun) {\n    autorun.Observer = AutorunObserver;\n})(autorun || (autorun = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { strictEquals } from '../equals.js';\nimport { DebugNameData, getFunctionName } from './debugName.js';\nimport { getLogger } from './logging.js';\nlet _recomputeInitiallyAndOnChange;\nexport function _setRecomputeInitiallyAndOnChange(recomputeInitiallyAndOnChange) {\n    _recomputeInitiallyAndOnChange = recomputeInitiallyAndOnChange;\n}\nlet _keepObserved;\nexport function _setKeepObserved(keepObserved) {\n    _keepObserved = keepObserved;\n}\nlet _derived;\n/**\n * @internal\n * This is to allow splitting files.\n*/\nexport function _setDerivedOpts(derived) {\n    _derived = derived;\n}\nexport class ConvenientObservable {\n    get TChange() { return null; }\n    reportChanges() {\n        this.get();\n    }\n    /** @sealed */\n    read(reader) {\n        if (reader) {\n            return reader.readObservable(this);\n        }\n        else {\n            return this.get();\n        }\n    }\n    map(fnOrOwner, fnOrUndefined) {\n        const owner = fnOrUndefined === undefined ? undefined : fnOrOwner;\n        const fn = fnOrUndefined === undefined ? fnOrOwner : fnOrUndefined;\n        return _derived({\n            owner,\n            debugName: () => {\n                const name = getFunctionName(fn);\n                if (name !== undefined) {\n                    return name;\n                }\n                // regexp to match `x => x.y` or `x => x?.y` where x and y can be arbitrary identifiers (uses backref):\n                const regexp = /^\\s*\\(?\\s*([a-zA-Z_$][a-zA-Z_$0-9]*)\\s*\\)?\\s*=>\\s*\\1(?:\\??)\\.([a-zA-Z_$][a-zA-Z_$0-9]*)\\s*$/;\n                const match = regexp.exec(fn.toString());\n                if (match) {\n                    return `${this.debugName}.${match[2]}`;\n                }\n                if (!owner) {\n                    return `${this.debugName} (mapped)`;\n                }\n                return undefined;\n            },\n            debugReferenceFn: fn,\n        }, (reader) => fn(this.read(reader), reader));\n    }\n    /**\n     * @sealed\n     * Converts an observable of an observable value into a direct observable of the value.\n    */\n    flatten() {\n        return _derived({\n            owner: undefined,\n            debugName: () => `${this.debugName} (flattened)`,\n        }, (reader) => this.read(reader).read(reader));\n    }\n    recomputeInitiallyAndOnChange(store, handleValue) {\n        store.add(_recomputeInitiallyAndOnChange(this, handleValue));\n        return this;\n    }\n    /**\n     * Ensures that this observable is observed. This keeps the cache alive.\n     * However, in case of deriveds, it does not force eager evaluation (only when the value is read/get).\n     * Use `recomputeInitiallyAndOnChange` for eager evaluation.\n     */\n    keepObserved(store) {\n        store.add(_keepObserved(this));\n        return this;\n    }\n}\nexport class BaseObservable extends ConvenientObservable {\n    constructor() {\n        super(...arguments);\n        this.observers = new Set();\n    }\n    addObserver(observer) {\n        const len = this.observers.size;\n        this.observers.add(observer);\n        if (len === 0) {\n            this.onFirstObserverAdded();\n        }\n    }\n    removeObserver(observer) {\n        const deleted = this.observers.delete(observer);\n        if (deleted && this.observers.size === 0) {\n            this.onLastObserverRemoved();\n        }\n    }\n    onFirstObserverAdded() { }\n    onLastObserverRemoved() { }\n}\n/**\n * Starts a transaction in which many observables can be changed at once.\n * {@link fn} should start with a JS Doc using `@description` to give the transaction a debug name.\n * Reaction run on demand or when the transaction ends.\n */\nexport function transaction(fn, getDebugName) {\n    const tx = new TransactionImpl(fn, getDebugName);\n    try {\n        fn(tx);\n    }\n    finally {\n        tx.finish();\n    }\n}\nlet _globalTransaction = undefined;\nexport function globalTransaction(fn) {\n    if (_globalTransaction) {\n        fn(_globalTransaction);\n    }\n    else {\n        const tx = new TransactionImpl(fn, undefined);\n        _globalTransaction = tx;\n        try {\n            fn(tx);\n        }\n        finally {\n            tx.finish(); // During finish, more actions might be added to the transaction.\n            // Which is why we only clear the global transaction after finish.\n            _globalTransaction = undefined;\n        }\n    }\n}\nexport async function asyncTransaction(fn, getDebugName) {\n    const tx = new TransactionImpl(fn, getDebugName);\n    try {\n        await fn(tx);\n    }\n    finally {\n        tx.finish();\n    }\n}\n/**\n * Allows to chain transactions.\n */\nexport function subtransaction(tx, fn, getDebugName) {\n    if (!tx) {\n        transaction(fn, getDebugName);\n    }\n    else {\n        fn(tx);\n    }\n}\nexport class TransactionImpl {\n    constructor(_fn, _getDebugName) {\n        this._fn = _fn;\n        this._getDebugName = _getDebugName;\n        this.updatingObservers = [];\n        getLogger()?.handleBeginTransaction(this);\n    }\n    getDebugName() {\n        if (this._getDebugName) {\n            return this._getDebugName();\n        }\n        return getFunctionName(this._fn);\n    }\n    updateObserver(observer, observable) {\n        // When this gets called while finish is active, they will still get considered\n        this.updatingObservers.push({ observer, observable });\n        observer.beginUpdate(observable);\n    }\n    finish() {\n        const updatingObservers = this.updatingObservers;\n        for (let i = 0; i < updatingObservers.length; i++) {\n            const { observer, observable } = updatingObservers[i];\n            observer.endUpdate(observable);\n        }\n        // Prevent anyone from updating observers from now on.\n        this.updatingObservers = null;\n        getLogger()?.handleEndTransaction();\n    }\n}\nexport function observableValue(nameOrOwner, initialValue) {\n    let debugNameData;\n    if (typeof nameOrOwner === 'string') {\n        debugNameData = new DebugNameData(undefined, nameOrOwner, undefined);\n    }\n    else {\n        debugNameData = new DebugNameData(nameOrOwner, undefined, undefined);\n    }\n    return new ObservableValue(debugNameData, initialValue, strictEquals);\n}\nexport class ObservableValue extends BaseObservable {\n    get debugName() {\n        return this._debugNameData.getDebugName(this) ?? 'ObservableValue';\n    }\n    constructor(_debugNameData, initialValue, _equalityComparator) {\n        super();\n        this._debugNameData = _debugNameData;\n        this._equalityComparator = _equalityComparator;\n        this._value = initialValue;\n    }\n    get() {\n        return this._value;\n    }\n    set(value, tx, change) {\n        if (change === undefined && this._equalityComparator(this._value, value)) {\n            return;\n        }\n        let _tx;\n        if (!tx) {\n            tx = _tx = new TransactionImpl(() => { }, () => `Setting ${this.debugName}`);\n        }\n        try {\n            const oldValue = this._value;\n            this._setValue(value);\n            getLogger()?.handleObservableChanged(this, { oldValue, newValue: value, change, didChange: true, hadValue: true });\n            for (const observer of this.observers) {\n                tx.updateObserver(observer, this);\n                observer.handleChange(this, change);\n            }\n        }\n        finally {\n            if (_tx) {\n                _tx.finish();\n            }\n        }\n    }\n    toString() {\n        return `${this.debugName}: ${this._value}`;\n    }\n    _setValue(newValue) {\n        this._value = newValue;\n    }\n}\n/**\n * A disposable observable. When disposed, its value is also disposed.\n * When a new value is set, the previous value is disposed.\n */\nexport function disposableObservableValue(nameOrOwner, initialValue) {\n    let debugNameData;\n    if (typeof nameOrOwner === 'string') {\n        debugNameData = new DebugNameData(undefined, nameOrOwner, undefined);\n    }\n    else {\n        debugNameData = new DebugNameData(nameOrOwner, undefined, undefined);\n    }\n    return new DisposableObservableValue(debugNameData, initialValue, strictEquals);\n}\nexport class DisposableObservableValue extends ObservableValue {\n    _setValue(newValue) {\n        if (this._value === newValue) {\n            return;\n        }\n        if (this._value) {\n            this._value.dispose();\n        }\n        this._value = newValue;\n    }\n    dispose() {\n        this._value?.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class DebugNameData {\n    constructor(owner, debugNameSource, referenceFn) {\n        this.owner = owner;\n        this.debugNameSource = debugNameSource;\n        this.referenceFn = referenceFn;\n    }\n    getDebugName(target) {\n        return getDebugName(target, this);\n    }\n}\nconst countPerName = new Map();\nconst cachedDebugName = new WeakMap();\nexport function getDebugName(target, data) {\n    const cached = cachedDebugName.get(target);\n    if (cached) {\n        return cached;\n    }\n    const dbgName = computeDebugName(target, data);\n    if (dbgName) {\n        let count = countPerName.get(dbgName) ?? 0;\n        count++;\n        countPerName.set(dbgName, count);\n        const result = count === 1 ? dbgName : `${dbgName}#${count}`;\n        cachedDebugName.set(target, result);\n        return result;\n    }\n    return undefined;\n}\nfunction computeDebugName(self, data) {\n    const cached = cachedDebugName.get(self);\n    if (cached) {\n        return cached;\n    }\n    const ownerStr = data.owner ? formatOwner(data.owner) + `.` : '';\n    let result;\n    const debugNameSource = data.debugNameSource;\n    if (debugNameSource !== undefined) {\n        if (typeof debugNameSource === 'function') {\n            result = debugNameSource();\n            if (result !== undefined) {\n                return ownerStr + result;\n            }\n        }\n        else {\n            return ownerStr + debugNameSource;\n        }\n    }\n    const referenceFn = data.referenceFn;\n    if (referenceFn !== undefined) {\n        result = getFunctionName(referenceFn);\n        if (result !== undefined) {\n            return ownerStr + result;\n        }\n    }\n    if (data.owner !== undefined) {\n        const key = findKey(data.owner, self);\n        if (key !== undefined) {\n            return ownerStr + key;\n        }\n    }\n    return undefined;\n}\nfunction findKey(obj, value) {\n    for (const key in obj) {\n        if (obj[key] === value) {\n            return key;\n        }\n    }\n    return undefined;\n}\nconst countPerClassName = new Map();\nconst ownerId = new WeakMap();\nfunction formatOwner(owner) {\n    const id = ownerId.get(owner);\n    if (id) {\n        return id;\n    }\n    const className = getClassName(owner);\n    let count = countPerClassName.get(className) ?? 0;\n    count++;\n    countPerClassName.set(className, count);\n    const result = count === 1 ? className : `${className}#${count}`;\n    ownerId.set(owner, result);\n    return result;\n}\nfunction getClassName(obj) {\n    const ctor = obj.constructor;\n    if (ctor) {\n        return ctor.name;\n    }\n    return 'Object';\n}\nexport function getFunctionName(fn) {\n    const fnSrc = fn.toString();\n    // Pattern: /** @description ... */\n    const regexp = /\\/\\*\\*\\s*@description\\s*([^*]*)\\*\\//;\n    const match = regexp.exec(fnSrc);\n    const result = match ? match[1] : undefined;\n    return result?.trim();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { assertFn } from '../assert.js';\nimport { strictEquals } from '../equals.js';\nimport { DisposableStore } from '../lifecycle.js';\nimport { BaseObservable, _setDerivedOpts } from './base.js';\nimport { DebugNameData } from './debugName.js';\nimport { getLogger } from './logging.js';\nexport function derived(computeFnOrOwner, computeFn) {\n    if (computeFn !== undefined) {\n        return new Derived(new DebugNameData(computeFnOrOwner, undefined, computeFn), computeFn, undefined, undefined, undefined, strictEquals);\n    }\n    return new Derived(new DebugNameData(undefined, undefined, computeFnOrOwner), computeFnOrOwner, undefined, undefined, undefined, strictEquals);\n}\nexport function derivedWithSetter(owner, computeFn, setter) {\n    return new DerivedWithSetter(new DebugNameData(owner, undefined, computeFn), computeFn, undefined, undefined, undefined, strictEquals, setter);\n}\nexport function derivedOpts(options, computeFn) {\n    return new Derived(new DebugNameData(options.owner, options.debugName, options.debugReferenceFn), computeFn, undefined, undefined, options.onLastObserverRemoved, options.equalsFn ?? strictEquals);\n}\n_setDerivedOpts(derivedOpts);\n/**\n * Represents an observable that is derived from other observables.\n * The value is only recomputed when absolutely needed.\n *\n * {@link computeFn} should start with a JS Doc using `@description` to name the derived.\n *\n * Use `createEmptyChangeSummary` to create a \"change summary\" that can collect the changes.\n * Use `handleChange` to add a reported change to the change summary.\n * The compute function is given the last change summary.\n * The change summary is discarded after the compute function was called.\n *\n * @see derived\n */\nexport function derivedHandleChanges(options, computeFn) {\n    return new Derived(new DebugNameData(options.owner, options.debugName, undefined), computeFn, options.createEmptyChangeSummary, options.handleChange, undefined, options.equalityComparer ?? strictEquals);\n}\nexport function derivedWithStore(computeFnOrOwner, computeFnOrUndefined) {\n    let computeFn;\n    let owner;\n    if (computeFnOrUndefined === undefined) {\n        computeFn = computeFnOrOwner;\n        owner = undefined;\n    }\n    else {\n        owner = computeFnOrOwner;\n        computeFn = computeFnOrUndefined;\n    }\n    const store = new DisposableStore();\n    return new Derived(new DebugNameData(owner, undefined, computeFn), r => {\n        store.clear();\n        return computeFn(r, store);\n    }, undefined, undefined, () => store.dispose(), strictEquals);\n}\nexport function derivedDisposable(computeFnOrOwner, computeFnOrUndefined) {\n    let computeFn;\n    let owner;\n    if (computeFnOrUndefined === undefined) {\n        computeFn = computeFnOrOwner;\n        owner = undefined;\n    }\n    else {\n        owner = computeFnOrOwner;\n        computeFn = computeFnOrUndefined;\n    }\n    let store = undefined;\n    return new Derived(new DebugNameData(owner, undefined, computeFn), r => {\n        if (!store) {\n            store = new DisposableStore();\n        }\n        else {\n            store.clear();\n        }\n        const result = computeFn(r);\n        if (result) {\n            store.add(result);\n        }\n        return result;\n    }, undefined, undefined, () => {\n        if (store) {\n            store.dispose();\n            store = undefined;\n        }\n    }, strictEquals);\n}\nexport class Derived extends BaseObservable {\n    get debugName() {\n        return this._debugNameData.getDebugName(this) ?? '(anonymous)';\n    }\n    constructor(_debugNameData, _computeFn, createChangeSummary, _handleChange, _handleLastObserverRemoved = undefined, _equalityComparator) {\n        super();\n        this._debugNameData = _debugNameData;\n        this._computeFn = _computeFn;\n        this.createChangeSummary = createChangeSummary;\n        this._handleChange = _handleChange;\n        this._handleLastObserverRemoved = _handleLastObserverRemoved;\n        this._equalityComparator = _equalityComparator;\n        this.state = 0 /* DerivedState.initial */;\n        this.value = undefined;\n        this.updateCount = 0;\n        this.dependencies = new Set();\n        this.dependenciesToBeRemoved = new Set();\n        this.changeSummary = undefined;\n        this.changeSummary = this.createChangeSummary?.();\n        getLogger()?.handleDerivedCreated(this);\n    }\n    onLastObserverRemoved() {\n        /**\n         * We are not tracking changes anymore, thus we have to assume\n         * that our cache is invalid.\n         */\n        this.state = 0 /* DerivedState.initial */;\n        this.value = undefined;\n        for (const d of this.dependencies) {\n            d.removeObserver(this);\n        }\n        this.dependencies.clear();\n        this._handleLastObserverRemoved?.();\n    }\n    get() {\n        if (this.observers.size === 0) {\n            // Without observers, we don't know when to clean up stuff.\n            // Thus, we don't cache anything to prevent memory leaks.\n            const result = this._computeFn(this, this.createChangeSummary?.());\n            // Clear new dependencies\n            this.onLastObserverRemoved();\n            return result;\n        }\n        else {\n            do {\n                // We might not get a notification for a dependency that changed while it is updating,\n                // thus we also have to ask all our depedencies if they changed in this case.\n                if (this.state === 1 /* DerivedState.dependenciesMightHaveChanged */) {\n                    for (const d of this.dependencies) {\n                        /** might call {@link handleChange} indirectly, which could make us stale */\n                        d.reportChanges();\n                        if (this.state === 2 /* DerivedState.stale */) {\n                            // The other dependencies will refresh on demand, so early break\n                            break;\n                        }\n                    }\n                }\n                // We called report changes of all dependencies.\n                // If we are still not stale, we can assume to be up to date again.\n                if (this.state === 1 /* DerivedState.dependenciesMightHaveChanged */) {\n                    this.state = 3 /* DerivedState.upToDate */;\n                }\n                this._recomputeIfNeeded();\n                // In case recomputation changed one of our dependencies, we need to recompute again.\n            } while (this.state !== 3 /* DerivedState.upToDate */);\n            return this.value;\n        }\n    }\n    _recomputeIfNeeded() {\n        if (this.state === 3 /* DerivedState.upToDate */) {\n            return;\n        }\n        const emptySet = this.dependenciesToBeRemoved;\n        this.dependenciesToBeRemoved = this.dependencies;\n        this.dependencies = emptySet;\n        const hadValue = this.state !== 0 /* DerivedState.initial */;\n        const oldValue = this.value;\n        this.state = 3 /* DerivedState.upToDate */;\n        const changeSummary = this.changeSummary;\n        this.changeSummary = this.createChangeSummary?.();\n        try {\n            /** might call {@link handleChange} indirectly, which could invalidate us */\n            this.value = this._computeFn(this, changeSummary);\n        }\n        finally {\n            // We don't want our observed observables to think that they are (not even temporarily) not being observed.\n            // Thus, we only unsubscribe from observables that are definitely not read anymore.\n            for (const o of this.dependenciesToBeRemoved) {\n                o.removeObserver(this);\n            }\n            this.dependenciesToBeRemoved.clear();\n        }\n        const didChange = hadValue && !(this._equalityComparator(oldValue, this.value));\n        getLogger()?.handleDerivedRecomputed(this, {\n            oldValue,\n            newValue: this.value,\n            change: undefined,\n            didChange,\n            hadValue,\n        });\n        if (didChange) {\n            for (const r of this.observers) {\n                r.handleChange(this, undefined);\n            }\n        }\n    }\n    toString() {\n        return `LazyDerived<${this.debugName}>`;\n    }\n    // IObserver Implementation\n    beginUpdate(_observable) {\n        this.updateCount++;\n        const propagateBeginUpdate = this.updateCount === 1;\n        if (this.state === 3 /* DerivedState.upToDate */) {\n            this.state = 1 /* DerivedState.dependenciesMightHaveChanged */;\n            // If we propagate begin update, that will already signal a possible change.\n            if (!propagateBeginUpdate) {\n                for (const r of this.observers) {\n                    r.handlePossibleChange(this);\n                }\n            }\n        }\n        if (propagateBeginUpdate) {\n            for (const r of this.observers) {\n                r.beginUpdate(this); // This signals a possible change\n            }\n        }\n    }\n    endUpdate(_observable) {\n        this.updateCount--;\n        if (this.updateCount === 0) {\n            // End update could change the observer list.\n            const observers = [...this.observers];\n            for (const r of observers) {\n                r.endUpdate(this);\n            }\n        }\n        assertFn(() => this.updateCount >= 0);\n    }\n    handlePossibleChange(observable) {\n        // In all other states, observers already know that we might have changed.\n        if (this.state === 3 /* DerivedState.upToDate */ && this.dependencies.has(observable) && !this.dependenciesToBeRemoved.has(observable)) {\n            this.state = 1 /* DerivedState.dependenciesMightHaveChanged */;\n            for (const r of this.observers) {\n                r.handlePossibleChange(this);\n            }\n        }\n    }\n    handleChange(observable, change) {\n        if (this.dependencies.has(observable) && !this.dependenciesToBeRemoved.has(observable)) {\n            const shouldReact = this._handleChange ? this._handleChange({\n                changedObservable: observable,\n                change,\n                didChange: (o) => o === observable,\n            }, this.changeSummary) : true;\n            const wasUpToDate = this.state === 3 /* DerivedState.upToDate */;\n            if (shouldReact && (this.state === 1 /* DerivedState.dependenciesMightHaveChanged */ || wasUpToDate)) {\n                this.state = 2 /* DerivedState.stale */;\n                if (wasUpToDate) {\n                    for (const r of this.observers) {\n                        r.handlePossibleChange(this);\n                    }\n                }\n            }\n        }\n    }\n    // IReader Implementation\n    readObservable(observable) {\n        // Subscribe before getting the value to enable caching\n        observable.addObserver(this);\n        /** This might call {@link handleChange} indirectly, which could invalidate us */\n        const value = observable.get();\n        // Which is why we only add the observable to the dependencies now.\n        this.dependencies.add(observable);\n        this.dependenciesToBeRemoved.delete(observable);\n        return value;\n    }\n    addObserver(observer) {\n        const shouldCallBeginUpdate = !this.observers.has(observer) && this.updateCount > 0;\n        super.addObserver(observer);\n        if (shouldCallBeginUpdate) {\n            observer.beginUpdate(this);\n        }\n    }\n    removeObserver(observer) {\n        const shouldCallEndUpdate = this.observers.has(observer) && this.updateCount > 0;\n        super.removeObserver(observer);\n        if (shouldCallEndUpdate) {\n            // Calling end update after removing the observer makes sure endUpdate cannot be called twice here.\n            observer.endUpdate(this);\n        }\n    }\n}\nexport class DerivedWithSetter extends Derived {\n    constructor(debugNameData, computeFn, createChangeSummary, handleChange, handleLastObserverRemoved = undefined, equalityComparator, set) {\n        super(debugNameData, computeFn, createChangeSummary, handleChange, handleLastObserverRemoved, equalityComparator);\n        this.set = set;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { BaseObservable, TransactionImpl } from './base.js';\n/**\n * Holds off updating observers until the value is actually read.\n*/\nexport class LazyObservableValue extends BaseObservable {\n    get debugName() {\n        return this._debugNameData.getDebugName(this) ?? 'LazyObservableValue';\n    }\n    constructor(_debugNameData, initialValue, _equalityComparator) {\n        super();\n        this._debugNameData = _debugNameData;\n        this._equalityComparator = _equalityComparator;\n        this._isUpToDate = true;\n        this._deltas = [];\n        this._updateCounter = 0;\n        this._value = initialValue;\n    }\n    get() {\n        this._update();\n        return this._value;\n    }\n    _update() {\n        if (this._isUpToDate) {\n            return;\n        }\n        this._isUpToDate = true;\n        if (this._deltas.length > 0) {\n            for (const observer of this.observers) {\n                for (const change of this._deltas) {\n                    observer.handleChange(this, change);\n                }\n            }\n            this._deltas.length = 0;\n        }\n        else {\n            for (const observer of this.observers) {\n                observer.handleChange(this, undefined);\n            }\n        }\n    }\n    _beginUpdate() {\n        this._updateCounter++;\n        if (this._updateCounter === 1) {\n            for (const observer of this.observers) {\n                observer.beginUpdate(this);\n            }\n        }\n    }\n    _endUpdate() {\n        this._updateCounter--;\n        if (this._updateCounter === 0) {\n            this._update();\n            // End update could change the observer list.\n            const observers = [...this.observers];\n            for (const r of observers) {\n                r.endUpdate(this);\n            }\n        }\n    }\n    addObserver(observer) {\n        const shouldCallBeginUpdate = !this.observers.has(observer) && this._updateCounter > 0;\n        super.addObserver(observer);\n        if (shouldCallBeginUpdate) {\n            observer.beginUpdate(this);\n        }\n    }\n    removeObserver(observer) {\n        const shouldCallEndUpdate = this.observers.has(observer) && this._updateCounter > 0;\n        super.removeObserver(observer);\n        if (shouldCallEndUpdate) {\n            // Calling end update after removing the observer makes sure endUpdate cannot be called twice here.\n            observer.endUpdate(this);\n        }\n    }\n    set(value, tx, change) {\n        if (change === undefined && this._equalityComparator(this._value, value)) {\n            return;\n        }\n        let _tx;\n        if (!tx) {\n            tx = _tx = new TransactionImpl(() => { }, () => `Setting ${this.debugName}`);\n        }\n        try {\n            this._isUpToDate = false;\n            this._setValue(value);\n            if (change !== undefined) {\n                this._deltas.push(change);\n            }\n            tx.updateObserver({\n                beginUpdate: () => this._beginUpdate(),\n                endUpdate: () => this._endUpdate(),\n                handleChange: (observable, change) => { },\n                handlePossibleChange: (observable) => { },\n            }, this);\n            if (this._updateCounter > 1) {\n                // We already started begin/end update, so we need to manually call handlePossibleChange\n                for (const observer of this.observers) {\n                    observer.handlePossibleChange(this);\n                }\n            }\n        }\n        finally {\n            if (_tx) {\n                _tx.finish();\n            }\n        }\n    }\n    toString() {\n        return `${this.debugName}: ${this._value}`;\n    }\n    _setValue(newValue) {\n        this._value = newValue;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nlet globalObservableLogger;\nexport function setLogger(logger) {\n    globalObservableLogger = logger;\n}\nexport function getLogger() {\n    return globalObservableLogger;\n}\nexport class ConsoleObservableLogger {\n    constructor() {\n        this.indentation = 0;\n        this.changedObservablesSets = new WeakMap();\n    }\n    textToConsoleArgs(text) {\n        return consoleTextToArgs([\n            normalText(repeat('|  ', this.indentation)),\n            text,\n        ]);\n    }\n    formatInfo(info) {\n        if (!info.hadValue) {\n            return [\n                normalText(` `),\n                styled(formatValue(info.newValue, 60), {\n                    color: 'green',\n                }),\n                normalText(` (initial)`),\n            ];\n        }\n        return info.didChange\n            ? [\n                normalText(` `),\n                styled(formatValue(info.oldValue, 70), {\n                    color: 'red',\n                    strikeThrough: true,\n                }),\n                normalText(` `),\n                styled(formatValue(info.newValue, 60), {\n                    color: 'green',\n                }),\n            ]\n            : [normalText(` (unchanged)`)];\n    }\n    handleObservableChanged(observable, info) {\n        console.log(...this.textToConsoleArgs([\n            formatKind('observable value changed'),\n            styled(observable.debugName, { color: 'BlueViolet' }),\n            ...this.formatInfo(info),\n        ]));\n    }\n    formatChanges(changes) {\n        if (changes.size === 0) {\n            return undefined;\n        }\n        return styled(' (changed deps: ' +\n            [...changes].map((o) => o.debugName).join(', ') +\n            ')', { color: 'gray' });\n    }\n    handleDerivedCreated(derived) {\n        const existingHandleChange = derived.handleChange;\n        this.changedObservablesSets.set(derived, new Set());\n        derived.handleChange = (observable, change) => {\n            this.changedObservablesSets.get(derived).add(observable);\n            return existingHandleChange.apply(derived, [observable, change]);\n        };\n    }\n    handleDerivedRecomputed(derived, info) {\n        const changedObservables = this.changedObservablesSets.get(derived);\n        console.log(...this.textToConsoleArgs([\n            formatKind('derived recomputed'),\n            styled(derived.debugName, { color: 'BlueViolet' }),\n            ...this.formatInfo(info),\n            this.formatChanges(changedObservables),\n            { data: [{ fn: derived._debugNameData.referenceFn ?? derived._computeFn }] }\n        ]));\n        changedObservables.clear();\n    }\n    handleFromEventObservableTriggered(observable, info) {\n        console.log(...this.textToConsoleArgs([\n            formatKind('observable from event triggered'),\n            styled(observable.debugName, { color: 'BlueViolet' }),\n            ...this.formatInfo(info),\n            { data: [{ fn: observable._getValue }] }\n        ]));\n    }\n    handleAutorunCreated(autorun) {\n        const existingHandleChange = autorun.handleChange;\n        this.changedObservablesSets.set(autorun, new Set());\n        autorun.handleChange = (observable, change) => {\n            this.changedObservablesSets.get(autorun).add(observable);\n            return existingHandleChange.apply(autorun, [observable, change]);\n        };\n    }\n    handleAutorunTriggered(autorun) {\n        const changedObservables = this.changedObservablesSets.get(autorun);\n        console.log(...this.textToConsoleArgs([\n            formatKind('autorun'),\n            styled(autorun.debugName, { color: 'BlueViolet' }),\n            this.formatChanges(changedObservables),\n            { data: [{ fn: autorun._debugNameData.referenceFn ?? autorun._runFn }] }\n        ]));\n        changedObservables.clear();\n        this.indentation++;\n    }\n    handleAutorunFinished(autorun) {\n        this.indentation--;\n    }\n    handleBeginTransaction(transaction) {\n        let transactionName = transaction.getDebugName();\n        if (transactionName === undefined) {\n            transactionName = '';\n        }\n        console.log(...this.textToConsoleArgs([\n            formatKind('transaction'),\n            styled(transactionName, { color: 'BlueViolet' }),\n            { data: [{ fn: transaction._fn }] }\n        ]));\n        this.indentation++;\n    }\n    handleEndTransaction() {\n        this.indentation--;\n    }\n}\nfunction consoleTextToArgs(text) {\n    const styles = new Array();\n    const data = [];\n    let firstArg = '';\n    function process(t) {\n        if ('length' in t) {\n            for (const item of t) {\n                if (item) {\n                    process(item);\n                }\n            }\n        }\n        else if ('text' in t) {\n            firstArg += `%c${t.text}`;\n            styles.push(t.style);\n            if (t.data) {\n                data.push(...t.data);\n            }\n        }\n        else if ('data' in t) {\n            data.push(...t.data);\n        }\n    }\n    process(text);\n    const result = [firstArg, ...styles];\n    result.push(...data);\n    return result;\n}\nfunction normalText(text) {\n    return styled(text, { color: 'black' });\n}\nfunction formatKind(kind) {\n    return styled(padStr(`${kind}: `, 10), { color: 'black', bold: true });\n}\nfunction styled(text, options = {\n    color: 'black',\n}) {\n    function objToCss(styleObj) {\n        return Object.entries(styleObj).reduce((styleString, [propName, propValue]) => {\n            return `${styleString}${propName}:${propValue};`;\n        }, '');\n    }\n    const style = {\n        color: options.color,\n    };\n    if (options.strikeThrough) {\n        style['text-decoration'] = 'line-through';\n    }\n    if (options.bold) {\n        style['font-weight'] = 'bold';\n    }\n    return {\n        text,\n        style: objToCss(style),\n    };\n}\nfunction formatValue(value, availableLen) {\n    switch (typeof value) {\n        case 'number':\n            return '' + value;\n        case 'string':\n            if (value.length + 2 <= availableLen) {\n                return `\"${value}\"`;\n            }\n            return `\"${value.substr(0, availableLen - 7)}\"+...`;\n        case 'boolean':\n            return value ? 'true' : 'false';\n        case 'undefined':\n            return 'undefined';\n        case 'object':\n            if (value === null) {\n                return 'null';\n            }\n            if (Array.isArray(value)) {\n                return formatArray(value, availableLen);\n            }\n            return formatObject(value, availableLen);\n        case 'symbol':\n            return value.toString();\n        case 'function':\n            return `[[Function${value.name ? ' ' + value.name : ''}]]`;\n        default:\n            return '' + value;\n    }\n}\nfunction formatArray(value, availableLen) {\n    let result = '[ ';\n    let first = true;\n    for (const val of value) {\n        if (!first) {\n            result += ', ';\n        }\n        if (result.length - 5 > availableLen) {\n            result += '...';\n            break;\n        }\n        first = false;\n        result += `${formatValue(val, availableLen - result.length)}`;\n    }\n    result += ' ]';\n    return result;\n}\nfunction formatObject(value, availableLen) {\n    let result = '{ ';\n    let first = true;\n    for (const [key, val] of Object.entries(value)) {\n        if (!first) {\n            result += ', ';\n        }\n        if (result.length - 5 > availableLen) {\n            result += '...';\n            break;\n        }\n        first = false;\n        result += `${key}: ${formatValue(val, availableLen - result.length)}`;\n    }\n    result += ' }';\n    return result;\n}\nfunction repeat(str, count) {\n    let result = '';\n    for (let i = 1; i <= count; i++) {\n        result += str;\n    }\n    return result;\n}\nfunction padStr(str, length) {\n    while (str.length < length) {\n        str += ' ';\n    }\n    return str;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { autorun } from './autorun.js';\nimport { observableValue, transaction } from './base.js';\nimport { CancellationError } from '../errors.js';\n/**\n * A promise whose state is observable.\n */\nexport class ObservablePromise {\n    static fromFn(fn) {\n        return new ObservablePromise(fn());\n    }\n    constructor(promise) {\n        this._value = observableValue(this, undefined);\n        /**\n         * The current state of the promise.\n         * Is `undefined` if the promise didn't resolve yet.\n         */\n        this.promiseResult = this._value;\n        this.promise = promise.then(value => {\n            transaction(tx => {\n                /** @description onPromiseResolved */\n                this._value.set(new PromiseResult(value, undefined), tx);\n            });\n            return value;\n        }, error => {\n            transaction(tx => {\n                /** @description onPromiseRejected */\n                this._value.set(new PromiseResult(undefined, error), tx);\n            });\n            throw error;\n        });\n    }\n}\nexport class PromiseResult {\n    constructor(\n    /**\n     * The value of the resolved promise.\n     * Undefined if the promise rejected.\n     */\n    data, \n    /**\n     * The error in case of a rejected promise.\n     * Undefined if the promise resolved.\n     */\n    error) {\n        this.data = data;\n        this.error = error;\n    }\n}\nexport function waitForState(observable, predicate, isError, cancellationToken) {\n    if (!predicate) {\n        predicate = state => state !== null && state !== undefined;\n    }\n    return new Promise((resolve, reject) => {\n        let isImmediateRun = true;\n        let shouldDispose = false;\n        const stateObs = observable.map(state => {\n            /** @description waitForState.state */\n            return {\n                isFinished: predicate(state),\n                error: isError ? isError(state) : false,\n                state\n            };\n        });\n        const d = autorun(reader => {\n            /** @description waitForState */\n            const { isFinished, error, state } = stateObs.read(reader);\n            if (isFinished || error) {\n                if (isImmediateRun) {\n                    // The variable `d` is not initialized yet\n                    shouldDispose = true;\n                }\n                else {\n                    d.dispose();\n                }\n                if (error) {\n                    reject(error === true ? state : error);\n                }\n                else {\n                    resolve(state);\n                }\n            }\n        });\n        if (cancellationToken) {\n            const dc = cancellationToken.onCancellationRequested(() => {\n                d.dispose();\n                dc.dispose();\n                reject(new CancellationError());\n            });\n            if (cancellationToken.isCancellationRequested) {\n                d.dispose();\n                dc.dispose();\n                reject(new CancellationError());\n                return;\n            }\n        }\n        isImmediateRun = false;\n        if (shouldDispose) {\n            d.dispose();\n        }\n    });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Event } from '../event.js';\nimport { DisposableStore, toDisposable } from '../lifecycle.js';\nimport { BaseObservable, ConvenientObservable, _setKeepObserved, _setRecomputeInitiallyAndOnChange, subtransaction, transaction } from './base.js';\nimport { DebugNameData } from './debugName.js';\nimport { derived, derivedOpts } from './derived.js';\nimport { getLogger } from './logging.js';\nimport { strictEquals } from '../equals.js';\n/**\n * Represents an efficient observable whose value never changes.\n */\nexport function constObservable(value) {\n    return new ConstObservable(value);\n}\nclass ConstObservable extends ConvenientObservable {\n    constructor(value) {\n        super();\n        this.value = value;\n    }\n    get debugName() {\n        return this.toString();\n    }\n    get() {\n        return this.value;\n    }\n    addObserver(observer) {\n        // NO OP\n    }\n    removeObserver(observer) {\n        // NO OP\n    }\n    toString() {\n        return `Const: ${this.value}`;\n    }\n}\nexport function observableFromEvent(...args) {\n    let owner;\n    let event;\n    let getValue;\n    if (args.length === 3) {\n        [owner, event, getValue] = args;\n    }\n    else {\n        [event, getValue] = args;\n    }\n    return new FromEventObservable(new DebugNameData(owner, undefined, getValue), event, getValue, () => FromEventObservable.globalTransaction, strictEquals);\n}\nexport function observableFromEventOpts(options, event, getValue) {\n    return new FromEventObservable(new DebugNameData(options.owner, options.debugName, options.debugReferenceFn ?? getValue), event, getValue, () => FromEventObservable.globalTransaction, options.equalsFn ?? strictEquals);\n}\nexport class FromEventObservable extends BaseObservable {\n    constructor(_debugNameData, event, _getValue, _getTransaction, _equalityComparator) {\n        super();\n        this._debugNameData = _debugNameData;\n        this.event = event;\n        this._getValue = _getValue;\n        this._getTransaction = _getTransaction;\n        this._equalityComparator = _equalityComparator;\n        this.hasValue = false;\n        this.handleEvent = (args) => {\n            const newValue = this._getValue(args);\n            const oldValue = this.value;\n            const didChange = !this.hasValue || !(this._equalityComparator(oldValue, newValue));\n            let didRunTransaction = false;\n            if (didChange) {\n                this.value = newValue;\n                if (this.hasValue) {\n                    didRunTransaction = true;\n                    subtransaction(this._getTransaction(), (tx) => {\n                        getLogger()?.handleFromEventObservableTriggered(this, { oldValue, newValue, change: undefined, didChange, hadValue: this.hasValue });\n                        for (const o of this.observers) {\n                            tx.updateObserver(o, this);\n                            o.handleChange(this, undefined);\n                        }\n                    }, () => {\n                        const name = this.getDebugName();\n                        return 'Event fired' + (name ? `: ${name}` : '');\n                    });\n                }\n                this.hasValue = true;\n            }\n            if (!didRunTransaction) {\n                getLogger()?.handleFromEventObservableTriggered(this, { oldValue, newValue, change: undefined, didChange, hadValue: this.hasValue });\n            }\n        };\n    }\n    getDebugName() {\n        return this._debugNameData.getDebugName(this);\n    }\n    get debugName() {\n        const name = this.getDebugName();\n        return 'From Event' + (name ? `: ${name}` : '');\n    }\n    onFirstObserverAdded() {\n        this.subscription = this.event(this.handleEvent);\n    }\n    onLastObserverRemoved() {\n        this.subscription.dispose();\n        this.subscription = undefined;\n        this.hasValue = false;\n        this.value = undefined;\n    }\n    get() {\n        if (this.subscription) {\n            if (!this.hasValue) {\n                this.handleEvent(undefined);\n            }\n            return this.value;\n        }\n        else {\n            // no cache, as there are no subscribers to keep it updated\n            const value = this._getValue(undefined);\n            return value;\n        }\n    }\n}\n(function (observableFromEvent) {\n    observableFromEvent.Observer = FromEventObservable;\n    function batchEventsGlobally(tx, fn) {\n        let didSet = false;\n        if (FromEventObservable.globalTransaction === undefined) {\n            FromEventObservable.globalTransaction = tx;\n            didSet = true;\n        }\n        try {\n            fn();\n        }\n        finally {\n            if (didSet) {\n                FromEventObservable.globalTransaction = undefined;\n            }\n        }\n    }\n    observableFromEvent.batchEventsGlobally = batchEventsGlobally;\n})(observableFromEvent || (observableFromEvent = {}));\nexport function observableSignalFromEvent(debugName, event) {\n    return new FromEventObservableSignal(debugName, event);\n}\nclass FromEventObservableSignal extends BaseObservable {\n    constructor(debugName, event) {\n        super();\n        this.debugName = debugName;\n        this.event = event;\n        this.handleEvent = () => {\n            transaction((tx) => {\n                for (const o of this.observers) {\n                    tx.updateObserver(o, this);\n                    o.handleChange(this, undefined);\n                }\n            }, () => this.debugName);\n        };\n    }\n    onFirstObserverAdded() {\n        this.subscription = this.event(this.handleEvent);\n    }\n    onLastObserverRemoved() {\n        this.subscription.dispose();\n        this.subscription = undefined;\n    }\n    get() {\n        // NO OP\n    }\n}\nexport function observableSignal(debugNameOrOwner) {\n    if (typeof debugNameOrOwner === 'string') {\n        return new ObservableSignal(debugNameOrOwner);\n    }\n    else {\n        return new ObservableSignal(undefined, debugNameOrOwner);\n    }\n}\nclass ObservableSignal extends BaseObservable {\n    get debugName() {\n        return new DebugNameData(this._owner, this._debugName, undefined).getDebugName(this) ?? 'Observable Signal';\n    }\n    toString() {\n        return this.debugName;\n    }\n    constructor(_debugName, _owner) {\n        super();\n        this._debugName = _debugName;\n        this._owner = _owner;\n    }\n    trigger(tx, change) {\n        if (!tx) {\n            transaction(tx => {\n                this.trigger(tx, change);\n            }, () => `Trigger signal ${this.debugName}`);\n            return;\n        }\n        for (const o of this.observers) {\n            tx.updateObserver(o, this);\n            o.handleChange(this, change);\n        }\n    }\n    get() {\n        // NO OP\n    }\n}\n/**\n * This makes sure the observable is being observed and keeps its cache alive.\n */\nexport function keepObserved(observable) {\n    const o = new KeepAliveObserver(false, undefined);\n    observable.addObserver(o);\n    return toDisposable(() => {\n        observable.removeObserver(o);\n    });\n}\n_setKeepObserved(keepObserved);\n/**\n * This converts the given observable into an autorun.\n */\nexport function recomputeInitiallyAndOnChange(observable, handleValue) {\n    const o = new KeepAliveObserver(true, handleValue);\n    observable.addObserver(o);\n    if (handleValue) {\n        handleValue(observable.get());\n    }\n    else {\n        observable.reportChanges();\n    }\n    return toDisposable(() => {\n        observable.removeObserver(o);\n    });\n}\n_setRecomputeInitiallyAndOnChange(recomputeInitiallyAndOnChange);\nexport class KeepAliveObserver {\n    constructor(_forceRecompute, _handleValue) {\n        this._forceRecompute = _forceRecompute;\n        this._handleValue = _handleValue;\n        this._counter = 0;\n    }\n    beginUpdate(observable) {\n        this._counter++;\n    }\n    endUpdate(observable) {\n        this._counter--;\n        if (this._counter === 0 && this._forceRecompute) {\n            if (this._handleValue) {\n                this._handleValue(observable.get());\n            }\n            else {\n                observable.reportChanges();\n            }\n        }\n    }\n    handlePossibleChange(observable) {\n        // NO OP\n    }\n    handleChange(observable, change) {\n        // NO OP\n    }\n}\nexport function derivedObservableWithCache(owner, computeFn) {\n    let lastValue = undefined;\n    const observable = derivedOpts({ owner, debugReferenceFn: computeFn }, reader => {\n        lastValue = computeFn(reader, lastValue);\n        return lastValue;\n    });\n    return observable;\n}\nexport function derivedObservableWithWritableCache(owner, computeFn) {\n    let lastValue = undefined;\n    const onChange = observableSignal('derivedObservableWithWritableCache');\n    const observable = derived(owner, reader => {\n        onChange.read(reader);\n        lastValue = computeFn(reader, lastValue);\n        return lastValue;\n    });\n    return Object.assign(observable, {\n        clearCache: (tx) => {\n            lastValue = undefined;\n            onChange.trigger(tx);\n        },\n        setCache: (newValue, tx) => {\n            lastValue = newValue;\n            onChange.trigger(tx);\n        }\n    });\n}\n/**\n * When the items array changes, referential equal items are not mapped again.\n */\nexport function mapObservableArrayCached(owner, items, map, keySelector) {\n    let m = new ArrayMap(map, keySelector);\n    const self = derivedOpts({\n        debugReferenceFn: map,\n        owner,\n        onLastObserverRemoved: () => {\n            m.dispose();\n            m = new ArrayMap(map);\n        }\n    }, (reader) => {\n        m.setItems(items.read(reader));\n        return m.getItems();\n    });\n    return self;\n}\nclass ArrayMap {\n    constructor(_map, _keySelector) {\n        this._map = _map;\n        this._keySelector = _keySelector;\n        this._cache = new Map();\n        this._items = [];\n    }\n    dispose() {\n        this._cache.forEach(entry => entry.store.dispose());\n        this._cache.clear();\n    }\n    setItems(items) {\n        const newItems = [];\n        const itemsToRemove = new Set(this._cache.keys());\n        for (const item of items) {\n            const key = this._keySelector ? this._keySelector(item) : item;\n            let entry = this._cache.get(key);\n            if (!entry) {\n                const store = new DisposableStore();\n                const out = this._map(item, store);\n                entry = { out, store };\n                this._cache.set(key, entry);\n            }\n            else {\n                itemsToRemove.delete(key);\n            }\n            newItems.push(entry.out);\n        }\n        for (const item of itemsToRemove) {\n            const entry = this._cache.get(item);\n            entry.store.dispose();\n            this._cache.delete(item);\n        }\n        this._items = newItems;\n    }\n    getItems() {\n        return this._items;\n    }\n}\nexport class ValueWithChangeEventFromObservable {\n    constructor(observable) {\n        this.observable = observable;\n    }\n    get onDidChange() {\n        return Event.fromObservableLight(this.observable);\n    }\n    get value() {\n        return this.observable.get();\n    }\n}\nexport function observableFromValueWithChangeEvent(owner, value) {\n    if (value instanceof ValueWithChangeEventFromObservable) {\n        return value.observable;\n    }\n    return observableFromEvent(owner, value.onDidChange, () => value.value);\n}\n/**\n * Works like a derived.\n * However, if the value is not undefined, it is cached and will not be recomputed anymore.\n * In that case, the derived will unsubscribe from its dependencies.\n*/\nexport function derivedConstOnceDefined(owner, fn) {\n    return derivedObservableWithCache(owner, (reader, lastValue) => lastValue ?? fn(reader));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/commits/v20.9.0/lib/path.js\n// Excluding: the change that adds primordials\n// (https://github.com/nodejs/node/commit/187a862d221dec42fa9a5c4214e7034d9092792f and others)\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nimport * as process from './process.js';\nconst CHAR_UPPERCASE_A = 65; /* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\nclass ErrorInvalidArgType extends Error {\n    constructor(name, expected, actual) {\n        // determiner: 'must be' or 'must not be'\n        let determiner;\n        if (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n            determiner = 'must not be';\n            expected = expected.replace(/^not /, '');\n        }\n        else {\n            determiner = 'must be';\n        }\n        const type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n        let msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n        msg += `. Received type ${typeof actual}`;\n        super(msg);\n        this.code = 'ERR_INVALID_ARG_TYPE';\n    }\n}\nfunction validateObject(pathObject, name) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n        throw new ErrorInvalidArgType(name, 'Object', pathObject);\n    }\n}\nfunction validateString(value, name) {\n    if (typeof value !== 'string') {\n        throw new ErrorInvalidArgType(name, 'string', value);\n    }\n}\nconst platformIsWin32 = (process.platform === 'win32');\nfunction isPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\nfunction isPosixPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH;\n}\nfunction isWindowsDeviceRoot(code) {\n    return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n        (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path, allowAboveRoot, separator, isPathSeparator) {\n    let res = '';\n    let lastSegmentLength = 0;\n    let lastSlash = -1;\n    let dots = 0;\n    let code = 0;\n    for (let i = 0; i <= path.length; ++i) {\n        if (i < path.length) {\n            code = path.charCodeAt(i);\n        }\n        else if (isPathSeparator(code)) {\n            break;\n        }\n        else {\n            code = CHAR_FORWARD_SLASH;\n        }\n        if (isPathSeparator(code)) {\n            if (lastSlash === i - 1 || dots === 1) {\n                // NOOP\n            }\n            else if (dots === 2) {\n                if (res.length < 2 || lastSegmentLength !== 2 ||\n                    res.charCodeAt(res.length - 1) !== CHAR_DOT ||\n                    res.charCodeAt(res.length - 2) !== CHAR_DOT) {\n                    if (res.length > 2) {\n                        const lastSlashIndex = res.lastIndexOf(separator);\n                        if (lastSlashIndex === -1) {\n                            res = '';\n                            lastSegmentLength = 0;\n                        }\n                        else {\n                            res = res.slice(0, lastSlashIndex);\n                            lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n                        }\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                    else if (res.length !== 0) {\n                        res = '';\n                        lastSegmentLength = 0;\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                }\n                if (allowAboveRoot) {\n                    res += res.length > 0 ? `${separator}..` : '..';\n                    lastSegmentLength = 2;\n                }\n            }\n            else {\n                if (res.length > 0) {\n                    res += `${separator}${path.slice(lastSlash + 1, i)}`;\n                }\n                else {\n                    res = path.slice(lastSlash + 1, i);\n                }\n                lastSegmentLength = i - lastSlash - 1;\n            }\n            lastSlash = i;\n            dots = 0;\n        }\n        else if (code === CHAR_DOT && dots !== -1) {\n            ++dots;\n        }\n        else {\n            dots = -1;\n        }\n    }\n    return res;\n}\nfunction formatExt(ext) {\n    return ext ? `${ext[0] === '.' ? '' : '.'}${ext}` : '';\n}\nfunction _format(sep, pathObject) {\n    validateObject(pathObject, 'pathObject');\n    const dir = pathObject.dir || pathObject.root;\n    const base = pathObject.base ||\n        `${pathObject.name || ''}${formatExt(pathObject.ext)}`;\n    if (!dir) {\n        return base;\n    }\n    return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\nexport const win32 = {\n    // path.resolve([from ...], to)\n    resolve(...pathSegments) {\n        let resolvedDevice = '';\n        let resolvedTail = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1; i--) {\n            let path;\n            if (i >= 0) {\n                path = pathSegments[i];\n                validateString(path, `paths[${i}]`);\n                // Skip empty entries\n                if (path.length === 0) {\n                    continue;\n                }\n            }\n            else if (resolvedDevice.length === 0) {\n                path = process.cwd();\n            }\n            else {\n                // Windows has the concept of drive-specific current working\n                // directories. If we've resolved a drive letter but not yet an\n                // absolute path, get cwd for that drive, or the process cwd if\n                // the drive cwd is not available. We're sure the device is not\n                // a UNC path at this points, because UNC paths are always absolute.\n                path = process.env[`=${resolvedDevice}`] || process.cwd();\n                // Verify that a cwd was found and that it actually points\n                // to our drive. If not, default to the drive's root.\n                if (path === undefined ||\n                    (path.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n                        path.charCodeAt(2) === CHAR_BACKWARD_SLASH)) {\n                    path = `${resolvedDevice}\\\\`;\n                }\n            }\n            const len = path.length;\n            let rootEnd = 0;\n            let device = '';\n            let isAbsolute = false;\n            const code = path.charCodeAt(0);\n            // Try to match a root\n            if (len === 1) {\n                if (isPathSeparator(code)) {\n                    // `path` contains just a path separator\n                    rootEnd = 1;\n                    isAbsolute = true;\n                }\n            }\n            else if (isPathSeparator(code)) {\n                // Possible UNC root\n                // If we started with a separator, we know we at least have an\n                // absolute path of some kind (UNC or otherwise)\n                isAbsolute = true;\n                if (isPathSeparator(path.charCodeAt(1))) {\n                    // Matched double path separator at beginning\n                    let j = 2;\n                    let last = j;\n                    // Match 1 or more non-path separators\n                    while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        const firstPart = path.slice(last, j);\n                        // Matched!\n                        last = j;\n                        // Match 1 or more path separators\n                        while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j < len && j !== last) {\n                            // Matched!\n                            last = j;\n                            // Match 1 or more non-path separators\n                            while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                                j++;\n                            }\n                            if (j === len || j !== last) {\n                                // We matched a UNC root\n                                device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                                rootEnd = j;\n                            }\n                        }\n                    }\n                }\n                else {\n                    rootEnd = 1;\n                }\n            }\n            else if (isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON) {\n                // Possible device root\n                device = path.slice(0, 2);\n                rootEnd = 2;\n                if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                    // Treat separator following drive name as an absolute path\n                    // indicator\n                    isAbsolute = true;\n                    rootEnd = 3;\n                }\n            }\n            if (device.length > 0) {\n                if (resolvedDevice.length > 0) {\n                    if (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n                        // This path points to another device so it is not applicable\n                        continue;\n                    }\n                }\n                else {\n                    resolvedDevice = device;\n                }\n            }\n            if (resolvedAbsolute) {\n                if (resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n            else {\n                resolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n                resolvedAbsolute = isAbsolute;\n                if (isAbsolute && resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n        }\n        // At this point the path should be resolved to a full absolute path,\n        // but handle relative paths to be safe (might happen when process.cwd()\n        // fails)\n        // Normalize the tail path\n        resolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\', isPathSeparator);\n        return resolvedAbsolute ?\n            `${resolvedDevice}\\\\${resolvedTail}` :\n            `${resolvedDevice}${resolvedTail}` || '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = 0;\n        let device;\n        let isAbsolute = false;\n        const code = path.charCodeAt(0);\n        // Try to match a root\n        if (len === 1) {\n            // `path` contains just a single char, exit early to avoid\n            // unnecessary work\n            return isPosixPathSeparator(code) ? '\\\\' : path;\n        }\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            // If we started with a separator, we know we at least have an absolute\n            // path of some kind (UNC or otherwise)\n            isAbsolute = true;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    const firstPart = path.slice(last, j);\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            // Return the normalized version of the UNC root since there\n                            // is nothing left to process\n                            return `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n                        }\n                        if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                            rootEnd = j;\n                        }\n                    }\n                }\n            }\n            else {\n                rootEnd = 1;\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            // Possible device root\n            device = path.slice(0, 2);\n            rootEnd = 2;\n            if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                // Treat separator following drive name as an absolute path\n                // indicator\n                isAbsolute = true;\n                rootEnd = 3;\n            }\n        }\n        let tail = rootEnd < len ?\n            normalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n            '';\n        if (tail.length === 0 && !isAbsolute) {\n            tail = '.';\n        }\n        if (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n            tail += '\\\\';\n        }\n        if (device === undefined) {\n            return isAbsolute ? `\\\\${tail}` : tail;\n        }\n        return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return false;\n        }\n        const code = path.charCodeAt(0);\n        return isPathSeparator(code) ||\n            // Possible device root\n            (len > 2 &&\n                isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON &&\n                isPathSeparator(path.charCodeAt(2)));\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        let firstPart;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = firstPart = arg;\n                }\n                else {\n                    joined += `\\\\${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        // Make sure that the joined path doesn't start with two slashes, because\n        // normalize() will mistake it for a UNC path then.\n        //\n        // This step is skipped when it is very clear that the user actually\n        // intended to point at a UNC path. This is assumed when the first\n        // non-empty string arguments starts with exactly two slashes followed by\n        // at least one more non-slash character.\n        //\n        // Note that for normalize() to treat a path as a UNC path it needs to\n        // have at least 2 components, so we don't filter for that here.\n        // This means that the user can use join to construct UNC paths from\n        // a server name and a share name; for example:\n        //   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n        let needsReplace = true;\n        let slashCount = 0;\n        if (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n            ++slashCount;\n            const firstLen = firstPart.length;\n            if (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n                ++slashCount;\n                if (firstLen > 2) {\n                    if (isPathSeparator(firstPart.charCodeAt(2))) {\n                        ++slashCount;\n                    }\n                    else {\n                        // We matched a UNC path in the first part\n                        needsReplace = false;\n                    }\n                }\n            }\n        }\n        if (needsReplace) {\n            // Find any more consecutive slashes we need to replace\n            while (slashCount < joined.length &&\n                isPathSeparator(joined.charCodeAt(slashCount))) {\n                slashCount++;\n            }\n            // Replace the slashes if needed\n            if (slashCount >= 2) {\n                joined = `\\\\${joined.slice(slashCount)}`;\n            }\n        }\n        return win32.normalize(joined);\n    },\n    // It will solve the relative path from `from` to `to`, for instance:\n    //  from = 'C:\\\\orandea\\\\test\\\\aaa'\n    //  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n    // The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        const fromOrig = win32.resolve(from);\n        const toOrig = win32.resolve(to);\n        if (fromOrig === toOrig) {\n            return '';\n        }\n        from = fromOrig.toLowerCase();\n        to = toOrig.toLowerCase();\n        if (from === to) {\n            return '';\n        }\n        // Trim any leading backslashes\n        let fromStart = 0;\n        while (fromStart < from.length &&\n            from.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n            fromStart++;\n        }\n        // Trim trailing backslashes (applicable to UNC paths only)\n        let fromEnd = from.length;\n        while (fromEnd - 1 > fromStart &&\n            from.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n            fromEnd--;\n        }\n        const fromLen = fromEnd - fromStart;\n        // Trim any leading backslashes\n        let toStart = 0;\n        while (toStart < to.length &&\n            to.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            toStart++;\n        }\n        // Trim trailing backslashes (applicable to UNC paths only)\n        let toEnd = to.length;\n        while (toEnd - 1 > toStart &&\n            to.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n            toEnd--;\n        }\n        const toLen = toEnd - toStart;\n        // Compare paths to find the longest common path from root\n        const length = fromLen < toLen ? fromLen : toLen;\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_BACKWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        // We found a mismatch before the first common path separator was seen, so\n        // return the original `to`.\n        if (i !== length) {\n            if (lastCommonSep === -1) {\n                return toOrig;\n            }\n        }\n        else {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n                    // We get here if `from` is the exact base path for `to`.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n                    return toOrig.slice(toStart + i + 1);\n                }\n                if (i === 2) {\n                    // We get here if `from` is the device root.\n                    // For example: from='C:\\\\'; to='C:\\\\foo'\n                    return toOrig.slice(toStart + i);\n                }\n            }\n            if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n                    // We get here if `to` is the exact base path for `from`.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n                    lastCommonSep = i;\n                }\n                else if (i === 2) {\n                    // We get here if `to` is the device root.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n                    lastCommonSep = 3;\n                }\n            }\n            if (lastCommonSep === -1) {\n                lastCommonSep = 0;\n            }\n        }\n        let out = '';\n        // Generate the relative path based on the path difference between `to` and\n        // `from`\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n                out += out.length === 0 ? '..' : '\\\\..';\n            }\n        }\n        toStart += lastCommonSep;\n        // Lastly, append the rest of the destination (`to`) path that comes after\n        // the common path parts\n        if (out.length > 0) {\n            return `${out}${toOrig.slice(toStart, toEnd)}`;\n        }\n        if (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            ++toStart;\n        }\n        return toOrig.slice(toStart, toEnd);\n    },\n    toNamespacedPath(path) {\n        // Note: this will *probably* throw somewhere.\n        if (typeof path !== 'string' || path.length === 0) {\n            return path;\n        }\n        const resolvedPath = win32.resolve(path);\n        if (resolvedPath.length <= 2) {\n            return path;\n        }\n        if (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n            // Possible UNC root\n            if (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n                const code = resolvedPath.charCodeAt(2);\n                if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n                    // Matched non-long UNC root, convert the path to a long UNC path\n                    return `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n            resolvedPath.charCodeAt(1) === CHAR_COLON &&\n            resolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n            // Matched device root, convert the path to a long UNC path\n            return `\\\\\\\\?\\\\${resolvedPath}`;\n        }\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = -1;\n        let offset = 0;\n        const code = path.charCodeAt(0);\n        if (len === 1) {\n            // `path` contains just a path separator, exit early to avoid\n            // unnecessary work or a dot.\n            return isPathSeparator(code) ? path : '.';\n        }\n        // Try to match a root\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            rootEnd = offset = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            return path;\n                        }\n                        if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            // Offset by 1 to include the separator after the UNC root to\n                            // treat it as a \"normal root\" on top of a (UNC) root\n                            rootEnd = offset = j + 1;\n                        }\n                    }\n                }\n            }\n            // Possible device root\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            rootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n            offset = rootEnd;\n        }\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = len - 1; i >= offset; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                // We saw the first non-path separator\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            if (rootEnd === -1) {\n                return '.';\n            }\n            end = rootEnd;\n        }\n        return path.slice(0, end);\n    },\n    basename(path, suffix) {\n        if (suffix !== undefined) {\n            validateString(suffix, 'suffix');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        // Check for a drive letter prefix so as not to mistake the following\n        // path separator as an extra separator at the end of the path that can be\n        // disregarded\n        if (path.length >= 2 &&\n            isWindowsDeviceRoot(path.charCodeAt(0)) &&\n            path.charCodeAt(1) === CHAR_COLON) {\n            start = 2;\n        }\n        if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\n            if (suffix === path) {\n                return '';\n            }\n            let extIdx = suffix.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= start; --i) {\n                const code = path.charCodeAt(i);\n                if (isPathSeparator(code)) {\n                    // If we reached a path separator that was not part of a set of path\n                    // separators at the end of the string, stop now\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        // We saw the first non-path separator, remember this index in case\n                        // we need it if the extension ends up not matching\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        // Try to match the explicit extension\n                        if (code === suffix.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                // We matched the extension, so mark this as the end of our path\n                                // component\n                                end = i;\n                            }\n                        }\n                        else {\n                            // Extension does not match, so our result is the entire path\n                            // component\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= start; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // path component\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let start = 0;\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Check for a drive letter prefix so as not to mistake the following\n        // path separator as an extra separator at the end of the path that can be\n        // disregarded\n        if (path.length >= 2 &&\n            path.charCodeAt(1) === CHAR_COLON &&\n            isWindowsDeviceRoot(path.charCodeAt(0))) {\n            start = startPart = 2;\n        }\n        for (let i = path.length - 1; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            // We saw a non-dot character immediately before the dot\n            preDotState === 0 ||\n            // The (right-most) trimmed path component is exactly '..'\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '\\\\'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const len = path.length;\n        let rootEnd = 0;\n        let code = path.charCodeAt(0);\n        if (len === 1) {\n            if (isPathSeparator(code)) {\n                // `path` contains just a path separator, exit early to avoid\n                // unnecessary work\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            ret.base = ret.name = path;\n            return ret;\n        }\n        // Try to match a root\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            rootEnd = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            rootEnd = j;\n                        }\n                        else if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            rootEnd = j + 1;\n                        }\n                    }\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            // Possible device root\n            if (len <= 2) {\n                // `path` contains just a drive root, exit early to avoid\n                // unnecessary work\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            rootEnd = 2;\n            if (isPathSeparator(path.charCodeAt(2))) {\n                if (len === 3) {\n                    // `path` contains just a drive root, exit early to avoid\n                    // unnecessary work\n                    ret.root = ret.dir = path;\n                    return ret;\n                }\n                rootEnd = 3;\n            }\n        }\n        if (rootEnd > 0) {\n            ret.root = path.slice(0, rootEnd);\n        }\n        let startDot = -1;\n        let startPart = rootEnd;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Get non-dir info\n        for (; i >= rootEnd; --i) {\n            code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            if (startDot === -1 ||\n                // We saw a non-dot character immediately before the dot\n                preDotState === 0 ||\n                // The (right-most) trimmed path component is exactly '..'\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(startPart, end);\n            }\n            else {\n                ret.name = path.slice(startPart, startDot);\n                ret.base = path.slice(startPart, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        // If the directory is the root, use the entire root as the `dir` including\n        // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n        // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n        if (startPart > 0 && startPart !== rootEnd) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else {\n            ret.dir = ret.root;\n        }\n        return ret;\n    },\n    sep: '\\\\',\n    delimiter: ';',\n    win32: null,\n    posix: null\n};\nconst posixCwd = (() => {\n    if (platformIsWin32) {\n        // Converts Windows' backslash path separators to POSIX forward slashes\n        // and truncates any drive indicator\n        const regexp = /\\\\/g;\n        return () => {\n            const cwd = process.cwd().replace(regexp, '/');\n            return cwd.slice(cwd.indexOf('/'));\n        };\n    }\n    // We're already on POSIX, no need for any transformations\n    return () => process.cwd();\n})();\nexport const posix = {\n    // path.resolve([from ...], to)\n    resolve(...pathSegments) {\n        let resolvedPath = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n            const path = i >= 0 ? pathSegments[i] : posixCwd();\n            validateString(path, `paths[${i}]`);\n            // Skip empty entries\n            if (path.length === 0) {\n                continue;\n            }\n            resolvedPath = `${path}/${resolvedPath}`;\n            resolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        }\n        // At this point the path should be resolved to a full absolute path, but\n        // handle relative paths to be safe (might happen when process.cwd() fails)\n        // Normalize the path\n        resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/', isPosixPathSeparator);\n        if (resolvedAbsolute) {\n            return `/${resolvedPath}`;\n        }\n        return resolvedPath.length > 0 ? resolvedPath : '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        const trailingSeparator = path.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n        // Normalize the path\n        path = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n        if (path.length === 0) {\n            if (isAbsolute) {\n                return '/';\n            }\n            return trailingSeparator ? './' : '.';\n        }\n        if (trailingSeparator) {\n            path += '/';\n        }\n        return isAbsolute ? `/${path}` : path;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        return path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = arg;\n                }\n                else {\n                    joined += `/${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        return posix.normalize(joined);\n    },\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        // Trim leading forward slashes.\n        from = posix.resolve(from);\n        to = posix.resolve(to);\n        if (from === to) {\n            return '';\n        }\n        const fromStart = 1;\n        const fromEnd = from.length;\n        const fromLen = fromEnd - fromStart;\n        const toStart = 1;\n        const toLen = to.length - toStart;\n        // Compare paths to find the longest common path from root\n        const length = (fromLen < toLen ? fromLen : toLen);\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_FORWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        if (i === length) {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n                    // We get here if `from` is the exact base path for `to`.\n                    // For example: from='/foo/bar'; to='/foo/bar/baz'\n                    return to.slice(toStart + i + 1);\n                }\n                if (i === 0) {\n                    // We get here if `from` is the root\n                    // For example: from='/'; to='/foo'\n                    return to.slice(toStart + i);\n                }\n            }\n            else if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n                    // We get here if `to` is the exact base path for `from`.\n                    // For example: from='/foo/bar/baz'; to='/foo/bar'\n                    lastCommonSep = i;\n                }\n                else if (i === 0) {\n                    // We get here if `to` is the root.\n                    // For example: from='/foo/bar'; to='/'\n                    lastCommonSep = 0;\n                }\n            }\n        }\n        let out = '';\n        // Generate the relative path based on the path difference between `to`\n        // and `from`.\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                out += out.length === 0 ? '..' : '/..';\n            }\n        }\n        // Lastly, append the rest of the destination (`to`) path that comes after\n        // the common path parts.\n        return `${out}${to.slice(toStart + lastCommonSep)}`;\n    },\n    toNamespacedPath(path) {\n        // Non-op on posix systems\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = path.length - 1; i >= 1; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                // We saw the first non-path separator\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            return hasRoot ? '/' : '.';\n        }\n        if (hasRoot && end === 1) {\n            return '//';\n        }\n        return path.slice(0, end);\n    },\n    basename(path, suffix) {\n        if (suffix !== undefined) {\n            validateString(suffix, 'ext');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\n            if (suffix === path) {\n                return '';\n            }\n            let extIdx = suffix.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= 0; --i) {\n                const code = path.charCodeAt(i);\n                if (code === CHAR_FORWARD_SLASH) {\n                    // If we reached a path separator that was not part of a set of path\n                    // separators at the end of the string, stop now\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        // We saw the first non-path separator, remember this index in case\n                        // we need it if the extension ends up not matching\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        // Try to match the explicit extension\n                        if (code === suffix.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                // We matched the extension, so mark this as the end of our path\n                                // component\n                                end = i;\n                            }\n                        }\n                        else {\n                            // Extension does not match, so our result is the entire path\n                            // component\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= 0; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // path component\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        for (let i = path.length - 1; i >= 0; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            // We saw a non-dot character immediately before the dot\n            preDotState === 0 ||\n            // The (right-most) trimmed path component is exactly '..'\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '/'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let start;\n        if (isAbsolute) {\n            ret.root = '/';\n            start = 1;\n        }\n        else {\n            start = 0;\n        }\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Get non-dir info\n        for (; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            const start = startPart === 0 && isAbsolute ? 1 : startPart;\n            if (startDot === -1 ||\n                // We saw a non-dot character immediately before the dot\n                preDotState === 0 ||\n                // The (right-most) trimmed path component is exactly '..'\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(start, end);\n            }\n            else {\n                ret.name = path.slice(start, startDot);\n                ret.base = path.slice(start, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        if (startPart > 0) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else if (isAbsolute) {\n            ret.dir = '/';\n        }\n        return ret;\n    },\n    sep: '/',\n    delimiter: ':',\n    win32: null,\n    posix: null\n};\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\nexport const normalize = (platformIsWin32 ? win32.normalize : posix.normalize);\nexport const join = (platformIsWin32 ? win32.join : posix.join);\nexport const resolve = (platformIsWin32 ? win32.resolve : posix.resolve);\nexport const relative = (platformIsWin32 ? win32.relative : posix.relative);\nexport const dirname = (platformIsWin32 ? win32.dirname : posix.dirname);\nexport const basename = (platformIsWin32 ? win32.basename : posix.basename);\nexport const extname = (platformIsWin32 ? win32.extname : posix.extname);\nexport const sep = (platformIsWin32 ? win32.sep : posix.sep);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../nls.js';\nexport const LANGUAGE_DEFAULT = 'en';\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isLinuxSnap = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isElectron = false;\nlet _isIOS = false;\nlet _isCI = false;\nlet _isMobile = false;\nlet _locale = undefined;\nlet _language = LANGUAGE_DEFAULT;\nlet _platformLocale = LANGUAGE_DEFAULT;\nlet _translationsConfigFile = undefined;\nlet _userAgent = undefined;\nconst $globalThis = globalThis;\nlet nodeProcess = undefined;\nif (typeof $globalThis.vscode !== 'undefined' && typeof $globalThis.vscode.process !== 'undefined') {\n    // Native environment (sandboxed)\n    nodeProcess = $globalThis.vscode.process;\n}\nelse if (typeof process !== 'undefined' && typeof process?.versions?.node === 'string') {\n    // Native environment (non-sandboxed)\n    nodeProcess = process;\n}\nconst isElectronProcess = typeof nodeProcess?.versions?.electron === 'string';\nconst isElectronRenderer = isElectronProcess && nodeProcess?.type === 'renderer';\n// Native environment\nif (typeof nodeProcess === 'object') {\n    _isWindows = (nodeProcess.platform === 'win32');\n    _isMacintosh = (nodeProcess.platform === 'darwin');\n    _isLinux = (nodeProcess.platform === 'linux');\n    _isLinuxSnap = _isLinux && !!nodeProcess.env['SNAP'] && !!nodeProcess.env['SNAP_REVISION'];\n    _isElectron = isElectronProcess;\n    _isCI = !!nodeProcess.env['CI'] || !!nodeProcess.env['BUILD_ARTIFACTSTAGINGDIRECTORY'];\n    _locale = LANGUAGE_DEFAULT;\n    _language = LANGUAGE_DEFAULT;\n    const rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n    if (rawNlsConfig) {\n        try {\n            const nlsConfig = JSON.parse(rawNlsConfig);\n            _locale = nlsConfig.userLocale;\n            _platformLocale = nlsConfig.osLocale;\n            _language = nlsConfig.resolvedLanguage || LANGUAGE_DEFAULT;\n            _translationsConfigFile = nlsConfig.languagePack?.translationsConfigFile;\n        }\n        catch (e) {\n        }\n    }\n    _isNative = true;\n}\n// Web environment\nelse if (typeof navigator === 'object' && !isElectronRenderer) {\n    _userAgent = navigator.userAgent;\n    _isWindows = _userAgent.indexOf('Windows') >= 0;\n    _isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n    _isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n    _isLinux = _userAgent.indexOf('Linux') >= 0;\n    _isMobile = _userAgent?.indexOf('Mobi') >= 0;\n    _isWeb = true;\n    _language = nls.getNLSLanguage() || LANGUAGE_DEFAULT;\n    _locale = navigator.language.toLowerCase();\n    _platformLocale = _locale;\n}\n// Unknown environment\nelse {\n    console.error('Unable to resolve platform.');\n}\nlet _platform = 0 /* Platform.Web */;\nif (_isMacintosh) {\n    _platform = 1 /* Platform.Mac */;\n}\nelse if (_isWindows) {\n    _platform = 3 /* Platform.Windows */;\n}\nelse if (_isLinux) {\n    _platform = 2 /* Platform.Linux */;\n}\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isWebWorker = (_isWeb && typeof $globalThis.importScripts === 'function');\nexport const webWorkerOrigin = isWebWorker ? $globalThis.origin : undefined;\nexport const isIOS = _isIOS;\nexport const isMobile = _isMobile;\nexport const userAgent = _userAgent;\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese or de for German)\n */\nexport const language = _language;\nexport const setTimeout0IsFaster = (typeof $globalThis.postMessage === 'function' && !$globalThis.importScripts);\n/**\n * See https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#:~:text=than%204%2C%20then-,set%20timeout%20to%204,-.\n *\n * Works similarly to `setTimeout(0)` but doesn't suffer from the 4ms artificial delay\n * that browsers set when the nesting level is > 5.\n */\nexport const setTimeout0 = (() => {\n    if (setTimeout0IsFaster) {\n        const pending = [];\n        $globalThis.addEventListener('message', (e) => {\n            if (e.data && e.data.vscodeScheduleAsyncWork) {\n                for (let i = 0, len = pending.length; i < len; i++) {\n                    const candidate = pending[i];\n                    if (candidate.id === e.data.vscodeScheduleAsyncWork) {\n                        pending.splice(i, 1);\n                        candidate.callback();\n                        return;\n                    }\n                }\n            }\n        });\n        let lastId = 0;\n        return (callback) => {\n            const myId = ++lastId;\n            pending.push({\n                id: myId,\n                callback: callback\n            });\n            $globalThis.postMessage({ vscodeScheduleAsyncWork: myId }, '*');\n        };\n    }\n    return (callback) => setTimeout(callback);\n})();\nexport const OS = (_isMacintosh || _isIOS ? 2 /* OperatingSystem.Macintosh */ : (_isWindows ? 1 /* OperatingSystem.Windows */ : 3 /* OperatingSystem.Linux */));\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian() {\n    if (!_isLittleEndianComputed) {\n        _isLittleEndianComputed = true;\n        const test = new Uint8Array(2);\n        test[0] = 1;\n        test[1] = 2;\n        const view = new Uint16Array(test.buffer);\n        _isLittleEndian = (view[0] === (2 << 8) + 1);\n    }\n    return _isLittleEndian;\n}\nexport const isChrome = !!(userAgent && userAgent.indexOf('Chrome') >= 0);\nexport const isFirefox = !!(userAgent && userAgent.indexOf('Firefox') >= 0);\nexport const isSafari = !!(!isChrome && (userAgent && userAgent.indexOf('Safari') >= 0));\nexport const isEdge = !!(userAgent && userAgent.indexOf('Edg/') >= 0);\nexport const isAndroid = !!(userAgent && userAgent.indexOf('Android') >= 0);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isMacintosh, isWindows } from './platform.js';\nlet safeProcess;\n// Native sandbox environment\nconst vscodeGlobal = globalThis.vscode;\nif (typeof vscodeGlobal !== 'undefined' && typeof vscodeGlobal.process !== 'undefined') {\n    const sandboxProcess = vscodeGlobal.process;\n    safeProcess = {\n        get platform() { return sandboxProcess.platform; },\n        get arch() { return sandboxProcess.arch; },\n        get env() { return sandboxProcess.env; },\n        cwd() { return sandboxProcess.cwd(); }\n    };\n}\n// Native node.js environment\nelse if (typeof process !== 'undefined' && typeof process?.versions?.node === 'string') {\n    safeProcess = {\n        get platform() { return process.platform; },\n        get arch() { return process.arch; },\n        get env() { return process.env; },\n        cwd() { return process.env['VSCODE_CWD'] || process.cwd(); }\n    };\n}\n// Web environment\nelse {\n    safeProcess = {\n        // Supported\n        get platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n        get arch() { return undefined; /* arch is undefined in web */ },\n        // Unsupported\n        get env() { return {}; },\n        cwd() { return '/'; }\n    };\n}\n/**\n * Provides safe access to the `cwd` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `/`.\n *\n * @skipMangle\n */\nexport const cwd = safeProcess.cwd;\n/**\n * Provides safe access to the `env` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `{}`.\n */\nexport const env = safeProcess.env;\n/**\n * Provides safe access to the `platform` property in node.js, sandboxed or web\n * environments.\n */\nexport const platform = safeProcess.platform;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as extpath from './extpath.js';\nimport { Schemas } from './network.js';\nimport * as paths from './path.js';\nimport { isLinux, isWindows } from './platform.js';\nimport { compare as strCompare, equalsIgnoreCase } from './strings.js';\nimport { URI, uriToFsPath } from './uri.js';\nexport function originalFSPath(uri) {\n    return uriToFsPath(uri, true);\n}\nexport class ExtUri {\n    constructor(_ignorePathCasing) {\n        this._ignorePathCasing = _ignorePathCasing;\n    }\n    compare(uri1, uri2, ignoreFragment = false) {\n        if (uri1 === uri2) {\n            return 0;\n        }\n        return strCompare(this.getComparisonKey(uri1, ignoreFragment), this.getComparisonKey(uri2, ignoreFragment));\n    }\n    isEqual(uri1, uri2, ignoreFragment = false) {\n        if (uri1 === uri2) {\n            return true;\n        }\n        if (!uri1 || !uri2) {\n            return false;\n        }\n        return this.getComparisonKey(uri1, ignoreFragment) === this.getComparisonKey(uri2, ignoreFragment);\n    }\n    getComparisonKey(uri, ignoreFragment = false) {\n        return uri.with({\n            path: this._ignorePathCasing(uri) ? uri.path.toLowerCase() : undefined,\n            fragment: ignoreFragment ? null : undefined\n        }).toString();\n    }\n    isEqualOrParent(base, parentCandidate, ignoreFragment = false) {\n        if (base.scheme === parentCandidate.scheme) {\n            if (base.scheme === Schemas.file) {\n                return extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), this._ignorePathCasing(base)) && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n            }\n            if (isEqualAuthority(base.authority, parentCandidate.authority)) {\n                return extpath.isEqualOrParent(base.path, parentCandidate.path, this._ignorePathCasing(base), '/') && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n            }\n        }\n        return false;\n    }\n    // --- path math\n    joinPath(resource, ...pathFragment) {\n        return URI.joinPath(resource, ...pathFragment);\n    }\n    basenameOrAuthority(resource) {\n        return basename(resource) || resource.authority;\n    }\n    basename(resource) {\n        return paths.posix.basename(resource.path);\n    }\n    extname(resource) {\n        return paths.posix.extname(resource.path);\n    }\n    dirname(resource) {\n        if (resource.path.length === 0) {\n            return resource;\n        }\n        let dirname;\n        if (resource.scheme === Schemas.file) {\n            dirname = URI.file(paths.dirname(originalFSPath(resource))).path;\n        }\n        else {\n            dirname = paths.posix.dirname(resource.path);\n            if (resource.authority && dirname.length && dirname.charCodeAt(0) !== 47 /* CharCode.Slash */) {\n                console.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n                dirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n            }\n        }\n        return resource.with({\n            path: dirname\n        });\n    }\n    normalizePath(resource) {\n        if (!resource.path.length) {\n            return resource;\n        }\n        let normalizedPath;\n        if (resource.scheme === Schemas.file) {\n            normalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n        }\n        else {\n            normalizedPath = paths.posix.normalize(resource.path);\n        }\n        return resource.with({\n            path: normalizedPath\n        });\n    }\n    relativePath(from, to) {\n        if (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n            return undefined;\n        }\n        if (from.scheme === Schemas.file) {\n            const relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n            return isWindows ? extpath.toSlashes(relativePath) : relativePath;\n        }\n        let fromPath = from.path || '/';\n        const toPath = to.path || '/';\n        if (this._ignorePathCasing(from)) {\n            // make casing of fromPath match toPath\n            let i = 0;\n            for (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n                if (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n                    if (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n                        break;\n                    }\n                }\n            }\n            fromPath = toPath.substr(0, i) + fromPath.substr(i);\n        }\n        return paths.posix.relative(fromPath, toPath);\n    }\n    resolvePath(base, path) {\n        if (base.scheme === Schemas.file) {\n            const newURI = URI.file(paths.resolve(originalFSPath(base), path));\n            return base.with({\n                authority: newURI.authority,\n                path: newURI.path\n            });\n        }\n        path = extpath.toPosixPath(path); // we allow path to be a windows path\n        return base.with({\n            path: paths.posix.resolve(base.path, path)\n        });\n    }\n    // --- misc\n    isAbsolutePath(resource) {\n        return !!resource.path && resource.path[0] === '/';\n    }\n    isEqualAuthority(a1, a2) {\n        return a1 === a2 || (a1 !== undefined && a2 !== undefined && equalsIgnoreCase(a1, a2));\n    }\n    hasTrailingPathSeparator(resource, sep = paths.sep) {\n        if (resource.scheme === Schemas.file) {\n            const fsp = originalFSPath(resource);\n            return fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n        }\n        else {\n            const p = resource.path;\n            return (p.length > 1 && p.charCodeAt(p.length - 1) === 47 /* CharCode.Slash */) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n        }\n    }\n    removeTrailingPathSeparator(resource, sep = paths.sep) {\n        // Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n        if (hasTrailingPathSeparator(resource, sep)) {\n            return resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n        }\n        return resource;\n    }\n    addTrailingPathSeparator(resource, sep = paths.sep) {\n        let isRootSep = false;\n        if (resource.scheme === Schemas.file) {\n            const fsp = originalFSPath(resource);\n            isRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n        }\n        else {\n            sep = '/';\n            const p = resource.path;\n            isRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === 47 /* CharCode.Slash */;\n        }\n        if (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n            return resource.with({ path: resource.path + '/' });\n        }\n        return resource;\n    }\n}\n/**\n * Unbiased utility that takes uris \"as they are\". This means it can be interchanged with\n * uri#toString() usages. The following is true\n * ```\n * assertEqual(aUri.toString() === bUri.toString(), exturi.isEqual(aUri, bUri))\n * ```\n */\nexport const extUri = new ExtUri(() => false);\n/**\n * BIASED utility that _mostly_ ignored the case of urs paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriBiasedIgnorePathCase = new ExtUri(uri => {\n    // A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n    // Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n    return uri.scheme === Schemas.file ? !isLinux : true;\n});\n/**\n * BIASED utility that always ignores the casing of uris paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriIgnorePathCase = new ExtUri(_ => true);\nexport const isEqual = extUri.isEqual.bind(extUri);\nexport const isEqualOrParent = extUri.isEqualOrParent.bind(extUri);\nexport const getComparisonKey = extUri.getComparisonKey.bind(extUri);\nexport const basenameOrAuthority = extUri.basenameOrAuthority.bind(extUri);\nexport const basename = extUri.basename.bind(extUri);\nexport const extname = extUri.extname.bind(extUri);\nexport const dirname = extUri.dirname.bind(extUri);\nexport const joinPath = extUri.joinPath.bind(extUri);\nexport const normalizePath = extUri.normalizePath.bind(extUri);\nexport const relativePath = extUri.relativePath.bind(extUri);\nexport const resolvePath = extUri.resolvePath.bind(extUri);\nexport const isAbsolutePath = extUri.isAbsolutePath.bind(extUri);\nexport const isEqualAuthority = extUri.isEqualAuthority.bind(extUri);\nexport const hasTrailingPathSeparator = extUri.hasTrailingPathSeparator.bind(extUri);\nexport const removeTrailingPathSeparator = extUri.removeTrailingPathSeparator.bind(extUri);\nexport const addTrailingPathSeparator = extUri.addTrailingPathSeparator.bind(extUri);\n/**\n * Data URI related helpers.\n */\nexport var DataUri;\n(function (DataUri) {\n    DataUri.META_DATA_LABEL = 'label';\n    DataUri.META_DATA_DESCRIPTION = 'description';\n    DataUri.META_DATA_SIZE = 'size';\n    DataUri.META_DATA_MIME = 'mime';\n    function parseMetaData(dataUri) {\n        const metadata = new Map();\n        // Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n        // the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n        const meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n        meta.split(';').forEach(property => {\n            const [key, value] = property.split(':');\n            if (key && value) {\n                metadata.set(key, value);\n            }\n        });\n        // Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n        // the mime is: image/png\n        const mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n        if (mime) {\n            metadata.set(DataUri.META_DATA_MIME, mime);\n        }\n        return metadata;\n    }\n    DataUri.parseMetaData = parseMetaData;\n})(DataUri || (DataUri = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\nvar Severity;\n(function (Severity) {\n    Severity[Severity[\"Ignore\"] = 0] = \"Ignore\";\n    Severity[Severity[\"Info\"] = 1] = \"Info\";\n    Severity[Severity[\"Warning\"] = 2] = \"Warning\";\n    Severity[Severity[\"Error\"] = 3] = \"Error\";\n})(Severity || (Severity = {}));\n(function (Severity) {\n    const _error = 'error';\n    const _warning = 'warning';\n    const _warn = 'warn';\n    const _info = 'info';\n    const _ignore = 'ignore';\n    /**\n     * Parses 'error', 'warning', 'warn', 'info' in call casings\n     * and falls back to ignore.\n     */\n    function fromValue(value) {\n        if (!value) {\n            return Severity.Ignore;\n        }\n        if (strings.equalsIgnoreCase(_error, value)) {\n            return Severity.Error;\n        }\n        if (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\n            return Severity.Warning;\n        }\n        if (strings.equalsIgnoreCase(_info, value)) {\n            return Severity.Info;\n        }\n        return Severity.Ignore;\n    }\n    Severity.fromValue = fromValue;\n    function toString(severity) {\n        switch (severity) {\n            case Severity.Error: return _error;\n            case Severity.Warning: return _warning;\n            case Severity.Info: return _info;\n            default: return _ignore;\n        }\n    }\n    Severity.toString = toString;\n})(Severity || (Severity = {}));\nexport default Severity;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nconst hasPerformanceNow = (globalThis.performance && typeof globalThis.performance.now === 'function');\nexport class StopWatch {\n    static create(highResolution) {\n        return new StopWatch(highResolution);\n    }\n    constructor(highResolution) {\n        this._now = hasPerformanceNow && highResolution === false ? Date.now : globalThis.performance.now.bind(globalThis.performance);\n        this._startTime = this._now();\n        this._stopTime = -1;\n    }\n    stop() {\n        this._stopTime = this._now();\n    }\n    reset() {\n        this._startTime = this._now();\n        this._stopTime = -1;\n    }\n    elapsed() {\n        if (this._stopTime !== -1) {\n            return this._stopTime - this._startTime;\n        }\n        return this._now() - this._startTime;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LRUCachedFunction } from './cache.js';\nimport { Lazy } from './lazy.js';\nexport function isFalsyOrWhitespace(str) {\n    if (!str || typeof str !== 'string') {\n        return true;\n    }\n    return str.trim().length === 0;\n}\nconst _formatRegexp = /{(\\d+)}/g;\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value, ...args) {\n    if (args.length === 0) {\n        return value;\n    }\n    return value.replace(_formatRegexp, function (match, group) {\n        const idx = parseInt(group, 10);\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\n            match :\n            args[idx];\n    });\n}\n/**\n * Encodes the given value so that it can be used as literal value in html attributes.\n *\n * In other words, computes `$val`, such that `attr` in `<div attr=\"$val\" />` has the runtime value `value`.\n * This prevents XSS injection.\n */\nexport function htmlAttributeEncodeValue(value) {\n    return value.replace(/[<>\"'&]/g, ch => {\n        switch (ch) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '\"': return '&quot;';\n            case '\\'': return '&apos;';\n            case '&': return '&amp;';\n        }\n        return ch;\n    });\n}\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html) {\n    return html.replace(/[<>&]/g, function (match) {\n        switch (match) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return match;\n        }\n    });\n}\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value) {\n    return value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack, needle = ' ') {\n    const trimmed = ltrim(haystack, needle);\n    return rtrim(trimmed, needle);\n}\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length;\n    if (needleLen === 0 || haystack.length === 0) {\n        return haystack;\n    }\n    let offset = 0;\n    while (haystack.indexOf(needle, offset) === offset) {\n        offset = offset + needleLen;\n    }\n    return haystack.substring(offset);\n}\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length, haystackLen = haystack.length;\n    if (needleLen === 0 || haystackLen === 0) {\n        return haystack;\n    }\n    let offset = haystackLen, idx = -1;\n    while (true) {\n        idx = haystack.lastIndexOf(needle, offset - 1);\n        if (idx === -1 || idx + needleLen !== offset) {\n            break;\n        }\n        if (idx === 0) {\n            return '';\n        }\n        offset = idx;\n    }\n    return haystack.substring(0, offset);\n}\nexport function convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\nexport function stripWildcards(pattern) {\n    return pattern.replace(/\\*/g, '');\n}\nexport function createRegExp(searchString, isRegex, options = {}) {\n    if (!searchString) {\n        throw new Error('Cannot create regex from empty string');\n    }\n    if (!isRegex) {\n        searchString = escapeRegExpCharacters(searchString);\n    }\n    if (options.wholeWord) {\n        if (!/\\B/.test(searchString.charAt(0))) {\n            searchString = '\\\\b' + searchString;\n        }\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n            searchString = searchString + '\\\\b';\n        }\n    }\n    let modifiers = '';\n    if (options.global) {\n        modifiers += 'g';\n    }\n    if (!options.matchCase) {\n        modifiers += 'i';\n    }\n    if (options.multiline) {\n        modifiers += 'm';\n    }\n    if (options.unicode) {\n        modifiers += 'u';\n    }\n    return new RegExp(searchString, modifiers);\n}\nexport function regExpLeadsToEndlessLoop(regexp) {\n    // Exit early if it's one of these special cases which are meant to match\n    // against an empty string\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n        return false;\n    }\n    // We check against an empty string. If the regular expression doesn't advance\n    // (e.g. ends in an endless loop) it will match an empty string.\n    const match = regexp.exec('');\n    return !!(match && regexp.lastIndex === 0);\n}\nexport function splitLines(str) {\n    return str.split(/\\r\\n|\\r|\\n/);\n}\nexport function splitLinesIncludeSeparators(str) {\n    const linesWithSeparators = [];\n    const splitLinesAndSeparators = str.split(/(\\r\\n|\\r|\\n)/);\n    for (let i = 0; i < Math.ceil(splitLinesAndSeparators.length / 2); i++) {\n        linesWithSeparators.push(splitLinesAndSeparators[2 * i] + (splitLinesAndSeparators[2 * i + 1] ?? ''));\n    }\n    return linesWithSeparators;\n}\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str) {\n    for (let i = 0, len = str.length; i < len; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* CharCode.Space */ && chCode !== 9 /* CharCode.Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str, start = 0, end = str.length) {\n    for (let i = start; i < end; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* CharCode.Space */ && chCode !== 9 /* CharCode.Tab */) {\n            return str.substring(start, i);\n        }\n    }\n    return str.substring(start, end);\n}\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str, startIndex = str.length - 1) {\n    for (let i = startIndex; i >= 0; i--) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* CharCode.Space */ && chCode !== 9 /* CharCode.Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function compare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexport function compareSubstring(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        const codeA = a.charCodeAt(aStart);\n        const codeB = b.charCodeAt(bStart);\n        if (codeA < codeB) {\n            return -1;\n        }\n        else if (codeA > codeB) {\n            return 1;\n        }\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nexport function compareIgnoreCase(a, b) {\n    return compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\nexport function compareSubstringIgnoreCase(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        let codeA = a.charCodeAt(aStart);\n        let codeB = b.charCodeAt(bStart);\n        if (codeA === codeB) {\n            // equal\n            continue;\n        }\n        if (codeA >= 128 || codeB >= 128) {\n            // not ASCII letters -> fallback to lower-casing strings\n            return compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n        }\n        // mapper lower-case ascii letter onto upper-case varinats\n        // [97-122] (lower ascii) --> [65-90] (upper ascii)\n        if (isLowerAsciiLetter(codeA)) {\n            codeA -= 32;\n        }\n        if (isLowerAsciiLetter(codeB)) {\n            codeB -= 32;\n        }\n        // compare both code points\n        const diff = codeA - codeB;\n        if (diff === 0) {\n            continue;\n        }\n        return diff;\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nexport function isAsciiDigit(code) {\n    return code >= 48 /* CharCode.Digit0 */ && code <= 57 /* CharCode.Digit9 */;\n}\nexport function isLowerAsciiLetter(code) {\n    return code >= 97 /* CharCode.a */ && code <= 122 /* CharCode.z */;\n}\nexport function isUpperAsciiLetter(code) {\n    return code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */;\n}\nexport function equalsIgnoreCase(a, b) {\n    return a.length === b.length && compareSubstringIgnoreCase(a, b) === 0;\n}\nexport function startsWithIgnoreCase(str, candidate) {\n    const candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n    return compareSubstringIgnoreCase(str, candidate, 0, candidateLength) === 0;\n}\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a, b) {\n    const len = Math.min(a.length, b.length);\n    let i;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a, b) {\n    const len = Math.min(a.length, b.length);\n    let i;\n    const aLastIndex = a.length - 1;\n    const bLastIndex = b.length - 1;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate, lowSurrogate) {\n    return ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str, len, offset) {\n    const charCode = str.charCodeAt(offset);\n    if (isHighSurrogate(charCode) && offset + 1 < len) {\n        const nextCharCode = str.charCodeAt(offset + 1);\n        if (isLowSurrogate(nextCharCode)) {\n            return computeCodePoint(charCode, nextCharCode);\n        }\n    }\n    return charCode;\n}\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str, offset) {\n    const charCode = str.charCodeAt(offset - 1);\n    if (isLowSurrogate(charCode) && offset > 1) {\n        const prevCharCode = str.charCodeAt(offset - 2);\n        if (isHighSurrogate(prevCharCode)) {\n            return computeCodePoint(prevCharCode, charCode);\n        }\n    }\n    return charCode;\n}\nexport class CodePointIterator {\n    get offset() {\n        return this._offset;\n    }\n    constructor(str, offset = 0) {\n        this._str = str;\n        this._len = str.length;\n        this._offset = offset;\n    }\n    setOffset(offset) {\n        this._offset = offset;\n    }\n    prevCodePoint() {\n        const codePoint = getPrevCodePoint(this._str, this._offset);\n        this._offset -= (codePoint >= 65536 /* Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n        return codePoint;\n    }\n    nextCodePoint() {\n        const codePoint = getNextCodePoint(this._str, this._len, this._offset);\n        this._offset += (codePoint >= 65536 /* Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n        return codePoint;\n    }\n    eol() {\n        return (this._offset >= this._len);\n    }\n}\nexport class GraphemeIterator {\n    get offset() {\n        return this._iterator.offset;\n    }\n    constructor(str, offset = 0) {\n        this._iterator = new CodePointIterator(str, offset);\n    }\n    nextGraphemeLength() {\n        const graphemeBreakTree = GraphemeBreakTree.getInstance();\n        const iterator = this._iterator;\n        const initialOffset = iterator.offset;\n        let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n        while (!iterator.eol()) {\n            const offset = iterator.offset;\n            const nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n            if (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n                // move iterator back\n                iterator.setOffset(offset);\n                break;\n            }\n            graphemeBreakType = nextGraphemeBreakType;\n        }\n        return (iterator.offset - initialOffset);\n    }\n    prevGraphemeLength() {\n        const graphemeBreakTree = GraphemeBreakTree.getInstance();\n        const iterator = this._iterator;\n        const initialOffset = iterator.offset;\n        let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n        while (iterator.offset > 0) {\n            const offset = iterator.offset;\n            const prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n            if (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n                // move iterator back\n                iterator.setOffset(offset);\n                break;\n            }\n            graphemeBreakType = prevGraphemeBreakType;\n        }\n        return (initialOffset - iterator.offset);\n    }\n    eol() {\n        return this._iterator.eol();\n    }\n}\nexport function nextCharLength(str, initialOffset) {\n    const iterator = new GraphemeIterator(str, initialOffset);\n    return iterator.nextGraphemeLength();\n}\nexport function prevCharLength(str, initialOffset) {\n    const iterator = new GraphemeIterator(str, initialOffset);\n    return iterator.prevGraphemeLength();\n}\nexport function getCharContainingOffset(str, offset) {\n    if (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n        offset--;\n    }\n    const endOffset = offset + nextCharLength(str, offset);\n    const startOffset = endOffset - prevCharLength(str, endOffset);\n    return [startOffset, endOffset];\n}\nlet CONTAINS_RTL = undefined;\nfunction makeContainsRtl() {\n    // Generated using https://github.com/alexdima/unicode-utils/blob/main/rtl-test.js\n    return /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u088E\\u08A0-\\u08C9\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE35\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDD23\\uDE80-\\uDEA9\\uDEAD-\\uDF45\\uDF51-\\uDF81\\uDF86-\\uDFF6]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD4B-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n}\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str) {\n    if (!CONTAINS_RTL) {\n        CONTAINS_RTL = makeContainsRtl();\n    }\n    return CONTAINS_RTL.test(str);\n}\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str) {\n    return IS_BASIC_ASCII.test(str);\n}\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str) {\n    return UNUSUAL_LINE_TERMINATORS.test(str);\n}\nexport function isFullWidthCharacter(charCode) {\n    // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n    // http://jrgraphix.net/research/unicode_blocks.php\n    //          2E80 - 2EFF   CJK Radicals Supplement\n    //          2F00 - 2FDF   Kangxi Radicals\n    //          2FF0 - 2FFF   Ideographic Description Characters\n    //          3000 - 303F   CJK Symbols and Punctuation\n    //          3040 - 309F   Hiragana\n    //          30A0 - 30FF   Katakana\n    //          3100 - 312F   Bopomofo\n    //          3130 - 318F   Hangul Compatibility Jamo\n    //          3190 - 319F   Kanbun\n    //          31A0 - 31BF   Bopomofo Extended\n    //          31F0 - 31FF   Katakana Phonetic Extensions\n    //          3200 - 32FF   Enclosed CJK Letters and Months\n    //          3300 - 33FF   CJK Compatibility\n    //          3400 - 4DBF   CJK Unified Ideographs Extension A\n    //          4DC0 - 4DFF   Yijing Hexagram Symbols\n    //          4E00 - 9FFF   CJK Unified Ideographs\n    //          A000 - A48F   Yi Syllables\n    //          A490 - A4CF   Yi Radicals\n    //          AC00 - D7AF   Hangul Syllables\n    // [IGNORE] D800 - DB7F   High Surrogates\n    // [IGNORE] DB80 - DBFF   High Private Use Surrogates\n    // [IGNORE] DC00 - DFFF   Low Surrogates\n    // [IGNORE] E000 - F8FF   Private Use Area\n    //          F900 - FAFF   CJK Compatibility Ideographs\n    // [IGNORE] FB00 - FB4F   Alphabetic Presentation Forms\n    // [IGNORE] FB50 - FDFF   Arabic Presentation Forms-A\n    // [IGNORE] FE00 - FE0F   Variation Selectors\n    // [IGNORE] FE20 - FE2F   Combining Half Marks\n    // [IGNORE] FE30 - FE4F   CJK Compatibility Forms\n    // [IGNORE] FE50 - FE6F   Small Form Variants\n    // [IGNORE] FE70 - FEFF   Arabic Presentation Forms-B\n    //          FF00 - FFEF   Halfwidth and Fullwidth Forms\n    //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n    //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n    // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n    // [IGNORE] FFF0 - FFFF   Specials\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n}\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexdima/unicode-utils/blob/main/emoji-test.js\n */\nexport function isEmojiImprecise(x) {\n    return ((x >= 0x1F1E6 && x <= 0x1F1FF) || (x === 8986) || (x === 8987) || (x === 9200)\n        || (x === 9203) || (x >= 9728 && x <= 10175) || (x === 11088) || (x === 11093)\n        || (x >= 127744 && x <= 128591) || (x >= 128640 && x <= 128764)\n        || (x >= 128992 && x <= 129008) || (x >= 129280 && x <= 129535)\n        || (x >= 129648 && x <= 129782));\n}\n// -- UTF-8 BOM\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* CharCode.UTF8_BOM */);\nexport function startsWithUTF8BOM(str) {\n    return !!(str && str.length > 0 && str.charCodeAt(0) === 65279 /* CharCode.UTF8_BOM */);\n}\nexport function containsUppercaseCharacter(target, ignoreEscapedChars = false) {\n    if (!target) {\n        return false;\n    }\n    if (ignoreEscapedChars) {\n        target = target.replace(/\\\\./g, '');\n    }\n    return target.toLowerCase() !== target;\n}\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n) {\n    const LETTERS_CNT = (90 /* CharCode.Z */ - 65 /* CharCode.A */ + 1);\n    n = n % (2 * LETTERS_CNT);\n    if (n < LETTERS_CNT) {\n        return String.fromCharCode(97 /* CharCode.a */ + n);\n    }\n    return String.fromCharCode(65 /* CharCode.A */ + n - LETTERS_CNT);\n}\nfunction breakBetweenGraphemeBreakType(breakTypeA, breakTypeB) {\n    // http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n    // !!! Let's make the common case a bit faster\n    if (breakTypeA === 0 /* GraphemeBreakType.Other */) {\n        // see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n        return (breakTypeB !== 5 /* GraphemeBreakType.Extend */ && breakTypeB !== 7 /* GraphemeBreakType.SpacingMark */);\n    }\n    // Do not break between a CR and LF. Otherwise, break before and after controls.\n    // GB3                                        CR × LF\n    // GB4                       (Control | CR | LF) ÷\n    // GB5                                           ÷ (Control | CR | LF)\n    if (breakTypeA === 2 /* GraphemeBreakType.CR */) {\n        if (breakTypeB === 3 /* GraphemeBreakType.LF */) {\n            return false; // GB3\n        }\n    }\n    if (breakTypeA === 4 /* GraphemeBreakType.Control */ || breakTypeA === 2 /* GraphemeBreakType.CR */ || breakTypeA === 3 /* GraphemeBreakType.LF */) {\n        return true; // GB4\n    }\n    if (breakTypeB === 4 /* GraphemeBreakType.Control */ || breakTypeB === 2 /* GraphemeBreakType.CR */ || breakTypeB === 3 /* GraphemeBreakType.LF */) {\n        return true; // GB5\n    }\n    // Do not break Hangul syllable sequences.\n    // GB6                                         L × (L | V | LV | LVT)\n    // GB7                                  (LV | V) × (V | T)\n    // GB8                                 (LVT | T) × T\n    if (breakTypeA === 8 /* GraphemeBreakType.L */) {\n        if (breakTypeB === 8 /* GraphemeBreakType.L */ || breakTypeB === 9 /* GraphemeBreakType.V */ || breakTypeB === 11 /* GraphemeBreakType.LV */ || breakTypeB === 12 /* GraphemeBreakType.LVT */) {\n            return false; // GB6\n        }\n    }\n    if (breakTypeA === 11 /* GraphemeBreakType.LV */ || breakTypeA === 9 /* GraphemeBreakType.V */) {\n        if (breakTypeB === 9 /* GraphemeBreakType.V */ || breakTypeB === 10 /* GraphemeBreakType.T */) {\n            return false; // GB7\n        }\n    }\n    if (breakTypeA === 12 /* GraphemeBreakType.LVT */ || breakTypeA === 10 /* GraphemeBreakType.T */) {\n        if (breakTypeB === 10 /* GraphemeBreakType.T */) {\n            return false; // GB8\n        }\n    }\n    // Do not break before extending characters or ZWJ.\n    // GB9                                           × (Extend | ZWJ)\n    if (breakTypeB === 5 /* GraphemeBreakType.Extend */ || breakTypeB === 13 /* GraphemeBreakType.ZWJ */) {\n        return false; // GB9\n    }\n    // The GB9a and GB9b rules only apply to extended grapheme clusters:\n    // Do not break before SpacingMarks, or after Prepend characters.\n    // GB9a                                          × SpacingMark\n    // GB9b                                  Prepend ×\n    if (breakTypeB === 7 /* GraphemeBreakType.SpacingMark */) {\n        return false; // GB9a\n    }\n    if (breakTypeA === 1 /* GraphemeBreakType.Prepend */) {\n        return false; // GB9b\n    }\n    // Do not break within emoji modifier sequences or emoji zwj sequences.\n    // GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n    if (breakTypeA === 13 /* GraphemeBreakType.ZWJ */ && breakTypeB === 14 /* GraphemeBreakType.Extended_Pictographic */) {\n        // Note: we are not implementing the rule entirely here to avoid introducing states\n        return false; // GB11\n    }\n    // GB12                          sot (RI RI)* RI × RI\n    // GB13                        [^RI] (RI RI)* RI × RI\n    if (breakTypeA === 6 /* GraphemeBreakType.Regional_Indicator */ && breakTypeB === 6 /* GraphemeBreakType.Regional_Indicator */) {\n        // Note: we are not implementing the rule entirely here to avoid introducing states\n        return false; // GB12 & GB13\n    }\n    // GB999                                     Any ÷ Any\n    return true;\n}\nclass GraphemeBreakTree {\n    static { this._INSTANCE = null; }\n    static getInstance() {\n        if (!GraphemeBreakTree._INSTANCE) {\n            GraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n        }\n        return GraphemeBreakTree._INSTANCE;\n    }\n    constructor() {\n        this._data = getGraphemeBreakRawData();\n    }\n    getGraphemeBreakType(codePoint) {\n        // !!! Let's make 7bit ASCII a bit faster: 0..31\n        if (codePoint < 32) {\n            if (codePoint === 10 /* CharCode.LineFeed */) {\n                return 3 /* GraphemeBreakType.LF */;\n            }\n            if (codePoint === 13 /* CharCode.CarriageReturn */) {\n                return 2 /* GraphemeBreakType.CR */;\n            }\n            return 4 /* GraphemeBreakType.Control */;\n        }\n        // !!! Let's make 7bit ASCII a bit faster: 32..126\n        if (codePoint < 127) {\n            return 0 /* GraphemeBreakType.Other */;\n        }\n        const data = this._data;\n        const nodeCount = data.length / 3;\n        let nodeIndex = 1;\n        while (nodeIndex <= nodeCount) {\n            if (codePoint < data[3 * nodeIndex]) {\n                // go left\n                nodeIndex = 2 * nodeIndex;\n            }\n            else if (codePoint > data[3 * nodeIndex + 1]) {\n                // go right\n                nodeIndex = 2 * nodeIndex + 1;\n            }\n            else {\n                // hit\n                return data[3 * nodeIndex + 2];\n            }\n        }\n        return 0 /* GraphemeBreakType.Other */;\n    }\n}\nfunction getGraphemeBreakRawData() {\n    // generated using https://github.com/alexdima/unicode-utils/blob/main/grapheme-break.js\n    return JSON.parse('[0,0,0,51229,51255,12,44061,44087,12,127462,127487,6,7083,7085,5,47645,47671,12,54813,54839,12,128678,128678,14,3270,3270,5,9919,9923,14,45853,45879,12,49437,49463,12,53021,53047,12,71216,71218,7,128398,128399,14,129360,129374,14,2519,2519,5,4448,4519,9,9742,9742,14,12336,12336,14,44957,44983,12,46749,46775,12,48541,48567,12,50333,50359,12,52125,52151,12,53917,53943,12,69888,69890,5,73018,73018,5,127990,127990,14,128558,128559,14,128759,128760,14,129653,129655,14,2027,2035,5,2891,2892,7,3761,3761,5,6683,6683,5,8293,8293,4,9825,9826,14,9999,9999,14,43452,43453,5,44509,44535,12,45405,45431,12,46301,46327,12,47197,47223,12,48093,48119,12,48989,49015,12,49885,49911,12,50781,50807,12,51677,51703,12,52573,52599,12,53469,53495,12,54365,54391,12,65279,65279,4,70471,70472,7,72145,72147,7,119173,119179,5,127799,127818,14,128240,128244,14,128512,128512,14,128652,128652,14,128721,128722,14,129292,129292,14,129445,129450,14,129734,129743,14,1476,1477,5,2366,2368,7,2750,2752,7,3076,3076,5,3415,3415,5,4141,4144,5,6109,6109,5,6964,6964,5,7394,7400,5,9197,9198,14,9770,9770,14,9877,9877,14,9968,9969,14,10084,10084,14,43052,43052,5,43713,43713,5,44285,44311,12,44733,44759,12,45181,45207,12,45629,45655,12,46077,46103,12,46525,46551,12,46973,46999,12,47421,47447,12,47869,47895,12,48317,48343,12,48765,48791,12,49213,49239,12,49661,49687,12,50109,50135,12,50557,50583,12,51005,51031,12,51453,51479,12,51901,51927,12,52349,52375,12,52797,52823,12,53245,53271,12,53693,53719,12,54141,54167,12,54589,54615,12,55037,55063,12,69506,69509,5,70191,70193,5,70841,70841,7,71463,71467,5,72330,72342,5,94031,94031,5,123628,123631,5,127763,127765,14,127941,127941,14,128043,128062,14,128302,128317,14,128465,128467,14,128539,128539,14,128640,128640,14,128662,128662,14,128703,128703,14,128745,128745,14,129004,129007,14,129329,129330,14,129402,129402,14,129483,129483,14,129686,129704,14,130048,131069,14,173,173,4,1757,1757,1,2200,2207,5,2434,2435,7,2631,2632,5,2817,2817,5,3008,3008,5,3201,3201,5,3387,3388,5,3542,3542,5,3902,3903,7,4190,4192,5,6002,6003,5,6439,6440,5,6765,6770,7,7019,7027,5,7154,7155,7,8205,8205,13,8505,8505,14,9654,9654,14,9757,9757,14,9792,9792,14,9852,9853,14,9890,9894,14,9937,9937,14,9981,9981,14,10035,10036,14,11035,11036,14,42654,42655,5,43346,43347,7,43587,43587,5,44006,44007,7,44173,44199,12,44397,44423,12,44621,44647,12,44845,44871,12,45069,45095,12,45293,45319,12,45517,45543,12,45741,45767,12,45965,45991,12,46189,46215,12,46413,46439,12,46637,46663,12,46861,46887,12,47085,47111,12,47309,47335,12,47533,47559,12,47757,47783,12,47981,48007,12,48205,48231,12,48429,48455,12,48653,48679,12,48877,48903,12,49101,49127,12,49325,49351,12,49549,49575,12,49773,49799,12,49997,50023,12,50221,50247,12,50445,50471,12,50669,50695,12,50893,50919,12,51117,51143,12,51341,51367,12,51565,51591,12,51789,51815,12,52013,52039,12,52237,52263,12,52461,52487,12,52685,52711,12,52909,52935,12,53133,53159,12,53357,53383,12,53581,53607,12,53805,53831,12,54029,54055,12,54253,54279,12,54477,54503,12,54701,54727,12,54925,54951,12,55149,55175,12,68101,68102,5,69762,69762,7,70067,70069,7,70371,70378,5,70720,70721,7,71087,71087,5,71341,71341,5,71995,71996,5,72249,72249,7,72850,72871,5,73109,73109,5,118576,118598,5,121505,121519,5,127245,127247,14,127568,127569,14,127777,127777,14,127872,127891,14,127956,127967,14,128015,128016,14,128110,128172,14,128259,128259,14,128367,128368,14,128424,128424,14,128488,128488,14,128530,128532,14,128550,128551,14,128566,128566,14,128647,128647,14,128656,128656,14,128667,128673,14,128691,128693,14,128715,128715,14,128728,128732,14,128752,128752,14,128765,128767,14,129096,129103,14,129311,129311,14,129344,129349,14,129394,129394,14,129413,129425,14,129466,129471,14,129511,129535,14,129664,129666,14,129719,129722,14,129760,129767,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2307,2307,7,2382,2383,7,2497,2500,5,2563,2563,7,2677,2677,5,2763,2764,7,2879,2879,5,2914,2915,5,3021,3021,5,3142,3144,5,3263,3263,5,3285,3286,5,3398,3400,7,3530,3530,5,3633,3633,5,3864,3865,5,3974,3975,5,4155,4156,7,4229,4230,5,5909,5909,7,6078,6085,7,6277,6278,5,6451,6456,7,6744,6750,5,6846,6846,5,6972,6972,5,7074,7077,5,7146,7148,7,7222,7223,5,7416,7417,5,8234,8238,4,8417,8417,5,9000,9000,14,9203,9203,14,9730,9731,14,9748,9749,14,9762,9763,14,9776,9783,14,9800,9811,14,9831,9831,14,9872,9873,14,9882,9882,14,9900,9903,14,9929,9933,14,9941,9960,14,9974,9974,14,9989,9989,14,10006,10006,14,10062,10062,14,10160,10160,14,11647,11647,5,12953,12953,14,43019,43019,5,43232,43249,5,43443,43443,5,43567,43568,7,43696,43696,5,43765,43765,7,44013,44013,5,44117,44143,12,44229,44255,12,44341,44367,12,44453,44479,12,44565,44591,12,44677,44703,12,44789,44815,12,44901,44927,12,45013,45039,12,45125,45151,12,45237,45263,12,45349,45375,12,45461,45487,12,45573,45599,12,45685,45711,12,45797,45823,12,45909,45935,12,46021,46047,12,46133,46159,12,46245,46271,12,46357,46383,12,46469,46495,12,46581,46607,12,46693,46719,12,46805,46831,12,46917,46943,12,47029,47055,12,47141,47167,12,47253,47279,12,47365,47391,12,47477,47503,12,47589,47615,12,47701,47727,12,47813,47839,12,47925,47951,12,48037,48063,12,48149,48175,12,48261,48287,12,48373,48399,12,48485,48511,12,48597,48623,12,48709,48735,12,48821,48847,12,48933,48959,12,49045,49071,12,49157,49183,12,49269,49295,12,49381,49407,12,49493,49519,12,49605,49631,12,49717,49743,12,49829,49855,12,49941,49967,12,50053,50079,12,50165,50191,12,50277,50303,12,50389,50415,12,50501,50527,12,50613,50639,12,50725,50751,12,50837,50863,12,50949,50975,12,51061,51087,12,51173,51199,12,51285,51311,12,51397,51423,12,51509,51535,12,51621,51647,12,51733,51759,12,51845,51871,12,51957,51983,12,52069,52095,12,52181,52207,12,52293,52319,12,52405,52431,12,52517,52543,12,52629,52655,12,52741,52767,12,52853,52879,12,52965,52991,12,53077,53103,12,53189,53215,12,53301,53327,12,53413,53439,12,53525,53551,12,53637,53663,12,53749,53775,12,53861,53887,12,53973,53999,12,54085,54111,12,54197,54223,12,54309,54335,12,54421,54447,12,54533,54559,12,54645,54671,12,54757,54783,12,54869,54895,12,54981,55007,12,55093,55119,12,55243,55291,10,66045,66045,5,68325,68326,5,69688,69702,5,69817,69818,5,69957,69958,7,70089,70092,5,70198,70199,5,70462,70462,5,70502,70508,5,70750,70750,5,70846,70846,7,71100,71101,5,71230,71230,7,71351,71351,5,71737,71738,5,72000,72000,7,72160,72160,5,72273,72278,5,72752,72758,5,72882,72883,5,73031,73031,5,73461,73462,7,94192,94193,7,119149,119149,7,121403,121452,5,122915,122916,5,126980,126980,14,127358,127359,14,127535,127535,14,127759,127759,14,127771,127771,14,127792,127793,14,127825,127867,14,127897,127899,14,127945,127945,14,127985,127986,14,128000,128007,14,128021,128021,14,128066,128100,14,128184,128235,14,128249,128252,14,128266,128276,14,128335,128335,14,128379,128390,14,128407,128419,14,128444,128444,14,128481,128481,14,128499,128499,14,128526,128526,14,128536,128536,14,128543,128543,14,128556,128556,14,128564,128564,14,128577,128580,14,128643,128645,14,128649,128649,14,128654,128654,14,128660,128660,14,128664,128664,14,128675,128675,14,128686,128689,14,128695,128696,14,128705,128709,14,128717,128719,14,128725,128725,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129009,129023,14,129160,129167,14,129296,129304,14,129320,129327,14,129340,129342,14,129356,129356,14,129388,129392,14,129399,129400,14,129404,129407,14,129432,129442,14,129454,129455,14,129473,129474,14,129485,129487,14,129648,129651,14,129659,129660,14,129671,129679,14,129709,129711,14,129728,129730,14,129751,129753,14,129776,129782,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2274,2274,1,2363,2363,7,2377,2380,7,2402,2403,5,2494,2494,5,2507,2508,7,2558,2558,5,2622,2624,7,2641,2641,5,2691,2691,7,2759,2760,5,2786,2787,5,2876,2876,5,2881,2884,5,2901,2902,5,3006,3006,5,3014,3016,7,3072,3072,5,3134,3136,5,3157,3158,5,3260,3260,5,3266,3266,5,3274,3275,7,3328,3329,5,3391,3392,7,3405,3405,5,3457,3457,5,3536,3537,7,3551,3551,5,3636,3642,5,3764,3772,5,3895,3895,5,3967,3967,7,3993,4028,5,4146,4151,5,4182,4183,7,4226,4226,5,4253,4253,5,4957,4959,5,5940,5940,7,6070,6070,7,6087,6088,7,6158,6158,4,6432,6434,5,6448,6449,7,6679,6680,5,6742,6742,5,6754,6754,5,6783,6783,5,6912,6915,5,6966,6970,5,6978,6978,5,7042,7042,7,7080,7081,5,7143,7143,7,7150,7150,7,7212,7219,5,7380,7392,5,7412,7412,5,8203,8203,4,8232,8232,4,8265,8265,14,8400,8412,5,8421,8432,5,8617,8618,14,9167,9167,14,9200,9200,14,9410,9410,14,9723,9726,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9774,14,9786,9786,14,9794,9794,14,9823,9823,14,9828,9828,14,9833,9850,14,9855,9855,14,9875,9875,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9935,9935,14,9939,9939,14,9962,9962,14,9972,9972,14,9978,9978,14,9986,9986,14,9997,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10133,10135,14,10548,10549,14,11093,11093,14,12330,12333,5,12441,12442,5,42608,42610,5,43010,43010,5,43045,43046,5,43188,43203,7,43302,43309,5,43392,43394,5,43446,43449,5,43493,43493,5,43571,43572,7,43597,43597,7,43703,43704,5,43756,43757,5,44003,44004,7,44009,44010,7,44033,44059,12,44089,44115,12,44145,44171,12,44201,44227,12,44257,44283,12,44313,44339,12,44369,44395,12,44425,44451,12,44481,44507,12,44537,44563,12,44593,44619,12,44649,44675,12,44705,44731,12,44761,44787,12,44817,44843,12,44873,44899,12,44929,44955,12,44985,45011,12,45041,45067,12,45097,45123,12,45153,45179,12,45209,45235,12,45265,45291,12,45321,45347,12,45377,45403,12,45433,45459,12,45489,45515,12,45545,45571,12,45601,45627,12,45657,45683,12,45713,45739,12,45769,45795,12,45825,45851,12,45881,45907,12,45937,45963,12,45993,46019,12,46049,46075,12,46105,46131,12,46161,46187,12,46217,46243,12,46273,46299,12,46329,46355,12,46385,46411,12,46441,46467,12,46497,46523,12,46553,46579,12,46609,46635,12,46665,46691,12,46721,46747,12,46777,46803,12,46833,46859,12,46889,46915,12,46945,46971,12,47001,47027,12,47057,47083,12,47113,47139,12,47169,47195,12,47225,47251,12,47281,47307,12,47337,47363,12,47393,47419,12,47449,47475,12,47505,47531,12,47561,47587,12,47617,47643,12,47673,47699,12,47729,47755,12,47785,47811,12,47841,47867,12,47897,47923,12,47953,47979,12,48009,48035,12,48065,48091,12,48121,48147,12,48177,48203,12,48233,48259,12,48289,48315,12,48345,48371,12,48401,48427,12,48457,48483,12,48513,48539,12,48569,48595,12,48625,48651,12,48681,48707,12,48737,48763,12,48793,48819,12,48849,48875,12,48905,48931,12,48961,48987,12,49017,49043,12,49073,49099,12,49129,49155,12,49185,49211,12,49241,49267,12,49297,49323,12,49353,49379,12,49409,49435,12,49465,49491,12,49521,49547,12,49577,49603,12,49633,49659,12,49689,49715,12,49745,49771,12,49801,49827,12,49857,49883,12,49913,49939,12,49969,49995,12,50025,50051,12,50081,50107,12,50137,50163,12,50193,50219,12,50249,50275,12,50305,50331,12,50361,50387,12,50417,50443,12,50473,50499,12,50529,50555,12,50585,50611,12,50641,50667,12,50697,50723,12,50753,50779,12,50809,50835,12,50865,50891,12,50921,50947,12,50977,51003,12,51033,51059,12,51089,51115,12,51145,51171,12,51201,51227,12,51257,51283,12,51313,51339,12,51369,51395,12,51425,51451,12,51481,51507,12,51537,51563,12,51593,51619,12,51649,51675,12,51705,51731,12,51761,51787,12,51817,51843,12,51873,51899,12,51929,51955,12,51985,52011,12,52041,52067,12,52097,52123,12,52153,52179,12,52209,52235,12,52265,52291,12,52321,52347,12,52377,52403,12,52433,52459,12,52489,52515,12,52545,52571,12,52601,52627,12,52657,52683,12,52713,52739,12,52769,52795,12,52825,52851,12,52881,52907,12,52937,52963,12,52993,53019,12,53049,53075,12,53105,53131,12,53161,53187,12,53217,53243,12,53273,53299,12,53329,53355,12,53385,53411,12,53441,53467,12,53497,53523,12,53553,53579,12,53609,53635,12,53665,53691,12,53721,53747,12,53777,53803,12,53833,53859,12,53889,53915,12,53945,53971,12,54001,54027,12,54057,54083,12,54113,54139,12,54169,54195,12,54225,54251,12,54281,54307,12,54337,54363,12,54393,54419,12,54449,54475,12,54505,54531,12,54561,54587,12,54617,54643,12,54673,54699,12,54729,54755,12,54785,54811,12,54841,54867,12,54897,54923,12,54953,54979,12,55009,55035,12,55065,55091,12,55121,55147,12,55177,55203,12,65024,65039,5,65520,65528,4,66422,66426,5,68152,68154,5,69291,69292,5,69633,69633,5,69747,69748,5,69811,69814,5,69826,69826,5,69932,69932,7,70016,70017,5,70079,70080,7,70095,70095,5,70196,70196,5,70367,70367,5,70402,70403,7,70464,70464,5,70487,70487,5,70709,70711,7,70725,70725,7,70833,70834,7,70843,70844,7,70849,70849,7,71090,71093,5,71103,71104,5,71227,71228,7,71339,71339,5,71344,71349,5,71458,71461,5,71727,71735,5,71985,71989,7,71998,71998,5,72002,72002,7,72154,72155,5,72193,72202,5,72251,72254,5,72281,72283,5,72344,72345,5,72766,72766,7,72874,72880,5,72885,72886,5,73023,73029,5,73104,73105,5,73111,73111,5,92912,92916,5,94095,94098,5,113824,113827,4,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,125252,125258,5,127183,127183,14,127340,127343,14,127377,127386,14,127491,127503,14,127548,127551,14,127744,127756,14,127761,127761,14,127769,127769,14,127773,127774,14,127780,127788,14,127796,127797,14,127820,127823,14,127869,127869,14,127894,127895,14,127902,127903,14,127943,127943,14,127947,127950,14,127972,127972,14,127988,127988,14,127992,127994,14,128009,128011,14,128019,128019,14,128023,128041,14,128064,128064,14,128102,128107,14,128174,128181,14,128238,128238,14,128246,128247,14,128254,128254,14,128264,128264,14,128278,128299,14,128329,128330,14,128348,128359,14,128371,128377,14,128392,128393,14,128401,128404,14,128421,128421,14,128433,128434,14,128450,128452,14,128476,128478,14,128483,128483,14,128495,128495,14,128506,128506,14,128519,128520,14,128528,128528,14,128534,128534,14,128538,128538,14,128540,128542,14,128544,128549,14,128552,128555,14,128557,128557,14,128560,128563,14,128565,128565,14,128567,128576,14,128581,128591,14,128641,128642,14,128646,128646,14,128648,128648,14,128650,128651,14,128653,128653,14,128655,128655,14,128657,128659,14,128661,128661,14,128663,128663,14,128665,128666,14,128674,128674,14,128676,128677,14,128679,128685,14,128690,128690,14,128694,128694,14,128697,128702,14,128704,128704,14,128710,128714,14,128716,128716,14,128720,128720,14,128723,128724,14,128726,128727,14,128733,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129008,129008,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129661,129663,14,129667,129670,14,129680,129685,14,129705,129708,14,129712,129718,14,129723,129727,14,129731,129733,14,129744,129750,14,129754,129759,14,129768,129775,14,129783,129791,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2192,2193,1,2250,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3132,3132,5,3137,3140,7,3146,3149,5,3170,3171,5,3202,3203,7,3262,3262,7,3264,3265,7,3267,3268,7,3271,3272,7,3276,3277,5,3298,3299,5,3330,3331,7,3390,3390,5,3393,3396,5,3402,3404,7,3406,3406,1,3426,3427,5,3458,3459,7,3535,3535,5,3538,3540,5,3544,3550,7,3570,3571,7,3635,3635,7,3655,3662,5,3763,3763,7,3784,3789,5,3893,3893,5,3897,3897,5,3953,3966,5,3968,3972,5,3981,3991,5,4038,4038,5,4145,4145,7,4153,4154,5,4157,4158,5,4184,4185,5,4209,4212,5,4228,4228,7,4237,4237,5,4352,4447,8,4520,4607,10,5906,5908,5,5938,5939,5,5970,5971,5,6068,6069,5,6071,6077,5,6086,6086,5,6089,6099,5,6155,6157,5,6159,6159,5,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6862,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7679,5,8204,8204,5,8206,8207,4,8233,8233,4,8252,8252,14,8288,8292,4,8294,8303,4,8413,8416,5,8418,8420,5,8482,8482,14,8596,8601,14,8986,8987,14,9096,9096,14,9193,9196,14,9199,9199,14,9201,9202,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9729,14,9732,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9775,9775,14,9784,9785,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9874,14,9876,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9934,14,9936,9936,14,9938,9938,14,9940,9940,14,9961,9961,14,9963,9967,14,9970,9971,14,9973,9973,14,9975,9977,14,9979,9980,14,9982,9985,14,9987,9988,14,9992,9996,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10083,14,10085,10087,14,10145,10145,14,10175,10175,14,11013,11015,14,11088,11088,14,11503,11505,5,11744,11775,5,12334,12335,5,12349,12349,14,12951,12951,14,42607,42607,5,42612,42621,5,42736,42737,5,43014,43014,5,43043,43044,7,43047,43047,7,43136,43137,7,43204,43205,5,43263,43263,5,43335,43345,5,43360,43388,8,43395,43395,7,43444,43445,7,43450,43451,7,43454,43456,7,43561,43566,5,43569,43570,5,43573,43574,5,43596,43596,5,43644,43644,5,43698,43700,5,43710,43711,5,43755,43755,7,43758,43759,7,43766,43766,5,44005,44005,5,44008,44008,5,44012,44012,7,44032,44032,11,44060,44060,11,44088,44088,11,44116,44116,11,44144,44144,11,44172,44172,11,44200,44200,11,44228,44228,11,44256,44256,11,44284,44284,11,44312,44312,11,44340,44340,11,44368,44368,11,44396,44396,11,44424,44424,11,44452,44452,11,44480,44480,11,44508,44508,11,44536,44536,11,44564,44564,11,44592,44592,11,44620,44620,11,44648,44648,11,44676,44676,11,44704,44704,11,44732,44732,11,44760,44760,11,44788,44788,11,44816,44816,11,44844,44844,11,44872,44872,11,44900,44900,11,44928,44928,11,44956,44956,11,44984,44984,11,45012,45012,11,45040,45040,11,45068,45068,11,45096,45096,11,45124,45124,11,45152,45152,11,45180,45180,11,45208,45208,11,45236,45236,11,45264,45264,11,45292,45292,11,45320,45320,11,45348,45348,11,45376,45376,11,45404,45404,11,45432,45432,11,45460,45460,11,45488,45488,11,45516,45516,11,45544,45544,11,45572,45572,11,45600,45600,11,45628,45628,11,45656,45656,11,45684,45684,11,45712,45712,11,45740,45740,11,45768,45768,11,45796,45796,11,45824,45824,11,45852,45852,11,45880,45880,11,45908,45908,11,45936,45936,11,45964,45964,11,45992,45992,11,46020,46020,11,46048,46048,11,46076,46076,11,46104,46104,11,46132,46132,11,46160,46160,11,46188,46188,11,46216,46216,11,46244,46244,11,46272,46272,11,46300,46300,11,46328,46328,11,46356,46356,11,46384,46384,11,46412,46412,11,46440,46440,11,46468,46468,11,46496,46496,11,46524,46524,11,46552,46552,11,46580,46580,11,46608,46608,11,46636,46636,11,46664,46664,11,46692,46692,11,46720,46720,11,46748,46748,11,46776,46776,11,46804,46804,11,46832,46832,11,46860,46860,11,46888,46888,11,46916,46916,11,46944,46944,11,46972,46972,11,47000,47000,11,47028,47028,11,47056,47056,11,47084,47084,11,47112,47112,11,47140,47140,11,47168,47168,11,47196,47196,11,47224,47224,11,47252,47252,11,47280,47280,11,47308,47308,11,47336,47336,11,47364,47364,11,47392,47392,11,47420,47420,11,47448,47448,11,47476,47476,11,47504,47504,11,47532,47532,11,47560,47560,11,47588,47588,11,47616,47616,11,47644,47644,11,47672,47672,11,47700,47700,11,47728,47728,11,47756,47756,11,47784,47784,11,47812,47812,11,47840,47840,11,47868,47868,11,47896,47896,11,47924,47924,11,47952,47952,11,47980,47980,11,48008,48008,11,48036,48036,11,48064,48064,11,48092,48092,11,48120,48120,11,48148,48148,11,48176,48176,11,48204,48204,11,48232,48232,11,48260,48260,11,48288,48288,11,48316,48316,11,48344,48344,11,48372,48372,11,48400,48400,11,48428,48428,11,48456,48456,11,48484,48484,11,48512,48512,11,48540,48540,11,48568,48568,11,48596,48596,11,48624,48624,11,48652,48652,11,48680,48680,11,48708,48708,11,48736,48736,11,48764,48764,11,48792,48792,11,48820,48820,11,48848,48848,11,48876,48876,11,48904,48904,11,48932,48932,11,48960,48960,11,48988,48988,11,49016,49016,11,49044,49044,11,49072,49072,11,49100,49100,11,49128,49128,11,49156,49156,11,49184,49184,11,49212,49212,11,49240,49240,11,49268,49268,11,49296,49296,11,49324,49324,11,49352,49352,11,49380,49380,11,49408,49408,11,49436,49436,11,49464,49464,11,49492,49492,11,49520,49520,11,49548,49548,11,49576,49576,11,49604,49604,11,49632,49632,11,49660,49660,11,49688,49688,11,49716,49716,11,49744,49744,11,49772,49772,11,49800,49800,11,49828,49828,11,49856,49856,11,49884,49884,11,49912,49912,11,49940,49940,11,49968,49968,11,49996,49996,11,50024,50024,11,50052,50052,11,50080,50080,11,50108,50108,11,50136,50136,11,50164,50164,11,50192,50192,11,50220,50220,11,50248,50248,11,50276,50276,11,50304,50304,11,50332,50332,11,50360,50360,11,50388,50388,11,50416,50416,11,50444,50444,11,50472,50472,11,50500,50500,11,50528,50528,11,50556,50556,11,50584,50584,11,50612,50612,11,50640,50640,11,50668,50668,11,50696,50696,11,50724,50724,11,50752,50752,11,50780,50780,11,50808,50808,11,50836,50836,11,50864,50864,11,50892,50892,11,50920,50920,11,50948,50948,11,50976,50976,11,51004,51004,11,51032,51032,11,51060,51060,11,51088,51088,11,51116,51116,11,51144,51144,11,51172,51172,11,51200,51200,11,51228,51228,11,51256,51256,11,51284,51284,11,51312,51312,11,51340,51340,11,51368,51368,11,51396,51396,11,51424,51424,11,51452,51452,11,51480,51480,11,51508,51508,11,51536,51536,11,51564,51564,11,51592,51592,11,51620,51620,11,51648,51648,11,51676,51676,11,51704,51704,11,51732,51732,11,51760,51760,11,51788,51788,11,51816,51816,11,51844,51844,11,51872,51872,11,51900,51900,11,51928,51928,11,51956,51956,11,51984,51984,11,52012,52012,11,52040,52040,11,52068,52068,11,52096,52096,11,52124,52124,11,52152,52152,11,52180,52180,11,52208,52208,11,52236,52236,11,52264,52264,11,52292,52292,11,52320,52320,11,52348,52348,11,52376,52376,11,52404,52404,11,52432,52432,11,52460,52460,11,52488,52488,11,52516,52516,11,52544,52544,11,52572,52572,11,52600,52600,11,52628,52628,11,52656,52656,11,52684,52684,11,52712,52712,11,52740,52740,11,52768,52768,11,52796,52796,11,52824,52824,11,52852,52852,11,52880,52880,11,52908,52908,11,52936,52936,11,52964,52964,11,52992,52992,11,53020,53020,11,53048,53048,11,53076,53076,11,53104,53104,11,53132,53132,11,53160,53160,11,53188,53188,11,53216,53216,11,53244,53244,11,53272,53272,11,53300,53300,11,53328,53328,11,53356,53356,11,53384,53384,11,53412,53412,11,53440,53440,11,53468,53468,11,53496,53496,11,53524,53524,11,53552,53552,11,53580,53580,11,53608,53608,11,53636,53636,11,53664,53664,11,53692,53692,11,53720,53720,11,53748,53748,11,53776,53776,11,53804,53804,11,53832,53832,11,53860,53860,11,53888,53888,11,53916,53916,11,53944,53944,11,53972,53972,11,54000,54000,11,54028,54028,11,54056,54056,11,54084,54084,11,54112,54112,11,54140,54140,11,54168,54168,11,54196,54196,11,54224,54224,11,54252,54252,11,54280,54280,11,54308,54308,11,54336,54336,11,54364,54364,11,54392,54392,11,54420,54420,11,54448,54448,11,54476,54476,11,54504,54504,11,54532,54532,11,54560,54560,11,54588,54588,11,54616,54616,11,54644,54644,11,54672,54672,11,54700,54700,11,54728,54728,11,54756,54756,11,54784,54784,11,54812,54812,11,54840,54840,11,54868,54868,11,54896,54896,11,54924,54924,11,54952,54952,11,54980,54980,11,55008,55008,11,55036,55036,11,55064,55064,11,55092,55092,11,55120,55120,11,55148,55148,11,55176,55176,11,55216,55238,9,64286,64286,5,65056,65071,5,65438,65439,5,65529,65531,4,66272,66272,5,68097,68099,5,68108,68111,5,68159,68159,5,68900,68903,5,69446,69456,5,69632,69632,7,69634,69634,7,69744,69744,5,69759,69761,5,69808,69810,7,69815,69816,7,69821,69821,1,69837,69837,1,69927,69931,5,69933,69940,5,70003,70003,5,70018,70018,7,70070,70078,5,70082,70083,1,70094,70094,7,70188,70190,7,70194,70195,7,70197,70197,7,70206,70206,5,70368,70370,7,70400,70401,5,70459,70460,5,70463,70463,7,70465,70468,7,70475,70477,7,70498,70499,7,70512,70516,5,70712,70719,5,70722,70724,5,70726,70726,5,70832,70832,5,70835,70840,5,70842,70842,5,70845,70845,5,70847,70848,5,70850,70851,5,71088,71089,7,71096,71099,7,71102,71102,7,71132,71133,5,71219,71226,5,71229,71229,5,71231,71232,5,71340,71340,7,71342,71343,7,71350,71350,7,71453,71455,5,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,118528,118573,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123566,123566,5,125136,125142,5,126976,126979,14,126981,127182,14,127184,127231,14,127279,127279,14,127344,127345,14,127374,127374,14,127405,127461,14,127489,127490,14,127514,127514,14,127538,127546,14,127561,127567,14,127570,127743,14,127757,127758,14,127760,127760,14,127762,127762,14,127766,127768,14,127770,127770,14,127772,127772,14,127775,127776,14,127778,127779,14,127789,127791,14,127794,127795,14,127798,127798,14,127819,127819,14,127824,127824,14,127868,127868,14,127870,127871,14,127892,127893,14,127896,127896,14,127900,127901,14,127904,127940,14,127942,127942,14,127944,127944,14,127946,127946,14,127951,127955,14,127968,127971,14,127973,127984,14,127987,127987,14,127989,127989,14,127991,127991,14,127995,127999,5,128008,128008,14,128012,128014,14,128017,128018,14,128020,128020,14,128022,128022,14,128042,128042,14,128063,128063,14,128065,128065,14,128101,128101,14,128108,128109,14,128173,128173,14,128182,128183,14,128236,128237,14,128239,128239,14,128245,128245,14,128248,128248,14,128253,128253,14,128255,128258,14,128260,128263,14,128265,128265,14,128277,128277,14,128300,128301,14,128326,128328,14,128331,128334,14,128336,128347,14,128360,128366,14,128369,128370,14,128378,128378,14,128391,128391,14,128394,128397,14,128400,128400,14,128405,128406,14,128420,128420,14,128422,128423,14,128425,128432,14,128435,128443,14,128445,128449,14,128453,128464,14,128468,128475,14,128479,128480,14,128482,128482,14,128484,128487,14,128489,128494,14,128496,128498,14,128500,128505,14,128507,128511,14,128513,128518,14,128521,128525,14,128527,128527,14,128529,128529,14,128533,128533,14,128535,128535,14,128537,128537,14]');\n}\n//#endregion\n/**\n * Computes the offset after performing a left delete on the given string,\n * while considering unicode grapheme/emoji rules.\n*/\nexport function getLeftDeleteOffset(offset, str) {\n    if (offset === 0) {\n        return 0;\n    }\n    // Try to delete emoji part.\n    const emojiOffset = getOffsetBeforeLastEmojiComponent(offset, str);\n    if (emojiOffset !== undefined) {\n        return emojiOffset;\n    }\n    // Otherwise, just skip a single code point.\n    const iterator = new CodePointIterator(str, offset);\n    iterator.prevCodePoint();\n    return iterator.offset;\n}\nfunction getOffsetBeforeLastEmojiComponent(initialOffset, str) {\n    // See https://www.unicode.org/reports/tr51/tr51-14.html#EBNF_and_Regex for the\n    // structure of emojis.\n    const iterator = new CodePointIterator(str, initialOffset);\n    let codePoint = iterator.prevCodePoint();\n    // Skip modifiers\n    while ((isEmojiModifier(codePoint) || codePoint === 65039 /* CodePoint.emojiVariantSelector */ || codePoint === 8419 /* CodePoint.enclosingKeyCap */)) {\n        if (iterator.offset === 0) {\n            // Cannot skip modifier, no preceding emoji base.\n            return undefined;\n        }\n        codePoint = iterator.prevCodePoint();\n    }\n    // Expect base emoji\n    if (!isEmojiImprecise(codePoint)) {\n        // Unexpected code point, not a valid emoji.\n        return undefined;\n    }\n    let resultOffset = iterator.offset;\n    if (resultOffset > 0) {\n        // Skip optional ZWJ code points that combine multiple emojis.\n        // In theory, we should check if that ZWJ actually combines multiple emojis\n        // to prevent deleting ZWJs in situations we didn't account for.\n        const optionalZwjCodePoint = iterator.prevCodePoint();\n        if (optionalZwjCodePoint === 8205 /* CodePoint.zwj */) {\n            resultOffset = iterator.offset;\n        }\n    }\n    return resultOffset;\n}\nfunction isEmojiModifier(codePoint) {\n    return 0x1F3FB <= codePoint && codePoint <= 0x1F3FF;\n}\nexport const noBreakWhitespace = '\\xa0';\nexport class AmbiguousCharacters {\n    static { this.ambiguousCharacterData = new Lazy(() => {\n        // Generated using https://github.com/hediet/vscode-unicode-data\n        // Stored as key1, value1, key2, value2, ...\n        return JSON.parse('{\\\"_common\\\":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,8218,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,8242,96,1370,96,1523,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,91,10088,40,10098,40,12308,40,64830,40,65341,93,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,65342,94,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,65372,124,65293,45,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71922,67,71913,67,65315,67,8557,67,8450,67,8493,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,108,8739,73,9213,73,65512,73,1633,108,1777,73,66336,108,125127,108,120783,73,120793,73,120803,73,120813,73,120823,73,130033,73,65321,73,8544,73,8464,73,8465,73,119816,73,119868,73,119920,73,120024,73,120128,73,120180,73,120232,73,120284,73,120336,73,120388,73,120440,73,65356,108,8572,73,8467,108,119845,108,119897,108,119949,108,120001,108,120053,108,120105,73,120157,73,120209,73,120261,73,120313,73,120365,73,120417,73,120469,73,448,73,120496,73,120554,73,120612,73,120670,73,120728,73,11410,73,1030,73,1216,73,1493,108,1503,108,1575,108,126464,108,126592,108,65166,108,65165,108,1994,108,11599,73,5825,73,42226,73,93992,73,66186,124,66313,124,119338,76,8556,76,8466,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71919,87,71910,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,66293,90,71909,90,65338,90,8484,90,8488,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90,65282,34,65284,36,65285,37,65286,38,65290,42,65291,43,65294,46,65295,47,65296,48,65297,49,65298,50,65299,51,65300,52,65301,53,65302,54,65303,55,65304,56,65305,57,65308,60,65309,61,65310,62,65312,64,65316,68,65318,70,65319,71,65324,76,65329,81,65330,82,65333,85,65334,86,65335,87,65343,95,65346,98,65348,100,65350,102,65355,107,65357,109,65358,110,65361,113,65362,114,65364,116,65365,117,65367,119,65370,122,65371,123,65373,125,119846,109],\\\"_default\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"cs\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"de\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"es\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"fr\\\":[65374,126,65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"it\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ja\\\":[8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65292,44,65307,59],\\\"ko\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pl\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pt-BR\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"qps-ploc\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ru\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,305,105,921,73,1009,112,215,120,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"tr\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"zh-hans\\\":[65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41],\\\"zh-hant\\\":[8211,45,65374,126,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65307,59]}');\n    }); }\n    static { this.cache = new LRUCachedFunction({ getCacheKey: JSON.stringify }, (locales) => {\n        function arrayToMap(arr) {\n            const result = new Map();\n            for (let i = 0; i < arr.length; i += 2) {\n                result.set(arr[i], arr[i + 1]);\n            }\n            return result;\n        }\n        function mergeMaps(map1, map2) {\n            const result = new Map(map1);\n            for (const [key, value] of map2) {\n                result.set(key, value);\n            }\n            return result;\n        }\n        function intersectMaps(map1, map2) {\n            if (!map1) {\n                return map2;\n            }\n            const result = new Map();\n            for (const [key, value] of map1) {\n                if (map2.has(key)) {\n                    result.set(key, value);\n                }\n            }\n            return result;\n        }\n        const data = this.ambiguousCharacterData.value;\n        let filteredLocales = locales.filter((l) => !l.startsWith('_') && l in data);\n        if (filteredLocales.length === 0) {\n            filteredLocales = ['_default'];\n        }\n        let languageSpecificMap = undefined;\n        for (const locale of filteredLocales) {\n            const map = arrayToMap(data[locale]);\n            languageSpecificMap = intersectMaps(languageSpecificMap, map);\n        }\n        const commonMap = arrayToMap(data['_common']);\n        const map = mergeMaps(commonMap, languageSpecificMap);\n        return new AmbiguousCharacters(map);\n    }); }\n    static getInstance(locales) {\n        return AmbiguousCharacters.cache.get(Array.from(locales));\n    }\n    static { this._locales = new Lazy(() => Object.keys(AmbiguousCharacters.ambiguousCharacterData.value).filter((k) => !k.startsWith('_'))); }\n    static getLocales() {\n        return AmbiguousCharacters._locales.value;\n    }\n    constructor(confusableDictionary) {\n        this.confusableDictionary = confusableDictionary;\n    }\n    isAmbiguous(codePoint) {\n        return this.confusableDictionary.has(codePoint);\n    }\n    /**\n     * Returns the non basic ASCII code point that the given code point can be confused,\n     * or undefined if such code point does note exist.\n     */\n    getPrimaryConfusable(codePoint) {\n        return this.confusableDictionary.get(codePoint);\n    }\n    getConfusableCodePoints() {\n        return new Set(this.confusableDictionary.keys());\n    }\n}\nexport class InvisibleCharacters {\n    static getRawData() {\n        // Generated using https://github.com/hediet/vscode-unicode-data\n        return JSON.parse('[9,10,11,12,13,32,127,160,173,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12288,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999]');\n    }\n    static { this._data = undefined; }\n    static getData() {\n        if (!this._data) {\n            this._data = new Set(InvisibleCharacters.getRawData());\n        }\n        return this._data;\n    }\n    static isInvisibleCharacter(codePoint) {\n        return InvisibleCharacters.getData().has(codePoint);\n    }\n    static get codePoints() {\n        return InvisibleCharacters.getData();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Can be passed into the Delayed to defer using a microtask\n * */\nexport const MicrotaskDelay = Symbol('MicrotaskDelay');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Codicon } from './codicons.js';\nexport var ThemeColor;\n(function (ThemeColor) {\n    function isThemeColor(obj) {\n        return obj && typeof obj === 'object' && typeof obj.id === 'string';\n    }\n    ThemeColor.isThemeColor = isThemeColor;\n})(ThemeColor || (ThemeColor = {}));\nexport var ThemeIcon;\n(function (ThemeIcon) {\n    ThemeIcon.iconNameSegment = '[A-Za-z0-9]+';\n    ThemeIcon.iconNameExpression = '[A-Za-z0-9-]+';\n    ThemeIcon.iconModifierExpression = '~[A-Za-z]+';\n    ThemeIcon.iconNameCharacter = '[A-Za-z0-9~-]';\n    const ThemeIconIdRegex = new RegExp(`^(${ThemeIcon.iconNameExpression})(${ThemeIcon.iconModifierExpression})?$`);\n    function asClassNameArray(icon) {\n        const match = ThemeIconIdRegex.exec(icon.id);\n        if (!match) {\n            return asClassNameArray(Codicon.error);\n        }\n        const [, id, modifier] = match;\n        const classNames = ['codicon', 'codicon-' + id];\n        if (modifier) {\n            classNames.push('codicon-modifier-' + modifier.substring(1));\n        }\n        return classNames;\n    }\n    ThemeIcon.asClassNameArray = asClassNameArray;\n    function asClassName(icon) {\n        return asClassNameArray(icon).join(' ');\n    }\n    ThemeIcon.asClassName = asClassName;\n    function asCSSSelector(icon) {\n        return '.' + asClassNameArray(icon).join('.');\n    }\n    ThemeIcon.asCSSSelector = asCSSSelector;\n    function isThemeIcon(obj) {\n        return obj && typeof obj === 'object' && typeof obj.id === 'string' && (typeof obj.color === 'undefined' || ThemeColor.isThemeColor(obj.color));\n    }\n    ThemeIcon.isThemeIcon = isThemeIcon;\n    const _regexFromString = new RegExp(`^\\\\$\\\\((${ThemeIcon.iconNameExpression}(?:${ThemeIcon.iconModifierExpression})?)\\\\)$`);\n    function fromString(str) {\n        const match = _regexFromString.exec(str);\n        if (!match) {\n            return undefined;\n        }\n        const [, name] = match;\n        return { id: name };\n    }\n    ThemeIcon.fromString = fromString;\n    function fromId(id) {\n        return { id };\n    }\n    ThemeIcon.fromId = fromId;\n    function modify(icon, modifier) {\n        let id = icon.id;\n        const tildeIndex = id.lastIndexOf('~');\n        if (tildeIndex !== -1) {\n            id = id.substring(0, tildeIndex);\n        }\n        if (modifier) {\n            id = `${id}~${modifier}`;\n        }\n        return { id };\n    }\n    ThemeIcon.modify = modify;\n    function getModifier(icon) {\n        const tildeIndex = icon.id.lastIndexOf('~');\n        if (tildeIndex !== -1) {\n            return icon.id.substring(tildeIndex + 1);\n        }\n        return undefined;\n    }\n    ThemeIcon.getModifier = getModifier;\n    function isEqual(ti1, ti2) {\n        return ti1.id === ti2.id && ti1.color?.id === ti2.color?.id;\n    }\n    ThemeIcon.isEqual = isEqual;\n})(ThemeIcon || (ThemeIcon = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str) {\n    return (typeof str === 'string');\n}\n/**\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj) {\n    // The method can't do a type cast since there are type (like strings) which\n    // are subclasses of any put not positvely matched by the function. Hence type\n    // narrowing results in wrong results.\n    return typeof obj === 'object'\n        && obj !== null\n        && !Array.isArray(obj)\n        && !(obj instanceof RegExp)\n        && !(obj instanceof Date);\n}\n/**\n * @returns whether the provided parameter is of type `Buffer` or Uint8Array dervived type\n */\nexport function isTypedArray(obj) {\n    const TypedArray = Object.getPrototypeOf(Uint8Array);\n    return typeof obj === 'object'\n        && obj instanceof TypedArray;\n}\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj) {\n    return (typeof obj === 'number' && !isNaN(obj));\n}\n/**\n * @returns whether the provided parameter is an Iterable, casting to the given generic\n */\nexport function isIterable(obj) {\n    return !!obj && typeof obj[Symbol.iterator] === 'function';\n}\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj) {\n    return (obj === true || obj === false);\n}\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj) {\n    return (typeof obj === 'undefined');\n}\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined(arg) {\n    return !isUndefinedOrNull(arg);\n}\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj) {\n    return (isUndefined(obj) || obj === null);\n}\nexport function assertType(condition, type) {\n    if (!condition) {\n        throw new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n    }\n}\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined(arg) {\n    if (isUndefinedOrNull(arg)) {\n        throw new Error('Assertion Failed: argument is undefined or null');\n    }\n    return arg;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj) {\n    return (typeof obj === 'function');\n}\nexport function validateConstraints(args, constraints) {\n    const len = Math.min(args.length, constraints.length);\n    for (let i = 0; i < len; i++) {\n        validateConstraint(args[i], constraints[i]);\n    }\n}\nexport function validateConstraint(arg, constraint) {\n    if (isString(constraint)) {\n        if (typeof arg !== constraint) {\n            throw new Error(`argument does not match constraint: typeof ${constraint}`);\n        }\n    }\n    else if (isFunction(constraint)) {\n        try {\n            if (arg instanceof constraint) {\n                return;\n            }\n        }\n        catch {\n            // ignore\n        }\n        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n            return;\n        }\n        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n            return;\n        }\n        throw new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function toUint8(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 255 /* Constants.MAX_UINT_8 */) {\n        return 255 /* Constants.MAX_UINT_8 */;\n    }\n    return v | 0;\n}\nexport function toUint32(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 4294967295 /* Constants.MAX_UINT_32 */) {\n        return 4294967295 /* Constants.MAX_UINT_32 */;\n    }\n    return v | 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as paths from './path.js';\nimport { isWindows } from './platform.js';\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\nfunction _validateUri(ret, _strict) {\n    // scheme, must be set\n    if (!ret.scheme && _strict) {\n        throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n    }\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\n    // If a URI contains an authority component, then the path component\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\n    // does not contain an authority component, then the path cannot begin\n    // with two slash characters (\"//\").\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme, _strict) {\n    if (!scheme && !_strict) {\n        return 'file';\n    }\n    return scheme;\n}\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme, path) {\n    // the slash-character is our 'default base' as we don't\n    // support constructing URIs relative to other URIs. This\n    // also means that we alter and potentially break paths.\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI {\n    static isUri(thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string'\n            && typeof thing.fsPath === 'string'\n            && typeof thing.with === 'function'\n            && typeof thing.toString === 'function';\n    }\n    /**\n     * @internal\n     */\n    constructor(schemeOrData, authority, path, query, fragment, _strict = false) {\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n            // no validation because it's this URI\n            // that creates uri components.\n            // _validateUri(this);\n        }\n        else {\n            this.scheme = _schemeFix(schemeOrData, _strict);\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this, _strict);\n        }\n    }\n    // ---- filesystem path -----------------------\n    /**\n     * Returns a string representing the corresponding file system path of this URI.\n     * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n     * platform specific path separator.\n     *\n     * * Will *not* validate the path for invalid characters and semantics.\n     * * Will *not* look at the scheme of this URI.\n     * * The result shall *not* be used for display purposes but for accessing a file on disk.\n     *\n     *\n     * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n     * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n     *\n     * ```ts\n        const u = URI.parse('file://server/c$/folder/file.txt')\n        u.authority === 'server'\n        u.path === '/shares/c$/file.txt'\n        u.fsPath === '\\\\server\\c$\\folder\\file.txt'\n    ```\n     *\n     * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n     * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n     * with URIs that represent files on disk (`file` scheme).\n     */\n    get fsPath() {\n        // if (this.scheme !== 'file') {\n        // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n        // }\n        return uriToFsPath(this, false);\n    }\n    // ---- modify to new -------------------------\n    with(change) {\n        if (!change) {\n            return this;\n        }\n        let { scheme, authority, path, query, fragment } = change;\n        if (scheme === undefined) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === undefined) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === undefined) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === undefined) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === undefined) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return new Uri(scheme, authority, path, query, fragment);\n    }\n    // ---- parse & validate ------------------------\n    /**\n     * Creates a new URI from a string, e.g. `http://www.example.com/some/path`,\n     * `file:///usr/home`, or `scheme:with/path`.\n     *\n     * @param value A string which represents an URI (see `URI#toString`).\n     */\n    static parse(value, _strict = false) {\n        const match = _regexp.exec(value);\n        if (!match) {\n            return new Uri(_empty, _empty, _empty, _empty, _empty);\n        }\n        return new Uri(match[2] || _empty, percentDecode(match[4] || _empty), percentDecode(match[5] || _empty), percentDecode(match[7] || _empty), percentDecode(match[9] || _empty), _strict);\n    }\n    /**\n     * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n     * `/usr/home`, or `\\\\server\\share\\some\\path`.\n     *\n     * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n     * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n     * `URI.parse('file://' + path)` because the path might contain characters that are\n     * interpreted (# and ?). See the following sample:\n     * ```ts\n    const good = URI.file('/coding/c#/project1');\n    good.scheme === 'file';\n    good.path === '/coding/c#/project1';\n    good.fragment === '';\n    const bad = URI.parse('file://' + '/coding/c#/project1');\n    bad.scheme === 'file';\n    bad.path === '/coding/c'; // path is now broken\n    bad.fragment === '/project1';\n    ```\n     *\n     * @param path A file system path (see `URI#fsPath`)\n     */\n    static file(path) {\n        let authority = _empty;\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slashes are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === _slash && path[1] === _slash) {\n            const idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return new Uri('file', authority, path, _empty, _empty);\n    }\n    /**\n     * Creates new URI from uri components.\n     *\n     * Unless `strict` is `true` the scheme is defaults to be `file`. This function performs\n     * validation and should be used for untrusted uri components retrieved from storage,\n     * user input, command arguments etc\n     */\n    static from(components, strict) {\n        const result = new Uri(components.scheme, components.authority, components.path, components.query, components.fragment, strict);\n        return result;\n    }\n    /**\n     * Join a URI path with path fragments and normalizes the resulting path.\n     *\n     * @param uri The input URI.\n     * @param pathFragment The path fragment to add to the URI path.\n     * @returns The resulting URI.\n     */\n    static joinPath(uri, ...pathFragment) {\n        if (!uri.path) {\n            throw new Error(`[UriError]: cannot call joinPath on URI without path`);\n        }\n        let newPath;\n        if (isWindows && uri.scheme === 'file') {\n            newPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n        }\n        else {\n            newPath = paths.posix.join(uri.path, ...pathFragment);\n        }\n        return uri.with({ path: newPath });\n    }\n    // ---- printing/externalize ---------------------------\n    /**\n     * Creates a string representation for this URI. It's guaranteed that calling\n     * `URI.parse` with the result of this function creates an URI which is equal\n     * to this URI.\n     *\n     * * The result shall *not* be used for display purposes but for externalization or transport.\n     * * The result will be encoded using the percentage encoding and encoding happens mostly\n     * ignore the scheme-specific encoding rules.\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    toString(skipEncoding = false) {\n        return _asFormatted(this, skipEncoding);\n    }\n    toJSON() {\n        return this;\n    }\n    static revive(data) {\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            const result = new Uri(data);\n            result._formatted = data.external ?? null;\n            result._fsPath = data._sep === _pathSepMarker ? data.fsPath ?? null : null;\n            return result;\n        }\n    }\n}\nconst _pathSepMarker = isWindows ? 1 : undefined;\n// This class exists so that URI is compatible with vscode.Uri (API).\nclass Uri extends URI {\n    constructor() {\n        super(...arguments);\n        this._formatted = null;\n        this._fsPath = null;\n    }\n    get fsPath() {\n        if (!this._fsPath) {\n            this._fsPath = uriToFsPath(this, false);\n        }\n        return this._fsPath;\n    }\n    toString(skipEncoding = false) {\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return _asFormatted(this, true);\n        }\n    }\n    toJSON() {\n        const res = {\n            $mid: 1 /* MarshalledId.Uri */\n        };\n        // cached state\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n            res._sep = _pathSepMarker;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        //--- uri components\n        if (this.path) {\n            res.path = this.path;\n        }\n        // TODO\n        // this isn't correct and can violate the UriComponents contract but\n        // this is part of the vscode.Uri API and we shouldn't change how that\n        // works anymore\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    }\n}\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable = {\n    [58 /* CharCode.Colon */]: '%3A', // gen-delims\n    [47 /* CharCode.Slash */]: '%2F',\n    [63 /* CharCode.QuestionMark */]: '%3F',\n    [35 /* CharCode.Hash */]: '%23',\n    [91 /* CharCode.OpenSquareBracket */]: '%5B',\n    [93 /* CharCode.CloseSquareBracket */]: '%5D',\n    [64 /* CharCode.AtSign */]: '%40',\n    [33 /* CharCode.ExclamationMark */]: '%21', // sub-delims\n    [36 /* CharCode.DollarSign */]: '%24',\n    [38 /* CharCode.Ampersand */]: '%26',\n    [39 /* CharCode.SingleQuote */]: '%27',\n    [40 /* CharCode.OpenParen */]: '%28',\n    [41 /* CharCode.CloseParen */]: '%29',\n    [42 /* CharCode.Asterisk */]: '%2A',\n    [43 /* CharCode.Plus */]: '%2B',\n    [44 /* CharCode.Comma */]: '%2C',\n    [59 /* CharCode.Semicolon */]: '%3B',\n    [61 /* CharCode.Equals */]: '%3D',\n    [32 /* CharCode.Space */]: '%20',\n};\nfunction encodeURIComponentFast(uriComponent, isPath, isAuthority) {\n    let res = undefined;\n    let nativeEncodePos = -1;\n    for (let pos = 0; pos < uriComponent.length; pos++) {\n        const code = uriComponent.charCodeAt(pos);\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n        if ((code >= 97 /* CharCode.a */ && code <= 122 /* CharCode.z */)\n            || (code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */)\n            || (code >= 48 /* CharCode.Digit0 */ && code <= 57 /* CharCode.Digit9 */)\n            || code === 45 /* CharCode.Dash */\n            || code === 46 /* CharCode.Period */\n            || code === 95 /* CharCode.Underline */\n            || code === 126 /* CharCode.Tilde */\n            || (isPath && code === 47 /* CharCode.Slash */)\n            || (isAuthority && code === 91 /* CharCode.OpenSquareBracket */)\n            || (isAuthority && code === 93 /* CharCode.CloseSquareBracket */)\n            || (isAuthority && code === 58 /* CharCode.Colon */)) {\n            // check if we are delaying native encode\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            // check if we write into a new string (by default we try to return the param)\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            // encoding needed, we need to allocate a new string\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            // check with default table first\n            const escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                // check if we are delaying native encode\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                // append escaped variant to result\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                // use native encode only when needed\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    let res = undefined;\n    for (let pos = 0; pos < path.length; pos++) {\n        const code = path.charCodeAt(pos);\n        if (code === 35 /* CharCode.Hash */ || code === 63 /* CharCode.QuestionMark */) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri, keepDriveLetterCasing) {\n    let value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        // unc path: file://shares/c$/far/boo\n        value = `//${uri.authority}${uri.path}`;\n    }\n    else if (uri.path.charCodeAt(0) === 47 /* CharCode.Slash */\n        && (uri.path.charCodeAt(1) >= 65 /* CharCode.A */ && uri.path.charCodeAt(1) <= 90 /* CharCode.Z */ || uri.path.charCodeAt(1) >= 97 /* CharCode.a */ && uri.path.charCodeAt(1) <= 122 /* CharCode.z */)\n        && uri.path.charCodeAt(2) === 58 /* CharCode.Colon */) {\n        if (!keepDriveLetterCasing) {\n            // windows drive letter: file:///c:/far/boo\n            value = uri.path[1].toLowerCase() + uri.path.substr(2);\n        }\n        else {\n            value = uri.path.substr(1);\n        }\n    }\n    else {\n        // other path\n        value = uri.path;\n    }\n    if (isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n    const encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    let res = '';\n    let { scheme, authority, path, query, fragment } = uri;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        let idx = authority.indexOf('@');\n        if (idx !== -1) {\n            // <user>@<auth>\n            const userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.lastIndexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false, false);\n            }\n            else {\n                // <user>:<pass>@<auth>\n                res += encoder(userinfo.substr(0, idx), false, false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false, true);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.lastIndexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false, true);\n        }\n        else {\n            // <auth>:<port>\n            res += encoder(authority.substr(0, idx), false, true);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* CharCode.Slash */ && path.charCodeAt(2) === 58 /* CharCode.Colon */) {\n            const code = path.charCodeAt(1);\n            if (code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */) {\n                path = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* CharCode.Colon */) {\n            const code = path.charCodeAt(0);\n            if (code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */) {\n                path = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n            }\n        }\n        // encode the rest of the path\n        res += encoder(path, true, false);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false, false) : fragment;\n    }\n    return res;\n}\n// --- decode\nfunction decodeURIComponentGraceful(str) {\n    try {\n        return decodeURIComponent(str);\n    }\n    catch {\n        if (str.length > 3) {\n            return str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n        }\n        else {\n            return str;\n        }\n    }\n}\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\nfunction percentDecode(str) {\n    if (!str.match(_rEncodedAsHex)) {\n        return str;\n    }\n    return str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { onUnexpectedError, transformErrorForSerialization } from '../errors.js';\nimport { Emitter } from '../event.js';\nimport { Disposable } from '../lifecycle.js';\nimport { FileAccess } from '../network.js';\nimport { isWeb } from '../platform.js';\nimport * as strings from '../strings.js';\n// ESM-comment-begin\n// const isESM = false;\n// ESM-comment-end\n// ESM-uncomment-begin\nconst isESM = true;\n// ESM-uncomment-end\nconst DEFAULT_CHANNEL = 'default';\nconst INITIALIZE = '$initialize';\nlet webWorkerWarningLogged = false;\nexport function logOnceWebWorkerWarning(err) {\n    if (!isWeb) {\n        // running tests\n        return;\n    }\n    if (!webWorkerWarningLogged) {\n        webWorkerWarningLogged = true;\n        console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/microsoft/monaco-editor#faq');\n    }\n    console.warn(err.message);\n}\nclass RequestMessage {\n    constructor(vsWorker, req, channel, method, args) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.channel = channel;\n        this.method = method;\n        this.args = args;\n        this.type = 0 /* MessageType.Request */;\n    }\n}\nclass ReplyMessage {\n    constructor(vsWorker, seq, res, err) {\n        this.vsWorker = vsWorker;\n        this.seq = seq;\n        this.res = res;\n        this.err = err;\n        this.type = 1 /* MessageType.Reply */;\n    }\n}\nclass SubscribeEventMessage {\n    constructor(vsWorker, req, channel, eventName, arg) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.channel = channel;\n        this.eventName = eventName;\n        this.arg = arg;\n        this.type = 2 /* MessageType.SubscribeEvent */;\n    }\n}\nclass EventMessage {\n    constructor(vsWorker, req, event) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.event = event;\n        this.type = 3 /* MessageType.Event */;\n    }\n}\nclass UnsubscribeEventMessage {\n    constructor(vsWorker, req) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.type = 4 /* MessageType.UnsubscribeEvent */;\n    }\n}\nclass SimpleWorkerProtocol {\n    constructor(handler) {\n        this._workerId = -1;\n        this._handler = handler;\n        this._lastSentReq = 0;\n        this._pendingReplies = Object.create(null);\n        this._pendingEmitters = new Map();\n        this._pendingEvents = new Map();\n    }\n    setWorkerId(workerId) {\n        this._workerId = workerId;\n    }\n    sendMessage(channel, method, args) {\n        const req = String(++this._lastSentReq);\n        return new Promise((resolve, reject) => {\n            this._pendingReplies[req] = {\n                resolve: resolve,\n                reject: reject\n            };\n            this._send(new RequestMessage(this._workerId, req, channel, method, args));\n        });\n    }\n    listen(channel, eventName, arg) {\n        let req = null;\n        const emitter = new Emitter({\n            onWillAddFirstListener: () => {\n                req = String(++this._lastSentReq);\n                this._pendingEmitters.set(req, emitter);\n                this._send(new SubscribeEventMessage(this._workerId, req, channel, eventName, arg));\n            },\n            onDidRemoveLastListener: () => {\n                this._pendingEmitters.delete(req);\n                this._send(new UnsubscribeEventMessage(this._workerId, req));\n                req = null;\n            }\n        });\n        return emitter.event;\n    }\n    handleMessage(message) {\n        if (!message || !message.vsWorker) {\n            return;\n        }\n        if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n            return;\n        }\n        this._handleMessage(message);\n    }\n    createProxyToRemoteChannel(channel, sendMessageBarrier) {\n        const handler = {\n            get: (target, name) => {\n                if (typeof name === 'string' && !target[name]) {\n                    if (propertyIsDynamicEvent(name)) { // onDynamic...\n                        target[name] = (arg) => {\n                            return this.listen(channel, name, arg);\n                        };\n                    }\n                    else if (propertyIsEvent(name)) { // on...\n                        target[name] = this.listen(channel, name, undefined);\n                    }\n                    else if (name.charCodeAt(0) === 36 /* CharCode.DollarSign */) { // $...\n                        target[name] = async (...myArgs) => {\n                            await sendMessageBarrier?.();\n                            return this.sendMessage(channel, name, myArgs);\n                        };\n                    }\n                }\n                return target[name];\n            }\n        };\n        return new Proxy(Object.create(null), handler);\n    }\n    _handleMessage(msg) {\n        switch (msg.type) {\n            case 1 /* MessageType.Reply */:\n                return this._handleReplyMessage(msg);\n            case 0 /* MessageType.Request */:\n                return this._handleRequestMessage(msg);\n            case 2 /* MessageType.SubscribeEvent */:\n                return this._handleSubscribeEventMessage(msg);\n            case 3 /* MessageType.Event */:\n                return this._handleEventMessage(msg);\n            case 4 /* MessageType.UnsubscribeEvent */:\n                return this._handleUnsubscribeEventMessage(msg);\n        }\n    }\n    _handleReplyMessage(replyMessage) {\n        if (!this._pendingReplies[replyMessage.seq]) {\n            console.warn('Got reply to unknown seq');\n            return;\n        }\n        const reply = this._pendingReplies[replyMessage.seq];\n        delete this._pendingReplies[replyMessage.seq];\n        if (replyMessage.err) {\n            let err = replyMessage.err;\n            if (replyMessage.err.$isError) {\n                err = new Error();\n                err.name = replyMessage.err.name;\n                err.message = replyMessage.err.message;\n                err.stack = replyMessage.err.stack;\n            }\n            reply.reject(err);\n            return;\n        }\n        reply.resolve(replyMessage.res);\n    }\n    _handleRequestMessage(requestMessage) {\n        const req = requestMessage.req;\n        const result = this._handler.handleMessage(requestMessage.channel, requestMessage.method, requestMessage.args);\n        result.then((r) => {\n            this._send(new ReplyMessage(this._workerId, req, r, undefined));\n        }, (e) => {\n            if (e.detail instanceof Error) {\n                // Loading errors have a detail property that points to the actual error\n                e.detail = transformErrorForSerialization(e.detail);\n            }\n            this._send(new ReplyMessage(this._workerId, req, undefined, transformErrorForSerialization(e)));\n        });\n    }\n    _handleSubscribeEventMessage(msg) {\n        const req = msg.req;\n        const disposable = this._handler.handleEvent(msg.channel, msg.eventName, msg.arg)((event) => {\n            this._send(new EventMessage(this._workerId, req, event));\n        });\n        this._pendingEvents.set(req, disposable);\n    }\n    _handleEventMessage(msg) {\n        if (!this._pendingEmitters.has(msg.req)) {\n            console.warn('Got event for unknown req');\n            return;\n        }\n        this._pendingEmitters.get(msg.req).fire(msg.event);\n    }\n    _handleUnsubscribeEventMessage(msg) {\n        if (!this._pendingEvents.has(msg.req)) {\n            console.warn('Got unsubscribe for unknown req');\n            return;\n        }\n        this._pendingEvents.get(msg.req).dispose();\n        this._pendingEvents.delete(msg.req);\n    }\n    _send(msg) {\n        const transfer = [];\n        if (msg.type === 0 /* MessageType.Request */) {\n            for (let i = 0; i < msg.args.length; i++) {\n                if (msg.args[i] instanceof ArrayBuffer) {\n                    transfer.push(msg.args[i]);\n                }\n            }\n        }\n        else if (msg.type === 1 /* MessageType.Reply */) {\n            if (msg.res instanceof ArrayBuffer) {\n                transfer.push(msg.res);\n            }\n        }\n        this._handler.sendMessage(msg, transfer);\n    }\n}\n/**\n * Main thread side\n */\nexport class SimpleWorkerClient extends Disposable {\n    constructor(workerFactory, workerDescriptor) {\n        super();\n        this._localChannels = new Map();\n        this._worker = this._register(workerFactory.create({\n            amdModuleId: 'vs/base/common/worker/simpleWorker',\n            esmModuleLocation: workerDescriptor.esmModuleLocation,\n            label: workerDescriptor.label\n        }, (msg) => {\n            this._protocol.handleMessage(msg);\n        }, (err) => {\n            // in Firefox, web workers fail lazily :(\n            // we will reject the proxy\n            onUnexpectedError(err);\n        }));\n        this._protocol = new SimpleWorkerProtocol({\n            sendMessage: (msg, transfer) => {\n                this._worker.postMessage(msg, transfer);\n            },\n            handleMessage: (channel, method, args) => {\n                return this._handleMessage(channel, method, args);\n            },\n            handleEvent: (channel, eventName, arg) => {\n                return this._handleEvent(channel, eventName, arg);\n            }\n        });\n        this._protocol.setWorkerId(this._worker.getId());\n        // Gather loader configuration\n        let loaderConfiguration = null;\n        const globalRequire = globalThis.require;\n        if (typeof globalRequire !== 'undefined' && typeof globalRequire.getConfig === 'function') {\n            // Get the configuration from the Monaco AMD Loader\n            loaderConfiguration = globalRequire.getConfig();\n        }\n        else if (typeof globalThis.requirejs !== 'undefined') {\n            // Get the configuration from requirejs\n            loaderConfiguration = globalThis.requirejs.s.contexts._.config;\n        }\n        // Send initialize message\n        this._onModuleLoaded = this._protocol.sendMessage(DEFAULT_CHANNEL, INITIALIZE, [\n            this._worker.getId(),\n            JSON.parse(JSON.stringify(loaderConfiguration)),\n            workerDescriptor.amdModuleId,\n        ]);\n        this.proxy = this._protocol.createProxyToRemoteChannel(DEFAULT_CHANNEL, async () => { await this._onModuleLoaded; });\n        this._onModuleLoaded.catch((e) => {\n            this._onError('Worker failed to load ' + workerDescriptor.amdModuleId, e);\n        });\n    }\n    _handleMessage(channelName, method, args) {\n        const channel = this._localChannels.get(channelName);\n        if (!channel) {\n            return Promise.reject(new Error(`Missing channel ${channelName} on main thread`));\n        }\n        if (typeof channel[method] !== 'function') {\n            return Promise.reject(new Error(`Missing method ${method} on main thread channel ${channelName}`));\n        }\n        try {\n            return Promise.resolve(channel[method].apply(channel, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n    _handleEvent(channelName, eventName, arg) {\n        const channel = this._localChannels.get(channelName);\n        if (!channel) {\n            throw new Error(`Missing channel ${channelName} on main thread`);\n        }\n        if (propertyIsDynamicEvent(eventName)) {\n            const event = channel[eventName].call(channel, arg);\n            if (typeof event !== 'function') {\n                throw new Error(`Missing dynamic event ${eventName} on main thread channel ${channelName}.`);\n            }\n            return event;\n        }\n        if (propertyIsEvent(eventName)) {\n            const event = channel[eventName];\n            if (typeof event !== 'function') {\n                throw new Error(`Missing event ${eventName} on main thread channel ${channelName}.`);\n            }\n            return event;\n        }\n        throw new Error(`Malformed event name ${eventName}`);\n    }\n    setChannel(channel, handler) {\n        this._localChannels.set(channel, handler);\n    }\n    _onError(message, error) {\n        console.error(message);\n        console.info(error);\n    }\n}\nfunction propertyIsEvent(name) {\n    // Assume a property is an event if it has a form of \"onSomething\"\n    return name[0] === 'o' && name[1] === 'n' && strings.isUpperAsciiLetter(name.charCodeAt(2));\n}\nfunction propertyIsDynamicEvent(name) {\n    // Assume a property is a dynamic event (a method that returns an event) if it has a form of \"onDynamicSomething\"\n    return /^onDynamic/.test(name) && strings.isUpperAsciiLetter(name.charCodeAt(9));\n}\n/**\n * Worker side\n */\nexport class SimpleWorkerServer {\n    constructor(postMessage, requestHandlerFactory) {\n        this._localChannels = new Map();\n        this._remoteChannels = new Map();\n        this._requestHandlerFactory = requestHandlerFactory;\n        this._requestHandler = null;\n        this._protocol = new SimpleWorkerProtocol({\n            sendMessage: (msg, transfer) => {\n                postMessage(msg, transfer);\n            },\n            handleMessage: (channel, method, args) => this._handleMessage(channel, method, args),\n            handleEvent: (channel, eventName, arg) => this._handleEvent(channel, eventName, arg)\n        });\n    }\n    onmessage(msg) {\n        this._protocol.handleMessage(msg);\n    }\n    _handleMessage(channel, method, args) {\n        if (channel === DEFAULT_CHANNEL && method === INITIALIZE) {\n            return this.initialize(args[0], args[1], args[2]);\n        }\n        const requestHandler = (channel === DEFAULT_CHANNEL ? this._requestHandler : this._localChannels.get(channel));\n        if (!requestHandler) {\n            return Promise.reject(new Error(`Missing channel ${channel} on worker thread`));\n        }\n        if (typeof requestHandler[method] !== 'function') {\n            return Promise.reject(new Error(`Missing method ${method} on worker thread channel ${channel}`));\n        }\n        try {\n            return Promise.resolve(requestHandler[method].apply(requestHandler, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n    _handleEvent(channel, eventName, arg) {\n        const requestHandler = (channel === DEFAULT_CHANNEL ? this._requestHandler : this._localChannels.get(channel));\n        if (!requestHandler) {\n            throw new Error(`Missing channel ${channel} on worker thread`);\n        }\n        if (propertyIsDynamicEvent(eventName)) {\n            const event = requestHandler[eventName].call(requestHandler, arg);\n            if (typeof event !== 'function') {\n                throw new Error(`Missing dynamic event ${eventName} on request handler.`);\n            }\n            return event;\n        }\n        if (propertyIsEvent(eventName)) {\n            const event = requestHandler[eventName];\n            if (typeof event !== 'function') {\n                throw new Error(`Missing event ${eventName} on request handler.`);\n            }\n            return event;\n        }\n        throw new Error(`Malformed event name ${eventName}`);\n    }\n    getChannel(channel) {\n        if (!this._remoteChannels.has(channel)) {\n            const inst = this._protocol.createProxyToRemoteChannel(channel);\n            this._remoteChannels.set(channel, inst);\n        }\n        return this._remoteChannels.get(channel);\n    }\n    async initialize(workerId, loaderConfig, moduleId) {\n        this._protocol.setWorkerId(workerId);\n        if (this._requestHandlerFactory) {\n            // static request handler\n            this._requestHandler = this._requestHandlerFactory(this);\n            return;\n        }\n        if (loaderConfig) {\n            // Remove 'baseUrl', handling it is beyond scope for now\n            if (typeof loaderConfig.baseUrl !== 'undefined') {\n                delete loaderConfig['baseUrl'];\n            }\n            if (typeof loaderConfig.paths !== 'undefined') {\n                if (typeof loaderConfig.paths.vs !== 'undefined') {\n                    delete loaderConfig.paths['vs'];\n                }\n            }\n            if (typeof loaderConfig.trustedTypesPolicy !== 'undefined') {\n                // don't use, it has been destroyed during serialize\n                delete loaderConfig['trustedTypesPolicy'];\n            }\n            // Since this is in a web worker, enable catching errors\n            loaderConfig.catchError = true;\n            globalThis.require.config(loaderConfig);\n        }\n        if (isESM) {\n            const url = FileAccess.asBrowserUri(`${moduleId}.js`).toString(true);\n            return import(`${url}`).then((module) => {\n                this._requestHandler = module.create(this);\n                if (!this._requestHandler) {\n                    throw new Error(`No RequestHandler!`);\n                }\n            });\n        }\n        return new Promise((resolve, reject) => {\n            // Use the global require to be sure to get the global config\n            // ESM-comment-begin\n            // \t\t\tconst req = (globalThis.require || require);\n            // ESM-comment-end\n            // ESM-uncomment-begin\n            const req = globalThis.require;\n            // ESM-uncomment-end\n            req([moduleId], (module) => {\n                this._requestHandler = module.create(this);\n                if (!this._requestHandler) {\n                    reject(new Error(`No RequestHandler!`));\n                    return;\n                }\n                resolve();\n            }, reject);\n        });\n    }\n}\n/**\n * Defines the worker entry point. Must be exported and named `create`.\n * @skipMangle\n */\nexport function create(postMessage) {\n    return new SimpleWorkerServer(postMessage, null);\n}\n","var map = {\n\t\"./simpleWorker\": \"./node_modules/monaco-editor/esm/vs/base/common/worker/simpleWorker.js\",\n\t\"./simpleWorker.js\": \"./node_modules/monaco-editor/esm/vs/base/common/worker/simpleWorker.js\"\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(() => {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = \"./node_modules/monaco-editor/esm/vs/base/common/worker lazy recursive ^.*$\";\nmodule.exports = webpackAsyncContext;","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { toUint8 } from '../../../base/common/uint.js';\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\nexport class CharacterClassifier {\n    constructor(_defaultValue) {\n        const defaultValue = toUint8(_defaultValue);\n        this._defaultValue = defaultValue;\n        this._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n        this._map = new Map();\n    }\n    static _createAsciiMap(defaultValue) {\n        const asciiMap = new Uint8Array(256);\n        asciiMap.fill(defaultValue);\n        return asciiMap;\n    }\n    set(charCode, _value) {\n        const value = toUint8(_value);\n        if (charCode >= 0 && charCode < 256) {\n            this._asciiMap[charCode] = value;\n        }\n        else {\n            this._map.set(charCode, value);\n        }\n    }\n    get(charCode) {\n        if (charCode >= 0 && charCode < 256) {\n            return this._asciiMap[charCode];\n        }\n        else {\n            return (this._map.get(charCode) || this._defaultValue);\n        }\n    }\n    clear() {\n        this._asciiMap.fill(this._defaultValue);\n        this._map.clear();\n    }\n}\nexport class CharacterSet {\n    constructor() {\n        this._actual = new CharacterClassifier(0 /* Boolean.False */);\n    }\n    add(charCode) {\n        this._actual.set(charCode, 1 /* Boolean.True */);\n    }\n    has(charCode) {\n        return (this._actual.get(charCode) === 1 /* Boolean.True */);\n    }\n    clear() {\n        return this._actual.clear();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../base/common/strings.js';\n/**\n * A column in a position is the gap between two adjacent characters. The methods here\n * work with a concept called \"visible column\". A visible column is a very rough approximation\n * of the horizontal screen position of a column. For example, using a tab size of 4:\n * ```txt\n * |<TAB>|<TAB>|T|ext\n * |     |     | \\---- column = 4, visible column = 9\n * |     |     \\------ column = 3, visible column = 8\n * |     \\------------ column = 2, visible column = 4\n * \\------------------ column = 1, visible column = 0\n * ```\n *\n * **NOTE**: Visual columns do not work well for RTL text or variable-width fonts or characters.\n *\n * **NOTE**: These methods work and make sense both on the model and on the view model.\n */\nexport class CursorColumns {\n    static _nextVisibleColumn(codePoint, visibleColumn, tabSize) {\n        if (codePoint === 9 /* CharCode.Tab */) {\n            return CursorColumns.nextRenderTabStop(visibleColumn, tabSize);\n        }\n        if (strings.isFullWidthCharacter(codePoint) || strings.isEmojiImprecise(codePoint)) {\n            return visibleColumn + 2;\n        }\n        return visibleColumn + 1;\n    }\n    /**\n     * Returns a visible column from a column.\n     * @see {@link CursorColumns}\n     */\n    static visibleColumnFromColumn(lineContent, column, tabSize) {\n        const textLen = Math.min(column - 1, lineContent.length);\n        const text = lineContent.substring(0, textLen);\n        const iterator = new strings.GraphemeIterator(text);\n        let result = 0;\n        while (!iterator.eol()) {\n            const codePoint = strings.getNextCodePoint(text, textLen, iterator.offset);\n            iterator.nextGraphemeLength();\n            result = this._nextVisibleColumn(codePoint, result, tabSize);\n        }\n        return result;\n    }\n    /**\n     * Returns a column from a visible column.\n     * @see {@link CursorColumns}\n     */\n    static columnFromVisibleColumn(lineContent, visibleColumn, tabSize) {\n        if (visibleColumn <= 0) {\n            return 1;\n        }\n        const lineContentLength = lineContent.length;\n        const iterator = new strings.GraphemeIterator(lineContent);\n        let beforeVisibleColumn = 0;\n        let beforeColumn = 1;\n        while (!iterator.eol()) {\n            const codePoint = strings.getNextCodePoint(lineContent, lineContentLength, iterator.offset);\n            iterator.nextGraphemeLength();\n            const afterVisibleColumn = this._nextVisibleColumn(codePoint, beforeVisibleColumn, tabSize);\n            const afterColumn = iterator.offset + 1;\n            if (afterVisibleColumn >= visibleColumn) {\n                const beforeDelta = visibleColumn - beforeVisibleColumn;\n                const afterDelta = afterVisibleColumn - visibleColumn;\n                if (afterDelta < beforeDelta) {\n                    return afterColumn;\n                }\n                else {\n                    return beforeColumn;\n                }\n            }\n            beforeVisibleColumn = afterVisibleColumn;\n            beforeColumn = afterColumn;\n        }\n        // walked the entire string\n        return lineContentLength + 1;\n    }\n    /**\n     * ATTENTION: This works with 0-based columns (as opposed to the regular 1-based columns)\n     * @see {@link CursorColumns}\n     */\n    static nextRenderTabStop(visibleColumn, tabSize) {\n        return visibleColumn + tabSize - visibleColumn % tabSize;\n    }\n    /**\n     * ATTENTION: This works with 0-based columns (as opposed to the regular 1-based columns)\n     * @see {@link CursorColumns}\n     */\n    static nextIndentTabStop(visibleColumn, indentSize) {\n        return visibleColumn + indentSize - visibleColumn % indentSize;\n    }\n    /**\n     * ATTENTION: This works with 0-based columns (as opposed to the regular 1-based columns)\n     * @see {@link CursorColumns}\n     */\n    static prevRenderTabStop(column, tabSize) {\n        return Math.max(0, column - 1 - (column - 1) % tabSize);\n    }\n    /**\n     * ATTENTION: This works with 0-based columns (as opposed to the regular 1-based columns)\n     * @see {@link CursorColumns}\n     */\n    static prevIndentTabStop(column, indentSize) {\n        return Math.max(0, column - 1 - (column - 1) % indentSize);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../nls.js';\nimport { Color, RGBA } from '../../../base/common/color.js';\nimport { activeContrastBorder, editorBackground, registerColor, editorWarningForeground, editorInfoForeground, editorWarningBorder, editorInfoBorder, contrastBorder, editorFindMatchHighlight, editorWarningBackground } from '../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\n/**\n * Definition of the editor colors\n */\nexport const editorLineHighlight = registerColor('editor.lineHighlightBackground', null, nls.localize('lineHighlight', 'Background color for the highlight of line at the cursor position.'));\nexport const editorLineHighlightBorder = registerColor('editor.lineHighlightBorder', { dark: '#282828', light: '#eeeeee', hcDark: '#f38518', hcLight: contrastBorder }, nls.localize('lineHighlightBorderBox', 'Background color for the border around the line at the cursor position.'));\nexport const editorRangeHighlight = registerColor('editor.rangeHighlightBackground', { dark: '#ffffff0b', light: '#fdff0033', hcDark: null, hcLight: null }, nls.localize('rangeHighlight', 'Background color of highlighted ranges, like by quick open and find features. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorRangeHighlightBorder = registerColor('editor.rangeHighlightBorder', { dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('rangeHighlightBorder', 'Background color of the border around highlighted ranges.'));\nexport const editorSymbolHighlight = registerColor('editor.symbolHighlightBackground', { dark: editorFindMatchHighlight, light: editorFindMatchHighlight, hcDark: null, hcLight: null }, nls.localize('symbolHighlight', 'Background color of highlighted symbol, like for go to definition or go next/previous symbol. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorSymbolHighlightBorder = registerColor('editor.symbolHighlightBorder', { dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('symbolHighlightBorder', 'Background color of the border around highlighted symbols.'));\nexport const editorCursorForeground = registerColor('editorCursor.foreground', { dark: '#AEAFAD', light: Color.black, hcDark: Color.white, hcLight: '#0F4A85' }, nls.localize('caret', 'Color of the editor cursor.'));\nexport const editorCursorBackground = registerColor('editorCursor.background', null, nls.localize('editorCursorBackground', 'The background color of the editor cursor. Allows customizing the color of a character overlapped by a block cursor.'));\nexport const editorMultiCursorPrimaryForeground = registerColor('editorMultiCursor.primary.foreground', editorCursorForeground, nls.localize('editorMultiCursorPrimaryForeground', 'Color of the primary editor cursor when multiple cursors are present.'));\nexport const editorMultiCursorPrimaryBackground = registerColor('editorMultiCursor.primary.background', editorCursorBackground, nls.localize('editorMultiCursorPrimaryBackground', 'The background color of the primary editor cursor when multiple cursors are present. Allows customizing the color of a character overlapped by a block cursor.'));\nexport const editorMultiCursorSecondaryForeground = registerColor('editorMultiCursor.secondary.foreground', editorCursorForeground, nls.localize('editorMultiCursorSecondaryForeground', 'Color of secondary editor cursors when multiple cursors are present.'));\nexport const editorMultiCursorSecondaryBackground = registerColor('editorMultiCursor.secondary.background', editorCursorBackground, nls.localize('editorMultiCursorSecondaryBackground', 'The background color of secondary editor cursors when multiple cursors are present. Allows customizing the color of a character overlapped by a block cursor.'));\nexport const editorWhitespaces = registerColor('editorWhitespace.foreground', { dark: '#e3e4e229', light: '#33333333', hcDark: '#e3e4e229', hcLight: '#CCCCCC' }, nls.localize('editorWhitespaces', 'Color of whitespace characters in the editor.'));\nexport const editorLineNumbers = registerColor('editorLineNumber.foreground', { dark: '#858585', light: '#237893', hcDark: Color.white, hcLight: '#292929' }, nls.localize('editorLineNumbers', 'Color of editor line numbers.'));\nexport const deprecatedEditorIndentGuides = registerColor('editorIndentGuide.background', editorWhitespaces, nls.localize('editorIndentGuides', 'Color of the editor indentation guides.'), false, nls.localize('deprecatedEditorIndentGuides', '\\'editorIndentGuide.background\\' is deprecated. Use \\'editorIndentGuide.background1\\' instead.'));\nexport const deprecatedEditorActiveIndentGuides = registerColor('editorIndentGuide.activeBackground', editorWhitespaces, nls.localize('editorActiveIndentGuide', 'Color of the active editor indentation guides.'), false, nls.localize('deprecatedEditorActiveIndentGuide', '\\'editorIndentGuide.activeBackground\\' is deprecated. Use \\'editorIndentGuide.activeBackground1\\' instead.'));\nexport const editorIndentGuide1 = registerColor('editorIndentGuide.background1', deprecatedEditorIndentGuides, nls.localize('editorIndentGuides1', 'Color of the editor indentation guides (1).'));\nexport const editorIndentGuide2 = registerColor('editorIndentGuide.background2', '#00000000', nls.localize('editorIndentGuides2', 'Color of the editor indentation guides (2).'));\nexport const editorIndentGuide3 = registerColor('editorIndentGuide.background3', '#00000000', nls.localize('editorIndentGuides3', 'Color of the editor indentation guides (3).'));\nexport const editorIndentGuide4 = registerColor('editorIndentGuide.background4', '#00000000', nls.localize('editorIndentGuides4', 'Color of the editor indentation guides (4).'));\nexport const editorIndentGuide5 = registerColor('editorIndentGuide.background5', '#00000000', nls.localize('editorIndentGuides5', 'Color of the editor indentation guides (5).'));\nexport const editorIndentGuide6 = registerColor('editorIndentGuide.background6', '#00000000', nls.localize('editorIndentGuides6', 'Color of the editor indentation guides (6).'));\nexport const editorActiveIndentGuide1 = registerColor('editorIndentGuide.activeBackground1', deprecatedEditorActiveIndentGuides, nls.localize('editorActiveIndentGuide1', 'Color of the active editor indentation guides (1).'));\nexport const editorActiveIndentGuide2 = registerColor('editorIndentGuide.activeBackground2', '#00000000', nls.localize('editorActiveIndentGuide2', 'Color of the active editor indentation guides (2).'));\nexport const editorActiveIndentGuide3 = registerColor('editorIndentGuide.activeBackground3', '#00000000', nls.localize('editorActiveIndentGuide3', 'Color of the active editor indentation guides (3).'));\nexport const editorActiveIndentGuide4 = registerColor('editorIndentGuide.activeBackground4', '#00000000', nls.localize('editorActiveIndentGuide4', 'Color of the active editor indentation guides (4).'));\nexport const editorActiveIndentGuide5 = registerColor('editorIndentGuide.activeBackground5', '#00000000', nls.localize('editorActiveIndentGuide5', 'Color of the active editor indentation guides (5).'));\nexport const editorActiveIndentGuide6 = registerColor('editorIndentGuide.activeBackground6', '#00000000', nls.localize('editorActiveIndentGuide6', 'Color of the active editor indentation guides (6).'));\nconst deprecatedEditorActiveLineNumber = registerColor('editorActiveLineNumber.foreground', { dark: '#c6c6c6', light: '#0B216F', hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('editorActiveLineNumber', 'Color of editor active line number'), false, nls.localize('deprecatedEditorActiveLineNumber', 'Id is deprecated. Use \\'editorLineNumber.activeForeground\\' instead.'));\nexport const editorActiveLineNumber = registerColor('editorLineNumber.activeForeground', deprecatedEditorActiveLineNumber, nls.localize('editorActiveLineNumber', 'Color of editor active line number'));\nexport const editorDimmedLineNumber = registerColor('editorLineNumber.dimmedForeground', null, nls.localize('editorDimmedLineNumber', 'Color of the final editor line when editor.renderFinalNewline is set to dimmed.'));\nexport const editorRuler = registerColor('editorRuler.foreground', { dark: '#5A5A5A', light: Color.lightgrey, hcDark: Color.white, hcLight: '#292929' }, nls.localize('editorRuler', 'Color of the editor rulers.'));\nexport const editorCodeLensForeground = registerColor('editorCodeLens.foreground', { dark: '#999999', light: '#919191', hcDark: '#999999', hcLight: '#292929' }, nls.localize('editorCodeLensForeground', 'Foreground color of editor CodeLens'));\nexport const editorBracketMatchBackground = registerColor('editorBracketMatch.background', { dark: '#0064001a', light: '#0064001a', hcDark: '#0064001a', hcLight: '#0000' }, nls.localize('editorBracketMatchBackground', 'Background color behind matching brackets'));\nexport const editorBracketMatchBorder = registerColor('editorBracketMatch.border', { dark: '#888', light: '#B9B9B9', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('editorBracketMatchBorder', 'Color for matching brackets boxes'));\nexport const editorOverviewRulerBorder = registerColor('editorOverviewRuler.border', { dark: '#7f7f7f4d', light: '#7f7f7f4d', hcDark: '#7f7f7f4d', hcLight: '#666666' }, nls.localize('editorOverviewRulerBorder', 'Color of the overview ruler border.'));\nexport const editorOverviewRulerBackground = registerColor('editorOverviewRuler.background', null, nls.localize('editorOverviewRulerBackground', 'Background color of the editor overview ruler.'));\nexport const editorGutter = registerColor('editorGutter.background', editorBackground, nls.localize('editorGutter', 'Background color of the editor gutter. The gutter contains the glyph margins and the line numbers.'));\nexport const editorUnnecessaryCodeBorder = registerColor('editorUnnecessaryCode.border', { dark: null, light: null, hcDark: Color.fromHex('#fff').transparent(0.8), hcLight: contrastBorder }, nls.localize('unnecessaryCodeBorder', 'Border color of unnecessary (unused) source code in the editor.'));\nexport const editorUnnecessaryCodeOpacity = registerColor('editorUnnecessaryCode.opacity', { dark: Color.fromHex('#000a'), light: Color.fromHex('#0007'), hcDark: null, hcLight: null }, nls.localize('unnecessaryCodeOpacity', 'Opacity of unnecessary (unused) source code in the editor. For example, \"#000000c0\" will render the code with 75% opacity. For high contrast themes, use the  \\'editorUnnecessaryCode.border\\' theme color to underline unnecessary code instead of fading it out.'));\nexport const ghostTextBorder = registerColor('editorGhostText.border', { dark: null, light: null, hcDark: Color.fromHex('#fff').transparent(0.8), hcLight: Color.fromHex('#292929').transparent(0.8) }, nls.localize('editorGhostTextBorder', 'Border color of ghost text in the editor.'));\nexport const ghostTextForeground = registerColor('editorGhostText.foreground', { dark: Color.fromHex('#ffffff56'), light: Color.fromHex('#0007'), hcDark: null, hcLight: null }, nls.localize('editorGhostTextForeground', 'Foreground color of the ghost text in the editor.'));\nexport const ghostTextBackground = registerColor('editorGhostText.background', null, nls.localize('editorGhostTextBackground', 'Background color of the ghost text in the editor.'));\nconst rulerRangeDefault = new Color(new RGBA(0, 122, 204, 0.6));\nexport const overviewRulerRangeHighlight = registerColor('editorOverviewRuler.rangeHighlightForeground', rulerRangeDefault, nls.localize('overviewRulerRangeHighlight', 'Overview ruler marker color for range highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const overviewRulerError = registerColor('editorOverviewRuler.errorForeground', { dark: new Color(new RGBA(255, 18, 18, 0.7)), light: new Color(new RGBA(255, 18, 18, 0.7)), hcDark: new Color(new RGBA(255, 50, 50, 1)), hcLight: '#B5200D' }, nls.localize('overviewRuleError', 'Overview ruler marker color for errors.'));\nexport const overviewRulerWarning = registerColor('editorOverviewRuler.warningForeground', { dark: editorWarningForeground, light: editorWarningForeground, hcDark: editorWarningBorder, hcLight: editorWarningBorder }, nls.localize('overviewRuleWarning', 'Overview ruler marker color for warnings.'));\nexport const overviewRulerInfo = registerColor('editorOverviewRuler.infoForeground', { dark: editorInfoForeground, light: editorInfoForeground, hcDark: editorInfoBorder, hcLight: editorInfoBorder }, nls.localize('overviewRuleInfo', 'Overview ruler marker color for infos.'));\nexport const editorBracketHighlightingForeground1 = registerColor('editorBracketHighlight.foreground1', { dark: '#FFD700', light: '#0431FAFF', hcDark: '#FFD700', hcLight: '#0431FAFF' }, nls.localize('editorBracketHighlightForeground1', 'Foreground color of brackets (1). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground2 = registerColor('editorBracketHighlight.foreground2', { dark: '#DA70D6', light: '#319331FF', hcDark: '#DA70D6', hcLight: '#319331FF' }, nls.localize('editorBracketHighlightForeground2', 'Foreground color of brackets (2). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground3 = registerColor('editorBracketHighlight.foreground3', { dark: '#179FFF', light: '#7B3814FF', hcDark: '#87CEFA', hcLight: '#7B3814FF' }, nls.localize('editorBracketHighlightForeground3', 'Foreground color of brackets (3). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground4 = registerColor('editorBracketHighlight.foreground4', '#00000000', nls.localize('editorBracketHighlightForeground4', 'Foreground color of brackets (4). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground5 = registerColor('editorBracketHighlight.foreground5', '#00000000', nls.localize('editorBracketHighlightForeground5', 'Foreground color of brackets (5). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground6 = registerColor('editorBracketHighlight.foreground6', '#00000000', nls.localize('editorBracketHighlightForeground6', 'Foreground color of brackets (6). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingUnexpectedBracketForeground = registerColor('editorBracketHighlight.unexpectedBracket.foreground', { dark: new Color(new RGBA(255, 18, 18, 0.8)), light: new Color(new RGBA(255, 18, 18, 0.8)), hcDark: 'new Color(new RGBA(255, 50, 50, 1))', hcLight: '#B5200D' }, nls.localize('editorBracketHighlightUnexpectedBracketForeground', 'Foreground color of unexpected brackets.'));\nexport const editorBracketPairGuideBackground1 = registerColor('editorBracketPairGuide.background1', '#00000000', nls.localize('editorBracketPairGuide.background1', 'Background color of inactive bracket pair guides (1). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground2 = registerColor('editorBracketPairGuide.background2', '#00000000', nls.localize('editorBracketPairGuide.background2', 'Background color of inactive bracket pair guides (2). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground3 = registerColor('editorBracketPairGuide.background3', '#00000000', nls.localize('editorBracketPairGuide.background3', 'Background color of inactive bracket pair guides (3). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground4 = registerColor('editorBracketPairGuide.background4', '#00000000', nls.localize('editorBracketPairGuide.background4', 'Background color of inactive bracket pair guides (4). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground5 = registerColor('editorBracketPairGuide.background5', '#00000000', nls.localize('editorBracketPairGuide.background5', 'Background color of inactive bracket pair guides (5). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground6 = registerColor('editorBracketPairGuide.background6', '#00000000', nls.localize('editorBracketPairGuide.background6', 'Background color of inactive bracket pair guides (6). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground1 = registerColor('editorBracketPairGuide.activeBackground1', '#00000000', nls.localize('editorBracketPairGuide.activeBackground1', 'Background color of active bracket pair guides (1). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground2 = registerColor('editorBracketPairGuide.activeBackground2', '#00000000', nls.localize('editorBracketPairGuide.activeBackground2', 'Background color of active bracket pair guides (2). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground3 = registerColor('editorBracketPairGuide.activeBackground3', '#00000000', nls.localize('editorBracketPairGuide.activeBackground3', 'Background color of active bracket pair guides (3). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground4 = registerColor('editorBracketPairGuide.activeBackground4', '#00000000', nls.localize('editorBracketPairGuide.activeBackground4', 'Background color of active bracket pair guides (4). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground5 = registerColor('editorBracketPairGuide.activeBackground5', '#00000000', nls.localize('editorBracketPairGuide.activeBackground5', 'Background color of active bracket pair guides (5). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground6 = registerColor('editorBracketPairGuide.activeBackground6', '#00000000', nls.localize('editorBracketPairGuide.activeBackground6', 'Background color of active bracket pair guides (6). Requires enabling bracket pair guides.'));\nexport const editorUnicodeHighlightBorder = registerColor('editorUnicodeHighlight.border', editorWarningForeground, nls.localize('editorUnicodeHighlight.border', 'Border color used to highlight unicode characters.'));\nexport const editorUnicodeHighlightBackground = registerColor('editorUnicodeHighlight.background', editorWarningBackground, nls.localize('editorUnicodeHighlight.background', 'Background color used to highlight unicode characters.'));\n// contains all color rules that used to defined in editor/browser/widget/editor.css\nregisterThemingParticipant((theme, collector) => {\n    const background = theme.getColor(editorBackground);\n    const lineHighlight = theme.getColor(editorLineHighlight);\n    const imeBackground = (lineHighlight && !lineHighlight.isTransparent() ? lineHighlight : background);\n    if (imeBackground) {\n        collector.addRule(`.monaco-editor .inputarea.ime-input { background-color: ${imeBackground}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function countEOL(text) {\n    let eolCount = 0;\n    let firstLineLength = 0;\n    let lastLineStart = 0;\n    let eol = 0 /* StringEOL.Unknown */;\n    for (let i = 0, len = text.length; i < len; i++) {\n        const chr = text.charCodeAt(i);\n        if (chr === 13 /* CharCode.CarriageReturn */) {\n            if (eolCount === 0) {\n                firstLineLength = i;\n            }\n            eolCount++;\n            if (i + 1 < len && text.charCodeAt(i + 1) === 10 /* CharCode.LineFeed */) {\n                // \\r\\n... case\n                eol |= 2 /* StringEOL.CRLF */;\n                i++; // skip \\n\n            }\n            else {\n                // \\r... case\n                eol |= 3 /* StringEOL.Invalid */;\n            }\n            lastLineStart = i + 1;\n        }\n        else if (chr === 10 /* CharCode.LineFeed */) {\n            // \\n... case\n            eol |= 1 /* StringEOL.LF */;\n            if (eolCount === 0) {\n                firstLineLength = i;\n            }\n            eolCount++;\n            lastLineStart = i + 1;\n        }\n    }\n    if (eolCount === 0) {\n        firstLineLength = text.length;\n    }\n    return [eolCount, firstLineLength, text.length - lastLineStart, eol];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../base/common/strings.js';\nimport { CursorColumns } from './cursorColumns.js';\nfunction _normalizeIndentationFromWhitespace(str, indentSize, insertSpaces) {\n    let spacesCnt = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str.charAt(i) === '\\t') {\n            spacesCnt = CursorColumns.nextIndentTabStop(spacesCnt, indentSize);\n        }\n        else {\n            spacesCnt++;\n        }\n    }\n    let result = '';\n    if (!insertSpaces) {\n        const tabsCnt = Math.floor(spacesCnt / indentSize);\n        spacesCnt = spacesCnt % indentSize;\n        for (let i = 0; i < tabsCnt; i++) {\n            result += '\\t';\n        }\n    }\n    for (let i = 0; i < spacesCnt; i++) {\n        result += ' ';\n    }\n    return result;\n}\nexport function normalizeIndentation(str, indentSize, insertSpaces) {\n    let firstNonWhitespaceIndex = strings.firstNonWhitespaceIndex(str);\n    if (firstNonWhitespaceIndex === -1) {\n        firstNonWhitespaceIndex = str.length;\n    }\n    return _normalizeIndentationFromWhitespace(str.substring(0, firstNonWhitespaceIndex), indentSize, insertSpaces) + str.substring(firstNonWhitespaceIndex);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { BugIndicatingError } from '../../../base/common/errors.js';\nimport { OffsetRange } from './offsetRange.js';\nimport { Range } from './range.js';\nimport { findFirstIdxMonotonousOrArrLen, findLastIdxMonotonous, findLastMonotonous } from '../../../base/common/arraysFind.js';\n/**\n * A range of lines (1-based).\n */\nexport class LineRange {\n    static fromRangeInclusive(range) {\n        return new LineRange(range.startLineNumber, range.endLineNumber + 1);\n    }\n    /**\n     * @param lineRanges An array of sorted line ranges.\n     */\n    static joinMany(lineRanges) {\n        if (lineRanges.length === 0) {\n            return [];\n        }\n        let result = new LineRangeSet(lineRanges[0].slice());\n        for (let i = 1; i < lineRanges.length; i++) {\n            result = result.getUnion(new LineRangeSet(lineRanges[i].slice()));\n        }\n        return result.ranges;\n    }\n    static join(lineRanges) {\n        if (lineRanges.length === 0) {\n            throw new BugIndicatingError('lineRanges cannot be empty');\n        }\n        let startLineNumber = lineRanges[0].startLineNumber;\n        let endLineNumberExclusive = lineRanges[0].endLineNumberExclusive;\n        for (let i = 1; i < lineRanges.length; i++) {\n            startLineNumber = Math.min(startLineNumber, lineRanges[i].startLineNumber);\n            endLineNumberExclusive = Math.max(endLineNumberExclusive, lineRanges[i].endLineNumberExclusive);\n        }\n        return new LineRange(startLineNumber, endLineNumberExclusive);\n    }\n    static ofLength(startLineNumber, length) {\n        return new LineRange(startLineNumber, startLineNumber + length);\n    }\n    /**\n     * @internal\n     */\n    static deserialize(lineRange) {\n        return new LineRange(lineRange[0], lineRange[1]);\n    }\n    constructor(startLineNumber, endLineNumberExclusive) {\n        if (startLineNumber > endLineNumberExclusive) {\n            throw new BugIndicatingError(`startLineNumber ${startLineNumber} cannot be after endLineNumberExclusive ${endLineNumberExclusive}`);\n        }\n        this.startLineNumber = startLineNumber;\n        this.endLineNumberExclusive = endLineNumberExclusive;\n    }\n    /**\n     * Indicates if this line range contains the given line number.\n     */\n    contains(lineNumber) {\n        return this.startLineNumber <= lineNumber && lineNumber < this.endLineNumberExclusive;\n    }\n    /**\n     * Indicates if this line range is empty.\n     */\n    get isEmpty() {\n        return this.startLineNumber === this.endLineNumberExclusive;\n    }\n    /**\n     * Moves this line range by the given offset of line numbers.\n     */\n    delta(offset) {\n        return new LineRange(this.startLineNumber + offset, this.endLineNumberExclusive + offset);\n    }\n    deltaLength(offset) {\n        return new LineRange(this.startLineNumber, this.endLineNumberExclusive + offset);\n    }\n    /**\n     * The number of lines this line range spans.\n     */\n    get length() {\n        return this.endLineNumberExclusive - this.startLineNumber;\n    }\n    /**\n     * Creates a line range that combines this and the given line range.\n     */\n    join(other) {\n        return new LineRange(Math.min(this.startLineNumber, other.startLineNumber), Math.max(this.endLineNumberExclusive, other.endLineNumberExclusive));\n    }\n    toString() {\n        return `[${this.startLineNumber},${this.endLineNumberExclusive})`;\n    }\n    /**\n     * The resulting range is empty if the ranges do not intersect, but touch.\n     * If the ranges don't even touch, the result is undefined.\n     */\n    intersect(other) {\n        const startLineNumber = Math.max(this.startLineNumber, other.startLineNumber);\n        const endLineNumberExclusive = Math.min(this.endLineNumberExclusive, other.endLineNumberExclusive);\n        if (startLineNumber <= endLineNumberExclusive) {\n            return new LineRange(startLineNumber, endLineNumberExclusive);\n        }\n        return undefined;\n    }\n    intersectsStrict(other) {\n        return this.startLineNumber < other.endLineNumberExclusive && other.startLineNumber < this.endLineNumberExclusive;\n    }\n    overlapOrTouch(other) {\n        return this.startLineNumber <= other.endLineNumberExclusive && other.startLineNumber <= this.endLineNumberExclusive;\n    }\n    equals(b) {\n        return this.startLineNumber === b.startLineNumber && this.endLineNumberExclusive === b.endLineNumberExclusive;\n    }\n    toInclusiveRange() {\n        if (this.isEmpty) {\n            return null;\n        }\n        return new Range(this.startLineNumber, 1, this.endLineNumberExclusive - 1, Number.MAX_SAFE_INTEGER);\n    }\n    /**\n     * @deprecated Using this function is discouraged because it might lead to bugs: The end position is not guaranteed to be a valid position!\n    */\n    toExclusiveRange() {\n        return new Range(this.startLineNumber, 1, this.endLineNumberExclusive, 1);\n    }\n    mapToLineArray(f) {\n        const result = [];\n        for (let lineNumber = this.startLineNumber; lineNumber < this.endLineNumberExclusive; lineNumber++) {\n            result.push(f(lineNumber));\n        }\n        return result;\n    }\n    forEach(f) {\n        for (let lineNumber = this.startLineNumber; lineNumber < this.endLineNumberExclusive; lineNumber++) {\n            f(lineNumber);\n        }\n    }\n    /**\n     * @internal\n     */\n    serialize() {\n        return [this.startLineNumber, this.endLineNumberExclusive];\n    }\n    includes(lineNumber) {\n        return this.startLineNumber <= lineNumber && lineNumber < this.endLineNumberExclusive;\n    }\n    /**\n     * Converts this 1-based line range to a 0-based offset range (subtracts 1!).\n     * @internal\n     */\n    toOffsetRange() {\n        return new OffsetRange(this.startLineNumber - 1, this.endLineNumberExclusive - 1);\n    }\n}\nexport class LineRangeSet {\n    constructor(\n    /**\n     * Sorted by start line number.\n     * No two line ranges are touching or intersecting.\n     */\n    _normalizedRanges = []) {\n        this._normalizedRanges = _normalizedRanges;\n    }\n    get ranges() {\n        return this._normalizedRanges;\n    }\n    addRange(range) {\n        if (range.length === 0) {\n            return;\n        }\n        // Idea: Find joinRange such that:\n        // replaceRange = _normalizedRanges.replaceRange(joinRange, range.joinAll(joinRange.map(idx => this._normalizedRanges[idx])))\n        // idx of first element that touches range or that is after range\n        const joinRangeStartIdx = findFirstIdxMonotonousOrArrLen(this._normalizedRanges, r => r.endLineNumberExclusive >= range.startLineNumber);\n        // idx of element after { last element that touches range or that is before range }\n        const joinRangeEndIdxExclusive = findLastIdxMonotonous(this._normalizedRanges, r => r.startLineNumber <= range.endLineNumberExclusive) + 1;\n        if (joinRangeStartIdx === joinRangeEndIdxExclusive) {\n            // If there is no element that touches range, then joinRangeStartIdx === joinRangeEndIdxExclusive and that value is the index of the element after range\n            this._normalizedRanges.splice(joinRangeStartIdx, 0, range);\n        }\n        else if (joinRangeStartIdx === joinRangeEndIdxExclusive - 1) {\n            // Else, there is an element that touches range and in this case it is both the first and last element. Thus we can replace it\n            const joinRange = this._normalizedRanges[joinRangeStartIdx];\n            this._normalizedRanges[joinRangeStartIdx] = joinRange.join(range);\n        }\n        else {\n            // First and last element are different - we need to replace the entire range\n            const joinRange = this._normalizedRanges[joinRangeStartIdx].join(this._normalizedRanges[joinRangeEndIdxExclusive - 1]).join(range);\n            this._normalizedRanges.splice(joinRangeStartIdx, joinRangeEndIdxExclusive - joinRangeStartIdx, joinRange);\n        }\n    }\n    contains(lineNumber) {\n        const rangeThatStartsBeforeEnd = findLastMonotonous(this._normalizedRanges, r => r.startLineNumber <= lineNumber);\n        return !!rangeThatStartsBeforeEnd && rangeThatStartsBeforeEnd.endLineNumberExclusive > lineNumber;\n    }\n    intersects(range) {\n        const rangeThatStartsBeforeEnd = findLastMonotonous(this._normalizedRanges, r => r.startLineNumber < range.endLineNumberExclusive);\n        return !!rangeThatStartsBeforeEnd && rangeThatStartsBeforeEnd.endLineNumberExclusive > range.startLineNumber;\n    }\n    getUnion(other) {\n        if (this._normalizedRanges.length === 0) {\n            return other;\n        }\n        if (other._normalizedRanges.length === 0) {\n            return this;\n        }\n        const result = [];\n        let i1 = 0;\n        let i2 = 0;\n        let current = null;\n        while (i1 < this._normalizedRanges.length || i2 < other._normalizedRanges.length) {\n            let next = null;\n            if (i1 < this._normalizedRanges.length && i2 < other._normalizedRanges.length) {\n                const lineRange1 = this._normalizedRanges[i1];\n                const lineRange2 = other._normalizedRanges[i2];\n                if (lineRange1.startLineNumber < lineRange2.startLineNumber) {\n                    next = lineRange1;\n                    i1++;\n                }\n                else {\n                    next = lineRange2;\n                    i2++;\n                }\n            }\n            else if (i1 < this._normalizedRanges.length) {\n                next = this._normalizedRanges[i1];\n                i1++;\n            }\n            else {\n                next = other._normalizedRanges[i2];\n                i2++;\n            }\n            if (current === null) {\n                current = next;\n            }\n            else {\n                if (current.endLineNumberExclusive >= next.startLineNumber) {\n                    // merge\n                    current = new LineRange(current.startLineNumber, Math.max(current.endLineNumberExclusive, next.endLineNumberExclusive));\n                }\n                else {\n                    // push\n                    result.push(current);\n                    current = next;\n                }\n            }\n        }\n        if (current !== null) {\n            result.push(current);\n        }\n        return new LineRangeSet(result);\n    }\n    /**\n     * Subtracts all ranges in this set from `range` and returns the result.\n     */\n    subtractFrom(range) {\n        // idx of first element that touches range or that is after range\n        const joinRangeStartIdx = findFirstIdxMonotonousOrArrLen(this._normalizedRanges, r => r.endLineNumberExclusive >= range.startLineNumber);\n        // idx of element after { last element that touches range or that is before range }\n        const joinRangeEndIdxExclusive = findLastIdxMonotonous(this._normalizedRanges, r => r.startLineNumber <= range.endLineNumberExclusive) + 1;\n        if (joinRangeStartIdx === joinRangeEndIdxExclusive) {\n            return new LineRangeSet([range]);\n        }\n        const result = [];\n        let startLineNumber = range.startLineNumber;\n        for (let i = joinRangeStartIdx; i < joinRangeEndIdxExclusive; i++) {\n            const r = this._normalizedRanges[i];\n            if (r.startLineNumber > startLineNumber) {\n                result.push(new LineRange(startLineNumber, r.startLineNumber));\n            }\n            startLineNumber = r.endLineNumberExclusive;\n        }\n        if (startLineNumber < range.endLineNumberExclusive) {\n            result.push(new LineRange(startLineNumber, range.endLineNumberExclusive));\n        }\n        return new LineRangeSet(result);\n    }\n    toString() {\n        return this._normalizedRanges.map(r => r.toString()).join(', ');\n    }\n    getIntersection(other) {\n        const result = [];\n        let i1 = 0;\n        let i2 = 0;\n        while (i1 < this._normalizedRanges.length && i2 < other._normalizedRanges.length) {\n            const r1 = this._normalizedRanges[i1];\n            const r2 = other._normalizedRanges[i2];\n            const i = r1.intersect(r2);\n            if (i && !i.isEmpty) {\n                result.push(i);\n            }\n            if (r1.endLineNumberExclusive < r2.endLineNumberExclusive) {\n                i1++;\n            }\n            else {\n                i2++;\n            }\n        }\n        return new LineRangeSet(result);\n    }\n    getWithDelta(value) {\n        return new LineRangeSet(this._normalizedRanges.map(r => r.delta(value)));\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { BugIndicatingError } from '../../../base/common/errors.js';\n/**\n * A range of offsets (0-based).\n*/\nexport class OffsetRange {\n    static addRange(range, sortedRanges) {\n        let i = 0;\n        while (i < sortedRanges.length && sortedRanges[i].endExclusive < range.start) {\n            i++;\n        }\n        let j = i;\n        while (j < sortedRanges.length && sortedRanges[j].start <= range.endExclusive) {\n            j++;\n        }\n        if (i === j) {\n            sortedRanges.splice(i, 0, range);\n        }\n        else {\n            const start = Math.min(range.start, sortedRanges[i].start);\n            const end = Math.max(range.endExclusive, sortedRanges[j - 1].endExclusive);\n            sortedRanges.splice(i, j - i, new OffsetRange(start, end));\n        }\n    }\n    static tryCreate(start, endExclusive) {\n        if (start > endExclusive) {\n            return undefined;\n        }\n        return new OffsetRange(start, endExclusive);\n    }\n    static ofLength(length) {\n        return new OffsetRange(0, length);\n    }\n    static ofStartAndLength(start, length) {\n        return new OffsetRange(start, start + length);\n    }\n    constructor(start, endExclusive) {\n        this.start = start;\n        this.endExclusive = endExclusive;\n        if (start > endExclusive) {\n            throw new BugIndicatingError(`Invalid range: ${this.toString()}`);\n        }\n    }\n    get isEmpty() {\n        return this.start === this.endExclusive;\n    }\n    delta(offset) {\n        return new OffsetRange(this.start + offset, this.endExclusive + offset);\n    }\n    deltaStart(offset) {\n        return new OffsetRange(this.start + offset, this.endExclusive);\n    }\n    deltaEnd(offset) {\n        return new OffsetRange(this.start, this.endExclusive + offset);\n    }\n    get length() {\n        return this.endExclusive - this.start;\n    }\n    toString() {\n        return `[${this.start}, ${this.endExclusive})`;\n    }\n    contains(offset) {\n        return this.start <= offset && offset < this.endExclusive;\n    }\n    /**\n     * for all numbers n: range1.contains(n) or range2.contains(n) => range1.join(range2).contains(n)\n     * The joined range is the smallest range that contains both ranges.\n     */\n    join(other) {\n        return new OffsetRange(Math.min(this.start, other.start), Math.max(this.endExclusive, other.endExclusive));\n    }\n    /**\n     * for all numbers n: range1.contains(n) and range2.contains(n) <=> range1.intersect(range2).contains(n)\n     *\n     * The resulting range is empty if the ranges do not intersect, but touch.\n     * If the ranges don't even touch, the result is undefined.\n     */\n    intersect(other) {\n        const start = Math.max(this.start, other.start);\n        const end = Math.min(this.endExclusive, other.endExclusive);\n        if (start <= end) {\n            return new OffsetRange(start, end);\n        }\n        return undefined;\n    }\n    intersects(other) {\n        const start = Math.max(this.start, other.start);\n        const end = Math.min(this.endExclusive, other.endExclusive);\n        return start < end;\n    }\n    isBefore(other) {\n        return this.endExclusive <= other.start;\n    }\n    isAfter(other) {\n        return this.start >= other.endExclusive;\n    }\n    slice(arr) {\n        return arr.slice(this.start, this.endExclusive);\n    }\n    substring(str) {\n        return str.substring(this.start, this.endExclusive);\n    }\n    /**\n     * Returns the given value if it is contained in this instance, otherwise the closest value that is contained.\n     * The range must not be empty.\n     */\n    clip(value) {\n        if (this.isEmpty) {\n            throw new BugIndicatingError(`Invalid clipping range: ${this.toString()}`);\n        }\n        return Math.max(this.start, Math.min(this.endExclusive - 1, value));\n    }\n    /**\n     * Returns `r := value + k * length` such that `r` is contained in this range.\n     * The range must not be empty.\n     *\n     * E.g. `[5, 10).clipCyclic(10) === 5`, `[5, 10).clipCyclic(11) === 6` and `[5, 10).clipCyclic(4) === 9`.\n     */\n    clipCyclic(value) {\n        if (this.isEmpty) {\n            throw new BugIndicatingError(`Invalid clipping range: ${this.toString()}`);\n        }\n        if (value < this.start) {\n            return this.endExclusive - ((this.start - value) % this.length);\n        }\n        if (value >= this.endExclusive) {\n            return this.start + ((value - this.start) % this.length);\n        }\n        return value;\n    }\n    forEach(f) {\n        for (let i = this.start; i < this.endExclusive; i++) {\n            f(i);\n        }\n    }\n}\nexport class OffsetRangeSet {\n    constructor() {\n        this._sortedRanges = [];\n    }\n    addRange(range) {\n        let i = 0;\n        while (i < this._sortedRanges.length && this._sortedRanges[i].endExclusive < range.start) {\n            i++;\n        }\n        let j = i;\n        while (j < this._sortedRanges.length && this._sortedRanges[j].start <= range.endExclusive) {\n            j++;\n        }\n        if (i === j) {\n            this._sortedRanges.splice(i, 0, range);\n        }\n        else {\n            const start = Math.min(range.start, this._sortedRanges[i].start);\n            const end = Math.max(range.endExclusive, this._sortedRanges[j - 1].endExclusive);\n            this._sortedRanges.splice(i, j - i, new OffsetRange(start, end));\n        }\n    }\n    toString() {\n        return this._sortedRanges.map(r => r.toString()).join(', ');\n    }\n    /**\n     * Returns of there is a value that is contained in this instance and the given range.\n     */\n    intersectsStrict(other) {\n        // TODO use binary search\n        let i = 0;\n        while (i < this._sortedRanges.length && this._sortedRanges[i].endExclusive <= other.start) {\n            i++;\n        }\n        return i < this._sortedRanges.length && this._sortedRanges[i].start < other.endExclusive;\n    }\n    intersectWithRange(other) {\n        // TODO use binary search + slice\n        const result = new OffsetRangeSet();\n        for (const range of this._sortedRanges) {\n            const intersection = range.intersect(other);\n            if (intersection) {\n                result.addRange(intersection);\n            }\n        }\n        return result;\n    }\n    intersectWithRangeLength(other) {\n        return this.intersectWithRange(other).length;\n    }\n    get length() {\n        return this._sortedRanges.reduce((prev, cur) => prev + cur.length, 0);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * A position in the editor.\n */\nexport class Position {\n    constructor(lineNumber, column) {\n        this.lineNumber = lineNumber;\n        this.column = column;\n    }\n    /**\n     * Create a new position from this position.\n     *\n     * @param newLineNumber new line number\n     * @param newColumn new column\n     */\n    with(newLineNumber = this.lineNumber, newColumn = this.column) {\n        if (newLineNumber === this.lineNumber && newColumn === this.column) {\n            return this;\n        }\n        else {\n            return new Position(newLineNumber, newColumn);\n        }\n    }\n    /**\n     * Derive a new position from this position.\n     *\n     * @param deltaLineNumber line number delta\n     * @param deltaColumn column delta\n     */\n    delta(deltaLineNumber = 0, deltaColumn = 0) {\n        return this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n    }\n    /**\n     * Test if this position equals other position\n     */\n    equals(other) {\n        return Position.equals(this, other);\n    }\n    /**\n     * Test if position `a` equals position `b`\n     */\n    static equals(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        return (!!a &&\n            !!b &&\n            a.lineNumber === b.lineNumber &&\n            a.column === b.column);\n    }\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be false.\n     */\n    isBefore(other) {\n        return Position.isBefore(this, other);\n    }\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be false.\n     */\n    static isBefore(a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column < b.column;\n    }\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be true.\n     */\n    isBeforeOrEqual(other) {\n        return Position.isBeforeOrEqual(this, other);\n    }\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be true.\n     */\n    static isBeforeOrEqual(a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column <= b.column;\n    }\n    /**\n     * A function that compares positions, useful for sorting\n     */\n    static compare(a, b) {\n        const aLineNumber = a.lineNumber | 0;\n        const bLineNumber = b.lineNumber | 0;\n        if (aLineNumber === bLineNumber) {\n            const aColumn = a.column | 0;\n            const bColumn = b.column | 0;\n            return aColumn - bColumn;\n        }\n        return aLineNumber - bLineNumber;\n    }\n    /**\n     * Clone this position.\n     */\n    clone() {\n        return new Position(this.lineNumber, this.column);\n    }\n    /**\n     * Convert to a human-readable representation.\n     */\n    toString() {\n        return '(' + this.lineNumber + ',' + this.column + ')';\n    }\n    // ---\n    /**\n     * Create a `Position` from an `IPosition`.\n     */\n    static lift(pos) {\n        return new Position(pos.lineNumber, pos.column);\n    }\n    /**\n     * Test if `obj` is an `IPosition`.\n     */\n    static isIPosition(obj) {\n        return (obj\n            && (typeof obj.lineNumber === 'number')\n            && (typeof obj.column === 'number'));\n    }\n    toJSON() {\n        return {\n            lineNumber: this.lineNumber,\n            column: this.column\n        };\n    }\n}\n","import { OffsetRange } from './offsetRange.js';\nimport { TextLength } from './textLength.js';\nexport class PositionOffsetTransformer {\n    constructor(text) {\n        this.text = text;\n        this.lineStartOffsetByLineIdx = [];\n        this.lineStartOffsetByLineIdx.push(0);\n        for (let i = 0; i < text.length; i++) {\n            if (text.charAt(i) === '\\n') {\n                this.lineStartOffsetByLineIdx.push(i + 1);\n            }\n        }\n    }\n    getOffset(position) {\n        return this.lineStartOffsetByLineIdx[position.lineNumber - 1] + position.column - 1;\n    }\n    getOffsetRange(range) {\n        return new OffsetRange(this.getOffset(range.getStartPosition()), this.getOffset(range.getEndPosition()));\n    }\n    get textLength() {\n        const lineIdx = this.lineStartOffsetByLineIdx.length - 1;\n        return new TextLength(lineIdx, this.text.length - this.lineStartOffsetByLineIdx[lineIdx]);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nexport class Range {\n    constructor(startLineNumber, startColumn, endLineNumber, endColumn) {\n        if ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n            this.startLineNumber = endLineNumber;\n            this.startColumn = endColumn;\n            this.endLineNumber = startLineNumber;\n            this.endColumn = startColumn;\n        }\n        else {\n            this.startLineNumber = startLineNumber;\n            this.startColumn = startColumn;\n            this.endLineNumber = endLineNumber;\n            this.endColumn = endColumn;\n        }\n    }\n    /**\n     * Test if this range is empty.\n     */\n    isEmpty() {\n        return Range.isEmpty(this);\n    }\n    /**\n     * Test if `range` is empty.\n     */\n    static isEmpty(range) {\n        return (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n    }\n    /**\n     * Test if position is in this range. If the position is at the edges, will return true.\n     */\n    containsPosition(position) {\n        return Range.containsPosition(this, position);\n    }\n    /**\n     * Test if `position` is in `range`. If the position is at the edges, will return true.\n     */\n    static containsPosition(range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Test if `position` is in `range`. If the position is at the edges, will return false.\n     * @internal\n     */\n    static strictContainsPosition(range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column <= range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column >= range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Test if range is in this range. If the range is equal to this range, will return true.\n     */\n    containsRange(range) {\n        return Range.containsRange(this, range);\n    }\n    /**\n     * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n     */\n    static containsRange(range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Test if `range` is strictly in this range. `range` must start after and end before this range for the result to be true.\n     */\n    strictContainsRange(range) {\n        return Range.strictContainsRange(this, range);\n    }\n    /**\n     * Test if `otherRange` is strictly in `range` (must start after, and end before). If the ranges are equal, will return false.\n     */\n    static strictContainsRange(range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn <= range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn >= range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    plusRange(range) {\n        return Range.plusRange(this, range);\n    }\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    static plusRange(a, b) {\n        let startLineNumber;\n        let startColumn;\n        let endLineNumber;\n        let endColumn;\n        if (b.startLineNumber < a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = b.startColumn;\n        }\n        else if (b.startLineNumber === a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = Math.min(b.startColumn, a.startColumn);\n        }\n        else {\n            startLineNumber = a.startLineNumber;\n            startColumn = a.startColumn;\n        }\n        if (b.endLineNumber > a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = b.endColumn;\n        }\n        else if (b.endLineNumber === a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = Math.max(b.endColumn, a.endColumn);\n        }\n        else {\n            endLineNumber = a.endLineNumber;\n            endColumn = a.endColumn;\n        }\n        return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n    }\n    /**\n     * A intersection of the two ranges.\n     */\n    intersectRanges(range) {\n        return Range.intersectRanges(this, range);\n    }\n    /**\n     * A intersection of the two ranges.\n     */\n    static intersectRanges(a, b) {\n        let resultStartLineNumber = a.startLineNumber;\n        let resultStartColumn = a.startColumn;\n        let resultEndLineNumber = a.endLineNumber;\n        let resultEndColumn = a.endColumn;\n        const otherStartLineNumber = b.startLineNumber;\n        const otherStartColumn = b.startColumn;\n        const otherEndLineNumber = b.endLineNumber;\n        const otherEndColumn = b.endColumn;\n        if (resultStartLineNumber < otherStartLineNumber) {\n            resultStartLineNumber = otherStartLineNumber;\n            resultStartColumn = otherStartColumn;\n        }\n        else if (resultStartLineNumber === otherStartLineNumber) {\n            resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n        }\n        if (resultEndLineNumber > otherEndLineNumber) {\n            resultEndLineNumber = otherEndLineNumber;\n            resultEndColumn = otherEndColumn;\n        }\n        else if (resultEndLineNumber === otherEndLineNumber) {\n            resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n        }\n        // Check if selection is now empty\n        if (resultStartLineNumber > resultEndLineNumber) {\n            return null;\n        }\n        if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n            return null;\n        }\n        return new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n    }\n    /**\n     * Test if this range equals other.\n     */\n    equalsRange(other) {\n        return Range.equalsRange(this, other);\n    }\n    /**\n     * Test if range `a` equals `b`.\n     */\n    static equalsRange(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        return (!!a &&\n            !!b &&\n            a.startLineNumber === b.startLineNumber &&\n            a.startColumn === b.startColumn &&\n            a.endLineNumber === b.endLineNumber &&\n            a.endColumn === b.endColumn);\n    }\n    /**\n     * Return the end position (which will be after or equal to the start position)\n     */\n    getEndPosition() {\n        return Range.getEndPosition(this);\n    }\n    /**\n     * Return the end position (which will be after or equal to the start position)\n     */\n    static getEndPosition(range) {\n        return new Position(range.endLineNumber, range.endColumn);\n    }\n    /**\n     * Return the start position (which will be before or equal to the end position)\n     */\n    getStartPosition() {\n        return Range.getStartPosition(this);\n    }\n    /**\n     * Return the start position (which will be before or equal to the end position)\n     */\n    static getStartPosition(range) {\n        return new Position(range.startLineNumber, range.startColumn);\n    }\n    /**\n     * Transform to a user presentable string representation.\n     */\n    toString() {\n        return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n    }\n    /**\n     * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n     */\n    setEndPosition(endLineNumber, endColumn) {\n        return new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n    }\n    /**\n     * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n     */\n    setStartPosition(startLineNumber, startColumn) {\n        return new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n    }\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    collapseToStart() {\n        return Range.collapseToStart(this);\n    }\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    static collapseToStart(range) {\n        return new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n    }\n    /**\n     * Create a new empty range using this range's end position.\n     */\n    collapseToEnd() {\n        return Range.collapseToEnd(this);\n    }\n    /**\n     * Create a new empty range using this range's end position.\n     */\n    static collapseToEnd(range) {\n        return new Range(range.endLineNumber, range.endColumn, range.endLineNumber, range.endColumn);\n    }\n    /**\n     * Moves the range by the given amount of lines.\n     */\n    delta(lineCount) {\n        return new Range(this.startLineNumber + lineCount, this.startColumn, this.endLineNumber + lineCount, this.endColumn);\n    }\n    // ---\n    static fromPositions(start, end = start) {\n        return new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n    }\n    static lift(range) {\n        if (!range) {\n            return null;\n        }\n        return new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n    }\n    /**\n     * Test if `obj` is an `IRange`.\n     */\n    static isIRange(obj) {\n        return (obj\n            && (typeof obj.startLineNumber === 'number')\n            && (typeof obj.startColumn === 'number')\n            && (typeof obj.endLineNumber === 'number')\n            && (typeof obj.endColumn === 'number'));\n    }\n    /**\n     * Test if the two ranges are touching in any way.\n     */\n    static areIntersectingOrTouching(a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    }\n    /**\n     * Test if the two ranges are intersecting. If the ranges are touching it returns true.\n     */\n    static areIntersecting(a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    }\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the startPosition and then on the endPosition\n     */\n    static compareRangesUsingStarts(a, b) {\n        if (a && b) {\n            const aStartLineNumber = a.startLineNumber | 0;\n            const bStartLineNumber = b.startLineNumber | 0;\n            if (aStartLineNumber === bStartLineNumber) {\n                const aStartColumn = a.startColumn | 0;\n                const bStartColumn = b.startColumn | 0;\n                if (aStartColumn === bStartColumn) {\n                    const aEndLineNumber = a.endLineNumber | 0;\n                    const bEndLineNumber = b.endLineNumber | 0;\n                    if (aEndLineNumber === bEndLineNumber) {\n                        const aEndColumn = a.endColumn | 0;\n                        const bEndColumn = b.endColumn | 0;\n                        return aEndColumn - bEndColumn;\n                    }\n                    return aEndLineNumber - bEndLineNumber;\n                }\n                return aStartColumn - bStartColumn;\n            }\n            return aStartLineNumber - bStartLineNumber;\n        }\n        const aExists = (a ? 1 : 0);\n        const bExists = (b ? 1 : 0);\n        return aExists - bExists;\n    }\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the endPosition and then on the startPosition\n     */\n    static compareRangesUsingEnds(a, b) {\n        if (a.endLineNumber === b.endLineNumber) {\n            if (a.endColumn === b.endColumn) {\n                if (a.startLineNumber === b.startLineNumber) {\n                    return a.startColumn - b.startColumn;\n                }\n                return a.startLineNumber - b.startLineNumber;\n            }\n            return a.endColumn - b.endColumn;\n        }\n        return a.endLineNumber - b.endLineNumber;\n    }\n    /**\n     * Test if the range spans multiple lines.\n     */\n    static spansMultipleLines(range) {\n        return range.endLineNumber > range.startLineNumber;\n    }\n    toJSON() {\n        return this;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\nimport { Range } from './range.js';\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nexport class Selection extends Range {\n    constructor(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\n        super(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\n        this.selectionStartLineNumber = selectionStartLineNumber;\n        this.selectionStartColumn = selectionStartColumn;\n        this.positionLineNumber = positionLineNumber;\n        this.positionColumn = positionColumn;\n    }\n    /**\n     * Transform to a human-readable representation.\n     */\n    toString() {\n        return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n    }\n    /**\n     * Test if equals other selection.\n     */\n    equalsSelection(other) {\n        return (Selection.selectionsEqual(this, other));\n    }\n    /**\n     * Test if the two selections are equal.\n     */\n    static selectionsEqual(a, b) {\n        return (a.selectionStartLineNumber === b.selectionStartLineNumber &&\n            a.selectionStartColumn === b.selectionStartColumn &&\n            a.positionLineNumber === b.positionLineNumber &&\n            a.positionColumn === b.positionColumn);\n    }\n    /**\n     * Get directions (LTR or RTL).\n     */\n    getDirection() {\n        if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n            return 0 /* SelectionDirection.LTR */;\n        }\n        return 1 /* SelectionDirection.RTL */;\n    }\n    /**\n     * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n     */\n    setEndPosition(endLineNumber, endColumn) {\n        if (this.getDirection() === 0 /* SelectionDirection.LTR */) {\n            return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n    }\n    /**\n     * Get the position at `positionLineNumber` and `positionColumn`.\n     */\n    getPosition() {\n        return new Position(this.positionLineNumber, this.positionColumn);\n    }\n    /**\n     * Get the position at the start of the selection.\n    */\n    getSelectionStart() {\n        return new Position(this.selectionStartLineNumber, this.selectionStartColumn);\n    }\n    /**\n     * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n     */\n    setStartPosition(startLineNumber, startColumn) {\n        if (this.getDirection() === 0 /* SelectionDirection.LTR */) {\n            return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n        }\n        return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n    }\n    // ----\n    /**\n     * Create a `Selection` from one or two positions\n     */\n    static fromPositions(start, end = start) {\n        return new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n    }\n    /**\n     * Creates a `Selection` from a range, given a direction.\n     */\n    static fromRange(range, direction) {\n        if (direction === 0 /* SelectionDirection.LTR */) {\n            return new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n        }\n        else {\n            return new Selection(range.endLineNumber, range.endColumn, range.startLineNumber, range.startColumn);\n        }\n    }\n    /**\n     * Create a `Selection` from an `ISelection`.\n     */\n    static liftSelection(sel) {\n        return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n    }\n    /**\n     * `a` equals `b`.\n     */\n    static selectionsArrEqual(a, b) {\n        if (a && !b || !a && b) {\n            return false;\n        }\n        if (!a && !b) {\n            return true;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0, len = a.length; i < len; i++) {\n            if (!this.selectionsEqual(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Test if `obj` is an `ISelection`.\n     */\n    static isISelection(obj) {\n        return (obj\n            && (typeof obj.selectionStartLineNumber === 'number')\n            && (typeof obj.selectionStartColumn === 'number')\n            && (typeof obj.positionLineNumber === 'number')\n            && (typeof obj.positionColumn === 'number'));\n    }\n    /**\n     * Create with a direction.\n     */\n    static createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, direction) {\n        if (direction === 0 /* SelectionDirection.LTR */) {\n            return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../base/common/strings.js';\nimport * as platform from '../../../base/common/platform.js';\nimport * as buffer from '../../../base/common/buffer.js';\nlet _utf16LE_TextDecoder;\nfunction getUTF16LE_TextDecoder() {\n    if (!_utf16LE_TextDecoder) {\n        _utf16LE_TextDecoder = new TextDecoder('UTF-16LE');\n    }\n    return _utf16LE_TextDecoder;\n}\nlet _utf16BE_TextDecoder;\nfunction getUTF16BE_TextDecoder() {\n    if (!_utf16BE_TextDecoder) {\n        _utf16BE_TextDecoder = new TextDecoder('UTF-16BE');\n    }\n    return _utf16BE_TextDecoder;\n}\nlet _platformTextDecoder;\nexport function getPlatformTextDecoder() {\n    if (!_platformTextDecoder) {\n        _platformTextDecoder = platform.isLittleEndian() ? getUTF16LE_TextDecoder() : getUTF16BE_TextDecoder();\n    }\n    return _platformTextDecoder;\n}\nexport function decodeUTF16LE(source, offset, len) {\n    const view = new Uint16Array(source.buffer, offset, len);\n    if (len > 0 && (view[0] === 0xFEFF || view[0] === 0xFFFE)) {\n        // UTF16 sometimes starts with a BOM https://de.wikipedia.org/wiki/Byte_Order_Mark\n        // It looks like TextDecoder.decode will eat up a leading BOM (0xFEFF or 0xFFFE)\n        // We don't want that behavior because we know the string is UTF16LE and the BOM should be maintained\n        // So we use the manual decoder\n        return compatDecodeUTF16LE(source, offset, len);\n    }\n    return getUTF16LE_TextDecoder().decode(view);\n}\nfunction compatDecodeUTF16LE(source, offset, len) {\n    const result = [];\n    let resultLen = 0;\n    for (let i = 0; i < len; i++) {\n        const charCode = buffer.readUInt16LE(source, offset);\n        offset += 2;\n        result[resultLen++] = String.fromCharCode(charCode);\n    }\n    return result.join('');\n}\nexport class StringBuilder {\n    constructor(capacity) {\n        this._capacity = capacity | 0;\n        this._buffer = new Uint16Array(this._capacity);\n        this._completedStrings = null;\n        this._bufferLength = 0;\n    }\n    reset() {\n        this._completedStrings = null;\n        this._bufferLength = 0;\n    }\n    build() {\n        if (this._completedStrings !== null) {\n            this._flushBuffer();\n            return this._completedStrings.join('');\n        }\n        return this._buildBuffer();\n    }\n    _buildBuffer() {\n        if (this._bufferLength === 0) {\n            return '';\n        }\n        const view = new Uint16Array(this._buffer.buffer, 0, this._bufferLength);\n        return getPlatformTextDecoder().decode(view);\n    }\n    _flushBuffer() {\n        const bufferString = this._buildBuffer();\n        this._bufferLength = 0;\n        if (this._completedStrings === null) {\n            this._completedStrings = [bufferString];\n        }\n        else {\n            this._completedStrings[this._completedStrings.length] = bufferString;\n        }\n    }\n    /**\n     * Append a char code (<2^16)\n     */\n    appendCharCode(charCode) {\n        const remainingSpace = this._capacity - this._bufferLength;\n        if (remainingSpace <= 1) {\n            if (remainingSpace === 0 || strings.isHighSurrogate(charCode)) {\n                this._flushBuffer();\n            }\n        }\n        this._buffer[this._bufferLength++] = charCode;\n    }\n    /**\n     * Append an ASCII char code (<2^8)\n     */\n    appendASCIICharCode(charCode) {\n        if (this._bufferLength === this._capacity) {\n            // buffer is full\n            this._flushBuffer();\n        }\n        this._buffer[this._bufferLength++] = charCode;\n    }\n    appendString(str) {\n        const strLen = str.length;\n        if (this._bufferLength + strLen >= this._capacity) {\n            // This string does not fit in the remaining buffer space\n            this._flushBuffer();\n            this._completedStrings[this._completedStrings.length] = str;\n            return;\n        }\n        for (let i = 0; i < strLen; i++) {\n            this._buffer[this._bufferLength++] = str.charCodeAt(i);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as buffer from '../../../base/common/buffer.js';\nimport { decodeUTF16LE } from './stringBuilder.js';\nfunction escapeNewLine(str) {\n    return (str\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\r/g, '\\\\r'));\n}\nexport class TextChange {\n    get oldLength() {\n        return this.oldText.length;\n    }\n    get oldEnd() {\n        return this.oldPosition + this.oldText.length;\n    }\n    get newLength() {\n        return this.newText.length;\n    }\n    get newEnd() {\n        return this.newPosition + this.newText.length;\n    }\n    constructor(oldPosition, oldText, newPosition, newText) {\n        this.oldPosition = oldPosition;\n        this.oldText = oldText;\n        this.newPosition = newPosition;\n        this.newText = newText;\n    }\n    toString() {\n        if (this.oldText.length === 0) {\n            return `(insert@${this.oldPosition} \"${escapeNewLine(this.newText)}\")`;\n        }\n        if (this.newText.length === 0) {\n            return `(delete@${this.oldPosition} \"${escapeNewLine(this.oldText)}\")`;\n        }\n        return `(replace@${this.oldPosition} \"${escapeNewLine(this.oldText)}\" with \"${escapeNewLine(this.newText)}\")`;\n    }\n    static _writeStringSize(str) {\n        return (4 + 2 * str.length);\n    }\n    static _writeString(b, str, offset) {\n        const len = str.length;\n        buffer.writeUInt32BE(b, len, offset);\n        offset += 4;\n        for (let i = 0; i < len; i++) {\n            buffer.writeUInt16LE(b, str.charCodeAt(i), offset);\n            offset += 2;\n        }\n        return offset;\n    }\n    static _readString(b, offset) {\n        const len = buffer.readUInt32BE(b, offset);\n        offset += 4;\n        return decodeUTF16LE(b, offset, len);\n    }\n    writeSize() {\n        return (+4 // oldPosition\n            + 4 // newPosition\n            + TextChange._writeStringSize(this.oldText)\n            + TextChange._writeStringSize(this.newText));\n    }\n    write(b, offset) {\n        buffer.writeUInt32BE(b, this.oldPosition, offset);\n        offset += 4;\n        buffer.writeUInt32BE(b, this.newPosition, offset);\n        offset += 4;\n        offset = TextChange._writeString(b, this.oldText, offset);\n        offset = TextChange._writeString(b, this.newText, offset);\n        return offset;\n    }\n    static read(b, offset, dest) {\n        const oldPosition = buffer.readUInt32BE(b, offset);\n        offset += 4;\n        const newPosition = buffer.readUInt32BE(b, offset);\n        offset += 4;\n        const oldText = TextChange._readString(b, offset);\n        offset += TextChange._writeStringSize(oldText);\n        const newText = TextChange._readString(b, offset);\n        offset += TextChange._writeStringSize(newText);\n        dest.push(new TextChange(oldPosition, oldText, newPosition, newText));\n        return offset;\n    }\n}\nexport function compressConsecutiveTextChanges(prevEdits, currEdits) {\n    if (prevEdits === null || prevEdits.length === 0) {\n        return currEdits;\n    }\n    const compressor = new TextChangeCompressor(prevEdits, currEdits);\n    return compressor.compress();\n}\nclass TextChangeCompressor {\n    constructor(prevEdits, currEdits) {\n        this._prevEdits = prevEdits;\n        this._currEdits = currEdits;\n        this._result = [];\n        this._resultLen = 0;\n        this._prevLen = this._prevEdits.length;\n        this._prevDeltaOffset = 0;\n        this._currLen = this._currEdits.length;\n        this._currDeltaOffset = 0;\n    }\n    compress() {\n        let prevIndex = 0;\n        let currIndex = 0;\n        let prevEdit = this._getPrev(prevIndex);\n        let currEdit = this._getCurr(currIndex);\n        while (prevIndex < this._prevLen || currIndex < this._currLen) {\n            if (prevEdit === null) {\n                this._acceptCurr(currEdit);\n                currEdit = this._getCurr(++currIndex);\n                continue;\n            }\n            if (currEdit === null) {\n                this._acceptPrev(prevEdit);\n                prevEdit = this._getPrev(++prevIndex);\n                continue;\n            }\n            if (currEdit.oldEnd <= prevEdit.newPosition) {\n                this._acceptCurr(currEdit);\n                currEdit = this._getCurr(++currIndex);\n                continue;\n            }\n            if (prevEdit.newEnd <= currEdit.oldPosition) {\n                this._acceptPrev(prevEdit);\n                prevEdit = this._getPrev(++prevIndex);\n                continue;\n            }\n            if (currEdit.oldPosition < prevEdit.newPosition) {\n                const [e1, e2] = TextChangeCompressor._splitCurr(currEdit, prevEdit.newPosition - currEdit.oldPosition);\n                this._acceptCurr(e1);\n                currEdit = e2;\n                continue;\n            }\n            if (prevEdit.newPosition < currEdit.oldPosition) {\n                const [e1, e2] = TextChangeCompressor._splitPrev(prevEdit, currEdit.oldPosition - prevEdit.newPosition);\n                this._acceptPrev(e1);\n                prevEdit = e2;\n                continue;\n            }\n            // At this point, currEdit.oldPosition === prevEdit.newPosition\n            let mergePrev;\n            let mergeCurr;\n            if (currEdit.oldEnd === prevEdit.newEnd) {\n                mergePrev = prevEdit;\n                mergeCurr = currEdit;\n                prevEdit = this._getPrev(++prevIndex);\n                currEdit = this._getCurr(++currIndex);\n            }\n            else if (currEdit.oldEnd < prevEdit.newEnd) {\n                const [e1, e2] = TextChangeCompressor._splitPrev(prevEdit, currEdit.oldLength);\n                mergePrev = e1;\n                mergeCurr = currEdit;\n                prevEdit = e2;\n                currEdit = this._getCurr(++currIndex);\n            }\n            else {\n                const [e1, e2] = TextChangeCompressor._splitCurr(currEdit, prevEdit.newLength);\n                mergePrev = prevEdit;\n                mergeCurr = e1;\n                prevEdit = this._getPrev(++prevIndex);\n                currEdit = e2;\n            }\n            this._result[this._resultLen++] = new TextChange(mergePrev.oldPosition, mergePrev.oldText, mergeCurr.newPosition, mergeCurr.newText);\n            this._prevDeltaOffset += mergePrev.newLength - mergePrev.oldLength;\n            this._currDeltaOffset += mergeCurr.newLength - mergeCurr.oldLength;\n        }\n        const merged = TextChangeCompressor._merge(this._result);\n        const cleaned = TextChangeCompressor._removeNoOps(merged);\n        return cleaned;\n    }\n    _acceptCurr(currEdit) {\n        this._result[this._resultLen++] = TextChangeCompressor._rebaseCurr(this._prevDeltaOffset, currEdit);\n        this._currDeltaOffset += currEdit.newLength - currEdit.oldLength;\n    }\n    _getCurr(currIndex) {\n        return (currIndex < this._currLen ? this._currEdits[currIndex] : null);\n    }\n    _acceptPrev(prevEdit) {\n        this._result[this._resultLen++] = TextChangeCompressor._rebasePrev(this._currDeltaOffset, prevEdit);\n        this._prevDeltaOffset += prevEdit.newLength - prevEdit.oldLength;\n    }\n    _getPrev(prevIndex) {\n        return (prevIndex < this._prevLen ? this._prevEdits[prevIndex] : null);\n    }\n    static _rebaseCurr(prevDeltaOffset, currEdit) {\n        return new TextChange(currEdit.oldPosition - prevDeltaOffset, currEdit.oldText, currEdit.newPosition, currEdit.newText);\n    }\n    static _rebasePrev(currDeltaOffset, prevEdit) {\n        return new TextChange(prevEdit.oldPosition, prevEdit.oldText, prevEdit.newPosition + currDeltaOffset, prevEdit.newText);\n    }\n    static _splitPrev(edit, offset) {\n        const preText = edit.newText.substr(0, offset);\n        const postText = edit.newText.substr(offset);\n        return [\n            new TextChange(edit.oldPosition, edit.oldText, edit.newPosition, preText),\n            new TextChange(edit.oldEnd, '', edit.newPosition + offset, postText)\n        ];\n    }\n    static _splitCurr(edit, offset) {\n        const preText = edit.oldText.substr(0, offset);\n        const postText = edit.oldText.substr(offset);\n        return [\n            new TextChange(edit.oldPosition, preText, edit.newPosition, edit.newText),\n            new TextChange(edit.oldPosition + offset, postText, edit.newEnd, '')\n        ];\n    }\n    static _merge(edits) {\n        if (edits.length === 0) {\n            return edits;\n        }\n        const result = [];\n        let resultLen = 0;\n        let prev = edits[0];\n        for (let i = 1; i < edits.length; i++) {\n            const curr = edits[i];\n            if (prev.oldEnd === curr.oldPosition) {\n                // Merge into `prev`\n                prev = new TextChange(prev.oldPosition, prev.oldText + curr.oldText, prev.newPosition, prev.newText + curr.newText);\n            }\n            else {\n                result[resultLen++] = prev;\n                prev = curr;\n            }\n        }\n        result[resultLen++] = prev;\n        return result;\n    }\n    static _removeNoOps(edits) {\n        if (edits.length === 0) {\n            return edits;\n        }\n        const result = [];\n        let resultLen = 0;\n        for (let i = 0; i < edits.length; i++) {\n            const edit = edits[i];\n            if (edit.oldText === edit.newText) {\n                continue;\n            }\n            result[resultLen++] = edit;\n        }\n        return result;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { assertFn, checkAdjacentItems } from '../../../base/common/assert.js';\nimport { BugIndicatingError } from '../../../base/common/errors.js';\nimport { Position } from './position.js';\nimport { PositionOffsetTransformer } from './positionToOffset.js';\nimport { Range } from './range.js';\nimport { TextLength } from './textLength.js';\nexport class TextEdit {\n    constructor(edits) {\n        this.edits = edits;\n        assertFn(() => checkAdjacentItems(edits, (a, b) => a.range.getEndPosition().isBeforeOrEqual(b.range.getStartPosition())));\n    }\n    apply(text) {\n        let result = '';\n        let lastEditEnd = new Position(1, 1);\n        for (const edit of this.edits) {\n            const editRange = edit.range;\n            const editStart = editRange.getStartPosition();\n            const editEnd = editRange.getEndPosition();\n            const r = rangeFromPositions(lastEditEnd, editStart);\n            if (!r.isEmpty()) {\n                result += text.getValueOfRange(r);\n            }\n            result += edit.text;\n            lastEditEnd = editEnd;\n        }\n        const r = rangeFromPositions(lastEditEnd, text.endPositionExclusive);\n        if (!r.isEmpty()) {\n            result += text.getValueOfRange(r);\n        }\n        return result;\n    }\n    applyToString(str) {\n        const strText = new StringText(str);\n        return this.apply(strText);\n    }\n    getNewRanges() {\n        const newRanges = [];\n        let previousEditEndLineNumber = 0;\n        let lineOffset = 0;\n        let columnOffset = 0;\n        for (const edit of this.edits) {\n            const textLength = TextLength.ofText(edit.text);\n            const newRangeStart = Position.lift({\n                lineNumber: edit.range.startLineNumber + lineOffset,\n                column: edit.range.startColumn + (edit.range.startLineNumber === previousEditEndLineNumber ? columnOffset : 0)\n            });\n            const newRange = textLength.createRange(newRangeStart);\n            newRanges.push(newRange);\n            lineOffset = newRange.endLineNumber - edit.range.endLineNumber;\n            columnOffset = newRange.endColumn - edit.range.endColumn;\n            previousEditEndLineNumber = edit.range.endLineNumber;\n        }\n        return newRanges;\n    }\n}\nexport class SingleTextEdit {\n    constructor(range, text) {\n        this.range = range;\n        this.text = text;\n    }\n    toSingleEditOperation() {\n        return {\n            range: this.range,\n            text: this.text,\n        };\n    }\n}\nfunction rangeFromPositions(start, end) {\n    if (start.lineNumber === end.lineNumber && start.column === Number.MAX_SAFE_INTEGER) {\n        return Range.fromPositions(end, end);\n    }\n    else if (!start.isBeforeOrEqual(end)) {\n        throw new BugIndicatingError('start must be before end');\n    }\n    return new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n}\nexport class AbstractText {\n    get endPositionExclusive() {\n        return this.length.addToPosition(new Position(1, 1));\n    }\n}\nexport class StringText extends AbstractText {\n    constructor(value) {\n        super();\n        this.value = value;\n        this._t = new PositionOffsetTransformer(this.value);\n    }\n    getValueOfRange(range) {\n        return this._t.getOffsetRange(range).substring(this.value);\n    }\n    get length() {\n        return this._t.textLength;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\nimport { Range } from './range.js';\n/**\n * Represents a non-negative length of text in terms of line and column count.\n*/\nexport class TextLength {\n    static { this.zero = new TextLength(0, 0); }\n    static betweenPositions(position1, position2) {\n        if (position1.lineNumber === position2.lineNumber) {\n            return new TextLength(0, position2.column - position1.column);\n        }\n        else {\n            return new TextLength(position2.lineNumber - position1.lineNumber, position2.column - 1);\n        }\n    }\n    static ofRange(range) {\n        return TextLength.betweenPositions(range.getStartPosition(), range.getEndPosition());\n    }\n    static ofText(text) {\n        let line = 0;\n        let column = 0;\n        for (const c of text) {\n            if (c === '\\n') {\n                line++;\n                column = 0;\n            }\n            else {\n                column++;\n            }\n        }\n        return new TextLength(line, column);\n    }\n    constructor(lineCount, columnCount) {\n        this.lineCount = lineCount;\n        this.columnCount = columnCount;\n    }\n    isGreaterThanOrEqualTo(other) {\n        if (this.lineCount !== other.lineCount) {\n            return this.lineCount > other.lineCount;\n        }\n        return this.columnCount >= other.columnCount;\n    }\n    createRange(startPosition) {\n        if (this.lineCount === 0) {\n            return new Range(startPosition.lineNumber, startPosition.column, startPosition.lineNumber, startPosition.column + this.columnCount);\n        }\n        else {\n            return new Range(startPosition.lineNumber, startPosition.column, startPosition.lineNumber + this.lineCount, this.columnCount + 1);\n        }\n    }\n    addToPosition(position) {\n        if (this.lineCount === 0) {\n            return new Position(position.lineNumber, position.column + this.columnCount);\n        }\n        else {\n            return new Position(position.lineNumber + this.lineCount, this.columnCount + 1);\n        }\n    }\n    toString() {\n        return `${this.lineCount},${this.columnCount}`;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport const EDITOR_MODEL_DEFAULTS = {\n    tabSize: 4,\n    indentSize: 4,\n    insertSpaces: true,\n    detectIndentation: true,\n    trimAutoWhitespace: true,\n    largeFileOptimizations: true,\n    bracketPairColorizationOptions: {\n        enabled: true,\n        independentColorPoolPerBracketType: false,\n    },\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LRUCache } from '../../../base/common/map.js';\nimport { CharacterClassifier } from './characterClassifier.js';\nexport class WordCharacterClassifier extends CharacterClassifier {\n    constructor(wordSeparators, intlSegmenterLocales) {\n        super(0 /* WordCharacterClass.Regular */);\n        this._segmenter = null;\n        this._cachedLine = null;\n        this._cachedSegments = [];\n        this.intlSegmenterLocales = intlSegmenterLocales;\n        if (this.intlSegmenterLocales.length > 0) {\n            this._segmenter = new Intl.Segmenter(this.intlSegmenterLocales, { granularity: 'word' });\n        }\n        else {\n            this._segmenter = null;\n        }\n        for (let i = 0, len = wordSeparators.length; i < len; i++) {\n            this.set(wordSeparators.charCodeAt(i), 2 /* WordCharacterClass.WordSeparator */);\n        }\n        this.set(32 /* CharCode.Space */, 1 /* WordCharacterClass.Whitespace */);\n        this.set(9 /* CharCode.Tab */, 1 /* WordCharacterClass.Whitespace */);\n    }\n    findPrevIntlWordBeforeOrAtOffset(line, offset) {\n        let candidate = null;\n        for (const segment of this._getIntlSegmenterWordsOnLine(line)) {\n            if (segment.index > offset) {\n                break;\n            }\n            candidate = segment;\n        }\n        return candidate;\n    }\n    findNextIntlWordAtOrAfterOffset(lineContent, offset) {\n        for (const segment of this._getIntlSegmenterWordsOnLine(lineContent)) {\n            if (segment.index < offset) {\n                continue;\n            }\n            return segment;\n        }\n        return null;\n    }\n    _getIntlSegmenterWordsOnLine(line) {\n        if (!this._segmenter) {\n            return [];\n        }\n        // Check if the line has changed from the previous call\n        if (this._cachedLine === line) {\n            return this._cachedSegments;\n        }\n        // Update the cache with the new line\n        this._cachedLine = line;\n        this._cachedSegments = this._filterWordSegments(this._segmenter.segment(line));\n        return this._cachedSegments;\n    }\n    _filterWordSegments(segments) {\n        const result = [];\n        for (const segment of segments) {\n            if (this._isWordLike(segment)) {\n                result.push(segment);\n            }\n        }\n        return result;\n    }\n    _isWordLike(segment) {\n        if (segment.isWordLike) {\n            return true;\n        }\n        return false;\n    }\n}\nconst wordClassifierCache = new LRUCache(10);\nexport function getMapForWordSeparators(wordSeparators, intlSegmenterLocales) {\n    const key = `${wordSeparators}/${intlSegmenterLocales.join(',')}`;\n    let result = wordClassifierCache.get(key);\n    if (!result) {\n        result = new WordCharacterClassifier(wordSeparators, intlSegmenterLocales);\n        wordClassifierCache.set(key, result);\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nexport const USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nfunction createWordRegExp(allowInWords = '') {\n    let source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n    for (const sep of USUAL_WORD_SEPARATORS) {\n        if (allowInWords.indexOf(sep) >= 0) {\n            continue;\n        }\n        source += '\\\\' + sep;\n    }\n    source += '\\\\s]+)';\n    return new RegExp(source, 'g');\n}\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nexport const DEFAULT_WORD_REGEXP = createWordRegExp();\nexport function ensureValidWordDefinition(wordDefinition) {\n    let result = DEFAULT_WORD_REGEXP;\n    if (wordDefinition && (wordDefinition instanceof RegExp)) {\n        if (!wordDefinition.global) {\n            let flags = 'g';\n            if (wordDefinition.ignoreCase) {\n                flags += 'i';\n            }\n            if (wordDefinition.multiline) {\n                flags += 'm';\n            }\n            if (wordDefinition.unicode) {\n                flags += 'u';\n            }\n            result = new RegExp(wordDefinition.source, flags);\n        }\n        else {\n            result = wordDefinition;\n        }\n    }\n    result.lastIndex = 0;\n    return result;\n}\nconst _defaultConfig = new LinkedList();\n_defaultConfig.unshift({\n    maxLen: 1000,\n    windowSize: 15,\n    timeBudget: 150\n});\nexport function getWordAtText(column, wordDefinition, text, textOffset, config) {\n    // Ensure the regex has the 'g' flag, otherwise this will loop forever\n    wordDefinition = ensureValidWordDefinition(wordDefinition);\n    if (!config) {\n        config = Iterable.first(_defaultConfig);\n    }\n    if (text.length > config.maxLen) {\n        // don't throw strings that long at the regexp\n        // but use a sub-string in which a word must occur\n        let start = column - config.maxLen / 2;\n        if (start < 0) {\n            start = 0;\n        }\n        else {\n            textOffset += start;\n        }\n        text = text.substring(start, column + config.maxLen / 2);\n        return getWordAtText(column, wordDefinition, text, textOffset, config);\n    }\n    const t1 = Date.now();\n    const pos = column - 1 - textOffset;\n    let prevRegexIndex = -1;\n    let match = null;\n    for (let i = 1;; i++) {\n        // check time budget\n        if (Date.now() - t1 >= config.timeBudget) {\n            break;\n        }\n        // reset the index at which the regexp should start matching, also know where it\n        // should stop so that subsequent search don't repeat previous searches\n        const regexIndex = pos - config.windowSize * i;\n        wordDefinition.lastIndex = Math.max(0, regexIndex);\n        const thisMatch = _findRegexMatchEnclosingPosition(wordDefinition, text, pos, prevRegexIndex);\n        if (!thisMatch && match) {\n            // stop: we have something\n            break;\n        }\n        match = thisMatch;\n        // stop: searched at start\n        if (regexIndex <= 0) {\n            break;\n        }\n        prevRegexIndex = regexIndex;\n    }\n    if (match) {\n        const result = {\n            word: match[0],\n            startColumn: textOffset + 1 + match.index,\n            endColumn: textOffset + 1 + match.index + match[0].length\n        };\n        wordDefinition.lastIndex = 0;\n        return result;\n    }\n    return null;\n}\nfunction _findRegexMatchEnclosingPosition(wordDefinition, text, pos, stopPos) {\n    let match;\n    while (match = wordDefinition.exec(text)) {\n        const matchIndex = match.index || 0;\n        if (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\n            return match;\n        }\n        else if (stopPos > 0 && matchIndex > stopPos) {\n            return null;\n        }\n    }\n    return null;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { forEachAdjacent } from '../../../../../base/common/arrays.js';\nimport { BugIndicatingError } from '../../../../../base/common/errors.js';\nimport { OffsetRange } from '../../../core/offsetRange.js';\nexport class DiffAlgorithmResult {\n    static trivial(seq1, seq2) {\n        return new DiffAlgorithmResult([new SequenceDiff(OffsetRange.ofLength(seq1.length), OffsetRange.ofLength(seq2.length))], false);\n    }\n    static trivialTimedOut(seq1, seq2) {\n        return new DiffAlgorithmResult([new SequenceDiff(OffsetRange.ofLength(seq1.length), OffsetRange.ofLength(seq2.length))], true);\n    }\n    constructor(diffs, \n    /**\n     * Indicates if the time out was reached.\n     * In that case, the diffs might be an approximation and the user should be asked to rerun the diff with more time.\n     */\n    hitTimeout) {\n        this.diffs = diffs;\n        this.hitTimeout = hitTimeout;\n    }\n}\nexport class SequenceDiff {\n    static invert(sequenceDiffs, doc1Length) {\n        const result = [];\n        forEachAdjacent(sequenceDiffs, (a, b) => {\n            result.push(SequenceDiff.fromOffsetPairs(a ? a.getEndExclusives() : OffsetPair.zero, b ? b.getStarts() : new OffsetPair(doc1Length, (a ? a.seq2Range.endExclusive - a.seq1Range.endExclusive : 0) + doc1Length)));\n        });\n        return result;\n    }\n    static fromOffsetPairs(start, endExclusive) {\n        return new SequenceDiff(new OffsetRange(start.offset1, endExclusive.offset1), new OffsetRange(start.offset2, endExclusive.offset2));\n    }\n    static assertSorted(sequenceDiffs) {\n        let last = undefined;\n        for (const cur of sequenceDiffs) {\n            if (last) {\n                if (!(last.seq1Range.endExclusive <= cur.seq1Range.start && last.seq2Range.endExclusive <= cur.seq2Range.start)) {\n                    throw new BugIndicatingError('Sequence diffs must be sorted');\n                }\n            }\n            last = cur;\n        }\n    }\n    constructor(seq1Range, seq2Range) {\n        this.seq1Range = seq1Range;\n        this.seq2Range = seq2Range;\n    }\n    swap() {\n        return new SequenceDiff(this.seq2Range, this.seq1Range);\n    }\n    toString() {\n        return `${this.seq1Range} <-> ${this.seq2Range}`;\n    }\n    join(other) {\n        return new SequenceDiff(this.seq1Range.join(other.seq1Range), this.seq2Range.join(other.seq2Range));\n    }\n    delta(offset) {\n        if (offset === 0) {\n            return this;\n        }\n        return new SequenceDiff(this.seq1Range.delta(offset), this.seq2Range.delta(offset));\n    }\n    deltaStart(offset) {\n        if (offset === 0) {\n            return this;\n        }\n        return new SequenceDiff(this.seq1Range.deltaStart(offset), this.seq2Range.deltaStart(offset));\n    }\n    deltaEnd(offset) {\n        if (offset === 0) {\n            return this;\n        }\n        return new SequenceDiff(this.seq1Range.deltaEnd(offset), this.seq2Range.deltaEnd(offset));\n    }\n    intersect(other) {\n        const i1 = this.seq1Range.intersect(other.seq1Range);\n        const i2 = this.seq2Range.intersect(other.seq2Range);\n        if (!i1 || !i2) {\n            return undefined;\n        }\n        return new SequenceDiff(i1, i2);\n    }\n    getStarts() {\n        return new OffsetPair(this.seq1Range.start, this.seq2Range.start);\n    }\n    getEndExclusives() {\n        return new OffsetPair(this.seq1Range.endExclusive, this.seq2Range.endExclusive);\n    }\n}\nexport class OffsetPair {\n    static { this.zero = new OffsetPair(0, 0); }\n    static { this.max = new OffsetPair(Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER); }\n    constructor(offset1, offset2) {\n        this.offset1 = offset1;\n        this.offset2 = offset2;\n    }\n    toString() {\n        return `${this.offset1} <-> ${this.offset2}`;\n    }\n    delta(offset) {\n        if (offset === 0) {\n            return this;\n        }\n        return new OffsetPair(this.offset1 + offset, this.offset2 + offset);\n    }\n    equals(other) {\n        return this.offset1 === other.offset1 && this.offset2 === other.offset2;\n    }\n}\nexport class InfiniteTimeout {\n    static { this.instance = new InfiniteTimeout(); }\n    isValid() {\n        return true;\n    }\n}\nexport class DateTimeout {\n    constructor(timeout) {\n        this.timeout = timeout;\n        this.startTime = Date.now();\n        this.valid = true;\n        if (timeout <= 0) {\n            throw new BugIndicatingError('timeout must be positive');\n        }\n    }\n    // Recommendation: Set a log-point `{this.disable()}` in the body\n    isValid() {\n        const valid = Date.now() - this.startTime < this.timeout;\n        if (!valid && this.valid) {\n            this.valid = false; // timeout reached\n            // eslint-disable-next-line no-debugger\n            debugger; // WARNING: Most likely debugging caused the timeout. Call `this.disable()` to continue without timing out.\n        }\n        return this.valid;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { OffsetRange } from '../../../core/offsetRange.js';\nimport { SequenceDiff, InfiniteTimeout, DiffAlgorithmResult } from './diffAlgorithm.js';\nimport { Array2D } from '../utils.js';\n/**\n * A O(MN) diffing algorithm that supports a score function.\n * The algorithm can be improved by processing the 2d array diagonally.\n*/\nexport class DynamicProgrammingDiffing {\n    compute(sequence1, sequence2, timeout = InfiniteTimeout.instance, equalityScore) {\n        if (sequence1.length === 0 || sequence2.length === 0) {\n            return DiffAlgorithmResult.trivial(sequence1, sequence2);\n        }\n        /**\n         * lcsLengths.get(i, j): Length of the longest common subsequence of sequence1.substring(0, i + 1) and sequence2.substring(0, j + 1).\n         */\n        const lcsLengths = new Array2D(sequence1.length, sequence2.length);\n        const directions = new Array2D(sequence1.length, sequence2.length);\n        const lengths = new Array2D(sequence1.length, sequence2.length);\n        // ==== Initializing lcsLengths ====\n        for (let s1 = 0; s1 < sequence1.length; s1++) {\n            for (let s2 = 0; s2 < sequence2.length; s2++) {\n                if (!timeout.isValid()) {\n                    return DiffAlgorithmResult.trivialTimedOut(sequence1, sequence2);\n                }\n                const horizontalLen = s1 === 0 ? 0 : lcsLengths.get(s1 - 1, s2);\n                const verticalLen = s2 === 0 ? 0 : lcsLengths.get(s1, s2 - 1);\n                let extendedSeqScore;\n                if (sequence1.getElement(s1) === sequence2.getElement(s2)) {\n                    if (s1 === 0 || s2 === 0) {\n                        extendedSeqScore = 0;\n                    }\n                    else {\n                        extendedSeqScore = lcsLengths.get(s1 - 1, s2 - 1);\n                    }\n                    if (s1 > 0 && s2 > 0 && directions.get(s1 - 1, s2 - 1) === 3) {\n                        // Prefer consecutive diagonals\n                        extendedSeqScore += lengths.get(s1 - 1, s2 - 1);\n                    }\n                    extendedSeqScore += (equalityScore ? equalityScore(s1, s2) : 1);\n                }\n                else {\n                    extendedSeqScore = -1;\n                }\n                const newValue = Math.max(horizontalLen, verticalLen, extendedSeqScore);\n                if (newValue === extendedSeqScore) {\n                    // Prefer diagonals\n                    const prevLen = s1 > 0 && s2 > 0 ? lengths.get(s1 - 1, s2 - 1) : 0;\n                    lengths.set(s1, s2, prevLen + 1);\n                    directions.set(s1, s2, 3);\n                }\n                else if (newValue === horizontalLen) {\n                    lengths.set(s1, s2, 0);\n                    directions.set(s1, s2, 1);\n                }\n                else if (newValue === verticalLen) {\n                    lengths.set(s1, s2, 0);\n                    directions.set(s1, s2, 2);\n                }\n                lcsLengths.set(s1, s2, newValue);\n            }\n        }\n        // ==== Backtracking ====\n        const result = [];\n        let lastAligningPosS1 = sequence1.length;\n        let lastAligningPosS2 = sequence2.length;\n        function reportDecreasingAligningPositions(s1, s2) {\n            if (s1 + 1 !== lastAligningPosS1 || s2 + 1 !== lastAligningPosS2) {\n                result.push(new SequenceDiff(new OffsetRange(s1 + 1, lastAligningPosS1), new OffsetRange(s2 + 1, lastAligningPosS2)));\n            }\n            lastAligningPosS1 = s1;\n            lastAligningPosS2 = s2;\n        }\n        let s1 = sequence1.length - 1;\n        let s2 = sequence2.length - 1;\n        while (s1 >= 0 && s2 >= 0) {\n            if (directions.get(s1, s2) === 3) {\n                reportDecreasingAligningPositions(s1, s2);\n                s1--;\n                s2--;\n            }\n            else {\n                if (directions.get(s1, s2) === 1) {\n                    s1--;\n                }\n                else {\n                    s2--;\n                }\n            }\n        }\n        reportDecreasingAligningPositions(-1, -1);\n        result.reverse();\n        return new DiffAlgorithmResult(result, false);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { OffsetRange } from '../../../core/offsetRange.js';\nimport { DiffAlgorithmResult, InfiniteTimeout, SequenceDiff } from './diffAlgorithm.js';\n/**\n * An O(ND) diff algorithm that has a quadratic space worst-case complexity.\n*/\nexport class MyersDiffAlgorithm {\n    compute(seq1, seq2, timeout = InfiniteTimeout.instance) {\n        // These are common special cases.\n        // The early return improves performance dramatically.\n        if (seq1.length === 0 || seq2.length === 0) {\n            return DiffAlgorithmResult.trivial(seq1, seq2);\n        }\n        const seqX = seq1; // Text on the x axis\n        const seqY = seq2; // Text on the y axis\n        function getXAfterSnake(x, y) {\n            while (x < seqX.length && y < seqY.length && seqX.getElement(x) === seqY.getElement(y)) {\n                x++;\n                y++;\n            }\n            return x;\n        }\n        let d = 0;\n        // V[k]: X value of longest d-line that ends in diagonal k.\n        // d-line: path from (0,0) to (x,y) that uses exactly d non-diagonals.\n        // diagonal k: Set of points (x,y) with x-y = k.\n        // k=1 -> (1,0),(2,1)\n        const V = new FastInt32Array();\n        V.set(0, getXAfterSnake(0, 0));\n        const paths = new FastArrayNegativeIndices();\n        paths.set(0, V.get(0) === 0 ? null : new SnakePath(null, 0, 0, V.get(0)));\n        let k = 0;\n        loop: while (true) {\n            d++;\n            if (!timeout.isValid()) {\n                return DiffAlgorithmResult.trivialTimedOut(seqX, seqY);\n            }\n            // The paper has `for (k = -d; k <= d; k += 2)`, but we can ignore diagonals that cannot influence the result.\n            const lowerBound = -Math.min(d, seqY.length + (d % 2));\n            const upperBound = Math.min(d, seqX.length + (d % 2));\n            for (k = lowerBound; k <= upperBound; k += 2) {\n                let step = 0;\n                // We can use the X values of (d-1)-lines to compute X value of the longest d-lines.\n                const maxXofDLineTop = k === upperBound ? -1 : V.get(k + 1); // We take a vertical non-diagonal (add a symbol in seqX)\n                const maxXofDLineLeft = k === lowerBound ? -1 : V.get(k - 1) + 1; // We take a horizontal non-diagonal (+1 x) (delete a symbol in seqX)\n                step++;\n                const x = Math.min(Math.max(maxXofDLineTop, maxXofDLineLeft), seqX.length);\n                const y = x - k;\n                step++;\n                if (x > seqX.length || y > seqY.length) {\n                    // This diagonal is irrelevant for the result.\n                    // TODO: Don't pay the cost for this in the next iteration.\n                    continue;\n                }\n                const newMaxX = getXAfterSnake(x, y);\n                V.set(k, newMaxX);\n                const lastPath = x === maxXofDLineTop ? paths.get(k + 1) : paths.get(k - 1);\n                paths.set(k, newMaxX !== x ? new SnakePath(lastPath, x, y, newMaxX - x) : lastPath);\n                if (V.get(k) === seqX.length && V.get(k) - k === seqY.length) {\n                    break loop;\n                }\n            }\n        }\n        let path = paths.get(k);\n        const result = [];\n        let lastAligningPosS1 = seqX.length;\n        let lastAligningPosS2 = seqY.length;\n        while (true) {\n            const endX = path ? path.x + path.length : 0;\n            const endY = path ? path.y + path.length : 0;\n            if (endX !== lastAligningPosS1 || endY !== lastAligningPosS2) {\n                result.push(new SequenceDiff(new OffsetRange(endX, lastAligningPosS1), new OffsetRange(endY, lastAligningPosS2)));\n            }\n            if (!path) {\n                break;\n            }\n            lastAligningPosS1 = path.x;\n            lastAligningPosS2 = path.y;\n            path = path.prev;\n        }\n        result.reverse();\n        return new DiffAlgorithmResult(result, false);\n    }\n}\nclass SnakePath {\n    constructor(prev, x, y, length) {\n        this.prev = prev;\n        this.x = x;\n        this.y = y;\n        this.length = length;\n    }\n}\n/**\n * An array that supports fast negative indices.\n*/\nclass FastInt32Array {\n    constructor() {\n        this.positiveArr = new Int32Array(10);\n        this.negativeArr = new Int32Array(10);\n    }\n    get(idx) {\n        if (idx < 0) {\n            idx = -idx - 1;\n            return this.negativeArr[idx];\n        }\n        else {\n            return this.positiveArr[idx];\n        }\n    }\n    set(idx, value) {\n        if (idx < 0) {\n            idx = -idx - 1;\n            if (idx >= this.negativeArr.length) {\n                const arr = this.negativeArr;\n                this.negativeArr = new Int32Array(arr.length * 2);\n                this.negativeArr.set(arr);\n            }\n            this.negativeArr[idx] = value;\n        }\n        else {\n            if (idx >= this.positiveArr.length) {\n                const arr = this.positiveArr;\n                this.positiveArr = new Int32Array(arr.length * 2);\n                this.positiveArr.set(arr);\n            }\n            this.positiveArr[idx] = value;\n        }\n    }\n}\n/**\n * An array that supports fast negative indices.\n*/\nclass FastArrayNegativeIndices {\n    constructor() {\n        this.positiveArr = [];\n        this.negativeArr = [];\n    }\n    get(idx) {\n        if (idx < 0) {\n            idx = -idx - 1;\n            return this.negativeArr[idx];\n        }\n        else {\n            return this.positiveArr[idx];\n        }\n    }\n    set(idx, value) {\n        if (idx < 0) {\n            idx = -idx - 1;\n            this.negativeArr[idx] = value;\n        }\n        else {\n            this.positiveArr[idx] = value;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { SequenceDiff } from './algorithms/diffAlgorithm.js';\nimport { LineRangeMapping } from '../rangeMapping.js';\nimport { pushMany, compareBy, numberComparator, reverseOrder } from '../../../../base/common/arrays.js';\nimport { MonotonousArray, findLastMonotonous } from '../../../../base/common/arraysFind.js';\nimport { SetMap } from '../../../../base/common/map.js';\nimport { LineRange, LineRangeSet } from '../../core/lineRange.js';\nimport { LinesSliceCharSequence } from './linesSliceCharSequence.js';\nimport { LineRangeFragment, isSpace } from './utils.js';\nimport { MyersDiffAlgorithm } from './algorithms/myersDiffAlgorithm.js';\nimport { Range } from '../../core/range.js';\nexport function computeMovedLines(changes, originalLines, modifiedLines, hashedOriginalLines, hashedModifiedLines, timeout) {\n    let { moves, excludedChanges } = computeMovesFromSimpleDeletionsToSimpleInsertions(changes, originalLines, modifiedLines, timeout);\n    if (!timeout.isValid()) {\n        return [];\n    }\n    const filteredChanges = changes.filter(c => !excludedChanges.has(c));\n    const unchangedMoves = computeUnchangedMoves(filteredChanges, hashedOriginalLines, hashedModifiedLines, originalLines, modifiedLines, timeout);\n    pushMany(moves, unchangedMoves);\n    moves = joinCloseConsecutiveMoves(moves);\n    // Ignore too short moves\n    moves = moves.filter(current => {\n        const lines = current.original.toOffsetRange().slice(originalLines).map(l => l.trim());\n        const originalText = lines.join('\\n');\n        return originalText.length >= 15 && countWhere(lines, l => l.length >= 2) >= 2;\n    });\n    moves = removeMovesInSameDiff(changes, moves);\n    return moves;\n}\nfunction countWhere(arr, predicate) {\n    let count = 0;\n    for (const t of arr) {\n        if (predicate(t)) {\n            count++;\n        }\n    }\n    return count;\n}\nfunction computeMovesFromSimpleDeletionsToSimpleInsertions(changes, originalLines, modifiedLines, timeout) {\n    const moves = [];\n    const deletions = changes\n        .filter(c => c.modified.isEmpty && c.original.length >= 3)\n        .map(d => new LineRangeFragment(d.original, originalLines, d));\n    const insertions = new Set(changes\n        .filter(c => c.original.isEmpty && c.modified.length >= 3)\n        .map(d => new LineRangeFragment(d.modified, modifiedLines, d)));\n    const excludedChanges = new Set();\n    for (const deletion of deletions) {\n        let highestSimilarity = -1;\n        let best;\n        for (const insertion of insertions) {\n            const similarity = deletion.computeSimilarity(insertion);\n            if (similarity > highestSimilarity) {\n                highestSimilarity = similarity;\n                best = insertion;\n            }\n        }\n        if (highestSimilarity > 0.90 && best) {\n            insertions.delete(best);\n            moves.push(new LineRangeMapping(deletion.range, best.range));\n            excludedChanges.add(deletion.source);\n            excludedChanges.add(best.source);\n        }\n        if (!timeout.isValid()) {\n            return { moves, excludedChanges };\n        }\n    }\n    return { moves, excludedChanges };\n}\nfunction computeUnchangedMoves(changes, hashedOriginalLines, hashedModifiedLines, originalLines, modifiedLines, timeout) {\n    const moves = [];\n    const original3LineHashes = new SetMap();\n    for (const change of changes) {\n        for (let i = change.original.startLineNumber; i < change.original.endLineNumberExclusive - 2; i++) {\n            const key = `${hashedOriginalLines[i - 1]}:${hashedOriginalLines[i + 1 - 1]}:${hashedOriginalLines[i + 2 - 1]}`;\n            original3LineHashes.add(key, { range: new LineRange(i, i + 3) });\n        }\n    }\n    const possibleMappings = [];\n    changes.sort(compareBy(c => c.modified.startLineNumber, numberComparator));\n    for (const change of changes) {\n        let lastMappings = [];\n        for (let i = change.modified.startLineNumber; i < change.modified.endLineNumberExclusive - 2; i++) {\n            const key = `${hashedModifiedLines[i - 1]}:${hashedModifiedLines[i + 1 - 1]}:${hashedModifiedLines[i + 2 - 1]}`;\n            const currentModifiedRange = new LineRange(i, i + 3);\n            const nextMappings = [];\n            original3LineHashes.forEach(key, ({ range }) => {\n                for (const lastMapping of lastMappings) {\n                    // does this match extend some last match?\n                    if (lastMapping.originalLineRange.endLineNumberExclusive + 1 === range.endLineNumberExclusive &&\n                        lastMapping.modifiedLineRange.endLineNumberExclusive + 1 === currentModifiedRange.endLineNumberExclusive) {\n                        lastMapping.originalLineRange = new LineRange(lastMapping.originalLineRange.startLineNumber, range.endLineNumberExclusive);\n                        lastMapping.modifiedLineRange = new LineRange(lastMapping.modifiedLineRange.startLineNumber, currentModifiedRange.endLineNumberExclusive);\n                        nextMappings.push(lastMapping);\n                        return;\n                    }\n                }\n                const mapping = {\n                    modifiedLineRange: currentModifiedRange,\n                    originalLineRange: range,\n                };\n                possibleMappings.push(mapping);\n                nextMappings.push(mapping);\n            });\n            lastMappings = nextMappings;\n        }\n        if (!timeout.isValid()) {\n            return [];\n        }\n    }\n    possibleMappings.sort(reverseOrder(compareBy(m => m.modifiedLineRange.length, numberComparator)));\n    const modifiedSet = new LineRangeSet();\n    const originalSet = new LineRangeSet();\n    for (const mapping of possibleMappings) {\n        const diffOrigToMod = mapping.modifiedLineRange.startLineNumber - mapping.originalLineRange.startLineNumber;\n        const modifiedSections = modifiedSet.subtractFrom(mapping.modifiedLineRange);\n        const originalTranslatedSections = originalSet.subtractFrom(mapping.originalLineRange).getWithDelta(diffOrigToMod);\n        const modifiedIntersectedSections = modifiedSections.getIntersection(originalTranslatedSections);\n        for (const s of modifiedIntersectedSections.ranges) {\n            if (s.length < 3) {\n                continue;\n            }\n            const modifiedLineRange = s;\n            const originalLineRange = s.delta(-diffOrigToMod);\n            moves.push(new LineRangeMapping(originalLineRange, modifiedLineRange));\n            modifiedSet.addRange(modifiedLineRange);\n            originalSet.addRange(originalLineRange);\n        }\n    }\n    moves.sort(compareBy(m => m.original.startLineNumber, numberComparator));\n    const monotonousChanges = new MonotonousArray(changes);\n    for (let i = 0; i < moves.length; i++) {\n        const move = moves[i];\n        const firstTouchingChangeOrig = monotonousChanges.findLastMonotonous(c => c.original.startLineNumber <= move.original.startLineNumber);\n        const firstTouchingChangeMod = findLastMonotonous(changes, c => c.modified.startLineNumber <= move.modified.startLineNumber);\n        const linesAbove = Math.max(move.original.startLineNumber - firstTouchingChangeOrig.original.startLineNumber, move.modified.startLineNumber - firstTouchingChangeMod.modified.startLineNumber);\n        const lastTouchingChangeOrig = monotonousChanges.findLastMonotonous(c => c.original.startLineNumber < move.original.endLineNumberExclusive);\n        const lastTouchingChangeMod = findLastMonotonous(changes, c => c.modified.startLineNumber < move.modified.endLineNumberExclusive);\n        const linesBelow = Math.max(lastTouchingChangeOrig.original.endLineNumberExclusive - move.original.endLineNumberExclusive, lastTouchingChangeMod.modified.endLineNumberExclusive - move.modified.endLineNumberExclusive);\n        let extendToTop;\n        for (extendToTop = 0; extendToTop < linesAbove; extendToTop++) {\n            const origLine = move.original.startLineNumber - extendToTop - 1;\n            const modLine = move.modified.startLineNumber - extendToTop - 1;\n            if (origLine > originalLines.length || modLine > modifiedLines.length) {\n                break;\n            }\n            if (modifiedSet.contains(modLine) || originalSet.contains(origLine)) {\n                break;\n            }\n            if (!areLinesSimilar(originalLines[origLine - 1], modifiedLines[modLine - 1], timeout)) {\n                break;\n            }\n        }\n        if (extendToTop > 0) {\n            originalSet.addRange(new LineRange(move.original.startLineNumber - extendToTop, move.original.startLineNumber));\n            modifiedSet.addRange(new LineRange(move.modified.startLineNumber - extendToTop, move.modified.startLineNumber));\n        }\n        let extendToBottom;\n        for (extendToBottom = 0; extendToBottom < linesBelow; extendToBottom++) {\n            const origLine = move.original.endLineNumberExclusive + extendToBottom;\n            const modLine = move.modified.endLineNumberExclusive + extendToBottom;\n            if (origLine > originalLines.length || modLine > modifiedLines.length) {\n                break;\n            }\n            if (modifiedSet.contains(modLine) || originalSet.contains(origLine)) {\n                break;\n            }\n            if (!areLinesSimilar(originalLines[origLine - 1], modifiedLines[modLine - 1], timeout)) {\n                break;\n            }\n        }\n        if (extendToBottom > 0) {\n            originalSet.addRange(new LineRange(move.original.endLineNumberExclusive, move.original.endLineNumberExclusive + extendToBottom));\n            modifiedSet.addRange(new LineRange(move.modified.endLineNumberExclusive, move.modified.endLineNumberExclusive + extendToBottom));\n        }\n        if (extendToTop > 0 || extendToBottom > 0) {\n            moves[i] = new LineRangeMapping(new LineRange(move.original.startLineNumber - extendToTop, move.original.endLineNumberExclusive + extendToBottom), new LineRange(move.modified.startLineNumber - extendToTop, move.modified.endLineNumberExclusive + extendToBottom));\n        }\n    }\n    return moves;\n}\nfunction areLinesSimilar(line1, line2, timeout) {\n    if (line1.trim() === line2.trim()) {\n        return true;\n    }\n    if (line1.length > 300 && line2.length > 300) {\n        return false;\n    }\n    const myersDiffingAlgorithm = new MyersDiffAlgorithm();\n    const result = myersDiffingAlgorithm.compute(new LinesSliceCharSequence([line1], new Range(1, 1, 1, line1.length), false), new LinesSliceCharSequence([line2], new Range(1, 1, 1, line2.length), false), timeout);\n    let commonNonSpaceCharCount = 0;\n    const inverted = SequenceDiff.invert(result.diffs, line1.length);\n    for (const seq of inverted) {\n        seq.seq1Range.forEach(idx => {\n            if (!isSpace(line1.charCodeAt(idx))) {\n                commonNonSpaceCharCount++;\n            }\n        });\n    }\n    function countNonWsChars(str) {\n        let count = 0;\n        for (let i = 0; i < line1.length; i++) {\n            if (!isSpace(str.charCodeAt(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    const longerLineLength = countNonWsChars(line1.length > line2.length ? line1 : line2);\n    const r = commonNonSpaceCharCount / longerLineLength > 0.6 && longerLineLength > 10;\n    return r;\n}\nfunction joinCloseConsecutiveMoves(moves) {\n    if (moves.length === 0) {\n        return moves;\n    }\n    moves.sort(compareBy(m => m.original.startLineNumber, numberComparator));\n    const result = [moves[0]];\n    for (let i = 1; i < moves.length; i++) {\n        const last = result[result.length - 1];\n        const current = moves[i];\n        const originalDist = current.original.startLineNumber - last.original.endLineNumberExclusive;\n        const modifiedDist = current.modified.startLineNumber - last.modified.endLineNumberExclusive;\n        const currentMoveAfterLast = originalDist >= 0 && modifiedDist >= 0;\n        if (currentMoveAfterLast && originalDist + modifiedDist <= 2) {\n            result[result.length - 1] = last.join(current);\n            continue;\n        }\n        result.push(current);\n    }\n    return result;\n}\nfunction removeMovesInSameDiff(changes, moves) {\n    const changesMonotonous = new MonotonousArray(changes);\n    moves = moves.filter(m => {\n        const diffBeforeEndOfMoveOriginal = changesMonotonous.findLastMonotonous(c => c.original.startLineNumber < m.original.endLineNumberExclusive)\n            || new LineRangeMapping(new LineRange(1, 1), new LineRange(1, 1));\n        const diffBeforeEndOfMoveModified = findLastMonotonous(changes, c => c.modified.startLineNumber < m.modified.endLineNumberExclusive);\n        const differentDiffs = diffBeforeEndOfMoveOriginal !== diffBeforeEndOfMoveModified;\n        return differentDiffs;\n    });\n    return moves;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { equals, groupAdjacentBy } from '../../../../base/common/arrays.js';\nimport { assertFn, checkAdjacentItems } from '../../../../base/common/assert.js';\nimport { LineRange } from '../../core/lineRange.js';\nimport { OffsetRange } from '../../core/offsetRange.js';\nimport { Range } from '../../core/range.js';\nimport { DateTimeout, InfiniteTimeout, SequenceDiff } from './algorithms/diffAlgorithm.js';\nimport { DynamicProgrammingDiffing } from './algorithms/dynamicProgrammingDiffing.js';\nimport { MyersDiffAlgorithm } from './algorithms/myersDiffAlgorithm.js';\nimport { computeMovedLines } from './computeMovedLines.js';\nimport { extendDiffsToEntireWordIfAppropriate, optimizeSequenceDiffs, removeShortMatches, removeVeryShortMatchingLinesBetweenDiffs, removeVeryShortMatchingTextBetweenLongDiffs } from './heuristicSequenceOptimizations.js';\nimport { LineSequence } from './lineSequence.js';\nimport { LinesSliceCharSequence } from './linesSliceCharSequence.js';\nimport { LinesDiff, MovedText } from '../linesDiffComputer.js';\nimport { DetailedLineRangeMapping, LineRangeMapping, RangeMapping } from '../rangeMapping.js';\nexport class DefaultLinesDiffComputer {\n    constructor() {\n        this.dynamicProgrammingDiffing = new DynamicProgrammingDiffing();\n        this.myersDiffingAlgorithm = new MyersDiffAlgorithm();\n    }\n    computeDiff(originalLines, modifiedLines, options) {\n        if (originalLines.length <= 1 && equals(originalLines, modifiedLines, (a, b) => a === b)) {\n            return new LinesDiff([], [], false);\n        }\n        if (originalLines.length === 1 && originalLines[0].length === 0 || modifiedLines.length === 1 && modifiedLines[0].length === 0) {\n            return new LinesDiff([\n                new DetailedLineRangeMapping(new LineRange(1, originalLines.length + 1), new LineRange(1, modifiedLines.length + 1), [\n                    new RangeMapping(new Range(1, 1, originalLines.length, originalLines[originalLines.length - 1].length + 1), new Range(1, 1, modifiedLines.length, modifiedLines[modifiedLines.length - 1].length + 1))\n                ])\n            ], [], false);\n        }\n        const timeout = options.maxComputationTimeMs === 0 ? InfiniteTimeout.instance : new DateTimeout(options.maxComputationTimeMs);\n        const considerWhitespaceChanges = !options.ignoreTrimWhitespace;\n        const perfectHashes = new Map();\n        function getOrCreateHash(text) {\n            let hash = perfectHashes.get(text);\n            if (hash === undefined) {\n                hash = perfectHashes.size;\n                perfectHashes.set(text, hash);\n            }\n            return hash;\n        }\n        const originalLinesHashes = originalLines.map((l) => getOrCreateHash(l.trim()));\n        const modifiedLinesHashes = modifiedLines.map((l) => getOrCreateHash(l.trim()));\n        const sequence1 = new LineSequence(originalLinesHashes, originalLines);\n        const sequence2 = new LineSequence(modifiedLinesHashes, modifiedLines);\n        const lineAlignmentResult = (() => {\n            if (sequence1.length + sequence2.length < 1700) {\n                // Use the improved algorithm for small files\n                return this.dynamicProgrammingDiffing.compute(sequence1, sequence2, timeout, (offset1, offset2) => originalLines[offset1] === modifiedLines[offset2]\n                    ? modifiedLines[offset2].length === 0\n                        ? 0.1\n                        : 1 + Math.log(1 + modifiedLines[offset2].length)\n                    : 0.99);\n            }\n            return this.myersDiffingAlgorithm.compute(sequence1, sequence2, timeout);\n        })();\n        let lineAlignments = lineAlignmentResult.diffs;\n        let hitTimeout = lineAlignmentResult.hitTimeout;\n        lineAlignments = optimizeSequenceDiffs(sequence1, sequence2, lineAlignments);\n        lineAlignments = removeVeryShortMatchingLinesBetweenDiffs(sequence1, sequence2, lineAlignments);\n        const alignments = [];\n        const scanForWhitespaceChanges = (equalLinesCount) => {\n            if (!considerWhitespaceChanges) {\n                return;\n            }\n            for (let i = 0; i < equalLinesCount; i++) {\n                const seq1Offset = seq1LastStart + i;\n                const seq2Offset = seq2LastStart + i;\n                if (originalLines[seq1Offset] !== modifiedLines[seq2Offset]) {\n                    // This is because of whitespace changes, diff these lines\n                    const characterDiffs = this.refineDiff(originalLines, modifiedLines, new SequenceDiff(new OffsetRange(seq1Offset, seq1Offset + 1), new OffsetRange(seq2Offset, seq2Offset + 1)), timeout, considerWhitespaceChanges);\n                    for (const a of characterDiffs.mappings) {\n                        alignments.push(a);\n                    }\n                    if (characterDiffs.hitTimeout) {\n                        hitTimeout = true;\n                    }\n                }\n            }\n        };\n        let seq1LastStart = 0;\n        let seq2LastStart = 0;\n        for (const diff of lineAlignments) {\n            assertFn(() => diff.seq1Range.start - seq1LastStart === diff.seq2Range.start - seq2LastStart);\n            const equalLinesCount = diff.seq1Range.start - seq1LastStart;\n            scanForWhitespaceChanges(equalLinesCount);\n            seq1LastStart = diff.seq1Range.endExclusive;\n            seq2LastStart = diff.seq2Range.endExclusive;\n            const characterDiffs = this.refineDiff(originalLines, modifiedLines, diff, timeout, considerWhitespaceChanges);\n            if (characterDiffs.hitTimeout) {\n                hitTimeout = true;\n            }\n            for (const a of characterDiffs.mappings) {\n                alignments.push(a);\n            }\n        }\n        scanForWhitespaceChanges(originalLines.length - seq1LastStart);\n        const changes = lineRangeMappingFromRangeMappings(alignments, originalLines, modifiedLines);\n        let moves = [];\n        if (options.computeMoves) {\n            moves = this.computeMoves(changes, originalLines, modifiedLines, originalLinesHashes, modifiedLinesHashes, timeout, considerWhitespaceChanges);\n        }\n        // Make sure all ranges are valid\n        assertFn(() => {\n            function validatePosition(pos, lines) {\n                if (pos.lineNumber < 1 || pos.lineNumber > lines.length) {\n                    return false;\n                }\n                const line = lines[pos.lineNumber - 1];\n                if (pos.column < 1 || pos.column > line.length + 1) {\n                    return false;\n                }\n                return true;\n            }\n            function validateRange(range, lines) {\n                if (range.startLineNumber < 1 || range.startLineNumber > lines.length + 1) {\n                    return false;\n                }\n                if (range.endLineNumberExclusive < 1 || range.endLineNumberExclusive > lines.length + 1) {\n                    return false;\n                }\n                return true;\n            }\n            for (const c of changes) {\n                if (!c.innerChanges) {\n                    return false;\n                }\n                for (const ic of c.innerChanges) {\n                    const valid = validatePosition(ic.modifiedRange.getStartPosition(), modifiedLines) && validatePosition(ic.modifiedRange.getEndPosition(), modifiedLines) &&\n                        validatePosition(ic.originalRange.getStartPosition(), originalLines) && validatePosition(ic.originalRange.getEndPosition(), originalLines);\n                    if (!valid) {\n                        return false;\n                    }\n                }\n                if (!validateRange(c.modified, modifiedLines) || !validateRange(c.original, originalLines)) {\n                    return false;\n                }\n            }\n            return true;\n        });\n        return new LinesDiff(changes, moves, hitTimeout);\n    }\n    computeMoves(changes, originalLines, modifiedLines, hashedOriginalLines, hashedModifiedLines, timeout, considerWhitespaceChanges) {\n        const moves = computeMovedLines(changes, originalLines, modifiedLines, hashedOriginalLines, hashedModifiedLines, timeout);\n        const movesWithDiffs = moves.map(m => {\n            const moveChanges = this.refineDiff(originalLines, modifiedLines, new SequenceDiff(m.original.toOffsetRange(), m.modified.toOffsetRange()), timeout, considerWhitespaceChanges);\n            const mappings = lineRangeMappingFromRangeMappings(moveChanges.mappings, originalLines, modifiedLines, true);\n            return new MovedText(m, mappings);\n        });\n        return movesWithDiffs;\n    }\n    refineDiff(originalLines, modifiedLines, diff, timeout, considerWhitespaceChanges) {\n        const lineRangeMapping = toLineRangeMapping(diff);\n        const rangeMapping = lineRangeMapping.toRangeMapping2(originalLines, modifiedLines);\n        const slice1 = new LinesSliceCharSequence(originalLines, rangeMapping.originalRange, considerWhitespaceChanges);\n        const slice2 = new LinesSliceCharSequence(modifiedLines, rangeMapping.modifiedRange, considerWhitespaceChanges);\n        const diffResult = slice1.length + slice2.length < 500\n            ? this.dynamicProgrammingDiffing.compute(slice1, slice2, timeout)\n            : this.myersDiffingAlgorithm.compute(slice1, slice2, timeout);\n        const check = false;\n        let diffs = diffResult.diffs;\n        if (check) {\n            SequenceDiff.assertSorted(diffs);\n        }\n        diffs = optimizeSequenceDiffs(slice1, slice2, diffs);\n        if (check) {\n            SequenceDiff.assertSorted(diffs);\n        }\n        diffs = extendDiffsToEntireWordIfAppropriate(slice1, slice2, diffs);\n        if (check) {\n            SequenceDiff.assertSorted(diffs);\n        }\n        diffs = removeShortMatches(slice1, slice2, diffs);\n        if (check) {\n            SequenceDiff.assertSorted(diffs);\n        }\n        diffs = removeVeryShortMatchingTextBetweenLongDiffs(slice1, slice2, diffs);\n        if (check) {\n            SequenceDiff.assertSorted(diffs);\n        }\n        const result = diffs.map((d) => new RangeMapping(slice1.translateRange(d.seq1Range), slice2.translateRange(d.seq2Range)));\n        if (check) {\n            RangeMapping.assertSorted(result);\n        }\n        // Assert: result applied on original should be the same as diff applied to original\n        return {\n            mappings: result,\n            hitTimeout: diffResult.hitTimeout,\n        };\n    }\n}\nexport function lineRangeMappingFromRangeMappings(alignments, originalLines, modifiedLines, dontAssertStartLine = false) {\n    const changes = [];\n    for (const g of groupAdjacentBy(alignments.map(a => getLineRangeMapping(a, originalLines, modifiedLines)), (a1, a2) => a1.original.overlapOrTouch(a2.original)\n        || a1.modified.overlapOrTouch(a2.modified))) {\n        const first = g[0];\n        const last = g[g.length - 1];\n        changes.push(new DetailedLineRangeMapping(first.original.join(last.original), first.modified.join(last.modified), g.map(a => a.innerChanges[0])));\n    }\n    assertFn(() => {\n        if (!dontAssertStartLine && changes.length > 0) {\n            if (changes[0].modified.startLineNumber !== changes[0].original.startLineNumber) {\n                return false;\n            }\n            if (modifiedLines.length - changes[changes.length - 1].modified.endLineNumberExclusive !== originalLines.length - changes[changes.length - 1].original.endLineNumberExclusive) {\n                return false;\n            }\n        }\n        return checkAdjacentItems(changes, (m1, m2) => m2.original.startLineNumber - m1.original.endLineNumberExclusive === m2.modified.startLineNumber - m1.modified.endLineNumberExclusive &&\n            // There has to be an unchanged line in between (otherwise both diffs should have been joined)\n            m1.original.endLineNumberExclusive < m2.original.startLineNumber &&\n            m1.modified.endLineNumberExclusive < m2.modified.startLineNumber);\n    });\n    return changes;\n}\nexport function getLineRangeMapping(rangeMapping, originalLines, modifiedLines) {\n    let lineStartDelta = 0;\n    let lineEndDelta = 0;\n    // rangeMapping describes the edit that replaces `rangeMapping.originalRange` with `newText := getText(modifiedLines, rangeMapping.modifiedRange)`.\n    // original: ]xxx \\n <- this line is not modified\n    // modified: ]xx  \\n\n    if (rangeMapping.modifiedRange.endColumn === 1 && rangeMapping.originalRange.endColumn === 1\n        && rangeMapping.originalRange.startLineNumber + lineStartDelta <= rangeMapping.originalRange.endLineNumber\n        && rangeMapping.modifiedRange.startLineNumber + lineStartDelta <= rangeMapping.modifiedRange.endLineNumber) {\n        // We can only do this if the range is not empty yet\n        lineEndDelta = -1;\n    }\n    // original: xxx[ \\n <- this line is not modified\n    // modified: xxx[ \\n\n    if (rangeMapping.modifiedRange.startColumn - 1 >= modifiedLines[rangeMapping.modifiedRange.startLineNumber - 1].length\n        && rangeMapping.originalRange.startColumn - 1 >= originalLines[rangeMapping.originalRange.startLineNumber - 1].length\n        && rangeMapping.originalRange.startLineNumber <= rangeMapping.originalRange.endLineNumber + lineEndDelta\n        && rangeMapping.modifiedRange.startLineNumber <= rangeMapping.modifiedRange.endLineNumber + lineEndDelta) {\n        // We can only do this if the range is not empty yet\n        lineStartDelta = 1;\n    }\n    const originalLineRange = new LineRange(rangeMapping.originalRange.startLineNumber + lineStartDelta, rangeMapping.originalRange.endLineNumber + 1 + lineEndDelta);\n    const modifiedLineRange = new LineRange(rangeMapping.modifiedRange.startLineNumber + lineStartDelta, rangeMapping.modifiedRange.endLineNumber + 1 + lineEndDelta);\n    return new DetailedLineRangeMapping(originalLineRange, modifiedLineRange, [rangeMapping]);\n}\nfunction toLineRangeMapping(sequenceDiff) {\n    return new LineRangeMapping(new LineRange(sequenceDiff.seq1Range.start + 1, sequenceDiff.seq1Range.endExclusive + 1), new LineRange(sequenceDiff.seq2Range.start + 1, sequenceDiff.seq2Range.endExclusive + 1));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { forEachWithNeighbors } from '../../../../base/common/arrays.js';\nimport { OffsetRange } from '../../core/offsetRange.js';\nimport { OffsetPair, SequenceDiff } from './algorithms/diffAlgorithm.js';\nexport function optimizeSequenceDiffs(sequence1, sequence2, sequenceDiffs) {\n    let result = sequenceDiffs;\n    result = joinSequenceDiffsByShifting(sequence1, sequence2, result);\n    // Sometimes, calling this function twice improves the result.\n    // Uncomment the second invocation and run the tests to see the difference.\n    result = joinSequenceDiffsByShifting(sequence1, sequence2, result);\n    result = shiftSequenceDiffs(sequence1, sequence2, result);\n    return result;\n}\n/**\n * This function fixes issues like this:\n * ```\n * import { Baz, Bar } from \"foo\";\n * ```\n * <->\n * ```\n * import { Baz, Bar, Foo } from \"foo\";\n * ```\n * Computed diff: [ {Add \",\" after Bar}, {Add \"Foo \" after space} }\n * Improved diff: [{Add \", Foo\" after Bar}]\n */\nfunction joinSequenceDiffsByShifting(sequence1, sequence2, sequenceDiffs) {\n    if (sequenceDiffs.length === 0) {\n        return sequenceDiffs;\n    }\n    const result = [];\n    result.push(sequenceDiffs[0]);\n    // First move them all to the left as much as possible and join them if possible\n    for (let i = 1; i < sequenceDiffs.length; i++) {\n        const prevResult = result[result.length - 1];\n        let cur = sequenceDiffs[i];\n        if (cur.seq1Range.isEmpty || cur.seq2Range.isEmpty) {\n            const length = cur.seq1Range.start - prevResult.seq1Range.endExclusive;\n            let d;\n            for (d = 1; d <= length; d++) {\n                if (sequence1.getElement(cur.seq1Range.start - d) !== sequence1.getElement(cur.seq1Range.endExclusive - d) ||\n                    sequence2.getElement(cur.seq2Range.start - d) !== sequence2.getElement(cur.seq2Range.endExclusive - d)) {\n                    break;\n                }\n            }\n            d--;\n            if (d === length) {\n                // Merge previous and current diff\n                result[result.length - 1] = new SequenceDiff(new OffsetRange(prevResult.seq1Range.start, cur.seq1Range.endExclusive - length), new OffsetRange(prevResult.seq2Range.start, cur.seq2Range.endExclusive - length));\n                continue;\n            }\n            cur = cur.delta(-d);\n        }\n        result.push(cur);\n    }\n    const result2 = [];\n    // Then move them all to the right and join them again if possible\n    for (let i = 0; i < result.length - 1; i++) {\n        const nextResult = result[i + 1];\n        let cur = result[i];\n        if (cur.seq1Range.isEmpty || cur.seq2Range.isEmpty) {\n            const length = nextResult.seq1Range.start - cur.seq1Range.endExclusive;\n            let d;\n            for (d = 0; d < length; d++) {\n                if (!sequence1.isStronglyEqual(cur.seq1Range.start + d, cur.seq1Range.endExclusive + d) ||\n                    !sequence2.isStronglyEqual(cur.seq2Range.start + d, cur.seq2Range.endExclusive + d)) {\n                    break;\n                }\n            }\n            if (d === length) {\n                // Merge previous and current diff, write to result!\n                result[i + 1] = new SequenceDiff(new OffsetRange(cur.seq1Range.start + length, nextResult.seq1Range.endExclusive), new OffsetRange(cur.seq2Range.start + length, nextResult.seq2Range.endExclusive));\n                continue;\n            }\n            if (d > 0) {\n                cur = cur.delta(d);\n            }\n        }\n        result2.push(cur);\n    }\n    if (result.length > 0) {\n        result2.push(result[result.length - 1]);\n    }\n    return result2;\n}\n// align character level diffs at whitespace characters\n// import { IBar } from \"foo\";\n// import { I[Arr, I]Bar } from \"foo\";\n// ->\n// import { [IArr, ]IBar } from \"foo\";\n// import { ITransaction, observableValue, transaction } from 'vs/base/common/observable';\n// import { ITransaction, observable[FromEvent, observable]Value, transaction } from 'vs/base/common/observable';\n// ->\n// import { ITransaction, [observableFromEvent, ]observableValue, transaction } from 'vs/base/common/observable';\n// collectBrackets(level + 1, levelPerBracketType);\n// collectBrackets(level + 1, levelPerBracket[ + 1, levelPerBracket]Type);\n// ->\n// collectBrackets(level + 1, [levelPerBracket + 1, ]levelPerBracketType);\nfunction shiftSequenceDiffs(sequence1, sequence2, sequenceDiffs) {\n    if (!sequence1.getBoundaryScore || !sequence2.getBoundaryScore) {\n        return sequenceDiffs;\n    }\n    for (let i = 0; i < sequenceDiffs.length; i++) {\n        const prevDiff = (i > 0 ? sequenceDiffs[i - 1] : undefined);\n        const diff = sequenceDiffs[i];\n        const nextDiff = (i + 1 < sequenceDiffs.length ? sequenceDiffs[i + 1] : undefined);\n        const seq1ValidRange = new OffsetRange(prevDiff ? prevDiff.seq1Range.endExclusive + 1 : 0, nextDiff ? nextDiff.seq1Range.start - 1 : sequence1.length);\n        const seq2ValidRange = new OffsetRange(prevDiff ? prevDiff.seq2Range.endExclusive + 1 : 0, nextDiff ? nextDiff.seq2Range.start - 1 : sequence2.length);\n        if (diff.seq1Range.isEmpty) {\n            sequenceDiffs[i] = shiftDiffToBetterPosition(diff, sequence1, sequence2, seq1ValidRange, seq2ValidRange);\n        }\n        else if (diff.seq2Range.isEmpty) {\n            sequenceDiffs[i] = shiftDiffToBetterPosition(diff.swap(), sequence2, sequence1, seq2ValidRange, seq1ValidRange).swap();\n        }\n    }\n    return sequenceDiffs;\n}\nfunction shiftDiffToBetterPosition(diff, sequence1, sequence2, seq1ValidRange, seq2ValidRange) {\n    const maxShiftLimit = 100; // To prevent performance issues\n    // don't touch previous or next!\n    let deltaBefore = 1;\n    while (diff.seq1Range.start - deltaBefore >= seq1ValidRange.start &&\n        diff.seq2Range.start - deltaBefore >= seq2ValidRange.start &&\n        sequence2.isStronglyEqual(diff.seq2Range.start - deltaBefore, diff.seq2Range.endExclusive - deltaBefore) && deltaBefore < maxShiftLimit) {\n        deltaBefore++;\n    }\n    deltaBefore--;\n    let deltaAfter = 0;\n    while (diff.seq1Range.start + deltaAfter < seq1ValidRange.endExclusive &&\n        diff.seq2Range.endExclusive + deltaAfter < seq2ValidRange.endExclusive &&\n        sequence2.isStronglyEqual(diff.seq2Range.start + deltaAfter, diff.seq2Range.endExclusive + deltaAfter) && deltaAfter < maxShiftLimit) {\n        deltaAfter++;\n    }\n    if (deltaBefore === 0 && deltaAfter === 0) {\n        return diff;\n    }\n    // Visualize `[sequence1.text, diff.seq1Range.start + deltaAfter]`\n    // and `[sequence2.text, diff.seq2Range.start + deltaAfter, diff.seq2Range.endExclusive + deltaAfter]`\n    let bestDelta = 0;\n    let bestScore = -1;\n    // find best scored delta\n    for (let delta = -deltaBefore; delta <= deltaAfter; delta++) {\n        const seq2OffsetStart = diff.seq2Range.start + delta;\n        const seq2OffsetEndExclusive = diff.seq2Range.endExclusive + delta;\n        const seq1Offset = diff.seq1Range.start + delta;\n        const score = sequence1.getBoundaryScore(seq1Offset) + sequence2.getBoundaryScore(seq2OffsetStart) + sequence2.getBoundaryScore(seq2OffsetEndExclusive);\n        if (score > bestScore) {\n            bestScore = score;\n            bestDelta = delta;\n        }\n    }\n    return diff.delta(bestDelta);\n}\nexport function removeShortMatches(sequence1, sequence2, sequenceDiffs) {\n    const result = [];\n    for (const s of sequenceDiffs) {\n        const last = result[result.length - 1];\n        if (!last) {\n            result.push(s);\n            continue;\n        }\n        if (s.seq1Range.start - last.seq1Range.endExclusive <= 2 || s.seq2Range.start - last.seq2Range.endExclusive <= 2) {\n            result[result.length - 1] = new SequenceDiff(last.seq1Range.join(s.seq1Range), last.seq2Range.join(s.seq2Range));\n        }\n        else {\n            result.push(s);\n        }\n    }\n    return result;\n}\nexport function extendDiffsToEntireWordIfAppropriate(sequence1, sequence2, sequenceDiffs) {\n    const equalMappings = SequenceDiff.invert(sequenceDiffs, sequence1.length);\n    const additional = [];\n    let lastPoint = new OffsetPair(0, 0);\n    function scanWord(pair, equalMapping) {\n        if (pair.offset1 < lastPoint.offset1 || pair.offset2 < lastPoint.offset2) {\n            return;\n        }\n        const w1 = sequence1.findWordContaining(pair.offset1);\n        const w2 = sequence2.findWordContaining(pair.offset2);\n        if (!w1 || !w2) {\n            return;\n        }\n        let w = new SequenceDiff(w1, w2);\n        const equalPart = w.intersect(equalMapping);\n        let equalChars1 = equalPart.seq1Range.length;\n        let equalChars2 = equalPart.seq2Range.length;\n        // The words do not touch previous equals mappings, as we would have processed them already.\n        // But they might touch the next ones.\n        while (equalMappings.length > 0) {\n            const next = equalMappings[0];\n            const intersects = next.seq1Range.intersects(w.seq1Range) || next.seq2Range.intersects(w.seq2Range);\n            if (!intersects) {\n                break;\n            }\n            const v1 = sequence1.findWordContaining(next.seq1Range.start);\n            const v2 = sequence2.findWordContaining(next.seq2Range.start);\n            // Because there is an intersection, we know that the words are not empty.\n            const v = new SequenceDiff(v1, v2);\n            const equalPart = v.intersect(next);\n            equalChars1 += equalPart.seq1Range.length;\n            equalChars2 += equalPart.seq2Range.length;\n            w = w.join(v);\n            if (w.seq1Range.endExclusive >= next.seq1Range.endExclusive) {\n                // The word extends beyond the next equal mapping.\n                equalMappings.shift();\n            }\n            else {\n                break;\n            }\n        }\n        if (equalChars1 + equalChars2 < (w.seq1Range.length + w.seq2Range.length) * 2 / 3) {\n            additional.push(w);\n        }\n        lastPoint = w.getEndExclusives();\n    }\n    while (equalMappings.length > 0) {\n        const next = equalMappings.shift();\n        if (next.seq1Range.isEmpty) {\n            continue;\n        }\n        scanWord(next.getStarts(), next);\n        // The equal parts are not empty, so -1 gives us a character that is equal in both parts.\n        scanWord(next.getEndExclusives().delta(-1), next);\n    }\n    const merged = mergeSequenceDiffs(sequenceDiffs, additional);\n    return merged;\n}\nfunction mergeSequenceDiffs(sequenceDiffs1, sequenceDiffs2) {\n    const result = [];\n    while (sequenceDiffs1.length > 0 || sequenceDiffs2.length > 0) {\n        const sd1 = sequenceDiffs1[0];\n        const sd2 = sequenceDiffs2[0];\n        let next;\n        if (sd1 && (!sd2 || sd1.seq1Range.start < sd2.seq1Range.start)) {\n            next = sequenceDiffs1.shift();\n        }\n        else {\n            next = sequenceDiffs2.shift();\n        }\n        if (result.length > 0 && result[result.length - 1].seq1Range.endExclusive >= next.seq1Range.start) {\n            result[result.length - 1] = result[result.length - 1].join(next);\n        }\n        else {\n            result.push(next);\n        }\n    }\n    return result;\n}\nexport function removeVeryShortMatchingLinesBetweenDiffs(sequence1, _sequence2, sequenceDiffs) {\n    let diffs = sequenceDiffs;\n    if (diffs.length === 0) {\n        return diffs;\n    }\n    let counter = 0;\n    let shouldRepeat;\n    do {\n        shouldRepeat = false;\n        const result = [\n            diffs[0]\n        ];\n        for (let i = 1; i < diffs.length; i++) {\n            const cur = diffs[i];\n            const lastResult = result[result.length - 1];\n            function shouldJoinDiffs(before, after) {\n                const unchangedRange = new OffsetRange(lastResult.seq1Range.endExclusive, cur.seq1Range.start);\n                const unchangedText = sequence1.getText(unchangedRange);\n                const unchangedTextWithoutWs = unchangedText.replace(/\\s/g, '');\n                if (unchangedTextWithoutWs.length <= 4\n                    && (before.seq1Range.length + before.seq2Range.length > 5 || after.seq1Range.length + after.seq2Range.length > 5)) {\n                    return true;\n                }\n                return false;\n            }\n            const shouldJoin = shouldJoinDiffs(lastResult, cur);\n            if (shouldJoin) {\n                shouldRepeat = true;\n                result[result.length - 1] = result[result.length - 1].join(cur);\n            }\n            else {\n                result.push(cur);\n            }\n        }\n        diffs = result;\n    } while (counter++ < 10 && shouldRepeat);\n    return diffs;\n}\nexport function removeVeryShortMatchingTextBetweenLongDiffs(sequence1, sequence2, sequenceDiffs) {\n    let diffs = sequenceDiffs;\n    if (diffs.length === 0) {\n        return diffs;\n    }\n    let counter = 0;\n    let shouldRepeat;\n    do {\n        shouldRepeat = false;\n        const result = [\n            diffs[0]\n        ];\n        for (let i = 1; i < diffs.length; i++) {\n            const cur = diffs[i];\n            const lastResult = result[result.length - 1];\n            function shouldJoinDiffs(before, after) {\n                const unchangedRange = new OffsetRange(lastResult.seq1Range.endExclusive, cur.seq1Range.start);\n                const unchangedLineCount = sequence1.countLinesIn(unchangedRange);\n                if (unchangedLineCount > 5 || unchangedRange.length > 500) {\n                    return false;\n                }\n                const unchangedText = sequence1.getText(unchangedRange).trim();\n                if (unchangedText.length > 20 || unchangedText.split(/\\r\\n|\\r|\\n/).length > 1) {\n                    return false;\n                }\n                const beforeLineCount1 = sequence1.countLinesIn(before.seq1Range);\n                const beforeSeq1Length = before.seq1Range.length;\n                const beforeLineCount2 = sequence2.countLinesIn(before.seq2Range);\n                const beforeSeq2Length = before.seq2Range.length;\n                const afterLineCount1 = sequence1.countLinesIn(after.seq1Range);\n                const afterSeq1Length = after.seq1Range.length;\n                const afterLineCount2 = sequence2.countLinesIn(after.seq2Range);\n                const afterSeq2Length = after.seq2Range.length;\n                // TODO: Maybe a neural net can be used to derive the result from these numbers\n                const max = 2 * 40 + 50;\n                function cap(v) {\n                    return Math.min(v, max);\n                }\n                if (Math.pow(Math.pow(cap(beforeLineCount1 * 40 + beforeSeq1Length), 1.5) + Math.pow(cap(beforeLineCount2 * 40 + beforeSeq2Length), 1.5), 1.5)\n                    + Math.pow(Math.pow(cap(afterLineCount1 * 40 + afterSeq1Length), 1.5) + Math.pow(cap(afterLineCount2 * 40 + afterSeq2Length), 1.5), 1.5) > ((max ** 1.5) ** 1.5) * 1.3) {\n                    return true;\n                }\n                return false;\n            }\n            const shouldJoin = shouldJoinDiffs(lastResult, cur);\n            if (shouldJoin) {\n                shouldRepeat = true;\n                result[result.length - 1] = result[result.length - 1].join(cur);\n            }\n            else {\n                result.push(cur);\n            }\n        }\n        diffs = result;\n    } while (counter++ < 10 && shouldRepeat);\n    const newDiffs = [];\n    // Remove short suffixes/prefixes\n    forEachWithNeighbors(diffs, (prev, cur, next) => {\n        let newDiff = cur;\n        function shouldMarkAsChanged(text) {\n            return text.length > 0 && text.trim().length <= 3 && cur.seq1Range.length + cur.seq2Range.length > 100;\n        }\n        const fullRange1 = sequence1.extendToFullLines(cur.seq1Range);\n        const prefix = sequence1.getText(new OffsetRange(fullRange1.start, cur.seq1Range.start));\n        if (shouldMarkAsChanged(prefix)) {\n            newDiff = newDiff.deltaStart(-prefix.length);\n        }\n        const suffix = sequence1.getText(new OffsetRange(cur.seq1Range.endExclusive, fullRange1.endExclusive));\n        if (shouldMarkAsChanged(suffix)) {\n            newDiff = newDiff.deltaEnd(suffix.length);\n        }\n        const availableSpace = SequenceDiff.fromOffsetPairs(prev ? prev.getEndExclusives() : OffsetPair.zero, next ? next.getStarts() : OffsetPair.max);\n        const result = newDiff.intersect(availableSpace);\n        if (newDiffs.length > 0 && result.getStarts().equals(newDiffs[newDiffs.length - 1].getEndExclusives())) {\n            newDiffs[newDiffs.length - 1] = newDiffs[newDiffs.length - 1].join(result);\n        }\n        else {\n            newDiffs.push(result);\n        }\n    });\n    return newDiffs;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class LineSequence {\n    constructor(trimmedHash, lines) {\n        this.trimmedHash = trimmedHash;\n        this.lines = lines;\n    }\n    getElement(offset) {\n        return this.trimmedHash[offset];\n    }\n    get length() {\n        return this.trimmedHash.length;\n    }\n    getBoundaryScore(length) {\n        const indentationBefore = length === 0 ? 0 : getIndentation(this.lines[length - 1]);\n        const indentationAfter = length === this.lines.length ? 0 : getIndentation(this.lines[length]);\n        return 1000 - (indentationBefore + indentationAfter);\n    }\n    getText(range) {\n        return this.lines.slice(range.start, range.endExclusive).join('\\n');\n    }\n    isStronglyEqual(offset1, offset2) {\n        return this.lines[offset1] === this.lines[offset2];\n    }\n}\nfunction getIndentation(str) {\n    let i = 0;\n    while (i < str.length && (str.charCodeAt(i) === 32 /* CharCode.Space */ || str.charCodeAt(i) === 9 /* CharCode.Tab */)) {\n        i++;\n    }\n    return i;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { findLastIdxMonotonous, findLastMonotonous, findFirstMonotonous } from '../../../../base/common/arraysFind.js';\nimport { OffsetRange } from '../../core/offsetRange.js';\nimport { Position } from '../../core/position.js';\nimport { Range } from '../../core/range.js';\nimport { isSpace } from './utils.js';\nexport class LinesSliceCharSequence {\n    constructor(lines, range, considerWhitespaceChanges) {\n        this.lines = lines;\n        this.range = range;\n        this.considerWhitespaceChanges = considerWhitespaceChanges;\n        this.elements = [];\n        this.firstElementOffsetByLineIdx = [];\n        this.lineStartOffsets = [];\n        this.trimmedWsLengthsByLineIdx = [];\n        this.firstElementOffsetByLineIdx.push(0);\n        for (let lineNumber = this.range.startLineNumber; lineNumber <= this.range.endLineNumber; lineNumber++) {\n            let line = lines[lineNumber - 1];\n            let lineStartOffset = 0;\n            if (lineNumber === this.range.startLineNumber && this.range.startColumn > 1) {\n                lineStartOffset = this.range.startColumn - 1;\n                line = line.substring(lineStartOffset);\n            }\n            this.lineStartOffsets.push(lineStartOffset);\n            let trimmedWsLength = 0;\n            if (!considerWhitespaceChanges) {\n                const trimmedStartLine = line.trimStart();\n                trimmedWsLength = line.length - trimmedStartLine.length;\n                line = trimmedStartLine.trimEnd();\n            }\n            this.trimmedWsLengthsByLineIdx.push(trimmedWsLength);\n            const lineLength = lineNumber === this.range.endLineNumber ? Math.min(this.range.endColumn - 1 - lineStartOffset - trimmedWsLength, line.length) : line.length;\n            for (let i = 0; i < lineLength; i++) {\n                this.elements.push(line.charCodeAt(i));\n            }\n            if (lineNumber < this.range.endLineNumber) {\n                this.elements.push('\\n'.charCodeAt(0));\n                this.firstElementOffsetByLineIdx.push(this.elements.length);\n            }\n        }\n    }\n    toString() {\n        return `Slice: \"${this.text}\"`;\n    }\n    get text() {\n        return this.getText(new OffsetRange(0, this.length));\n    }\n    getText(range) {\n        return this.elements.slice(range.start, range.endExclusive).map(e => String.fromCharCode(e)).join('');\n    }\n    getElement(offset) {\n        return this.elements[offset];\n    }\n    get length() {\n        return this.elements.length;\n    }\n    getBoundaryScore(length) {\n        //   a   b   c   ,           d   e   f\n        // 11  0   0   12  15  6   13  0   0   11\n        const prevCategory = getCategory(length > 0 ? this.elements[length - 1] : -1);\n        const nextCategory = getCategory(length < this.elements.length ? this.elements[length] : -1);\n        if (prevCategory === 7 /* CharBoundaryCategory.LineBreakCR */ && nextCategory === 8 /* CharBoundaryCategory.LineBreakLF */) {\n            // don't break between \\r and \\n\n            return 0;\n        }\n        if (prevCategory === 8 /* CharBoundaryCategory.LineBreakLF */) {\n            // prefer the linebreak before the change\n            return 150;\n        }\n        let score = 0;\n        if (prevCategory !== nextCategory) {\n            score += 10;\n            if (prevCategory === 0 /* CharBoundaryCategory.WordLower */ && nextCategory === 1 /* CharBoundaryCategory.WordUpper */) {\n                score += 1;\n            }\n        }\n        score += getCategoryBoundaryScore(prevCategory);\n        score += getCategoryBoundaryScore(nextCategory);\n        return score;\n    }\n    translateOffset(offset, preference = 'right') {\n        // find smallest i, so that lineBreakOffsets[i] <= offset using binary search\n        const i = findLastIdxMonotonous(this.firstElementOffsetByLineIdx, (value) => value <= offset);\n        const lineOffset = offset - this.firstElementOffsetByLineIdx[i];\n        return new Position(this.range.startLineNumber + i, 1 + this.lineStartOffsets[i] + lineOffset + ((lineOffset === 0 && preference === 'left') ? 0 : this.trimmedWsLengthsByLineIdx[i]));\n    }\n    translateRange(range) {\n        const pos1 = this.translateOffset(range.start, 'right');\n        const pos2 = this.translateOffset(range.endExclusive, 'left');\n        if (pos2.isBefore(pos1)) {\n            return Range.fromPositions(pos2, pos2);\n        }\n        return Range.fromPositions(pos1, pos2);\n    }\n    /**\n     * Finds the word that contains the character at the given offset\n     */\n    findWordContaining(offset) {\n        if (offset < 0 || offset >= this.elements.length) {\n            return undefined;\n        }\n        if (!isWordChar(this.elements[offset])) {\n            return undefined;\n        }\n        // find start\n        let start = offset;\n        while (start > 0 && isWordChar(this.elements[start - 1])) {\n            start--;\n        }\n        // find end\n        let end = offset;\n        while (end < this.elements.length && isWordChar(this.elements[end])) {\n            end++;\n        }\n        return new OffsetRange(start, end);\n    }\n    countLinesIn(range) {\n        return this.translateOffset(range.endExclusive).lineNumber - this.translateOffset(range.start).lineNumber;\n    }\n    isStronglyEqual(offset1, offset2) {\n        return this.elements[offset1] === this.elements[offset2];\n    }\n    extendToFullLines(range) {\n        const start = findLastMonotonous(this.firstElementOffsetByLineIdx, x => x <= range.start) ?? 0;\n        const end = findFirstMonotonous(this.firstElementOffsetByLineIdx, x => range.endExclusive <= x) ?? this.elements.length;\n        return new OffsetRange(start, end);\n    }\n}\nfunction isWordChar(charCode) {\n    return charCode >= 97 /* CharCode.a */ && charCode <= 122 /* CharCode.z */\n        || charCode >= 65 /* CharCode.A */ && charCode <= 90 /* CharCode.Z */\n        || charCode >= 48 /* CharCode.Digit0 */ && charCode <= 57 /* CharCode.Digit9 */;\n}\nconst score = {\n    [0 /* CharBoundaryCategory.WordLower */]: 0,\n    [1 /* CharBoundaryCategory.WordUpper */]: 0,\n    [2 /* CharBoundaryCategory.WordNumber */]: 0,\n    [3 /* CharBoundaryCategory.End */]: 10,\n    [4 /* CharBoundaryCategory.Other */]: 2,\n    [5 /* CharBoundaryCategory.Separator */]: 30,\n    [6 /* CharBoundaryCategory.Space */]: 3,\n    [7 /* CharBoundaryCategory.LineBreakCR */]: 10,\n    [8 /* CharBoundaryCategory.LineBreakLF */]: 10,\n};\nfunction getCategoryBoundaryScore(category) {\n    return score[category];\n}\nfunction getCategory(charCode) {\n    if (charCode === 10 /* CharCode.LineFeed */) {\n        return 8 /* CharBoundaryCategory.LineBreakLF */;\n    }\n    else if (charCode === 13 /* CharCode.CarriageReturn */) {\n        return 7 /* CharBoundaryCategory.LineBreakCR */;\n    }\n    else if (isSpace(charCode)) {\n        return 6 /* CharBoundaryCategory.Space */;\n    }\n    else if (charCode >= 97 /* CharCode.a */ && charCode <= 122 /* CharCode.z */) {\n        return 0 /* CharBoundaryCategory.WordLower */;\n    }\n    else if (charCode >= 65 /* CharCode.A */ && charCode <= 90 /* CharCode.Z */) {\n        return 1 /* CharBoundaryCategory.WordUpper */;\n    }\n    else if (charCode >= 48 /* CharCode.Digit0 */ && charCode <= 57 /* CharCode.Digit9 */) {\n        return 2 /* CharBoundaryCategory.WordNumber */;\n    }\n    else if (charCode === -1) {\n        return 3 /* CharBoundaryCategory.End */;\n    }\n    else if (charCode === 44 /* CharCode.Comma */ || charCode === 59 /* CharCode.Semicolon */) {\n        return 5 /* CharBoundaryCategory.Separator */;\n    }\n    else {\n        return 4 /* CharBoundaryCategory.Other */;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class Array2D {\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n        this.array = [];\n        this.array = new Array(width * height);\n    }\n    get(x, y) {\n        return this.array[x + y * this.width];\n    }\n    set(x, y, value) {\n        this.array[x + y * this.width] = value;\n    }\n}\nexport function isSpace(charCode) {\n    return charCode === 32 /* CharCode.Space */ || charCode === 9 /* CharCode.Tab */;\n}\nexport class LineRangeFragment {\n    static { this.chrKeys = new Map(); }\n    static getKey(chr) {\n        let key = this.chrKeys.get(chr);\n        if (key === undefined) {\n            key = this.chrKeys.size;\n            this.chrKeys.set(chr, key);\n        }\n        return key;\n    }\n    constructor(range, lines, source) {\n        this.range = range;\n        this.lines = lines;\n        this.source = source;\n        this.histogram = [];\n        let counter = 0;\n        for (let i = range.startLineNumber - 1; i < range.endLineNumberExclusive - 1; i++) {\n            const line = lines[i];\n            for (let j = 0; j < line.length; j++) {\n                counter++;\n                const chr = line[j];\n                const key = LineRangeFragment.getKey(chr);\n                this.histogram[key] = (this.histogram[key] || 0) + 1;\n            }\n            counter++;\n            const key = LineRangeFragment.getKey('\\n');\n            this.histogram[key] = (this.histogram[key] || 0) + 1;\n        }\n        this.totalCount = counter;\n    }\n    computeSimilarity(other) {\n        let sumDifferences = 0;\n        const maxLength = Math.max(this.histogram.length, other.histogram.length);\n        for (let i = 0; i < maxLength; i++) {\n            sumDifferences += Math.abs((this.histogram[i] ?? 0) - (other.histogram[i] ?? 0));\n        }\n        return 1 - (sumDifferences / (this.totalCount + other.totalCount));\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LcsDiff } from '../../../base/common/diff/diff.js';\nimport { LinesDiff } from './linesDiffComputer.js';\nimport { RangeMapping, DetailedLineRangeMapping } from './rangeMapping.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { Range } from '../core/range.js';\nimport { assertFn, checkAdjacentItems } from '../../../base/common/assert.js';\nimport { LineRange } from '../core/lineRange.js';\nconst MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\nexport class LegacyLinesDiffComputer {\n    computeDiff(originalLines, modifiedLines, options) {\n        const diffComputer = new DiffComputer(originalLines, modifiedLines, {\n            maxComputationTime: options.maxComputationTimeMs,\n            shouldIgnoreTrimWhitespace: options.ignoreTrimWhitespace,\n            shouldComputeCharChanges: true,\n            shouldMakePrettyDiff: true,\n            shouldPostProcessCharChanges: true,\n        });\n        const result = diffComputer.computeDiff();\n        const changes = [];\n        let lastChange = null;\n        for (const c of result.changes) {\n            let originalRange;\n            if (c.originalEndLineNumber === 0) {\n                // Insertion\n                originalRange = new LineRange(c.originalStartLineNumber + 1, c.originalStartLineNumber + 1);\n            }\n            else {\n                originalRange = new LineRange(c.originalStartLineNumber, c.originalEndLineNumber + 1);\n            }\n            let modifiedRange;\n            if (c.modifiedEndLineNumber === 0) {\n                // Deletion\n                modifiedRange = new LineRange(c.modifiedStartLineNumber + 1, c.modifiedStartLineNumber + 1);\n            }\n            else {\n                modifiedRange = new LineRange(c.modifiedStartLineNumber, c.modifiedEndLineNumber + 1);\n            }\n            let change = new DetailedLineRangeMapping(originalRange, modifiedRange, c.charChanges?.map(c => new RangeMapping(new Range(c.originalStartLineNumber, c.originalStartColumn, c.originalEndLineNumber, c.originalEndColumn), new Range(c.modifiedStartLineNumber, c.modifiedStartColumn, c.modifiedEndLineNumber, c.modifiedEndColumn))));\n            if (lastChange) {\n                if (lastChange.modified.endLineNumberExclusive === change.modified.startLineNumber\n                    || lastChange.original.endLineNumberExclusive === change.original.startLineNumber) {\n                    // join touching diffs. Probably moving diffs up/down in the algorithm causes touching diffs.\n                    change = new DetailedLineRangeMapping(lastChange.original.join(change.original), lastChange.modified.join(change.modified), lastChange.innerChanges && change.innerChanges ?\n                        lastChange.innerChanges.concat(change.innerChanges) : undefined);\n                    changes.pop();\n                }\n            }\n            changes.push(change);\n            lastChange = change;\n        }\n        assertFn(() => {\n            return checkAdjacentItems(changes, (m1, m2) => m2.original.startLineNumber - m1.original.endLineNumberExclusive === m2.modified.startLineNumber - m1.modified.endLineNumberExclusive &&\n                // There has to be an unchanged line in between (otherwise both diffs should have been joined)\n                m1.original.endLineNumberExclusive < m2.original.startLineNumber &&\n                m1.modified.endLineNumberExclusive < m2.modified.startLineNumber);\n        });\n        return new LinesDiff(changes, [], result.quitEarly);\n    }\n}\nfunction computeDiff(originalSequence, modifiedSequence, continueProcessingPredicate, pretty) {\n    const diffAlgo = new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate);\n    return diffAlgo.ComputeDiff(pretty);\n}\nclass LineSequence {\n    constructor(lines) {\n        const startColumns = [];\n        const endColumns = [];\n        for (let i = 0, length = lines.length; i < length; i++) {\n            startColumns[i] = getFirstNonBlankColumn(lines[i], 1);\n            endColumns[i] = getLastNonBlankColumn(lines[i], 1);\n        }\n        this.lines = lines;\n        this._startColumns = startColumns;\n        this._endColumns = endColumns;\n    }\n    getElements() {\n        const elements = [];\n        for (let i = 0, len = this.lines.length; i < len; i++) {\n            elements[i] = this.lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\n        }\n        return elements;\n    }\n    getStrictElement(index) {\n        return this.lines[index];\n    }\n    getStartLineNumber(i) {\n        return i + 1;\n    }\n    getEndLineNumber(i) {\n        return i + 1;\n    }\n    createCharSequence(shouldIgnoreTrimWhitespace, startIndex, endIndex) {\n        const charCodes = [];\n        const lineNumbers = [];\n        const columns = [];\n        let len = 0;\n        for (let index = startIndex; index <= endIndex; index++) {\n            const lineContent = this.lines[index];\n            const startColumn = (shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1);\n            const endColumn = (shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1);\n            for (let col = startColumn; col < endColumn; col++) {\n                charCodes[len] = lineContent.charCodeAt(col - 1);\n                lineNumbers[len] = index + 1;\n                columns[len] = col;\n                len++;\n            }\n            if (!shouldIgnoreTrimWhitespace && index < endIndex) {\n                // Add \\n if trim whitespace is not ignored\n                charCodes[len] = 10 /* CharCode.LineFeed */;\n                lineNumbers[len] = index + 1;\n                columns[len] = lineContent.length + 1;\n                len++;\n            }\n        }\n        return new CharSequence(charCodes, lineNumbers, columns);\n    }\n}\nclass CharSequence {\n    constructor(charCodes, lineNumbers, columns) {\n        this._charCodes = charCodes;\n        this._lineNumbers = lineNumbers;\n        this._columns = columns;\n    }\n    toString() {\n        return ('[' + this._charCodes.map((s, idx) => (s === 10 /* CharCode.LineFeed */ ? '\\\\n' : String.fromCharCode(s)) + `-(${this._lineNumbers[idx]},${this._columns[idx]})`).join(', ') + ']');\n    }\n    _assertIndex(index, arr) {\n        if (index < 0 || index >= arr.length) {\n            throw new Error(`Illegal index`);\n        }\n    }\n    getElements() {\n        return this._charCodes;\n    }\n    getStartLineNumber(i) {\n        if (i > 0 && i === this._lineNumbers.length) {\n            // the start line number of the element after the last element\n            // is the end line number of the last element\n            return this.getEndLineNumber(i - 1);\n        }\n        this._assertIndex(i, this._lineNumbers);\n        return this._lineNumbers[i];\n    }\n    getEndLineNumber(i) {\n        if (i === -1) {\n            // the end line number of the element before the first element\n            // is the start line number of the first element\n            return this.getStartLineNumber(i + 1);\n        }\n        this._assertIndex(i, this._lineNumbers);\n        if (this._charCodes[i] === 10 /* CharCode.LineFeed */) {\n            return this._lineNumbers[i] + 1;\n        }\n        return this._lineNumbers[i];\n    }\n    getStartColumn(i) {\n        if (i > 0 && i === this._columns.length) {\n            // the start column of the element after the last element\n            // is the end column of the last element\n            return this.getEndColumn(i - 1);\n        }\n        this._assertIndex(i, this._columns);\n        return this._columns[i];\n    }\n    getEndColumn(i) {\n        if (i === -1) {\n            // the end column of the element before the first element\n            // is the start column of the first element\n            return this.getStartColumn(i + 1);\n        }\n        this._assertIndex(i, this._columns);\n        if (this._charCodes[i] === 10 /* CharCode.LineFeed */) {\n            return 1;\n        }\n        return this._columns[i] + 1;\n    }\n}\nclass CharChange {\n    constructor(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalStartColumn = originalStartColumn;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.originalEndColumn = originalEndColumn;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedStartColumn = modifiedStartColumn;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.modifiedEndColumn = modifiedEndColumn;\n    }\n    static createFromDiffChange(diffChange, originalCharSequence, modifiedCharSequence) {\n        const originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n        const originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n        const originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n        const originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n        const modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n        const modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n        const modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        const modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        return new CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn);\n    }\n}\nfunction postProcessCharChanges(rawChanges) {\n    if (rawChanges.length <= 1) {\n        return rawChanges;\n    }\n    const result = [rawChanges[0]];\n    let prevChange = result[0];\n    for (let i = 1, len = rawChanges.length; i < len; i++) {\n        const currChange = rawChanges[i];\n        const originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n        const modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\n        // Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\n        const matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n        if (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n            // Merge the current change into the previous one\n            prevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\n            prevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\n        }\n        else {\n            // Add the current change\n            result.push(currChange);\n            prevChange = currChange;\n        }\n    }\n    return result;\n}\nclass LineChange {\n    constructor(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.charChanges = charChanges;\n    }\n    static createFromDiffResult(shouldIgnoreTrimWhitespace, diffChange, originalLineSequence, modifiedLineSequence, continueCharDiff, shouldComputeCharChanges, shouldPostProcessCharChanges) {\n        let originalStartLineNumber;\n        let originalEndLineNumber;\n        let modifiedStartLineNumber;\n        let modifiedEndLineNumber;\n        let charChanges = undefined;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n            originalEndLineNumber = 0;\n        }\n        else {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n            originalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n            modifiedEndLineNumber = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        if (shouldComputeCharChanges && diffChange.originalLength > 0 && diffChange.originalLength < 20 && diffChange.modifiedLength > 0 && diffChange.modifiedLength < 20 && continueCharDiff()) {\n            // Compute character changes for diff chunks of at most 20 lines...\n            const originalCharSequence = originalLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n            const modifiedCharSequence = modifiedLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            if (originalCharSequence.getElements().length > 0 && modifiedCharSequence.getElements().length > 0) {\n                let rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueCharDiff, true).changes;\n                if (shouldPostProcessCharChanges) {\n                    rawChanges = postProcessCharChanges(rawChanges);\n                }\n                charChanges = [];\n                for (let i = 0, length = rawChanges.length; i < length; i++) {\n                    charChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n                }\n            }\n        }\n        return new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\n    }\n}\nexport class DiffComputer {\n    constructor(originalLines, modifiedLines, opts) {\n        this.shouldComputeCharChanges = opts.shouldComputeCharChanges;\n        this.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n        this.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n        this.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\n        this.originalLines = originalLines;\n        this.modifiedLines = modifiedLines;\n        this.original = new LineSequence(originalLines);\n        this.modified = new LineSequence(modifiedLines);\n        this.continueLineDiff = createContinueProcessingPredicate(opts.maxComputationTime);\n        this.continueCharDiff = createContinueProcessingPredicate(opts.maxComputationTime === 0 ? 0 : Math.min(opts.maxComputationTime, 5000)); // never run after 5s for character changes...\n    }\n    computeDiff() {\n        if (this.original.lines.length === 1 && this.original.lines[0].length === 0) {\n            // empty original => fast path\n            if (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\n                return {\n                    quitEarly: false,\n                    changes: []\n                };\n            }\n            return {\n                quitEarly: false,\n                changes: [{\n                        originalStartLineNumber: 1,\n                        originalEndLineNumber: 1,\n                        modifiedStartLineNumber: 1,\n                        modifiedEndLineNumber: this.modified.lines.length,\n                        charChanges: undefined\n                    }]\n            };\n        }\n        if (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\n            // empty modified => fast path\n            return {\n                quitEarly: false,\n                changes: [{\n                        originalStartLineNumber: 1,\n                        originalEndLineNumber: this.original.lines.length,\n                        modifiedStartLineNumber: 1,\n                        modifiedEndLineNumber: 1,\n                        charChanges: undefined\n                    }]\n            };\n        }\n        const diffResult = computeDiff(this.original, this.modified, this.continueLineDiff, this.shouldMakePrettyDiff);\n        const rawChanges = diffResult.changes;\n        const quitEarly = diffResult.quitEarly;\n        // The diff is always computed with ignoring trim whitespace\n        // This ensures we get the prettiest diff\n        if (this.shouldIgnoreTrimWhitespace) {\n            const lineChanges = [];\n            for (let i = 0, length = rawChanges.length; i < length; i++) {\n                lineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n            }\n            return {\n                quitEarly: quitEarly,\n                changes: lineChanges\n            };\n        }\n        // Need to post-process and introduce changes where the trim whitespace is different\n        // Note that we are looping starting at -1 to also cover the lines before the first change\n        const result = [];\n        let originalLineIndex = 0;\n        let modifiedLineIndex = 0;\n        for (let i = -1 /* !!!! */, len = rawChanges.length; i < len; i++) {\n            const nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\n            const originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\n            const modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\n            while (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\n                const originalLine = this.originalLines[originalLineIndex];\n                const modifiedLine = this.modifiedLines[modifiedLineIndex];\n                if (originalLine !== modifiedLine) {\n                    // These lines differ only in trim whitespace\n                    // Check the leading whitespace\n                    {\n                        let originalStartColumn = getFirstNonBlankColumn(originalLine, 1);\n                        let modifiedStartColumn = getFirstNonBlankColumn(modifiedLine, 1);\n                        while (originalStartColumn > 1 && modifiedStartColumn > 1) {\n                            const originalChar = originalLine.charCodeAt(originalStartColumn - 2);\n                            const modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalStartColumn--;\n                            modifiedStartColumn--;\n                        }\n                        if (originalStartColumn > 1 || modifiedStartColumn > 1) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, 1, originalStartColumn, modifiedLineIndex + 1, 1, modifiedStartColumn);\n                        }\n                    }\n                    // Check the trailing whitespace\n                    {\n                        let originalEndColumn = getLastNonBlankColumn(originalLine, 1);\n                        let modifiedEndColumn = getLastNonBlankColumn(modifiedLine, 1);\n                        const originalMaxColumn = originalLine.length + 1;\n                        const modifiedMaxColumn = modifiedLine.length + 1;\n                        while (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\n                            const originalChar = originalLine.charCodeAt(originalEndColumn - 1);\n                            const modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalEndColumn++;\n                            modifiedEndColumn++;\n                        }\n                        if (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, originalEndColumn, originalMaxColumn, modifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn);\n                        }\n                    }\n                }\n                originalLineIndex++;\n                modifiedLineIndex++;\n            }\n            if (nextChange) {\n                // Emit the actual change\n                result.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n                originalLineIndex += nextChange.originalLength;\n                modifiedLineIndex += nextChange.modifiedLength;\n            }\n        }\n        return {\n            quitEarly: quitEarly,\n            changes: result\n        };\n    }\n    _pushTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        if (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\n            // Merged into previous\n            return;\n        }\n        let charChanges = undefined;\n        if (this.shouldComputeCharChanges) {\n            charChanges = [new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn)];\n        }\n        result.push(new LineChange(originalLineNumber, originalLineNumber, modifiedLineNumber, modifiedLineNumber, charChanges));\n    }\n    _mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        const len = result.length;\n        if (len === 0) {\n            return false;\n        }\n        const prevChange = result[len - 1];\n        if (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\n            // Don't merge with inserts/deletes\n            return false;\n        }\n        if (prevChange.originalEndLineNumber === originalLineNumber && prevChange.modifiedEndLineNumber === modifiedLineNumber) {\n            if (this.shouldComputeCharChanges && prevChange.charChanges) {\n                prevChange.charChanges.push(new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn));\n            }\n            return true;\n        }\n        if (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\n            prevChange.originalEndLineNumber = originalLineNumber;\n            prevChange.modifiedEndLineNumber = modifiedLineNumber;\n            if (this.shouldComputeCharChanges && prevChange.charChanges) {\n                prevChange.charChanges.push(new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn));\n            }\n            return true;\n        }\n        return false;\n    }\n}\nfunction getFirstNonBlankColumn(txt, defaultValue) {\n    const r = strings.firstNonWhitespaceIndex(txt);\n    if (r === -1) {\n        return defaultValue;\n    }\n    return r + 1;\n}\nfunction getLastNonBlankColumn(txt, defaultValue) {\n    const r = strings.lastNonWhitespaceIndex(txt);\n    if (r === -1) {\n        return defaultValue;\n    }\n    return r + 2;\n}\nfunction createContinueProcessingPredicate(maximumRuntime) {\n    if (maximumRuntime === 0) {\n        return () => true;\n    }\n    const startTime = Date.now();\n    return () => {\n        return Date.now() - startTime < maximumRuntime;\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class LinesDiff {\n    constructor(changes, \n    /**\n     * Sorted by original line ranges.\n     * The original line ranges and the modified line ranges must be disjoint (but can be touching).\n     */\n    moves, \n    /**\n     * Indicates if the time out was reached.\n     * In that case, the diffs might be an approximation and the user should be asked to rerun the diff with more time.\n     */\n    hitTimeout) {\n        this.changes = changes;\n        this.moves = moves;\n        this.hitTimeout = hitTimeout;\n    }\n}\nexport class MovedText {\n    constructor(lineRangeMapping, changes) {\n        this.lineRangeMapping = lineRangeMapping;\n        this.changes = changes;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LegacyLinesDiffComputer } from './legacyLinesDiffComputer.js';\nimport { DefaultLinesDiffComputer } from './defaultLinesDiffComputer/defaultLinesDiffComputer.js';\nexport const linesDiffComputers = {\n    getLegacy: () => new LegacyLinesDiffComputer(),\n    getDefault: () => new DefaultLinesDiffComputer(),\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { BugIndicatingError } from '../../../base/common/errors.js';\nimport { LineRange } from '../core/lineRange.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { SingleTextEdit } from '../core/textEdit.js';\n/**\n * Maps a line range in the original text model to a line range in the modified text model.\n */\nexport class LineRangeMapping {\n    static inverse(mapping, originalLineCount, modifiedLineCount) {\n        const result = [];\n        let lastOriginalEndLineNumber = 1;\n        let lastModifiedEndLineNumber = 1;\n        for (const m of mapping) {\n            const r = new LineRangeMapping(new LineRange(lastOriginalEndLineNumber, m.original.startLineNumber), new LineRange(lastModifiedEndLineNumber, m.modified.startLineNumber));\n            if (!r.modified.isEmpty) {\n                result.push(r);\n            }\n            lastOriginalEndLineNumber = m.original.endLineNumberExclusive;\n            lastModifiedEndLineNumber = m.modified.endLineNumberExclusive;\n        }\n        const r = new LineRangeMapping(new LineRange(lastOriginalEndLineNumber, originalLineCount + 1), new LineRange(lastModifiedEndLineNumber, modifiedLineCount + 1));\n        if (!r.modified.isEmpty) {\n            result.push(r);\n        }\n        return result;\n    }\n    static clip(mapping, originalRange, modifiedRange) {\n        const result = [];\n        for (const m of mapping) {\n            const original = m.original.intersect(originalRange);\n            const modified = m.modified.intersect(modifiedRange);\n            if (original && !original.isEmpty && modified && !modified.isEmpty) {\n                result.push(new LineRangeMapping(original, modified));\n            }\n        }\n        return result;\n    }\n    constructor(originalRange, modifiedRange) {\n        this.original = originalRange;\n        this.modified = modifiedRange;\n    }\n    toString() {\n        return `{${this.original.toString()}->${this.modified.toString()}}`;\n    }\n    flip() {\n        return new LineRangeMapping(this.modified, this.original);\n    }\n    join(other) {\n        return new LineRangeMapping(this.original.join(other.original), this.modified.join(other.modified));\n    }\n    /**\n     * This method assumes that the LineRangeMapping describes a valid diff!\n     * I.e. if one range is empty, the other range cannot be the entire document.\n     * It avoids various problems when the line range points to non-existing line-numbers.\n    */\n    toRangeMapping() {\n        const origInclusiveRange = this.original.toInclusiveRange();\n        const modInclusiveRange = this.modified.toInclusiveRange();\n        if (origInclusiveRange && modInclusiveRange) {\n            return new RangeMapping(origInclusiveRange, modInclusiveRange);\n        }\n        else if (this.original.startLineNumber === 1 || this.modified.startLineNumber === 1) {\n            if (!(this.modified.startLineNumber === 1 && this.original.startLineNumber === 1)) {\n                // If one line range starts at 1, the other one must start at 1 as well.\n                throw new BugIndicatingError('not a valid diff');\n            }\n            // Because one range is empty and both ranges start at line 1, none of the ranges can cover all lines.\n            // Thus, `endLineNumberExclusive` is a valid line number.\n            return new RangeMapping(new Range(this.original.startLineNumber, 1, this.original.endLineNumberExclusive, 1), new Range(this.modified.startLineNumber, 1, this.modified.endLineNumberExclusive, 1));\n        }\n        else {\n            // We can assume here that both startLineNumbers are greater than 1.\n            return new RangeMapping(new Range(this.original.startLineNumber - 1, Number.MAX_SAFE_INTEGER, this.original.endLineNumberExclusive - 1, Number.MAX_SAFE_INTEGER), new Range(this.modified.startLineNumber - 1, Number.MAX_SAFE_INTEGER, this.modified.endLineNumberExclusive - 1, Number.MAX_SAFE_INTEGER));\n        }\n    }\n    /**\n     * This method assumes that the LineRangeMapping describes a valid diff!\n     * I.e. if one range is empty, the other range cannot be the entire document.\n     * It avoids various problems when the line range points to non-existing line-numbers.\n    */\n    toRangeMapping2(original, modified) {\n        if (isValidLineNumber(this.original.endLineNumberExclusive, original)\n            && isValidLineNumber(this.modified.endLineNumberExclusive, modified)) {\n            return new RangeMapping(new Range(this.original.startLineNumber, 1, this.original.endLineNumberExclusive, 1), new Range(this.modified.startLineNumber, 1, this.modified.endLineNumberExclusive, 1));\n        }\n        if (!this.original.isEmpty && !this.modified.isEmpty) {\n            return new RangeMapping(Range.fromPositions(new Position(this.original.startLineNumber, 1), normalizePosition(new Position(this.original.endLineNumberExclusive - 1, Number.MAX_SAFE_INTEGER), original)), Range.fromPositions(new Position(this.modified.startLineNumber, 1), normalizePosition(new Position(this.modified.endLineNumberExclusive - 1, Number.MAX_SAFE_INTEGER), modified)));\n        }\n        if (this.original.startLineNumber > 1 && this.modified.startLineNumber > 1) {\n            return new RangeMapping(Range.fromPositions(normalizePosition(new Position(this.original.startLineNumber - 1, Number.MAX_SAFE_INTEGER), original), normalizePosition(new Position(this.original.endLineNumberExclusive - 1, Number.MAX_SAFE_INTEGER), original)), Range.fromPositions(normalizePosition(new Position(this.modified.startLineNumber - 1, Number.MAX_SAFE_INTEGER), modified), normalizePosition(new Position(this.modified.endLineNumberExclusive - 1, Number.MAX_SAFE_INTEGER), modified)));\n        }\n        // Situation now: one range is empty and one range touches the last line and one range starts at line 1.\n        // I don't think this can happen.\n        throw new BugIndicatingError();\n    }\n}\nfunction normalizePosition(position, content) {\n    if (position.lineNumber < 1) {\n        return new Position(1, 1);\n    }\n    if (position.lineNumber > content.length) {\n        return new Position(content.length, content[content.length - 1].length + 1);\n    }\n    const line = content[position.lineNumber - 1];\n    if (position.column > line.length + 1) {\n        return new Position(position.lineNumber, line.length + 1);\n    }\n    return position;\n}\nfunction isValidLineNumber(lineNumber, lines) {\n    return lineNumber >= 1 && lineNumber <= lines.length;\n}\n/**\n * Maps a line range in the original text model to a line range in the modified text model.\n * Also contains inner range mappings.\n */\nexport class DetailedLineRangeMapping extends LineRangeMapping {\n    static fromRangeMappings(rangeMappings) {\n        const originalRange = LineRange.join(rangeMappings.map(r => LineRange.fromRangeInclusive(r.originalRange)));\n        const modifiedRange = LineRange.join(rangeMappings.map(r => LineRange.fromRangeInclusive(r.modifiedRange)));\n        return new DetailedLineRangeMapping(originalRange, modifiedRange, rangeMappings);\n    }\n    constructor(originalRange, modifiedRange, innerChanges) {\n        super(originalRange, modifiedRange);\n        this.innerChanges = innerChanges;\n    }\n    flip() {\n        return new DetailedLineRangeMapping(this.modified, this.original, this.innerChanges?.map(c => c.flip()));\n    }\n    withInnerChangesFromLineRanges() {\n        return new DetailedLineRangeMapping(this.original, this.modified, [this.toRangeMapping()]);\n    }\n}\n/**\n * Maps a range in the original text model to a range in the modified text model.\n */\nexport class RangeMapping {\n    static assertSorted(rangeMappings) {\n        for (let i = 1; i < rangeMappings.length; i++) {\n            const previous = rangeMappings[i - 1];\n            const current = rangeMappings[i];\n            if (!(previous.originalRange.getEndPosition().isBeforeOrEqual(current.originalRange.getStartPosition())\n                && previous.modifiedRange.getEndPosition().isBeforeOrEqual(current.modifiedRange.getStartPosition()))) {\n                throw new BugIndicatingError('Range mappings must be sorted');\n            }\n        }\n    }\n    constructor(originalRange, modifiedRange) {\n        this.originalRange = originalRange;\n        this.modifiedRange = modifiedRange;\n    }\n    toString() {\n        return `{${this.originalRange.toString()}->${this.modifiedRange.toString()}}`;\n    }\n    flip() {\n        return new RangeMapping(this.modifiedRange, this.originalRange);\n    }\n    /**\n     * Creates a single text edit that describes the change from the original to the modified text.\n    */\n    toTextEdit(modified) {\n        const newText = modified.getValueOfRange(this.modifiedRange);\n        return new SingleTextEdit(this.originalRange, newText);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n */\nexport class TokenMetadata {\n    static getLanguageId(metadata) {\n        return (metadata & 255 /* MetadataConsts.LANGUAGEID_MASK */) >>> 0 /* MetadataConsts.LANGUAGEID_OFFSET */;\n    }\n    static getTokenType(metadata) {\n        return (metadata & 768 /* MetadataConsts.TOKEN_TYPE_MASK */) >>> 8 /* MetadataConsts.TOKEN_TYPE_OFFSET */;\n    }\n    static containsBalancedBrackets(metadata) {\n        return (metadata & 1024 /* MetadataConsts.BALANCED_BRACKETS_MASK */) !== 0;\n    }\n    static getFontStyle(metadata) {\n        return (metadata & 30720 /* MetadataConsts.FONT_STYLE_MASK */) >>> 11 /* MetadataConsts.FONT_STYLE_OFFSET */;\n    }\n    static getForeground(metadata) {\n        return (metadata & 16744448 /* MetadataConsts.FOREGROUND_MASK */) >>> 15 /* MetadataConsts.FOREGROUND_OFFSET */;\n    }\n    static getBackground(metadata) {\n        return (metadata & 4278190080 /* MetadataConsts.BACKGROUND_MASK */) >>> 24 /* MetadataConsts.BACKGROUND_OFFSET */;\n    }\n    static getClassNameFromMetadata(metadata) {\n        const foreground = this.getForeground(metadata);\n        let className = 'mtk' + foreground;\n        const fontStyle = this.getFontStyle(metadata);\n        if (fontStyle & 1 /* FontStyle.Italic */) {\n            className += ' mtki';\n        }\n        if (fontStyle & 2 /* FontStyle.Bold */) {\n            className += ' mtkb';\n        }\n        if (fontStyle & 4 /* FontStyle.Underline */) {\n            className += ' mtku';\n        }\n        if (fontStyle & 8 /* FontStyle.Strikethrough */) {\n            className += ' mtks';\n        }\n        return className;\n    }\n    static getInlineStyleFromMetadata(metadata, colorMap) {\n        const foreground = this.getForeground(metadata);\n        const fontStyle = this.getFontStyle(metadata);\n        let result = `color: ${colorMap[foreground]};`;\n        if (fontStyle & 1 /* FontStyle.Italic */) {\n            result += 'font-style: italic;';\n        }\n        if (fontStyle & 2 /* FontStyle.Bold */) {\n            result += 'font-weight: bold;';\n        }\n        let textDecoration = '';\n        if (fontStyle & 4 /* FontStyle.Underline */) {\n            textDecoration += ' underline';\n        }\n        if (fontStyle & 8 /* FontStyle.Strikethrough */) {\n            textDecoration += ' line-through';\n        }\n        if (textDecoration) {\n            result += `text-decoration:${textDecoration};`;\n        }\n        return result;\n    }\n    static getPresentationFromMetadata(metadata) {\n        const foreground = this.getForeground(metadata);\n        const fontStyle = this.getFontStyle(metadata);\n        return {\n            foreground: foreground,\n            italic: Boolean(fontStyle & 1 /* FontStyle.Italic */),\n            bold: Boolean(fontStyle & 2 /* FontStyle.Bold */),\n            underline: Boolean(fontStyle & 4 /* FontStyle.Underline */),\n            strikethrough: Boolean(fontStyle & 8 /* FontStyle.Strikethrough */),\n        };\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../base/common/event.js';\nimport { toDisposable } from '../../base/common/lifecycle.js';\nimport { shouldSynchronizeModel } from './model.js';\nimport { score } from './languageSelector.js';\nfunction isExclusive(selector) {\n    if (typeof selector === 'string') {\n        return false;\n    }\n    else if (Array.isArray(selector)) {\n        return selector.every(isExclusive);\n    }\n    else {\n        return !!selector.exclusive; // TODO: microsoft/TypeScript#42768\n    }\n}\nclass MatchCandidate {\n    constructor(uri, languageId, notebookUri, notebookType, recursive) {\n        this.uri = uri;\n        this.languageId = languageId;\n        this.notebookUri = notebookUri;\n        this.notebookType = notebookType;\n        this.recursive = recursive;\n    }\n    equals(other) {\n        return this.notebookType === other.notebookType\n            && this.languageId === other.languageId\n            && this.uri.toString() === other.uri.toString()\n            && this.notebookUri?.toString() === other.notebookUri?.toString()\n            && this.recursive === other.recursive;\n    }\n}\nexport class LanguageFeatureRegistry {\n    constructor(_notebookInfoResolver) {\n        this._notebookInfoResolver = _notebookInfoResolver;\n        this._clock = 0;\n        this._entries = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n    }\n    register(selector, provider) {\n        let entry = {\n            selector,\n            provider,\n            _score: -1,\n            _time: this._clock++\n        };\n        this._entries.push(entry);\n        this._lastCandidate = undefined;\n        this._onDidChange.fire(this._entries.length);\n        return toDisposable(() => {\n            if (entry) {\n                const idx = this._entries.indexOf(entry);\n                if (idx >= 0) {\n                    this._entries.splice(idx, 1);\n                    this._lastCandidate = undefined;\n                    this._onDidChange.fire(this._entries.length);\n                    entry = undefined;\n                }\n            }\n        });\n    }\n    has(model) {\n        return this.all(model).length > 0;\n    }\n    all(model) {\n        if (!model) {\n            return [];\n        }\n        this._updateScores(model, false);\n        const result = [];\n        // from registry\n        for (const entry of this._entries) {\n            if (entry._score > 0) {\n                result.push(entry.provider);\n            }\n        }\n        return result;\n    }\n    ordered(model, recursive = false) {\n        const result = [];\n        this._orderedForEach(model, recursive, entry => result.push(entry.provider));\n        return result;\n    }\n    orderedGroups(model) {\n        const result = [];\n        let lastBucket;\n        let lastBucketScore;\n        this._orderedForEach(model, false, entry => {\n            if (lastBucket && lastBucketScore === entry._score) {\n                lastBucket.push(entry.provider);\n            }\n            else {\n                lastBucketScore = entry._score;\n                lastBucket = [entry.provider];\n                result.push(lastBucket);\n            }\n        });\n        return result;\n    }\n    _orderedForEach(model, recursive, callback) {\n        this._updateScores(model, recursive);\n        for (const entry of this._entries) {\n            if (entry._score > 0) {\n                callback(entry);\n            }\n        }\n    }\n    _updateScores(model, recursive) {\n        const notebookInfo = this._notebookInfoResolver?.(model.uri);\n        // use the uri (scheme, pattern) of the notebook info iff we have one\n        // otherwise it's the model's/document's uri\n        const candidate = notebookInfo\n            ? new MatchCandidate(model.uri, model.getLanguageId(), notebookInfo.uri, notebookInfo.type, recursive)\n            : new MatchCandidate(model.uri, model.getLanguageId(), undefined, undefined, recursive);\n        if (this._lastCandidate?.equals(candidate)) {\n            // nothing has changed\n            return;\n        }\n        this._lastCandidate = candidate;\n        for (const entry of this._entries) {\n            entry._score = score(entry.selector, candidate.uri, candidate.languageId, shouldSynchronizeModel(model), candidate.notebookUri, candidate.notebookType);\n            if (isExclusive(entry.selector) && entry._score > 0) {\n                if (recursive) {\n                    entry._score = 0;\n                }\n                else {\n                    // support for one exclusive selector that overwrites\n                    // any other selector\n                    for (const entry of this._entries) {\n                        entry._score = 0;\n                    }\n                    entry._score = 1000;\n                    break;\n                }\n            }\n        }\n        // needs sorting\n        this._entries.sort(LanguageFeatureRegistry._compareByScoreAndTime);\n    }\n    static _compareByScoreAndTime(a, b) {\n        if (a._score < b._score) {\n            return 1;\n        }\n        else if (a._score > b._score) {\n            return -1;\n        }\n        // De-prioritize built-in providers\n        if (isBuiltinSelector(a.selector) && !isBuiltinSelector(b.selector)) {\n            return 1;\n        }\n        else if (!isBuiltinSelector(a.selector) && isBuiltinSelector(b.selector)) {\n            return -1;\n        }\n        if (a._time < b._time) {\n            return 1;\n        }\n        else if (a._time > b._time) {\n            return -1;\n        }\n        else {\n            return 0;\n        }\n    }\n}\nfunction isBuiltinSelector(selector) {\n    if (typeof selector === 'string') {\n        return false;\n    }\n    if (Array.isArray(selector)) {\n        return selector.some(isBuiltinSelector);\n    }\n    return Boolean(selector.isBuiltin);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { match as matchGlobPattern } from '../../base/common/glob.js';\nimport { normalize } from '../../base/common/path.js';\nexport function score(selector, candidateUri, candidateLanguage, candidateIsSynchronized, candidateNotebookUri, candidateNotebookType) {\n    if (Array.isArray(selector)) {\n        // array -> take max individual value\n        let ret = 0;\n        for (const filter of selector) {\n            const value = score(filter, candidateUri, candidateLanguage, candidateIsSynchronized, candidateNotebookUri, candidateNotebookType);\n            if (value === 10) {\n                return value; // already at the highest\n            }\n            if (value > ret) {\n                ret = value;\n            }\n        }\n        return ret;\n    }\n    else if (typeof selector === 'string') {\n        if (!candidateIsSynchronized) {\n            return 0;\n        }\n        // short-hand notion, desugars to\n        // 'fooLang' -> { language: 'fooLang'}\n        // '*' -> { language: '*' }\n        if (selector === '*') {\n            return 5;\n        }\n        else if (selector === candidateLanguage) {\n            return 10;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (selector) {\n        // filter -> select accordingly, use defaults for scheme\n        const { language, pattern, scheme, hasAccessToAllModels, notebookType } = selector; // TODO: microsoft/TypeScript#42768\n        if (!candidateIsSynchronized && !hasAccessToAllModels) {\n            return 0;\n        }\n        // selector targets a notebook -> use the notebook uri instead\n        // of the \"normal\" document uri.\n        if (notebookType && candidateNotebookUri) {\n            candidateUri = candidateNotebookUri;\n        }\n        let ret = 0;\n        if (scheme) {\n            if (scheme === candidateUri.scheme) {\n                ret = 10;\n            }\n            else if (scheme === '*') {\n                ret = 5;\n            }\n            else {\n                return 0;\n            }\n        }\n        if (language) {\n            if (language === candidateLanguage) {\n                ret = 10;\n            }\n            else if (language === '*') {\n                ret = Math.max(ret, 5);\n            }\n            else {\n                return 0;\n            }\n        }\n        if (notebookType) {\n            if (notebookType === candidateNotebookType) {\n                ret = 10;\n            }\n            else if (notebookType === '*' && candidateNotebookType !== undefined) {\n                ret = Math.max(ret, 5);\n            }\n            else {\n                return 0;\n            }\n        }\n        if (pattern) {\n            let normalizedPattern;\n            if (typeof pattern === 'string') {\n                normalizedPattern = pattern;\n            }\n            else {\n                // Since this pattern has a `base` property, we need\n                // to normalize this path first before passing it on\n                // because we will compare it against `Uri.fsPath`\n                // which uses platform specific separators.\n                // Refs: https://github.com/microsoft/vscode/issues/99938\n                normalizedPattern = { ...pattern, base: normalize(pattern.base) };\n            }\n            if (normalizedPattern === candidateUri.fsPath || matchGlobPattern(normalizedPattern, candidateUri.fsPath)) {\n                ret = 10;\n            }\n            else {\n                return 0;\n            }\n        }\n        return ret;\n    }\n    else {\n        return 0;\n    }\n}\n","import { Codicon } from '../../base/common/codicons.js';\nimport { URI } from '../../base/common/uri.js';\nimport { Range } from './core/range.js';\nimport { TokenizationRegistry as TokenizationRegistryImpl } from './tokenizationRegistry.js';\nimport { localize } from '../../nls.js';\nexport class Token {\n    constructor(offset, type, language) {\n        this.offset = offset;\n        this.type = type;\n        this.language = language;\n        this._tokenBrand = undefined;\n    }\n    toString() {\n        return '(' + this.offset + ', ' + this.type + ')';\n    }\n}\n/**\n * @internal\n */\nexport class TokenizationResult {\n    constructor(tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n        this._tokenizationResultBrand = undefined;\n    }\n}\n/**\n * @internal\n */\nexport class EncodedTokenizationResult {\n    constructor(\n    /**\n     * The tokens in binary format. Each token occupies two array indices. For token i:\n     *  - at offset 2*i => startIndex\n     *  - at offset 2*i + 1 => metadata\n     *\n     */\n    tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n        this._encodedTokenizationResultBrand = undefined;\n    }\n}\nexport var HoverVerbosityAction;\n(function (HoverVerbosityAction) {\n    /**\n     * Increase the verbosity of the hover\n     */\n    HoverVerbosityAction[HoverVerbosityAction[\"Increase\"] = 0] = \"Increase\";\n    /**\n     * Decrease the verbosity of the hover\n     */\n    HoverVerbosityAction[HoverVerbosityAction[\"Decrease\"] = 1] = \"Decrease\";\n})(HoverVerbosityAction || (HoverVerbosityAction = {}));\n/**\n * @internal\n */\nexport var CompletionItemKinds;\n(function (CompletionItemKinds) {\n    const byKind = new Map();\n    byKind.set(0 /* CompletionItemKind.Method */, Codicon.symbolMethod);\n    byKind.set(1 /* CompletionItemKind.Function */, Codicon.symbolFunction);\n    byKind.set(2 /* CompletionItemKind.Constructor */, Codicon.symbolConstructor);\n    byKind.set(3 /* CompletionItemKind.Field */, Codicon.symbolField);\n    byKind.set(4 /* CompletionItemKind.Variable */, Codicon.symbolVariable);\n    byKind.set(5 /* CompletionItemKind.Class */, Codicon.symbolClass);\n    byKind.set(6 /* CompletionItemKind.Struct */, Codicon.symbolStruct);\n    byKind.set(7 /* CompletionItemKind.Interface */, Codicon.symbolInterface);\n    byKind.set(8 /* CompletionItemKind.Module */, Codicon.symbolModule);\n    byKind.set(9 /* CompletionItemKind.Property */, Codicon.symbolProperty);\n    byKind.set(10 /* CompletionItemKind.Event */, Codicon.symbolEvent);\n    byKind.set(11 /* CompletionItemKind.Operator */, Codicon.symbolOperator);\n    byKind.set(12 /* CompletionItemKind.Unit */, Codicon.symbolUnit);\n    byKind.set(13 /* CompletionItemKind.Value */, Codicon.symbolValue);\n    byKind.set(15 /* CompletionItemKind.Enum */, Codicon.symbolEnum);\n    byKind.set(14 /* CompletionItemKind.Constant */, Codicon.symbolConstant);\n    byKind.set(15 /* CompletionItemKind.Enum */, Codicon.symbolEnum);\n    byKind.set(16 /* CompletionItemKind.EnumMember */, Codicon.symbolEnumMember);\n    byKind.set(17 /* CompletionItemKind.Keyword */, Codicon.symbolKeyword);\n    byKind.set(27 /* CompletionItemKind.Snippet */, Codicon.symbolSnippet);\n    byKind.set(18 /* CompletionItemKind.Text */, Codicon.symbolText);\n    byKind.set(19 /* CompletionItemKind.Color */, Codicon.symbolColor);\n    byKind.set(20 /* CompletionItemKind.File */, Codicon.symbolFile);\n    byKind.set(21 /* CompletionItemKind.Reference */, Codicon.symbolReference);\n    byKind.set(22 /* CompletionItemKind.Customcolor */, Codicon.symbolCustomColor);\n    byKind.set(23 /* CompletionItemKind.Folder */, Codicon.symbolFolder);\n    byKind.set(24 /* CompletionItemKind.TypeParameter */, Codicon.symbolTypeParameter);\n    byKind.set(25 /* CompletionItemKind.User */, Codicon.account);\n    byKind.set(26 /* CompletionItemKind.Issue */, Codicon.issues);\n    /**\n     * @internal\n     */\n    function toIcon(kind) {\n        let codicon = byKind.get(kind);\n        if (!codicon) {\n            console.info('No codicon found for CompletionItemKind ' + kind);\n            codicon = Codicon.symbolProperty;\n        }\n        return codicon;\n    }\n    CompletionItemKinds.toIcon = toIcon;\n    const data = new Map();\n    data.set('method', 0 /* CompletionItemKind.Method */);\n    data.set('function', 1 /* CompletionItemKind.Function */);\n    data.set('constructor', 2 /* CompletionItemKind.Constructor */);\n    data.set('field', 3 /* CompletionItemKind.Field */);\n    data.set('variable', 4 /* CompletionItemKind.Variable */);\n    data.set('class', 5 /* CompletionItemKind.Class */);\n    data.set('struct', 6 /* CompletionItemKind.Struct */);\n    data.set('interface', 7 /* CompletionItemKind.Interface */);\n    data.set('module', 8 /* CompletionItemKind.Module */);\n    data.set('property', 9 /* CompletionItemKind.Property */);\n    data.set('event', 10 /* CompletionItemKind.Event */);\n    data.set('operator', 11 /* CompletionItemKind.Operator */);\n    data.set('unit', 12 /* CompletionItemKind.Unit */);\n    data.set('value', 13 /* CompletionItemKind.Value */);\n    data.set('constant', 14 /* CompletionItemKind.Constant */);\n    data.set('enum', 15 /* CompletionItemKind.Enum */);\n    data.set('enum-member', 16 /* CompletionItemKind.EnumMember */);\n    data.set('enumMember', 16 /* CompletionItemKind.EnumMember */);\n    data.set('keyword', 17 /* CompletionItemKind.Keyword */);\n    data.set('snippet', 27 /* CompletionItemKind.Snippet */);\n    data.set('text', 18 /* CompletionItemKind.Text */);\n    data.set('color', 19 /* CompletionItemKind.Color */);\n    data.set('file', 20 /* CompletionItemKind.File */);\n    data.set('reference', 21 /* CompletionItemKind.Reference */);\n    data.set('customcolor', 22 /* CompletionItemKind.Customcolor */);\n    data.set('folder', 23 /* CompletionItemKind.Folder */);\n    data.set('type-parameter', 24 /* CompletionItemKind.TypeParameter */);\n    data.set('typeParameter', 24 /* CompletionItemKind.TypeParameter */);\n    data.set('account', 25 /* CompletionItemKind.User */);\n    data.set('issue', 26 /* CompletionItemKind.Issue */);\n    /**\n     * @internal\n     */\n    function fromString(value, strict) {\n        let res = data.get(value);\n        if (typeof res === 'undefined' && !strict) {\n            res = 9 /* CompletionItemKind.Property */;\n        }\n        return res;\n    }\n    CompletionItemKinds.fromString = fromString;\n})(CompletionItemKinds || (CompletionItemKinds = {}));\n/**\n * How an {@link InlineCompletionsProvider inline completion provider} was triggered.\n */\nexport var InlineCompletionTriggerKind;\n(function (InlineCompletionTriggerKind) {\n    /**\n     * Completion was triggered automatically while editing.\n     * It is sufficient to return a single completion item in this case.\n     */\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Automatic\"] = 0] = \"Automatic\";\n    /**\n     * Completion was triggered explicitly by a user gesture.\n     * Return multiple completion items to enable cycling through them.\n     */\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Explicit\"] = 1] = \"Explicit\";\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\nexport class SelectedSuggestionInfo {\n    constructor(range, text, completionKind, isSnippetText) {\n        this.range = range;\n        this.text = text;\n        this.completionKind = completionKind;\n        this.isSnippetText = isSnippetText;\n    }\n    equals(other) {\n        return Range.lift(this.range).equalsRange(other.range)\n            && this.text === other.text\n            && this.completionKind === other.completionKind\n            && this.isSnippetText === other.isSnippetText;\n    }\n}\n/**\n * @internal\n */\nexport var DocumentPasteTriggerKind;\n(function (DocumentPasteTriggerKind) {\n    DocumentPasteTriggerKind[DocumentPasteTriggerKind[\"Automatic\"] = 0] = \"Automatic\";\n    DocumentPasteTriggerKind[DocumentPasteTriggerKind[\"PasteAs\"] = 1] = \"PasteAs\";\n})(DocumentPasteTriggerKind || (DocumentPasteTriggerKind = {}));\nexport var SignatureHelpTriggerKind;\n(function (SignatureHelpTriggerKind) {\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\n})(SignatureHelpTriggerKind || (SignatureHelpTriggerKind = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * @internal\n */\nexport function isLocationLink(thing) {\n    return thing\n        && URI.isUri(thing.uri)\n        && Range.isIRange(thing.range)\n        && (Range.isIRange(thing.originSelectionRange) || Range.isIRange(thing.targetSelectionRange));\n}\n/**\n * @internal\n */\nexport const symbolKindNames = {\n    [17 /* SymbolKind.Array */]: localize('Array', \"array\"),\n    [16 /* SymbolKind.Boolean */]: localize('Boolean', \"boolean\"),\n    [4 /* SymbolKind.Class */]: localize('Class', \"class\"),\n    [13 /* SymbolKind.Constant */]: localize('Constant', \"constant\"),\n    [8 /* SymbolKind.Constructor */]: localize('Constructor', \"constructor\"),\n    [9 /* SymbolKind.Enum */]: localize('Enum', \"enumeration\"),\n    [21 /* SymbolKind.EnumMember */]: localize('EnumMember', \"enumeration member\"),\n    [23 /* SymbolKind.Event */]: localize('Event', \"event\"),\n    [7 /* SymbolKind.Field */]: localize('Field', \"field\"),\n    [0 /* SymbolKind.File */]: localize('File', \"file\"),\n    [11 /* SymbolKind.Function */]: localize('Function', \"function\"),\n    [10 /* SymbolKind.Interface */]: localize('Interface', \"interface\"),\n    [19 /* SymbolKind.Key */]: localize('Key', \"key\"),\n    [5 /* SymbolKind.Method */]: localize('Method', \"method\"),\n    [1 /* SymbolKind.Module */]: localize('Module', \"module\"),\n    [2 /* SymbolKind.Namespace */]: localize('Namespace', \"namespace\"),\n    [20 /* SymbolKind.Null */]: localize('Null', \"null\"),\n    [15 /* SymbolKind.Number */]: localize('Number', \"number\"),\n    [18 /* SymbolKind.Object */]: localize('Object', \"object\"),\n    [24 /* SymbolKind.Operator */]: localize('Operator', \"operator\"),\n    [3 /* SymbolKind.Package */]: localize('Package', \"package\"),\n    [6 /* SymbolKind.Property */]: localize('Property', \"property\"),\n    [14 /* SymbolKind.String */]: localize('String', \"string\"),\n    [22 /* SymbolKind.Struct */]: localize('Struct', \"struct\"),\n    [25 /* SymbolKind.TypeParameter */]: localize('TypeParameter', \"type parameter\"),\n    [12 /* SymbolKind.Variable */]: localize('Variable', \"variable\"),\n};\n/**\n * @internal\n */\nexport function getAriaLabelForSymbol(symbolName, kind) {\n    return localize('symbolAriaLabel', '{0} ({1})', symbolName, symbolKindNames[kind]);\n}\n/**\n * @internal\n */\nexport var SymbolKinds;\n(function (SymbolKinds) {\n    const byKind = new Map();\n    byKind.set(0 /* SymbolKind.File */, Codicon.symbolFile);\n    byKind.set(1 /* SymbolKind.Module */, Codicon.symbolModule);\n    byKind.set(2 /* SymbolKind.Namespace */, Codicon.symbolNamespace);\n    byKind.set(3 /* SymbolKind.Package */, Codicon.symbolPackage);\n    byKind.set(4 /* SymbolKind.Class */, Codicon.symbolClass);\n    byKind.set(5 /* SymbolKind.Method */, Codicon.symbolMethod);\n    byKind.set(6 /* SymbolKind.Property */, Codicon.symbolProperty);\n    byKind.set(7 /* SymbolKind.Field */, Codicon.symbolField);\n    byKind.set(8 /* SymbolKind.Constructor */, Codicon.symbolConstructor);\n    byKind.set(9 /* SymbolKind.Enum */, Codicon.symbolEnum);\n    byKind.set(10 /* SymbolKind.Interface */, Codicon.symbolInterface);\n    byKind.set(11 /* SymbolKind.Function */, Codicon.symbolFunction);\n    byKind.set(12 /* SymbolKind.Variable */, Codicon.symbolVariable);\n    byKind.set(13 /* SymbolKind.Constant */, Codicon.symbolConstant);\n    byKind.set(14 /* SymbolKind.String */, Codicon.symbolString);\n    byKind.set(15 /* SymbolKind.Number */, Codicon.symbolNumber);\n    byKind.set(16 /* SymbolKind.Boolean */, Codicon.symbolBoolean);\n    byKind.set(17 /* SymbolKind.Array */, Codicon.symbolArray);\n    byKind.set(18 /* SymbolKind.Object */, Codicon.symbolObject);\n    byKind.set(19 /* SymbolKind.Key */, Codicon.symbolKey);\n    byKind.set(20 /* SymbolKind.Null */, Codicon.symbolNull);\n    byKind.set(21 /* SymbolKind.EnumMember */, Codicon.symbolEnumMember);\n    byKind.set(22 /* SymbolKind.Struct */, Codicon.symbolStruct);\n    byKind.set(23 /* SymbolKind.Event */, Codicon.symbolEvent);\n    byKind.set(24 /* SymbolKind.Operator */, Codicon.symbolOperator);\n    byKind.set(25 /* SymbolKind.TypeParameter */, Codicon.symbolTypeParameter);\n    /**\n     * @internal\n     */\n    function toIcon(kind) {\n        let icon = byKind.get(kind);\n        if (!icon) {\n            console.info('No codicon found for SymbolKind ' + kind);\n            icon = Codicon.symbolProperty;\n        }\n        return icon;\n    }\n    SymbolKinds.toIcon = toIcon;\n})(SymbolKinds || (SymbolKinds = {}));\n/** @internal */\nexport class TextEdit {\n}\nexport class FoldingRangeKind {\n    /**\n     * Kind for folding range representing a comment. The value of the kind is 'comment'.\n     */\n    static { this.Comment = new FoldingRangeKind('comment'); }\n    /**\n     * Kind for folding range representing a import. The value of the kind is 'imports'.\n     */\n    static { this.Imports = new FoldingRangeKind('imports'); }\n    /**\n     * Kind for folding range representing regions (for example marked by `#region`, `#endregion`).\n     * The value of the kind is 'region'.\n     */\n    static { this.Region = new FoldingRangeKind('region'); }\n    /**\n     * Returns a {@link FoldingRangeKind} for the given value.\n     *\n     * @param value of the kind.\n     */\n    static fromValue(value) {\n        switch (value) {\n            case 'comment': return FoldingRangeKind.Comment;\n            case 'imports': return FoldingRangeKind.Imports;\n            case 'region': return FoldingRangeKind.Region;\n        }\n        return new FoldingRangeKind(value);\n    }\n    /**\n     * Creates a new {@link FoldingRangeKind}.\n     *\n     * @param value of the kind.\n     */\n    constructor(value) {\n        this.value = value;\n    }\n}\nexport var NewSymbolNameTag;\n(function (NewSymbolNameTag) {\n    NewSymbolNameTag[NewSymbolNameTag[\"AIGenerated\"] = 1] = \"AIGenerated\";\n})(NewSymbolNameTag || (NewSymbolNameTag = {}));\nexport var NewSymbolNameTriggerKind;\n(function (NewSymbolNameTriggerKind) {\n    NewSymbolNameTriggerKind[NewSymbolNameTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    NewSymbolNameTriggerKind[NewSymbolNameTriggerKind[\"Automatic\"] = 1] = \"Automatic\";\n})(NewSymbolNameTriggerKind || (NewSymbolNameTriggerKind = {}));\n/**\n * @internal\n */\nexport var Command;\n(function (Command) {\n    /**\n     * @internal\n     */\n    function is(obj) {\n        if (!obj || typeof obj !== 'object') {\n            return false;\n        }\n        return typeof obj.id === 'string' &&\n            typeof obj.title === 'string';\n    }\n    Command.is = is;\n})(Command || (Command = {}));\nexport var InlayHintKind;\n(function (InlayHintKind) {\n    InlayHintKind[InlayHintKind[\"Type\"] = 1] = \"Type\";\n    InlayHintKind[InlayHintKind[\"Parameter\"] = 2] = \"Parameter\";\n})(InlayHintKind || (InlayHintKind = {}));\n/**\n * @internal\n */\nexport class LazyTokenizationSupport {\n    constructor(createSupport) {\n        this.createSupport = createSupport;\n        this._tokenizationSupport = null;\n    }\n    dispose() {\n        if (this._tokenizationSupport) {\n            this._tokenizationSupport.then((support) => {\n                if (support) {\n                    support.dispose();\n                }\n            });\n        }\n    }\n    get tokenizationSupport() {\n        if (!this._tokenizationSupport) {\n            this._tokenizationSupport = this.createSupport();\n        }\n        return this._tokenizationSupport;\n    }\n}\n/**\n * @internal\n */\nexport const TokenizationRegistry = new TokenizationRegistryImpl();\n/**\n * @internal\n */\nexport const TreeSitterTokenizationRegistry = new TokenizationRegistryImpl();\nexport var InlineEditTriggerKind;\n(function (InlineEditTriggerKind) {\n    InlineEditTriggerKind[InlineEditTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    InlineEditTriggerKind[InlineEditTriggerKind[\"Automatic\"] = 1] = \"Automatic\";\n})(InlineEditTriggerKind || (InlineEditTriggerKind = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Color, HSLA } from '../../../base/common/color.js';\nfunction _parseCaptureGroups(captureGroups) {\n    const values = [];\n    for (const captureGroup of captureGroups) {\n        const parsedNumber = Number(captureGroup);\n        if (parsedNumber || parsedNumber === 0 && captureGroup.replace(/\\s/g, '') !== '') {\n            values.push(parsedNumber);\n        }\n    }\n    return values;\n}\nfunction _toIColor(r, g, b, a) {\n    return {\n        red: r / 255,\n        blue: b / 255,\n        green: g / 255,\n        alpha: a\n    };\n}\nfunction _findRange(model, match) {\n    const index = match.index;\n    const length = match[0].length;\n    if (!index) {\n        return;\n    }\n    const startPosition = model.positionAt(index);\n    const range = {\n        startLineNumber: startPosition.lineNumber,\n        startColumn: startPosition.column,\n        endLineNumber: startPosition.lineNumber,\n        endColumn: startPosition.column + length\n    };\n    return range;\n}\nfunction _findHexColorInformation(range, hexValue) {\n    if (!range) {\n        return;\n    }\n    const parsedHexColor = Color.Format.CSS.parseHex(hexValue);\n    if (!parsedHexColor) {\n        return;\n    }\n    return {\n        range: range,\n        color: _toIColor(parsedHexColor.rgba.r, parsedHexColor.rgba.g, parsedHexColor.rgba.b, parsedHexColor.rgba.a)\n    };\n}\nfunction _findRGBColorInformation(range, matches, isAlpha) {\n    if (!range || matches.length !== 1) {\n        return;\n    }\n    const match = matches[0];\n    const captureGroups = match.values();\n    const parsedRegex = _parseCaptureGroups(captureGroups);\n    return {\n        range: range,\n        color: _toIColor(parsedRegex[0], parsedRegex[1], parsedRegex[2], isAlpha ? parsedRegex[3] : 1)\n    };\n}\nfunction _findHSLColorInformation(range, matches, isAlpha) {\n    if (!range || matches.length !== 1) {\n        return;\n    }\n    const match = matches[0];\n    const captureGroups = match.values();\n    const parsedRegex = _parseCaptureGroups(captureGroups);\n    const colorEquivalent = new Color(new HSLA(parsedRegex[0], parsedRegex[1] / 100, parsedRegex[2] / 100, isAlpha ? parsedRegex[3] : 1));\n    return {\n        range: range,\n        color: _toIColor(colorEquivalent.rgba.r, colorEquivalent.rgba.g, colorEquivalent.rgba.b, colorEquivalent.rgba.a)\n    };\n}\nfunction _findMatches(model, regex) {\n    if (typeof model === 'string') {\n        return [...model.matchAll(regex)];\n    }\n    else {\n        return model.findMatches(regex);\n    }\n}\nfunction computeColors(model) {\n    const result = [];\n    // Early validation for RGB and HSL\n    const initialValidationRegex = /\\b(rgb|rgba|hsl|hsla)(\\([0-9\\s,.\\%]*\\))|(#)([A-Fa-f0-9]{3})\\b|(#)([A-Fa-f0-9]{4})\\b|(#)([A-Fa-f0-9]{6})\\b|(#)([A-Fa-f0-9]{8})\\b/gm;\n    const initialValidationMatches = _findMatches(model, initialValidationRegex);\n    // Potential colors have been found, validate the parameters\n    if (initialValidationMatches.length > 0) {\n        for (const initialMatch of initialValidationMatches) {\n            const initialCaptureGroups = initialMatch.filter(captureGroup => captureGroup !== undefined);\n            const colorScheme = initialCaptureGroups[1];\n            const colorParameters = initialCaptureGroups[2];\n            if (!colorParameters) {\n                continue;\n            }\n            let colorInformation;\n            if (colorScheme === 'rgb') {\n                const regexParameters = /^\\(\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*\\)$/gm;\n                colorInformation = _findRGBColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), false);\n            }\n            else if (colorScheme === 'rgba') {\n                const regexParameters = /^\\(\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(0[.][0-9]+|[.][0-9]+|[01][.]|[01])\\s*\\)$/gm;\n                colorInformation = _findRGBColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), true);\n            }\n            else if (colorScheme === 'hsl') {\n                const regexParameters = /^\\(\\s*(36[0]|3[0-5][0-9]|[12][0-9][0-9]|[1-9]?[0-9])\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*\\)$/gm;\n                colorInformation = _findHSLColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), false);\n            }\n            else if (colorScheme === 'hsla') {\n                const regexParameters = /^\\(\\s*(36[0]|3[0-5][0-9]|[12][0-9][0-9]|[1-9]?[0-9])\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*,\\s*(0[.][0-9]+|[.][0-9]+|[01][.]|[01])\\s*\\)$/gm;\n                colorInformation = _findHSLColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), true);\n            }\n            else if (colorScheme === '#') {\n                colorInformation = _findHexColorInformation(_findRange(model, initialMatch), colorScheme + colorParameters);\n            }\n            if (colorInformation) {\n                result.push(colorInformation);\n            }\n        }\n    }\n    return result;\n}\n/**\n * Returns an array of all default document colors in the provided document\n */\nexport function computeDefaultDocumentColors(model) {\n    if (!model || typeof model.getValue !== 'function' || typeof model.positionAt !== 'function') {\n        // Unknown caller!\n        return [];\n    }\n    return computeColors(model);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nexport const ILanguageService = createDecorator('languageService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Describes what to do with the indentation when pressing Enter.\n */\nexport var IndentAction;\n(function (IndentAction) {\n    /**\n     * Insert new line and copy the previous line's indentation.\n     */\n    IndentAction[IndentAction[\"None\"] = 0] = \"None\";\n    /**\n     * Insert new line and indent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\n    /**\n     * Insert two new lines:\n     *  - the first one indented which will hold the cursor\n     *  - the second one at the same indentation level\n     */\n    IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\n    /**\n     * Insert new line and outdent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\n})(IndentAction || (IndentAction = {}));\n/**\n * @internal\n */\nexport class StandardAutoClosingPairConditional {\n    constructor(source) {\n        this._neutralCharacter = null;\n        this._neutralCharacterSearched = false;\n        this.open = source.open;\n        this.close = source.close;\n        // initially allowed in all tokens\n        this._inString = true;\n        this._inComment = true;\n        this._inRegEx = true;\n        if (Array.isArray(source.notIn)) {\n            for (let i = 0, len = source.notIn.length; i < len; i++) {\n                const notIn = source.notIn[i];\n                switch (notIn) {\n                    case 'string':\n                        this._inString = false;\n                        break;\n                    case 'comment':\n                        this._inComment = false;\n                        break;\n                    case 'regex':\n                        this._inRegEx = false;\n                        break;\n                }\n            }\n        }\n    }\n    isOK(standardToken) {\n        switch (standardToken) {\n            case 0 /* StandardTokenType.Other */:\n                return true;\n            case 1 /* StandardTokenType.Comment */:\n                return this._inComment;\n            case 2 /* StandardTokenType.String */:\n                return this._inString;\n            case 3 /* StandardTokenType.RegEx */:\n                return this._inRegEx;\n        }\n    }\n    shouldAutoClose(context, column) {\n        // Always complete on empty line\n        if (context.getTokenCount() === 0) {\n            return true;\n        }\n        const tokenIndex = context.findTokenIndexAtOffset(column - 2);\n        const standardTokenType = context.getStandardTokenType(tokenIndex);\n        return this.isOK(standardTokenType);\n    }\n    _findNeutralCharacterInRange(fromCharCode, toCharCode) {\n        for (let charCode = fromCharCode; charCode <= toCharCode; charCode++) {\n            const character = String.fromCharCode(charCode);\n            if (!this.open.includes(character) && !this.close.includes(character)) {\n                return character;\n            }\n        }\n        return null;\n    }\n    /**\n     * Find a character in the range [0-9a-zA-Z] that does not appear in the open or close\n     */\n    findNeutralCharacter() {\n        if (!this._neutralCharacterSearched) {\n            this._neutralCharacterSearched = true;\n            if (!this._neutralCharacter) {\n                this._neutralCharacter = this._findNeutralCharacterInRange(48 /* CharCode.Digit0 */, 57 /* CharCode.Digit9 */);\n            }\n            if (!this._neutralCharacter) {\n                this._neutralCharacter = this._findNeutralCharacterInRange(97 /* CharCode.a */, 122 /* CharCode.z */);\n            }\n            if (!this._neutralCharacter) {\n                this._neutralCharacter = this._findNeutralCharacterInRange(65 /* CharCode.A */, 90 /* CharCode.Z */);\n            }\n        }\n        return this._neutralCharacter;\n    }\n}\n/**\n * @internal\n */\nexport class AutoClosingPairs {\n    constructor(autoClosingPairs) {\n        this.autoClosingPairsOpenByStart = new Map();\n        this.autoClosingPairsOpenByEnd = new Map();\n        this.autoClosingPairsCloseByStart = new Map();\n        this.autoClosingPairsCloseByEnd = new Map();\n        this.autoClosingPairsCloseSingleChar = new Map();\n        for (const pair of autoClosingPairs) {\n            appendEntry(this.autoClosingPairsOpenByStart, pair.open.charAt(0), pair);\n            appendEntry(this.autoClosingPairsOpenByEnd, pair.open.charAt(pair.open.length - 1), pair);\n            appendEntry(this.autoClosingPairsCloseByStart, pair.close.charAt(0), pair);\n            appendEntry(this.autoClosingPairsCloseByEnd, pair.close.charAt(pair.close.length - 1), pair);\n            if (pair.close.length === 1 && pair.open.length === 1) {\n                appendEntry(this.autoClosingPairsCloseSingleChar, pair.close, pair);\n            }\n        }\n    }\n}\nfunction appendEntry(target, key, value) {\n    if (target.has(key)) {\n        target.get(key).push(value);\n    }\n    else {\n        target.set(key, [value]);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { DEFAULT_WORD_REGEXP, ensureValidWordDefinition } from '../core/wordHelper.js';\nimport { AutoClosingPairs } from './languageConfiguration.js';\nimport { CharacterPairSupport } from './supports/characterPair.js';\nimport { BracketElectricCharacterSupport } from './supports/electricCharacter.js';\nimport { IndentRulesSupport } from './supports/indentRules.js';\nimport { OnEnterSupport } from './supports/onEnter.js';\nimport { RichEditBrackets } from './supports/richEditBrackets.js';\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { ILanguageService } from './language.js';\nimport { registerSingleton } from '../../../platform/instantiation/common/extensions.js';\nimport { PLAINTEXT_LANGUAGE_ID } from './modesRegistry.js';\nimport { LanguageBracketsConfiguration } from './supports/languageBracketsConfiguration.js';\nexport class LanguageConfigurationServiceChangeEvent {\n    constructor(languageId) {\n        this.languageId = languageId;\n    }\n    affects(languageId) {\n        return !this.languageId ? true : this.languageId === languageId;\n    }\n}\nexport const ILanguageConfigurationService = createDecorator('languageConfigurationService');\nlet LanguageConfigurationService = class LanguageConfigurationService extends Disposable {\n    constructor(configurationService, languageService) {\n        super();\n        this.configurationService = configurationService;\n        this.languageService = languageService;\n        this._registry = this._register(new LanguageConfigurationRegistry());\n        this.onDidChangeEmitter = this._register(new Emitter());\n        this.onDidChange = this.onDidChangeEmitter.event;\n        this.configurations = new Map();\n        const languageConfigKeys = new Set(Object.values(customizedLanguageConfigKeys));\n        this._register(this.configurationService.onDidChangeConfiguration((e) => {\n            const globalConfigChanged = e.change.keys.some((k) => languageConfigKeys.has(k));\n            const localConfigChanged = e.change.overrides\n                .filter(([overrideLangName, keys]) => keys.some((k) => languageConfigKeys.has(k)))\n                .map(([overrideLangName]) => overrideLangName);\n            if (globalConfigChanged) {\n                this.configurations.clear();\n                this.onDidChangeEmitter.fire(new LanguageConfigurationServiceChangeEvent(undefined));\n            }\n            else {\n                for (const languageId of localConfigChanged) {\n                    if (this.languageService.isRegisteredLanguageId(languageId)) {\n                        this.configurations.delete(languageId);\n                        this.onDidChangeEmitter.fire(new LanguageConfigurationServiceChangeEvent(languageId));\n                    }\n                }\n            }\n        }));\n        this._register(this._registry.onDidChange((e) => {\n            this.configurations.delete(e.languageId);\n            this.onDidChangeEmitter.fire(new LanguageConfigurationServiceChangeEvent(e.languageId));\n        }));\n    }\n    register(languageId, configuration, priority) {\n        return this._registry.register(languageId, configuration, priority);\n    }\n    getLanguageConfiguration(languageId) {\n        let result = this.configurations.get(languageId);\n        if (!result) {\n            result = computeConfig(languageId, this._registry, this.configurationService, this.languageService);\n            this.configurations.set(languageId, result);\n        }\n        return result;\n    }\n};\nLanguageConfigurationService = __decorate([\n    __param(0, IConfigurationService),\n    __param(1, ILanguageService)\n], LanguageConfigurationService);\nexport { LanguageConfigurationService };\nfunction computeConfig(languageId, registry, configurationService, languageService) {\n    let languageConfig = registry.getLanguageConfiguration(languageId);\n    if (!languageConfig) {\n        if (!languageService.isRegisteredLanguageId(languageId)) {\n            // this happens for the null language, which can be returned by monarch.\n            // Instead of throwing an error, we just return a default config.\n            return new ResolvedLanguageConfiguration(languageId, {});\n        }\n        languageConfig = new ResolvedLanguageConfiguration(languageId, {});\n    }\n    const customizedConfig = getCustomizedLanguageConfig(languageConfig.languageId, configurationService);\n    const data = combineLanguageConfigurations([languageConfig.underlyingConfig, customizedConfig]);\n    const config = new ResolvedLanguageConfiguration(languageConfig.languageId, data);\n    return config;\n}\nconst customizedLanguageConfigKeys = {\n    brackets: 'editor.language.brackets',\n    colorizedBracketPairs: 'editor.language.colorizedBracketPairs'\n};\nfunction getCustomizedLanguageConfig(languageId, configurationService) {\n    const brackets = configurationService.getValue(customizedLanguageConfigKeys.brackets, {\n        overrideIdentifier: languageId,\n    });\n    const colorizedBracketPairs = configurationService.getValue(customizedLanguageConfigKeys.colorizedBracketPairs, {\n        overrideIdentifier: languageId,\n    });\n    return {\n        brackets: validateBracketPairs(brackets),\n        colorizedBracketPairs: validateBracketPairs(colorizedBracketPairs),\n    };\n}\nfunction validateBracketPairs(data) {\n    if (!Array.isArray(data)) {\n        return undefined;\n    }\n    return data.map(pair => {\n        if (!Array.isArray(pair) || pair.length !== 2) {\n            return undefined;\n        }\n        return [pair[0], pair[1]];\n    }).filter((p) => !!p);\n}\nexport function getIndentationAtPosition(model, lineNumber, column) {\n    const lineText = model.getLineContent(lineNumber);\n    let indentation = strings.getLeadingWhitespace(lineText);\n    if (indentation.length > column - 1) {\n        indentation = indentation.substring(0, column - 1);\n    }\n    return indentation;\n}\nclass ComposedLanguageConfiguration {\n    constructor(languageId) {\n        this.languageId = languageId;\n        this._resolved = null;\n        this._entries = [];\n        this._order = 0;\n        this._resolved = null;\n    }\n    register(configuration, priority) {\n        const entry = new LanguageConfigurationContribution(configuration, priority, ++this._order);\n        this._entries.push(entry);\n        this._resolved = null;\n        return toDisposable(() => {\n            for (let i = 0; i < this._entries.length; i++) {\n                if (this._entries[i] === entry) {\n                    this._entries.splice(i, 1);\n                    this._resolved = null;\n                    break;\n                }\n            }\n        });\n    }\n    getResolvedConfiguration() {\n        if (!this._resolved) {\n            const config = this._resolve();\n            if (config) {\n                this._resolved = new ResolvedLanguageConfiguration(this.languageId, config);\n            }\n        }\n        return this._resolved;\n    }\n    _resolve() {\n        if (this._entries.length === 0) {\n            return null;\n        }\n        this._entries.sort(LanguageConfigurationContribution.cmp);\n        return combineLanguageConfigurations(this._entries.map(e => e.configuration));\n    }\n}\nfunction combineLanguageConfigurations(configs) {\n    let result = {\n        comments: undefined,\n        brackets: undefined,\n        wordPattern: undefined,\n        indentationRules: undefined,\n        onEnterRules: undefined,\n        autoClosingPairs: undefined,\n        surroundingPairs: undefined,\n        autoCloseBefore: undefined,\n        folding: undefined,\n        colorizedBracketPairs: undefined,\n        __electricCharacterSupport: undefined,\n    };\n    for (const entry of configs) {\n        result = {\n            comments: entry.comments || result.comments,\n            brackets: entry.brackets || result.brackets,\n            wordPattern: entry.wordPattern || result.wordPattern,\n            indentationRules: entry.indentationRules || result.indentationRules,\n            onEnterRules: entry.onEnterRules || result.onEnterRules,\n            autoClosingPairs: entry.autoClosingPairs || result.autoClosingPairs,\n            surroundingPairs: entry.surroundingPairs || result.surroundingPairs,\n            autoCloseBefore: entry.autoCloseBefore || result.autoCloseBefore,\n            folding: entry.folding || result.folding,\n            colorizedBracketPairs: entry.colorizedBracketPairs || result.colorizedBracketPairs,\n            __electricCharacterSupport: entry.__electricCharacterSupport || result.__electricCharacterSupport,\n        };\n    }\n    return result;\n}\nclass LanguageConfigurationContribution {\n    constructor(configuration, priority, order) {\n        this.configuration = configuration;\n        this.priority = priority;\n        this.order = order;\n    }\n    static cmp(a, b) {\n        if (a.priority === b.priority) {\n            // higher order last\n            return a.order - b.order;\n        }\n        // higher priority last\n        return a.priority - b.priority;\n    }\n}\nexport class LanguageConfigurationChangeEvent {\n    constructor(languageId) {\n        this.languageId = languageId;\n    }\n}\nexport class LanguageConfigurationRegistry extends Disposable {\n    constructor() {\n        super();\n        this._entries = new Map();\n        this._onDidChange = this._register(new Emitter());\n        this.onDidChange = this._onDidChange.event;\n        this._register(this.register(PLAINTEXT_LANGUAGE_ID, {\n            brackets: [\n                ['(', ')'],\n                ['[', ']'],\n                ['{', '}'],\n            ],\n            surroundingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '<', close: '>' },\n                { open: '\\\"', close: '\\\"' },\n                { open: '\\'', close: '\\'' },\n                { open: '`', close: '`' },\n            ],\n            colorizedBracketPairs: [],\n            folding: {\n                offSide: true\n            }\n        }, 0));\n    }\n    /**\n     * @param priority Use a higher number for higher priority\n     */\n    register(languageId, configuration, priority = 0) {\n        let entries = this._entries.get(languageId);\n        if (!entries) {\n            entries = new ComposedLanguageConfiguration(languageId);\n            this._entries.set(languageId, entries);\n        }\n        const disposable = entries.register(configuration, priority);\n        this._onDidChange.fire(new LanguageConfigurationChangeEvent(languageId));\n        return toDisposable(() => {\n            disposable.dispose();\n            this._onDidChange.fire(new LanguageConfigurationChangeEvent(languageId));\n        });\n    }\n    getLanguageConfiguration(languageId) {\n        const entries = this._entries.get(languageId);\n        return entries?.getResolvedConfiguration() || null;\n    }\n}\n/**\n * Immutable.\n*/\nexport class ResolvedLanguageConfiguration {\n    constructor(languageId, underlyingConfig) {\n        this.languageId = languageId;\n        this.underlyingConfig = underlyingConfig;\n        this._brackets = null;\n        this._electricCharacter = null;\n        this._onEnterSupport =\n            this.underlyingConfig.brackets ||\n                this.underlyingConfig.indentationRules ||\n                this.underlyingConfig.onEnterRules\n                ? new OnEnterSupport(this.underlyingConfig)\n                : null;\n        this.comments = ResolvedLanguageConfiguration._handleComments(this.underlyingConfig);\n        this.characterPair = new CharacterPairSupport(this.underlyingConfig);\n        this.wordDefinition = this.underlyingConfig.wordPattern || DEFAULT_WORD_REGEXP;\n        this.indentationRules = this.underlyingConfig.indentationRules;\n        if (this.underlyingConfig.indentationRules) {\n            this.indentRulesSupport = new IndentRulesSupport(this.underlyingConfig.indentationRules);\n        }\n        else {\n            this.indentRulesSupport = null;\n        }\n        this.foldingRules = this.underlyingConfig.folding || {};\n        this.bracketsNew = new LanguageBracketsConfiguration(languageId, this.underlyingConfig);\n    }\n    getWordDefinition() {\n        return ensureValidWordDefinition(this.wordDefinition);\n    }\n    get brackets() {\n        if (!this._brackets && this.underlyingConfig.brackets) {\n            this._brackets = new RichEditBrackets(this.languageId, this.underlyingConfig.brackets);\n        }\n        return this._brackets;\n    }\n    get electricCharacter() {\n        if (!this._electricCharacter) {\n            this._electricCharacter = new BracketElectricCharacterSupport(this.brackets);\n        }\n        return this._electricCharacter;\n    }\n    onEnter(autoIndent, previousLineText, beforeEnterText, afterEnterText) {\n        if (!this._onEnterSupport) {\n            return null;\n        }\n        return this._onEnterSupport.onEnter(autoIndent, previousLineText, beforeEnterText, afterEnterText);\n    }\n    getAutoClosingPairs() {\n        return new AutoClosingPairs(this.characterPair.getAutoClosingPairs());\n    }\n    getAutoCloseBeforeSet(forQuotes) {\n        return this.characterPair.getAutoCloseBeforeSet(forQuotes);\n    }\n    getSurroundingPairs() {\n        return this.characterPair.getSurroundingPairs();\n    }\n    static _handleComments(conf) {\n        const commentRule = conf.comments;\n        if (!commentRule) {\n            return null;\n        }\n        // comment configuration\n        const comments = {};\n        if (commentRule.lineComment) {\n            comments.lineCommentToken = commentRule.lineComment;\n        }\n        if (commentRule.blockComment) {\n            const [blockStart, blockEnd] = commentRule.blockComment;\n            comments.blockCommentStartToken = blockStart;\n            comments.blockCommentEndToken = blockEnd;\n        }\n        return comments;\n    }\n}\nregisterSingleton(ILanguageConfigurationService, LanguageConfigurationService, 1 /* InstantiationType.Delayed */);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CharacterClassifier } from '../core/characterClassifier.js';\nclass Uint8Matrix {\n    constructor(rows, cols, defaultValue) {\n        const data = new Uint8Array(rows * cols);\n        for (let i = 0, len = rows * cols; i < len; i++) {\n            data[i] = defaultValue;\n        }\n        this._data = data;\n        this.rows = rows;\n        this.cols = cols;\n    }\n    get(row, col) {\n        return this._data[row * this.cols + col];\n    }\n    set(row, col, value) {\n        this._data[row * this.cols + col] = value;\n    }\n}\nexport class StateMachine {\n    constructor(edges) {\n        let maxCharCode = 0;\n        let maxState = 0 /* State.Invalid */;\n        for (let i = 0, len = edges.length; i < len; i++) {\n            const [from, chCode, to] = edges[i];\n            if (chCode > maxCharCode) {\n                maxCharCode = chCode;\n            }\n            if (from > maxState) {\n                maxState = from;\n            }\n            if (to > maxState) {\n                maxState = to;\n            }\n        }\n        maxCharCode++;\n        maxState++;\n        const states = new Uint8Matrix(maxState, maxCharCode, 0 /* State.Invalid */);\n        for (let i = 0, len = edges.length; i < len; i++) {\n            const [from, chCode, to] = edges[i];\n            states.set(from, chCode, to);\n        }\n        this._states = states;\n        this._maxCharCode = maxCharCode;\n    }\n    nextState(currentState, chCode) {\n        if (chCode < 0 || chCode >= this._maxCharCode) {\n            return 0 /* State.Invalid */;\n        }\n        return this._states.get(currentState, chCode);\n    }\n}\n// State machine for http:// or https:// or file://\nlet _stateMachine = null;\nfunction getStateMachine() {\n    if (_stateMachine === null) {\n        _stateMachine = new StateMachine([\n            [1 /* State.Start */, 104 /* CharCode.h */, 2 /* State.H */],\n            [1 /* State.Start */, 72 /* CharCode.H */, 2 /* State.H */],\n            [1 /* State.Start */, 102 /* CharCode.f */, 6 /* State.F */],\n            [1 /* State.Start */, 70 /* CharCode.F */, 6 /* State.F */],\n            [2 /* State.H */, 116 /* CharCode.t */, 3 /* State.HT */],\n            [2 /* State.H */, 84 /* CharCode.T */, 3 /* State.HT */],\n            [3 /* State.HT */, 116 /* CharCode.t */, 4 /* State.HTT */],\n            [3 /* State.HT */, 84 /* CharCode.T */, 4 /* State.HTT */],\n            [4 /* State.HTT */, 112 /* CharCode.p */, 5 /* State.HTTP */],\n            [4 /* State.HTT */, 80 /* CharCode.P */, 5 /* State.HTTP */],\n            [5 /* State.HTTP */, 115 /* CharCode.s */, 9 /* State.BeforeColon */],\n            [5 /* State.HTTP */, 83 /* CharCode.S */, 9 /* State.BeforeColon */],\n            [5 /* State.HTTP */, 58 /* CharCode.Colon */, 10 /* State.AfterColon */],\n            [6 /* State.F */, 105 /* CharCode.i */, 7 /* State.FI */],\n            [6 /* State.F */, 73 /* CharCode.I */, 7 /* State.FI */],\n            [7 /* State.FI */, 108 /* CharCode.l */, 8 /* State.FIL */],\n            [7 /* State.FI */, 76 /* CharCode.L */, 8 /* State.FIL */],\n            [8 /* State.FIL */, 101 /* CharCode.e */, 9 /* State.BeforeColon */],\n            [8 /* State.FIL */, 69 /* CharCode.E */, 9 /* State.BeforeColon */],\n            [9 /* State.BeforeColon */, 58 /* CharCode.Colon */, 10 /* State.AfterColon */],\n            [10 /* State.AfterColon */, 47 /* CharCode.Slash */, 11 /* State.AlmostThere */],\n            [11 /* State.AlmostThere */, 47 /* CharCode.Slash */, 12 /* State.End */],\n        ]);\n    }\n    return _stateMachine;\n}\nlet _classifier = null;\nfunction getClassifier() {\n    if (_classifier === null) {\n        _classifier = new CharacterClassifier(0 /* CharacterClass.None */);\n        // allow-any-unicode-next-line\n        const FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；‘〈「『〔（［｛｢｣｝］）〕』」〉’｀～…';\n        for (let i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n            _classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), 1 /* CharacterClass.ForceTermination */);\n        }\n        const CANNOT_END_WITH_CHARACTERS = '.,;:';\n        for (let i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n            _classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), 2 /* CharacterClass.CannotEndIn */);\n        }\n    }\n    return _classifier;\n}\nexport class LinkComputer {\n    static _createLink(classifier, line, lineNumber, linkBeginIndex, linkEndIndex) {\n        // Do not allow to end link in certain characters...\n        let lastIncludedCharIndex = linkEndIndex - 1;\n        do {\n            const chCode = line.charCodeAt(lastIncludedCharIndex);\n            const chClass = classifier.get(chCode);\n            if (chClass !== 2 /* CharacterClass.CannotEndIn */) {\n                break;\n            }\n            lastIncludedCharIndex--;\n        } while (lastIncludedCharIndex > linkBeginIndex);\n        // Handle links enclosed in parens, square brackets and curlys.\n        if (linkBeginIndex > 0) {\n            const charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n            const lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n            if ((charCodeBeforeLink === 40 /* CharCode.OpenParen */ && lastCharCodeInLink === 41 /* CharCode.CloseParen */)\n                || (charCodeBeforeLink === 91 /* CharCode.OpenSquareBracket */ && lastCharCodeInLink === 93 /* CharCode.CloseSquareBracket */)\n                || (charCodeBeforeLink === 123 /* CharCode.OpenCurlyBrace */ && lastCharCodeInLink === 125 /* CharCode.CloseCurlyBrace */)) {\n                // Do not end in ) if ( is before the link start\n                // Do not end in ] if [ is before the link start\n                // Do not end in } if { is before the link start\n                lastIncludedCharIndex--;\n            }\n        }\n        return {\n            range: {\n                startLineNumber: lineNumber,\n                startColumn: linkBeginIndex + 1,\n                endLineNumber: lineNumber,\n                endColumn: lastIncludedCharIndex + 2\n            },\n            url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n        };\n    }\n    static computeLinks(model, stateMachine = getStateMachine()) {\n        const classifier = getClassifier();\n        const result = [];\n        for (let i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n            const line = model.getLineContent(i);\n            const len = line.length;\n            let j = 0;\n            let linkBeginIndex = 0;\n            let linkBeginChCode = 0;\n            let state = 1 /* State.Start */;\n            let hasOpenParens = false;\n            let hasOpenSquareBracket = false;\n            let inSquareBrackets = false;\n            let hasOpenCurlyBracket = false;\n            while (j < len) {\n                let resetStateMachine = false;\n                const chCode = line.charCodeAt(j);\n                if (state === 13 /* State.Accept */) {\n                    let chClass;\n                    switch (chCode) {\n                        case 40 /* CharCode.OpenParen */:\n                            hasOpenParens = true;\n                            chClass = 0 /* CharacterClass.None */;\n                            break;\n                        case 41 /* CharCode.CloseParen */:\n                            chClass = (hasOpenParens ? 0 /* CharacterClass.None */ : 1 /* CharacterClass.ForceTermination */);\n                            break;\n                        case 91 /* CharCode.OpenSquareBracket */:\n                            inSquareBrackets = true;\n                            hasOpenSquareBracket = true;\n                            chClass = 0 /* CharacterClass.None */;\n                            break;\n                        case 93 /* CharCode.CloseSquareBracket */:\n                            inSquareBrackets = false;\n                            chClass = (hasOpenSquareBracket ? 0 /* CharacterClass.None */ : 1 /* CharacterClass.ForceTermination */);\n                            break;\n                        case 123 /* CharCode.OpenCurlyBrace */:\n                            hasOpenCurlyBracket = true;\n                            chClass = 0 /* CharacterClass.None */;\n                            break;\n                        case 125 /* CharCode.CloseCurlyBrace */:\n                            chClass = (hasOpenCurlyBracket ? 0 /* CharacterClass.None */ : 1 /* CharacterClass.ForceTermination */);\n                            break;\n                        // The following three rules make it that ' or \" or ` are allowed inside links\n                        // only if the link is wrapped by some other quote character\n                        case 39 /* CharCode.SingleQuote */:\n                        case 34 /* CharCode.DoubleQuote */:\n                        case 96 /* CharCode.BackTick */:\n                            if (linkBeginChCode === chCode) {\n                                chClass = 1 /* CharacterClass.ForceTermination */;\n                            }\n                            else if (linkBeginChCode === 39 /* CharCode.SingleQuote */ || linkBeginChCode === 34 /* CharCode.DoubleQuote */ || linkBeginChCode === 96 /* CharCode.BackTick */) {\n                                chClass = 0 /* CharacterClass.None */;\n                            }\n                            else {\n                                chClass = 1 /* CharacterClass.ForceTermination */;\n                            }\n                            break;\n                        case 42 /* CharCode.Asterisk */:\n                            // `*` terminates a link if the link began with `*`\n                            chClass = (linkBeginChCode === 42 /* CharCode.Asterisk */) ? 1 /* CharacterClass.ForceTermination */ : 0 /* CharacterClass.None */;\n                            break;\n                        case 124 /* CharCode.Pipe */:\n                            // `|` terminates a link if the link began with `|`\n                            chClass = (linkBeginChCode === 124 /* CharCode.Pipe */) ? 1 /* CharacterClass.ForceTermination */ : 0 /* CharacterClass.None */;\n                            break;\n                        case 32 /* CharCode.Space */:\n                            // ` ` allow space in between [ and ]\n                            chClass = (inSquareBrackets ? 0 /* CharacterClass.None */ : 1 /* CharacterClass.ForceTermination */);\n                            break;\n                        default:\n                            chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* CharacterClass.ForceTermination */) {\n                        result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n                        resetStateMachine = true;\n                    }\n                }\n                else if (state === 12 /* State.End */) {\n                    let chClass;\n                    if (chCode === 91 /* CharCode.OpenSquareBracket */) {\n                        // Allow for the authority part to contain ipv6 addresses which contain [ and ]\n                        hasOpenSquareBracket = true;\n                        chClass = 0 /* CharacterClass.None */;\n                    }\n                    else {\n                        chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* CharacterClass.ForceTermination */) {\n                        resetStateMachine = true;\n                    }\n                    else {\n                        state = 13 /* State.Accept */;\n                    }\n                }\n                else {\n                    state = stateMachine.nextState(state, chCode);\n                    if (state === 0 /* State.Invalid */) {\n                        resetStateMachine = true;\n                    }\n                }\n                if (resetStateMachine) {\n                    state = 1 /* State.Start */;\n                    hasOpenParens = false;\n                    hasOpenSquareBracket = false;\n                    hasOpenCurlyBracket = false;\n                    // Record where the link started\n                    linkBeginIndex = j + 1;\n                    linkBeginChCode = chCode;\n                }\n                j++;\n            }\n            if (state === 13 /* State.Accept */) {\n                result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n            }\n        }\n        return result;\n    }\n}\n/**\n * Returns an array of all links contains in the provided\n * document. *Note* that this operation is computational\n * expensive and should not run in the UI thread.\n */\nexport function computeLinks(model) {\n    if (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n        // Unknown caller!\n        return [];\n    }\n    return LinkComputer.computeLinks(model);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../nls.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Registry } from '../../../platform/registry/common/platform.js';\nimport { Mimes } from '../../../base/common/mime.js';\nimport { Extensions as ConfigurationExtensions } from '../../../platform/configuration/common/configurationRegistry.js';\n// Define extension point ids\nexport const Extensions = {\n    ModesRegistry: 'editor.modesRegistry'\n};\nexport class EditorModesRegistry {\n    constructor() {\n        this._onDidChangeLanguages = new Emitter();\n        this.onDidChangeLanguages = this._onDidChangeLanguages.event;\n        this._languages = [];\n    }\n    registerLanguage(def) {\n        this._languages.push(def);\n        this._onDidChangeLanguages.fire(undefined);\n        return {\n            dispose: () => {\n                for (let i = 0, len = this._languages.length; i < len; i++) {\n                    if (this._languages[i] === def) {\n                        this._languages.splice(i, 1);\n                        return;\n                    }\n                }\n            }\n        };\n    }\n    getLanguages() {\n        return this._languages;\n    }\n}\nexport const ModesRegistry = new EditorModesRegistry();\nRegistry.add(Extensions.ModesRegistry, ModesRegistry);\nexport const PLAINTEXT_LANGUAGE_ID = 'plaintext';\nexport const PLAINTEXT_EXTENSION = '.txt';\nModesRegistry.registerLanguage({\n    id: PLAINTEXT_LANGUAGE_ID,\n    extensions: [PLAINTEXT_EXTENSION],\n    aliases: [nls.localize('plainText.alias', \"Plain Text\"), 'text'],\n    mimetypes: [Mimes.text]\n});\nRegistry.as(ConfigurationExtensions.Configuration)\n    .registerDefaultConfigurations([{\n        overrides: {\n            '[plaintext]': {\n                'editor.unicodeHighlight.ambiguousCharacters': false,\n                'editor.unicodeHighlight.invisibleCharacters': false\n            }\n        }\n    }]);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Token, TokenizationResult, EncodedTokenizationResult } from '../languages.js';\nexport const NullState = new class {\n    clone() {\n        return this;\n    }\n    equals(other) {\n        return (this === other);\n    }\n};\nexport function nullTokenize(languageId, state) {\n    return new TokenizationResult([new Token(0, '', languageId)], state);\n}\nexport function nullTokenizeEncoded(languageId, state) {\n    const tokens = new Uint32Array(2);\n    tokens[0] = 0;\n    tokens[1] = ((languageId << 0 /* MetadataConsts.LANGUAGEID_OFFSET */)\n        | (0 /* StandardTokenType.Other */ << 8 /* MetadataConsts.TOKEN_TYPE_OFFSET */)\n        | (0 /* FontStyle.None */ << 11 /* MetadataConsts.FONT_STYLE_OFFSET */)\n        | (1 /* ColorId.DefaultForeground */ << 15 /* MetadataConsts.FOREGROUND_OFFSET */)\n        | (2 /* ColorId.DefaultBackground */ << 24 /* MetadataConsts.BACKGROUND_OFFSET */)) >>> 0;\n    return new EncodedTokenizationResult(tokens, state === null ? NullState : state);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function createScopedLineTokens(context, offset) {\n    const tokenCount = context.getCount();\n    const tokenIndex = context.findTokenIndexAtOffset(offset);\n    const desiredLanguageId = context.getLanguageId(tokenIndex);\n    let lastTokenIndex = tokenIndex;\n    while (lastTokenIndex + 1 < tokenCount && context.getLanguageId(lastTokenIndex + 1) === desiredLanguageId) {\n        lastTokenIndex++;\n    }\n    let firstTokenIndex = tokenIndex;\n    while (firstTokenIndex > 0 && context.getLanguageId(firstTokenIndex - 1) === desiredLanguageId) {\n        firstTokenIndex--;\n    }\n    return new ScopedLineTokens(context, desiredLanguageId, firstTokenIndex, lastTokenIndex + 1, context.getStartOffset(firstTokenIndex), context.getEndOffset(lastTokenIndex));\n}\nexport class ScopedLineTokens {\n    constructor(actual, languageId, firstTokenIndex, lastTokenIndex, firstCharOffset, lastCharOffset) {\n        this._scopedLineTokensBrand = undefined;\n        this._actual = actual;\n        this.languageId = languageId;\n        this._firstTokenIndex = firstTokenIndex;\n        this._lastTokenIndex = lastTokenIndex;\n        this.firstCharOffset = firstCharOffset;\n        this._lastCharOffset = lastCharOffset;\n        this.languageIdCodec = actual.languageIdCodec;\n    }\n    getLineContent() {\n        const actualLineContent = this._actual.getLineContent();\n        return actualLineContent.substring(this.firstCharOffset, this._lastCharOffset);\n    }\n    getLineLength() {\n        return this._lastCharOffset - this.firstCharOffset;\n    }\n    getActualLineContentBefore(offset) {\n        const actualLineContent = this._actual.getLineContent();\n        return actualLineContent.substring(0, this.firstCharOffset + offset);\n    }\n    getTokenCount() {\n        return this._lastTokenIndex - this._firstTokenIndex;\n    }\n    findTokenIndexAtOffset(offset) {\n        return this._actual.findTokenIndexAtOffset(offset + this.firstCharOffset) - this._firstTokenIndex;\n    }\n    getStandardTokenType(tokenIndex) {\n        return this._actual.getStandardTokenType(tokenIndex + this._firstTokenIndex);\n    }\n    toIViewLineTokens() {\n        return this._actual.sliceAndInflate(this.firstCharOffset, this._lastCharOffset, 0);\n    }\n}\nexport function ignoreBracketsInToken(standardTokenType) {\n    return (standardTokenType & 3 /* IgnoreBracketsInTokens.value */) !== 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { StandardAutoClosingPairConditional } from '../languageConfiguration.js';\nexport class CharacterPairSupport {\n    static { this.DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED_QUOTES = ';:.,=}])> \\n\\t'; }\n    static { this.DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED_BRACKETS = '\\'\"`;:.,=}])> \\n\\t'; }\n    constructor(config) {\n        if (config.autoClosingPairs) {\n            this._autoClosingPairs = config.autoClosingPairs.map(el => new StandardAutoClosingPairConditional(el));\n        }\n        else if (config.brackets) {\n            this._autoClosingPairs = config.brackets.map(b => new StandardAutoClosingPairConditional({ open: b[0], close: b[1] }));\n        }\n        else {\n            this._autoClosingPairs = [];\n        }\n        if (config.__electricCharacterSupport && config.__electricCharacterSupport.docComment) {\n            const docComment = config.__electricCharacterSupport.docComment;\n            // IDocComment is legacy, only partially supported\n            this._autoClosingPairs.push(new StandardAutoClosingPairConditional({ open: docComment.open, close: docComment.close || '' }));\n        }\n        this._autoCloseBeforeForQuotes = typeof config.autoCloseBefore === 'string' ? config.autoCloseBefore : CharacterPairSupport.DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED_QUOTES;\n        this._autoCloseBeforeForBrackets = typeof config.autoCloseBefore === 'string' ? config.autoCloseBefore : CharacterPairSupport.DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED_BRACKETS;\n        this._surroundingPairs = config.surroundingPairs || this._autoClosingPairs;\n    }\n    getAutoClosingPairs() {\n        return this._autoClosingPairs;\n    }\n    getAutoCloseBeforeSet(forQuotes) {\n        return (forQuotes ? this._autoCloseBeforeForQuotes : this._autoCloseBeforeForBrackets);\n    }\n    getSurroundingPairs() {\n        return this._surroundingPairs;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { distinct } from '../../../../base/common/arrays.js';\nimport { ignoreBracketsInToken } from '../supports.js';\nimport { BracketsUtils } from './richEditBrackets.js';\nexport class BracketElectricCharacterSupport {\n    constructor(richEditBrackets) {\n        this._richEditBrackets = richEditBrackets;\n    }\n    getElectricCharacters() {\n        const result = [];\n        if (this._richEditBrackets) {\n            for (const bracket of this._richEditBrackets.brackets) {\n                for (const close of bracket.close) {\n                    const lastChar = close.charAt(close.length - 1);\n                    result.push(lastChar);\n                }\n            }\n        }\n        return distinct(result);\n    }\n    onElectricCharacter(character, context, column) {\n        if (!this._richEditBrackets || this._richEditBrackets.brackets.length === 0) {\n            return null;\n        }\n        const tokenIndex = context.findTokenIndexAtOffset(column - 1);\n        if (ignoreBracketsInToken(context.getStandardTokenType(tokenIndex))) {\n            return null;\n        }\n        const reversedBracketRegex = this._richEditBrackets.reversedRegex;\n        const text = context.getLineContent().substring(0, column - 1) + character;\n        const r = BracketsUtils.findPrevBracketInRange(reversedBracketRegex, 1, text, 0, text.length);\n        if (!r) {\n            return null;\n        }\n        const bracketText = text.substring(r.startColumn - 1, r.endColumn - 1).toLowerCase();\n        const isOpen = this._richEditBrackets.textIsOpenBracket[bracketText];\n        if (isOpen) {\n            return null;\n        }\n        const textBeforeBracket = context.getActualLineContentBefore(r.startColumn - 1);\n        if (!/^\\s*$/.test(textBeforeBracket)) {\n            // There is other text on the line before the bracket\n            return null;\n        }\n        return {\n            matchOpenBracket: bracketText\n        };\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nfunction resetGlobalRegex(reg) {\n    if (reg.global) {\n        reg.lastIndex = 0;\n    }\n    return true;\n}\nexport class IndentRulesSupport {\n    constructor(indentationRules) {\n        this._indentationRules = indentationRules;\n    }\n    shouldIncrease(text) {\n        if (this._indentationRules) {\n            if (this._indentationRules.increaseIndentPattern && resetGlobalRegex(this._indentationRules.increaseIndentPattern) && this._indentationRules.increaseIndentPattern.test(text)) {\n                return true;\n            }\n            // if (this._indentationRules.indentNextLinePattern && this._indentationRules.indentNextLinePattern.test(text)) {\n            // \treturn true;\n            // }\n        }\n        return false;\n    }\n    shouldDecrease(text) {\n        if (this._indentationRules && this._indentationRules.decreaseIndentPattern && resetGlobalRegex(this._indentationRules.decreaseIndentPattern) && this._indentationRules.decreaseIndentPattern.test(text)) {\n            return true;\n        }\n        return false;\n    }\n    shouldIndentNextLine(text) {\n        if (this._indentationRules && this._indentationRules.indentNextLinePattern && resetGlobalRegex(this._indentationRules.indentNextLinePattern) && this._indentationRules.indentNextLinePattern.test(text)) {\n            return true;\n        }\n        return false;\n    }\n    shouldIgnore(text) {\n        // the text matches `unIndentedLinePattern`\n        if (this._indentationRules && this._indentationRules.unIndentedLinePattern && resetGlobalRegex(this._indentationRules.unIndentedLinePattern) && this._indentationRules.unIndentedLinePattern.test(text)) {\n            return true;\n        }\n        return false;\n    }\n    getIndentMetadata(text) {\n        let ret = 0;\n        if (this.shouldIncrease(text)) {\n            ret += 1 /* IndentConsts.INCREASE_MASK */;\n        }\n        if (this.shouldDecrease(text)) {\n            ret += 2 /* IndentConsts.DECREASE_MASK */;\n        }\n        if (this.shouldIndentNextLine(text)) {\n            ret += 4 /* IndentConsts.INDENT_NEXTLINE_MASK */;\n        }\n        if (this.shouldIgnore(text)) {\n            ret += 8 /* IndentConsts.UNINDENT_MASK */;\n        }\n        return ret;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class BasicInplaceReplace {\n    constructor() {\n        this._defaultValueSet = [\n            ['true', 'false'],\n            ['True', 'False'],\n            ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n            ['public', 'protected', 'private'],\n        ];\n    }\n    static { this.INSTANCE = new BasicInplaceReplace(); }\n    navigateValueSet(range1, text1, range2, text2, up) {\n        if (range1 && text1) {\n            const result = this.doNavigateValueSet(text1, up);\n            if (result) {\n                return {\n                    range: range1,\n                    value: result\n                };\n            }\n        }\n        if (range2 && text2) {\n            const result = this.doNavigateValueSet(text2, up);\n            if (result) {\n                return {\n                    range: range2,\n                    value: result\n                };\n            }\n        }\n        return null;\n    }\n    doNavigateValueSet(text, up) {\n        const numberResult = this.numberReplace(text, up);\n        if (numberResult !== null) {\n            return numberResult;\n        }\n        return this.textReplace(text, up);\n    }\n    numberReplace(value, up) {\n        const precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n        let n1 = Number(value);\n        const n2 = parseFloat(value);\n        if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n            if (n1 === 0 && !up) {\n                return null; // don't do negative\n                //\t\t\t} else if(n1 === 9 && up) {\n                //\t\t\t\treturn null; // don't insert 10 into a number\n            }\n            else {\n                n1 = Math.floor(n1 * precision);\n                n1 += up ? precision : -precision;\n                return String(n1 / precision);\n            }\n        }\n        return null;\n    }\n    textReplace(value, up) {\n        return this.valueSetsReplace(this._defaultValueSet, value, up);\n    }\n    valueSetsReplace(valueSets, value, up) {\n        let result = null;\n        for (let i = 0, len = valueSets.length; result === null && i < len; i++) {\n            result = this.valueSetReplace(valueSets[i], value, up);\n        }\n        return result;\n    }\n    valueSetReplace(valueSet, value, up) {\n        let idx = valueSet.indexOf(value);\n        if (idx >= 0) {\n            idx += up ? +1 : -1;\n            if (idx < 0) {\n                idx = valueSet.length - 1;\n            }\n            else {\n                idx %= valueSet.length;\n            }\n            return valueSet[idx];\n        }\n        return null;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CachedFunction } from '../../../../base/common/cache.js';\nimport { createBracketOrRegExp } from './richEditBrackets.js';\n/**\n * Captures all bracket related configurations for a single language.\n * Immutable.\n*/\nexport class LanguageBracketsConfiguration {\n    constructor(languageId, config) {\n        this.languageId = languageId;\n        const bracketPairs = config.brackets ? filterValidBrackets(config.brackets) : [];\n        const openingBracketInfos = new CachedFunction((bracket) => {\n            const closing = new Set();\n            return {\n                info: new OpeningBracketKind(this, bracket, closing),\n                closing,\n            };\n        });\n        const closingBracketInfos = new CachedFunction((bracket) => {\n            const opening = new Set();\n            const openingColorized = new Set();\n            return {\n                info: new ClosingBracketKind(this, bracket, opening, openingColorized),\n                opening,\n                openingColorized,\n            };\n        });\n        for (const [open, close] of bracketPairs) {\n            const opening = openingBracketInfos.get(open);\n            const closing = closingBracketInfos.get(close);\n            opening.closing.add(closing.info);\n            closing.opening.add(opening.info);\n        }\n        // Treat colorized brackets as brackets, and mark them as colorized.\n        const colorizedBracketPairs = config.colorizedBracketPairs\n            ? filterValidBrackets(config.colorizedBracketPairs)\n            // If not configured: Take all brackets except `<` ... `>`\n            // Many languages set < ... > as bracket pair, even though they also use it as comparison operator.\n            // This leads to problems when colorizing this bracket, so we exclude it if not explicitly configured otherwise.\n            // https://github.com/microsoft/vscode/issues/132476\n            : bracketPairs.filter((p) => !(p[0] === '<' && p[1] === '>'));\n        for (const [open, close] of colorizedBracketPairs) {\n            const opening = openingBracketInfos.get(open);\n            const closing = closingBracketInfos.get(close);\n            opening.closing.add(closing.info);\n            closing.openingColorized.add(opening.info);\n            closing.opening.add(opening.info);\n        }\n        this._openingBrackets = new Map([...openingBracketInfos.cachedValues].map(([k, v]) => [k, v.info]));\n        this._closingBrackets = new Map([...closingBracketInfos.cachedValues].map(([k, v]) => [k, v.info]));\n    }\n    /**\n     * No two brackets have the same bracket text.\n    */\n    get openingBrackets() {\n        return [...this._openingBrackets.values()];\n    }\n    /**\n     * No two brackets have the same bracket text.\n    */\n    get closingBrackets() {\n        return [...this._closingBrackets.values()];\n    }\n    getOpeningBracketInfo(bracketText) {\n        return this._openingBrackets.get(bracketText);\n    }\n    getClosingBracketInfo(bracketText) {\n        return this._closingBrackets.get(bracketText);\n    }\n    getBracketInfo(bracketText) {\n        return this.getOpeningBracketInfo(bracketText) || this.getClosingBracketInfo(bracketText);\n    }\n    getBracketRegExp(options) {\n        const brackets = Array.from([...this._openingBrackets.keys(), ...this._closingBrackets.keys()]);\n        return createBracketOrRegExp(brackets, options);\n    }\n}\nfunction filterValidBrackets(bracketPairs) {\n    return bracketPairs.filter(([open, close]) => open !== '' && close !== '');\n}\nexport class BracketKindBase {\n    constructor(config, bracketText) {\n        this.config = config;\n        this.bracketText = bracketText;\n    }\n    get languageId() {\n        return this.config.languageId;\n    }\n}\nexport class OpeningBracketKind extends BracketKindBase {\n    constructor(config, bracketText, openedBrackets) {\n        super(config, bracketText);\n        this.openedBrackets = openedBrackets;\n        this.isOpeningBracket = true;\n    }\n}\nexport class ClosingBracketKind extends BracketKindBase {\n    constructor(config, bracketText, \n    /**\n     * Non empty array of all opening brackets this bracket closes.\n    */\n    openingBrackets, openingColorizedBrackets) {\n        super(config, bracketText);\n        this.openingBrackets = openingBrackets;\n        this.openingColorizedBrackets = openingColorizedBrackets;\n        this.isOpeningBracket = false;\n    }\n    /**\n     * Checks if this bracket closes the given other bracket.\n     * If the bracket infos come from different configurations, this method will return false.\n    */\n    closes(other) {\n        if (other['config'] !== this.config) {\n            return false;\n        }\n        return this.openingBrackets.has(other);\n    }\n    closesColorized(other) {\n        if (other['config'] !== this.config) {\n            return false;\n        }\n        return this.openingColorizedBrackets.has(other);\n    }\n    getOpeningBrackets() {\n        return [...this.openingBrackets];\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { IndentAction } from '../languageConfiguration.js';\nexport class OnEnterSupport {\n    constructor(opts) {\n        opts = opts || {};\n        opts.brackets = opts.brackets || [\n            ['(', ')'],\n            ['{', '}'],\n            ['[', ']']\n        ];\n        this._brackets = [];\n        opts.brackets.forEach((bracket) => {\n            const openRegExp = OnEnterSupport._createOpenBracketRegExp(bracket[0]);\n            const closeRegExp = OnEnterSupport._createCloseBracketRegExp(bracket[1]);\n            if (openRegExp && closeRegExp) {\n                this._brackets.push({\n                    open: bracket[0],\n                    openRegExp: openRegExp,\n                    close: bracket[1],\n                    closeRegExp: closeRegExp,\n                });\n            }\n        });\n        this._regExpRules = opts.onEnterRules || [];\n    }\n    onEnter(autoIndent, previousLineText, beforeEnterText, afterEnterText) {\n        // (1): `regExpRules`\n        if (autoIndent >= 3 /* EditorAutoIndentStrategy.Advanced */) {\n            for (let i = 0, len = this._regExpRules.length; i < len; i++) {\n                const rule = this._regExpRules[i];\n                const regResult = [{\n                        reg: rule.beforeText,\n                        text: beforeEnterText\n                    }, {\n                        reg: rule.afterText,\n                        text: afterEnterText\n                    }, {\n                        reg: rule.previousLineText,\n                        text: previousLineText\n                    }].every((obj) => {\n                    if (!obj.reg) {\n                        return true;\n                    }\n                    obj.reg.lastIndex = 0; // To disable the effect of the \"g\" flag.\n                    return obj.reg.test(obj.text);\n                });\n                if (regResult) {\n                    return rule.action;\n                }\n            }\n        }\n        // (2): Special indent-outdent\n        if (autoIndent >= 2 /* EditorAutoIndentStrategy.Brackets */) {\n            if (beforeEnterText.length > 0 && afterEnterText.length > 0) {\n                for (let i = 0, len = this._brackets.length; i < len; i++) {\n                    const bracket = this._brackets[i];\n                    if (bracket.openRegExp.test(beforeEnterText) && bracket.closeRegExp.test(afterEnterText)) {\n                        return { indentAction: IndentAction.IndentOutdent };\n                    }\n                }\n            }\n        }\n        // (4): Open bracket based logic\n        if (autoIndent >= 2 /* EditorAutoIndentStrategy.Brackets */) {\n            if (beforeEnterText.length > 0) {\n                for (let i = 0, len = this._brackets.length; i < len; i++) {\n                    const bracket = this._brackets[i];\n                    if (bracket.openRegExp.test(beforeEnterText)) {\n                        return { indentAction: IndentAction.Indent };\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    static _createOpenBracketRegExp(bracket) {\n        let str = strings.escapeRegExpCharacters(bracket);\n        if (!/\\B/.test(str.charAt(0))) {\n            str = '\\\\b' + str;\n        }\n        str += '\\\\s*$';\n        return OnEnterSupport._safeRegExp(str);\n    }\n    static _createCloseBracketRegExp(bracket) {\n        let str = strings.escapeRegExpCharacters(bracket);\n        if (!/\\B/.test(str.charAt(str.length - 1))) {\n            str = str + '\\\\b';\n        }\n        str = '^\\\\s*' + str;\n        return OnEnterSupport._safeRegExp(str);\n    }\n    static _safeRegExp(def) {\n        try {\n            return new RegExp(def);\n        }\n        catch (err) {\n            onUnexpectedError(err);\n            return null;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../../base/common/strings.js';\nimport * as stringBuilder from '../../core/stringBuilder.js';\nimport { Range } from '../../core/range.js';\n/**\n * Represents a grouping of colliding bracket pairs.\n *\n * Most of the times this contains a single bracket pair,\n * but sometimes this contains multiple bracket pairs in cases\n * where the same string appears as a closing bracket for multiple\n * bracket pairs, or the same string appears an opening bracket for\n * multiple bracket pairs.\n *\n * e.g. of a group containing a single pair:\n *   open: ['{'], close: ['}']\n *\n * e.g. of a group containing multiple pairs:\n *   open: ['if', 'for'], close: ['end', 'end']\n */\nexport class RichEditBracket {\n    constructor(languageId, index, open, close, forwardRegex, reversedRegex) {\n        this._richEditBracketBrand = undefined;\n        this.languageId = languageId;\n        this.index = index;\n        this.open = open;\n        this.close = close;\n        this.forwardRegex = forwardRegex;\n        this.reversedRegex = reversedRegex;\n        this._openSet = RichEditBracket._toSet(this.open);\n        this._closeSet = RichEditBracket._toSet(this.close);\n    }\n    /**\n     * Check if the provided `text` is an open bracket in this group.\n     */\n    isOpen(text) {\n        return this._openSet.has(text);\n    }\n    /**\n     * Check if the provided `text` is a close bracket in this group.\n     */\n    isClose(text) {\n        return this._closeSet.has(text);\n    }\n    static _toSet(arr) {\n        const result = new Set();\n        for (const element of arr) {\n            result.add(element);\n        }\n        return result;\n    }\n}\n/**\n * Groups together brackets that have equal open or close sequences.\n *\n * For example, if the following brackets are defined:\n *   ['IF','END']\n *   ['for','end']\n *   ['{','}']\n *\n * Then the grouped brackets would be:\n *   { open: ['if', 'for'], close: ['end', 'end'] }\n *   { open: ['{'], close: ['}'] }\n *\n */\nfunction groupFuzzyBrackets(brackets) {\n    const N = brackets.length;\n    brackets = brackets.map(b => [b[0].toLowerCase(), b[1].toLowerCase()]);\n    const group = [];\n    for (let i = 0; i < N; i++) {\n        group[i] = i;\n    }\n    const areOverlapping = (a, b) => {\n        const [aOpen, aClose] = a;\n        const [bOpen, bClose] = b;\n        return (aOpen === bOpen || aOpen === bClose || aClose === bOpen || aClose === bClose);\n    };\n    const mergeGroups = (g1, g2) => {\n        const newG = Math.min(g1, g2);\n        const oldG = Math.max(g1, g2);\n        for (let i = 0; i < N; i++) {\n            if (group[i] === oldG) {\n                group[i] = newG;\n            }\n        }\n    };\n    // group together brackets that have the same open or the same close sequence\n    for (let i = 0; i < N; i++) {\n        const a = brackets[i];\n        for (let j = i + 1; j < N; j++) {\n            const b = brackets[j];\n            if (areOverlapping(a, b)) {\n                mergeGroups(group[i], group[j]);\n            }\n        }\n    }\n    const result = [];\n    for (let g = 0; g < N; g++) {\n        const currentOpen = [];\n        const currentClose = [];\n        for (let i = 0; i < N; i++) {\n            if (group[i] === g) {\n                const [open, close] = brackets[i];\n                currentOpen.push(open);\n                currentClose.push(close);\n            }\n        }\n        if (currentOpen.length > 0) {\n            result.push({\n                open: currentOpen,\n                close: currentClose\n            });\n        }\n    }\n    return result;\n}\nexport class RichEditBrackets {\n    constructor(languageId, _brackets) {\n        this._richEditBracketsBrand = undefined;\n        const brackets = groupFuzzyBrackets(_brackets);\n        this.brackets = brackets.map((b, index) => {\n            return new RichEditBracket(languageId, index, b.open, b.close, getRegexForBracketPair(b.open, b.close, brackets, index), getReversedRegexForBracketPair(b.open, b.close, brackets, index));\n        });\n        this.forwardRegex = getRegexForBrackets(this.brackets);\n        this.reversedRegex = getReversedRegexForBrackets(this.brackets);\n        this.textIsBracket = {};\n        this.textIsOpenBracket = {};\n        this.maxBracketLength = 0;\n        for (const bracket of this.brackets) {\n            for (const open of bracket.open) {\n                this.textIsBracket[open] = bracket;\n                this.textIsOpenBracket[open] = true;\n                this.maxBracketLength = Math.max(this.maxBracketLength, open.length);\n            }\n            for (const close of bracket.close) {\n                this.textIsBracket[close] = bracket;\n                this.textIsOpenBracket[close] = false;\n                this.maxBracketLength = Math.max(this.maxBracketLength, close.length);\n            }\n        }\n    }\n}\nfunction collectSuperstrings(str, brackets, currentIndex, dest) {\n    for (let i = 0, len = brackets.length; i < len; i++) {\n        if (i === currentIndex) {\n            continue;\n        }\n        const bracket = brackets[i];\n        for (const open of bracket.open) {\n            if (open.indexOf(str) >= 0) {\n                dest.push(open);\n            }\n        }\n        for (const close of bracket.close) {\n            if (close.indexOf(str) >= 0) {\n                dest.push(close);\n            }\n        }\n    }\n}\nfunction lengthcmp(a, b) {\n    return a.length - b.length;\n}\nfunction unique(arr) {\n    if (arr.length <= 1) {\n        return arr;\n    }\n    const result = [];\n    const seen = new Set();\n    for (const element of arr) {\n        if (seen.has(element)) {\n            continue;\n        }\n        result.push(element);\n        seen.add(element);\n    }\n    return result;\n}\n/**\n * Create a regular expression that can be used to search forward in a piece of text\n * for a group of bracket pairs. But this regex must be built in a way in which\n * it is aware of the other bracket pairs defined for the language.\n *\n * For example, if a language contains the following bracket pairs:\n *   ['begin', 'end']\n *   ['if', 'end if']\n * The two bracket pairs do not collide because no open or close brackets are equal.\n * So the function getRegexForBracketPair is called twice, once with\n * the ['begin'], ['end'] group consisting of one bracket pair, and once with\n * the ['if'], ['end if'] group consiting of the other bracket pair.\n *\n * But there could be a situation where an occurrence of 'end if' is mistaken\n * for an occurrence of 'end'.\n *\n * Therefore, for the bracket pair ['begin', 'end'], the regex will also\n * target 'end if'. The regex will be something like:\n *   /(\\bend if\\b)|(\\bend\\b)|(\\bif\\b)/\n *\n * The regex also searches for \"superstrings\" (other brackets that might be mistaken with the current bracket).\n *\n */\nfunction getRegexForBracketPair(open, close, brackets, currentIndex) {\n    // search in all brackets for other brackets that are a superstring of these brackets\n    let pieces = [];\n    pieces = pieces.concat(open);\n    pieces = pieces.concat(close);\n    for (let i = 0, len = pieces.length; i < len; i++) {\n        collectSuperstrings(pieces[i], brackets, currentIndex, pieces);\n    }\n    pieces = unique(pieces);\n    pieces.sort(lengthcmp);\n    pieces.reverse();\n    return createBracketOrRegExp(pieces);\n}\n/**\n * Matching a regular expression in JS can only be done \"forwards\". So JS offers natively only\n * methods to find the first match of a regex in a string. But sometimes, it is useful to\n * find the last match of a regex in a string. For such a situation, a nice solution is to\n * simply reverse the string and then search for a reversed regex.\n *\n * This function also has the fine details of `getRegexForBracketPair`. For the same example\n * given above, the regex produced here would look like:\n *   /(\\bfi dne\\b)|(\\bdne\\b)|(\\bfi\\b)/\n */\nfunction getReversedRegexForBracketPair(open, close, brackets, currentIndex) {\n    // search in all brackets for other brackets that are a superstring of these brackets\n    let pieces = [];\n    pieces = pieces.concat(open);\n    pieces = pieces.concat(close);\n    for (let i = 0, len = pieces.length; i < len; i++) {\n        collectSuperstrings(pieces[i], brackets, currentIndex, pieces);\n    }\n    pieces = unique(pieces);\n    pieces.sort(lengthcmp);\n    pieces.reverse();\n    return createBracketOrRegExp(pieces.map(toReversedString));\n}\n/**\n * Creates a regular expression that targets all bracket pairs.\n *\n * e.g. for the bracket pairs:\n *  ['{','}']\n *  ['begin,'end']\n *  ['for','end']\n * the regex would look like:\n *  /(\\{)|(\\})|(\\bbegin\\b)|(\\bend\\b)|(\\bfor\\b)/\n */\nfunction getRegexForBrackets(brackets) {\n    let pieces = [];\n    for (const bracket of brackets) {\n        for (const open of bracket.open) {\n            pieces.push(open);\n        }\n        for (const close of bracket.close) {\n            pieces.push(close);\n        }\n    }\n    pieces = unique(pieces);\n    return createBracketOrRegExp(pieces);\n}\n/**\n * Matching a regular expression in JS can only be done \"forwards\". So JS offers natively only\n * methods to find the first match of a regex in a string. But sometimes, it is useful to\n * find the last match of a regex in a string. For such a situation, a nice solution is to\n * simply reverse the string and then search for a reversed regex.\n *\n * e.g. for the bracket pairs:\n *  ['{','}']\n *  ['begin,'end']\n *  ['for','end']\n * the regex would look like:\n *  /(\\{)|(\\})|(\\bnigeb\\b)|(\\bdne\\b)|(\\brof\\b)/\n */\nfunction getReversedRegexForBrackets(brackets) {\n    let pieces = [];\n    for (const bracket of brackets) {\n        for (const open of bracket.open) {\n            pieces.push(open);\n        }\n        for (const close of bracket.close) {\n            pieces.push(close);\n        }\n    }\n    pieces = unique(pieces);\n    return createBracketOrRegExp(pieces.map(toReversedString));\n}\nfunction prepareBracketForRegExp(str) {\n    // This bracket pair uses letters like e.g. \"begin\" - \"end\"\n    const insertWordBoundaries = (/^[\\w ]+$/.test(str));\n    str = strings.escapeRegExpCharacters(str);\n    return (insertWordBoundaries ? `\\\\b${str}\\\\b` : str);\n}\nexport function createBracketOrRegExp(pieces, options) {\n    const regexStr = `(${pieces.map(prepareBracketForRegExp).join(')|(')})`;\n    return strings.createRegExp(regexStr, true, options);\n}\nconst toReversedString = (function () {\n    function reverse(str) {\n        // create a Uint16Array and then use a TextDecoder to create a string\n        const arr = new Uint16Array(str.length);\n        let offset = 0;\n        for (let i = str.length - 1; i >= 0; i--) {\n            arr[offset++] = str.charCodeAt(i);\n        }\n        return stringBuilder.getPlatformTextDecoder().decode(arr);\n    }\n    let lastInput = null;\n    let lastOutput = null;\n    return function toReversedString(str) {\n        if (lastInput !== str) {\n            lastInput = str;\n            lastOutput = reverse(lastInput);\n        }\n        return lastOutput;\n    };\n})();\nexport class BracketsUtils {\n    static _findPrevBracketInText(reversedBracketRegex, lineNumber, reversedText, offset) {\n        const m = reversedText.match(reversedBracketRegex);\n        if (!m) {\n            return null;\n        }\n        const matchOffset = reversedText.length - (m.index || 0);\n        const matchLength = m[0].length;\n        const absoluteMatchOffset = offset + matchOffset;\n        return new Range(lineNumber, absoluteMatchOffset - matchLength + 1, lineNumber, absoluteMatchOffset + 1);\n    }\n    static findPrevBracketInRange(reversedBracketRegex, lineNumber, lineText, startOffset, endOffset) {\n        // Because JS does not support backwards regex search, we search forwards in a reversed string with a reversed regex ;)\n        const reversedLineText = toReversedString(lineText);\n        const reversedSubstr = reversedLineText.substring(lineText.length - endOffset, lineText.length - startOffset);\n        return this._findPrevBracketInText(reversedBracketRegex, lineNumber, reversedSubstr, startOffset);\n    }\n    static findNextBracketInText(bracketRegex, lineNumber, text, offset) {\n        const m = text.match(bracketRegex);\n        if (!m) {\n            return null;\n        }\n        const matchOffset = m.index || 0;\n        const matchLength = m[0].length;\n        if (matchLength === 0) {\n            return null;\n        }\n        const absoluteMatchOffset = offset + matchOffset;\n        return new Range(lineNumber, absoluteMatchOffset + 1, lineNumber, absoluteMatchOffset + 1 + matchLength);\n    }\n    static findNextBracketInRange(bracketRegex, lineNumber, lineText, startOffset, endOffset) {\n        const substr = lineText.substring(startOffset, endOffset);\n        return this.findNextBracketInText(bracketRegex, lineNumber, substr, startOffset);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { equals } from '../../base/common/objects.js';\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport var OverviewRulerLane;\n(function (OverviewRulerLane) {\n    OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n    OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n    OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n    OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {}));\n/**\n * Vertical Lane in the glyph margin of the editor.\n */\nexport var GlyphMarginLane;\n(function (GlyphMarginLane) {\n    GlyphMarginLane[GlyphMarginLane[\"Left\"] = 1] = \"Left\";\n    GlyphMarginLane[GlyphMarginLane[\"Center\"] = 2] = \"Center\";\n    GlyphMarginLane[GlyphMarginLane[\"Right\"] = 3] = \"Right\";\n})(GlyphMarginLane || (GlyphMarginLane = {}));\nexport var InjectedTextCursorStops;\n(function (InjectedTextCursorStops) {\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Both\"] = 0] = \"Both\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Right\"] = 1] = \"Right\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Left\"] = 2] = \"Left\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"None\"] = 3] = \"None\";\n})(InjectedTextCursorStops || (InjectedTextCursorStops = {}));\nexport class TextModelResolvedOptions {\n    get originalIndentSize() {\n        return this._indentSizeIsTabSize ? 'tabSize' : this.indentSize;\n    }\n    /**\n     * @internal\n     */\n    constructor(src) {\n        this._textModelResolvedOptionsBrand = undefined;\n        this.tabSize = Math.max(1, src.tabSize | 0);\n        if (src.indentSize === 'tabSize') {\n            this.indentSize = this.tabSize;\n            this._indentSizeIsTabSize = true;\n        }\n        else {\n            this.indentSize = Math.max(1, src.indentSize | 0);\n            this._indentSizeIsTabSize = false;\n        }\n        this.insertSpaces = Boolean(src.insertSpaces);\n        this.defaultEOL = src.defaultEOL | 0;\n        this.trimAutoWhitespace = Boolean(src.trimAutoWhitespace);\n        this.bracketPairColorizationOptions = src.bracketPairColorizationOptions;\n    }\n    /**\n     * @internal\n     */\n    equals(other) {\n        return (this.tabSize === other.tabSize\n            && this._indentSizeIsTabSize === other._indentSizeIsTabSize\n            && this.indentSize === other.indentSize\n            && this.insertSpaces === other.insertSpaces\n            && this.defaultEOL === other.defaultEOL\n            && this.trimAutoWhitespace === other.trimAutoWhitespace\n            && equals(this.bracketPairColorizationOptions, other.bracketPairColorizationOptions));\n    }\n    /**\n     * @internal\n     */\n    createChangeEvent(newOpts) {\n        return {\n            tabSize: this.tabSize !== newOpts.tabSize,\n            indentSize: this.indentSize !== newOpts.indentSize,\n            insertSpaces: this.insertSpaces !== newOpts.insertSpaces,\n            trimAutoWhitespace: this.trimAutoWhitespace !== newOpts.trimAutoWhitespace,\n        };\n    }\n}\nexport class FindMatch {\n    /**\n     * @internal\n     */\n    constructor(range, matches) {\n        this._findMatchBrand = undefined;\n        this.range = range;\n        this.matches = matches;\n    }\n}\n/**\n * @internal\n */\nexport function isITextSnapshot(obj) {\n    return (obj && typeof obj.read === 'function');\n}\n/**\n * @internal\n */\nexport class ValidAnnotatedEditOperation {\n    constructor(identifier, range, text, forceMoveMarkers, isAutoWhitespaceEdit, _isTracked) {\n        this.identifier = identifier;\n        this.range = range;\n        this.text = text;\n        this.forceMoveMarkers = forceMoveMarkers;\n        this.isAutoWhitespaceEdit = isAutoWhitespaceEdit;\n        this._isTracked = _isTracked;\n    }\n}\n/**\n * @internal\n */\nexport class SearchData {\n    constructor(regex, wordSeparators, simpleSearch) {\n        this.regex = regex;\n        this.wordSeparators = wordSeparators;\n        this.simpleSearch = simpleSearch;\n    }\n}\n/**\n * @internal\n */\nexport class ApplyEditsResult {\n    constructor(reverseEdits, changes, trimAutoWhitespaceLineNumbers) {\n        this.reverseEdits = reverseEdits;\n        this.changes = changes;\n        this.trimAutoWhitespaceLineNumbers = trimAutoWhitespaceLineNumbers;\n    }\n}\n/**\n * @internal\n */\nexport function shouldSynchronizeModel(model) {\n    return (!model.isTooLargeForSyncing() && !model.isForSimpleWidget);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CallbackIterable, compareBy } from '../../../../base/common/arrays.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable, DisposableStore, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { Range } from '../../core/range.js';\nimport { ignoreBracketsInToken } from '../../languages/supports.js';\nimport { BracketsUtils } from '../../languages/supports/richEditBrackets.js';\nimport { BracketPairsTree } from './bracketPairsTree/bracketPairsTree.js';\nexport class BracketPairsTextModelPart extends Disposable {\n    get canBuildAST() {\n        const maxSupportedDocumentLength = /* max lines */ 50_000 * /* average column count */ 100;\n        return this.textModel.getValueLength() <= maxSupportedDocumentLength;\n    }\n    constructor(textModel, languageConfigurationService) {\n        super();\n        this.textModel = textModel;\n        this.languageConfigurationService = languageConfigurationService;\n        this.bracketPairsTree = this._register(new MutableDisposable());\n        this.onDidChangeEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEmitter.event;\n        this.bracketsRequested = false;\n    }\n    //#region TextModel events\n    handleLanguageConfigurationServiceChange(e) {\n        if (!e.languageId || this.bracketPairsTree.value?.object.didLanguageChange(e.languageId)) {\n            this.bracketPairsTree.clear();\n            this.updateBracketPairsTree();\n        }\n    }\n    handleDidChangeOptions(e) {\n        this.bracketPairsTree.clear();\n        this.updateBracketPairsTree();\n    }\n    handleDidChangeLanguage(e) {\n        this.bracketPairsTree.clear();\n        this.updateBracketPairsTree();\n    }\n    handleDidChangeContent(change) {\n        this.bracketPairsTree.value?.object.handleContentChanged(change);\n    }\n    handleDidChangeBackgroundTokenizationState() {\n        this.bracketPairsTree.value?.object.handleDidChangeBackgroundTokenizationState();\n    }\n    handleDidChangeTokens(e) {\n        this.bracketPairsTree.value?.object.handleDidChangeTokens(e);\n    }\n    //#endregion\n    updateBracketPairsTree() {\n        if (this.bracketsRequested && this.canBuildAST) {\n            if (!this.bracketPairsTree.value) {\n                const store = new DisposableStore();\n                this.bracketPairsTree.value = createDisposableRef(store.add(new BracketPairsTree(this.textModel, (languageId) => {\n                    return this.languageConfigurationService.getLanguageConfiguration(languageId);\n                })), store);\n                store.add(this.bracketPairsTree.value.object.onDidChange(e => this.onDidChangeEmitter.fire(e)));\n                this.onDidChangeEmitter.fire();\n            }\n        }\n        else {\n            if (this.bracketPairsTree.value) {\n                this.bracketPairsTree.clear();\n                // Important: Don't call fire if there was no change!\n                this.onDidChangeEmitter.fire();\n            }\n        }\n    }\n    /**\n     * Returns all bracket pairs that intersect the given range.\n     * The result is sorted by the start position.\n    */\n    getBracketPairsInRange(range) {\n        this.bracketsRequested = true;\n        this.updateBracketPairsTree();\n        return this.bracketPairsTree.value?.object.getBracketPairsInRange(range, false) || CallbackIterable.empty;\n    }\n    getBracketPairsInRangeWithMinIndentation(range) {\n        this.bracketsRequested = true;\n        this.updateBracketPairsTree();\n        return this.bracketPairsTree.value?.object.getBracketPairsInRange(range, true) || CallbackIterable.empty;\n    }\n    getBracketsInRange(range, onlyColorizedBrackets = false) {\n        this.bracketsRequested = true;\n        this.updateBracketPairsTree();\n        return this.bracketPairsTree.value?.object.getBracketsInRange(range, onlyColorizedBrackets) || CallbackIterable.empty;\n    }\n    findMatchingBracketUp(_bracket, _position, maxDuration) {\n        const position = this.textModel.validatePosition(_position);\n        const languageId = this.textModel.getLanguageIdAtPosition(position.lineNumber, position.column);\n        if (this.canBuildAST) {\n            const closingBracketInfo = this.languageConfigurationService\n                .getLanguageConfiguration(languageId)\n                .bracketsNew.getClosingBracketInfo(_bracket);\n            if (!closingBracketInfo) {\n                return null;\n            }\n            const bracketPair = this.getBracketPairsInRange(Range.fromPositions(_position, _position)).findLast((b) => closingBracketInfo.closes(b.openingBracketInfo));\n            if (bracketPair) {\n                return bracketPair.openingBracketRange;\n            }\n            return null;\n        }\n        else {\n            // Fallback to old bracket matching code:\n            const bracket = _bracket.toLowerCase();\n            const bracketsSupport = this.languageConfigurationService.getLanguageConfiguration(languageId).brackets;\n            if (!bracketsSupport) {\n                return null;\n            }\n            const data = bracketsSupport.textIsBracket[bracket];\n            if (!data) {\n                return null;\n            }\n            return stripBracketSearchCanceled(this._findMatchingBracketUp(data, position, createTimeBasedContinueBracketSearchPredicate(maxDuration)));\n        }\n    }\n    matchBracket(position, maxDuration) {\n        if (this.canBuildAST) {\n            const bracketPair = this.getBracketPairsInRange(Range.fromPositions(position, position)).filter((item) => item.closingBracketRange !== undefined &&\n                (item.openingBracketRange.containsPosition(position) ||\n                    item.closingBracketRange.containsPosition(position))).findLastMaxBy(compareBy((item) => item.openingBracketRange.containsPosition(position)\n                ? item.openingBracketRange\n                : item.closingBracketRange, Range.compareRangesUsingStarts));\n            if (bracketPair) {\n                return [bracketPair.openingBracketRange, bracketPair.closingBracketRange];\n            }\n            return null;\n        }\n        else {\n            // Fallback to old bracket matching code:\n            const continueSearchPredicate = createTimeBasedContinueBracketSearchPredicate(maxDuration);\n            return this._matchBracket(this.textModel.validatePosition(position), continueSearchPredicate);\n        }\n    }\n    _establishBracketSearchOffsets(position, lineTokens, modeBrackets, tokenIndex) {\n        const tokenCount = lineTokens.getCount();\n        const currentLanguageId = lineTokens.getLanguageId(tokenIndex);\n        // limit search to not go before `maxBracketLength`\n        let searchStartOffset = Math.max(0, position.column - 1 - modeBrackets.maxBracketLength);\n        for (let i = tokenIndex - 1; i >= 0; i--) {\n            const tokenEndOffset = lineTokens.getEndOffset(i);\n            if (tokenEndOffset <= searchStartOffset) {\n                break;\n            }\n            if (ignoreBracketsInToken(lineTokens.getStandardTokenType(i)) || lineTokens.getLanguageId(i) !== currentLanguageId) {\n                searchStartOffset = tokenEndOffset;\n                break;\n            }\n        }\n        // limit search to not go after `maxBracketLength`\n        let searchEndOffset = Math.min(lineTokens.getLineContent().length, position.column - 1 + modeBrackets.maxBracketLength);\n        for (let i = tokenIndex + 1; i < tokenCount; i++) {\n            const tokenStartOffset = lineTokens.getStartOffset(i);\n            if (tokenStartOffset >= searchEndOffset) {\n                break;\n            }\n            if (ignoreBracketsInToken(lineTokens.getStandardTokenType(i)) || lineTokens.getLanguageId(i) !== currentLanguageId) {\n                searchEndOffset = tokenStartOffset;\n                break;\n            }\n        }\n        return { searchStartOffset, searchEndOffset };\n    }\n    _matchBracket(position, continueSearchPredicate) {\n        const lineNumber = position.lineNumber;\n        const lineTokens = this.textModel.tokenization.getLineTokens(lineNumber);\n        const lineText = this.textModel.getLineContent(lineNumber);\n        const tokenIndex = lineTokens.findTokenIndexAtOffset(position.column - 1);\n        if (tokenIndex < 0) {\n            return null;\n        }\n        const currentModeBrackets = this.languageConfigurationService.getLanguageConfiguration(lineTokens.getLanguageId(tokenIndex)).brackets;\n        // check that the token is not to be ignored\n        if (currentModeBrackets && !ignoreBracketsInToken(lineTokens.getStandardTokenType(tokenIndex))) {\n            let { searchStartOffset, searchEndOffset } = this._establishBracketSearchOffsets(position, lineTokens, currentModeBrackets, tokenIndex);\n            // it might be the case that [currentTokenStart -> currentTokenEnd] contains multiple brackets\n            // `bestResult` will contain the most right-side result\n            let bestResult = null;\n            while (true) {\n                const foundBracket = BracketsUtils.findNextBracketInRange(currentModeBrackets.forwardRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n                if (!foundBracket) {\n                    // there are no more brackets in this text\n                    break;\n                }\n                // check that we didn't hit a bracket too far away from position\n                if (foundBracket.startColumn <= position.column && position.column <= foundBracket.endColumn) {\n                    const foundBracketText = lineText.substring(foundBracket.startColumn - 1, foundBracket.endColumn - 1).toLowerCase();\n                    const r = this._matchFoundBracket(foundBracket, currentModeBrackets.textIsBracket[foundBracketText], currentModeBrackets.textIsOpenBracket[foundBracketText], continueSearchPredicate);\n                    if (r) {\n                        if (r instanceof BracketSearchCanceled) {\n                            return null;\n                        }\n                        bestResult = r;\n                    }\n                }\n                searchStartOffset = foundBracket.endColumn - 1;\n            }\n            if (bestResult) {\n                return bestResult;\n            }\n        }\n        // If position is in between two tokens, try also looking in the previous token\n        if (tokenIndex > 0 && lineTokens.getStartOffset(tokenIndex) === position.column - 1) {\n            const prevTokenIndex = tokenIndex - 1;\n            const prevModeBrackets = this.languageConfigurationService.getLanguageConfiguration(lineTokens.getLanguageId(prevTokenIndex)).brackets;\n            // check that previous token is not to be ignored\n            if (prevModeBrackets && !ignoreBracketsInToken(lineTokens.getStandardTokenType(prevTokenIndex))) {\n                const { searchStartOffset, searchEndOffset } = this._establishBracketSearchOffsets(position, lineTokens, prevModeBrackets, prevTokenIndex);\n                const foundBracket = BracketsUtils.findPrevBracketInRange(prevModeBrackets.reversedRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n                // check that we didn't hit a bracket too far away from position\n                if (foundBracket && foundBracket.startColumn <= position.column && position.column <= foundBracket.endColumn) {\n                    const foundBracketText = lineText.substring(foundBracket.startColumn - 1, foundBracket.endColumn - 1).toLowerCase();\n                    const r = this._matchFoundBracket(foundBracket, prevModeBrackets.textIsBracket[foundBracketText], prevModeBrackets.textIsOpenBracket[foundBracketText], continueSearchPredicate);\n                    if (r) {\n                        if (r instanceof BracketSearchCanceled) {\n                            return null;\n                        }\n                        return r;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    _matchFoundBracket(foundBracket, data, isOpen, continueSearchPredicate) {\n        if (!data) {\n            return null;\n        }\n        const matched = (isOpen\n            ? this._findMatchingBracketDown(data, foundBracket.getEndPosition(), continueSearchPredicate)\n            : this._findMatchingBracketUp(data, foundBracket.getStartPosition(), continueSearchPredicate));\n        if (!matched) {\n            return null;\n        }\n        if (matched instanceof BracketSearchCanceled) {\n            return matched;\n        }\n        return [foundBracket, matched];\n    }\n    _findMatchingBracketUp(bracket, position, continueSearchPredicate) {\n        // console.log('_findMatchingBracketUp: ', 'bracket: ', JSON.stringify(bracket), 'startPosition: ', String(position));\n        const languageId = bracket.languageId;\n        const reversedBracketRegex = bracket.reversedRegex;\n        let count = -1;\n        let totalCallCount = 0;\n        const searchPrevMatchingBracketInRange = (lineNumber, lineText, searchStartOffset, searchEndOffset) => {\n            while (true) {\n                if (continueSearchPredicate && (++totalCallCount) % 100 === 0 && !continueSearchPredicate()) {\n                    return BracketSearchCanceled.INSTANCE;\n                }\n                const r = BracketsUtils.findPrevBracketInRange(reversedBracketRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n                if (!r) {\n                    break;\n                }\n                const hitText = lineText.substring(r.startColumn - 1, r.endColumn - 1).toLowerCase();\n                if (bracket.isOpen(hitText)) {\n                    count++;\n                }\n                else if (bracket.isClose(hitText)) {\n                    count--;\n                }\n                if (count === 0) {\n                    return r;\n                }\n                searchEndOffset = r.startColumn - 1;\n            }\n            return null;\n        };\n        for (let lineNumber = position.lineNumber; lineNumber >= 1; lineNumber--) {\n            const lineTokens = this.textModel.tokenization.getLineTokens(lineNumber);\n            const tokenCount = lineTokens.getCount();\n            const lineText = this.textModel.getLineContent(lineNumber);\n            let tokenIndex = tokenCount - 1;\n            let searchStartOffset = lineText.length;\n            let searchEndOffset = lineText.length;\n            if (lineNumber === position.lineNumber) {\n                tokenIndex = lineTokens.findTokenIndexAtOffset(position.column - 1);\n                searchStartOffset = position.column - 1;\n                searchEndOffset = position.column - 1;\n            }\n            let prevSearchInToken = true;\n            for (; tokenIndex >= 0; tokenIndex--) {\n                const searchInToken = (lineTokens.getLanguageId(tokenIndex) === languageId && !ignoreBracketsInToken(lineTokens.getStandardTokenType(tokenIndex)));\n                if (searchInToken) {\n                    // this token should be searched\n                    if (prevSearchInToken) {\n                        // the previous token should be searched, simply extend searchStartOffset\n                        searchStartOffset = lineTokens.getStartOffset(tokenIndex);\n                    }\n                    else {\n                        // the previous token should not be searched\n                        searchStartOffset = lineTokens.getStartOffset(tokenIndex);\n                        searchEndOffset = lineTokens.getEndOffset(tokenIndex);\n                    }\n                }\n                else {\n                    // this token should not be searched\n                    if (prevSearchInToken && searchStartOffset !== searchEndOffset) {\n                        const r = searchPrevMatchingBracketInRange(lineNumber, lineText, searchStartOffset, searchEndOffset);\n                        if (r) {\n                            return r;\n                        }\n                    }\n                }\n                prevSearchInToken = searchInToken;\n            }\n            if (prevSearchInToken && searchStartOffset !== searchEndOffset) {\n                const r = searchPrevMatchingBracketInRange(lineNumber, lineText, searchStartOffset, searchEndOffset);\n                if (r) {\n                    return r;\n                }\n            }\n        }\n        return null;\n    }\n    _findMatchingBracketDown(bracket, position, continueSearchPredicate) {\n        // console.log('_findMatchingBracketDown: ', 'bracket: ', JSON.stringify(bracket), 'startPosition: ', String(position));\n        const languageId = bracket.languageId;\n        const bracketRegex = bracket.forwardRegex;\n        let count = 1;\n        let totalCallCount = 0;\n        const searchNextMatchingBracketInRange = (lineNumber, lineText, searchStartOffset, searchEndOffset) => {\n            while (true) {\n                if (continueSearchPredicate && (++totalCallCount) % 100 === 0 && !continueSearchPredicate()) {\n                    return BracketSearchCanceled.INSTANCE;\n                }\n                const r = BracketsUtils.findNextBracketInRange(bracketRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n                if (!r) {\n                    break;\n                }\n                const hitText = lineText.substring(r.startColumn - 1, r.endColumn - 1).toLowerCase();\n                if (bracket.isOpen(hitText)) {\n                    count++;\n                }\n                else if (bracket.isClose(hitText)) {\n                    count--;\n                }\n                if (count === 0) {\n                    return r;\n                }\n                searchStartOffset = r.endColumn - 1;\n            }\n            return null;\n        };\n        const lineCount = this.textModel.getLineCount();\n        for (let lineNumber = position.lineNumber; lineNumber <= lineCount; lineNumber++) {\n            const lineTokens = this.textModel.tokenization.getLineTokens(lineNumber);\n            const tokenCount = lineTokens.getCount();\n            const lineText = this.textModel.getLineContent(lineNumber);\n            let tokenIndex = 0;\n            let searchStartOffset = 0;\n            let searchEndOffset = 0;\n            if (lineNumber === position.lineNumber) {\n                tokenIndex = lineTokens.findTokenIndexAtOffset(position.column - 1);\n                searchStartOffset = position.column - 1;\n                searchEndOffset = position.column - 1;\n            }\n            let prevSearchInToken = true;\n            for (; tokenIndex < tokenCount; tokenIndex++) {\n                const searchInToken = (lineTokens.getLanguageId(tokenIndex) === languageId && !ignoreBracketsInToken(lineTokens.getStandardTokenType(tokenIndex)));\n                if (searchInToken) {\n                    // this token should be searched\n                    if (prevSearchInToken) {\n                        // the previous token should be searched, simply extend searchEndOffset\n                        searchEndOffset = lineTokens.getEndOffset(tokenIndex);\n                    }\n                    else {\n                        // the previous token should not be searched\n                        searchStartOffset = lineTokens.getStartOffset(tokenIndex);\n                        searchEndOffset = lineTokens.getEndOffset(tokenIndex);\n                    }\n                }\n                else {\n                    // this token should not be searched\n                    if (prevSearchInToken && searchStartOffset !== searchEndOffset) {\n                        const r = searchNextMatchingBracketInRange(lineNumber, lineText, searchStartOffset, searchEndOffset);\n                        if (r) {\n                            return r;\n                        }\n                    }\n                }\n                prevSearchInToken = searchInToken;\n            }\n            if (prevSearchInToken && searchStartOffset !== searchEndOffset) {\n                const r = searchNextMatchingBracketInRange(lineNumber, lineText, searchStartOffset, searchEndOffset);\n                if (r) {\n                    return r;\n                }\n            }\n        }\n        return null;\n    }\n    findPrevBracket(_position) {\n        const position = this.textModel.validatePosition(_position);\n        if (this.canBuildAST) {\n            this.bracketsRequested = true;\n            this.updateBracketPairsTree();\n            return this.bracketPairsTree.value?.object.getFirstBracketBefore(position) || null;\n        }\n        let languageId = null;\n        let modeBrackets = null;\n        let bracketConfig = null;\n        for (let lineNumber = position.lineNumber; lineNumber >= 1; lineNumber--) {\n            const lineTokens = this.textModel.tokenization.getLineTokens(lineNumber);\n            const tokenCount = lineTokens.getCount();\n            const lineText = this.textModel.getLineContent(lineNumber);\n            let tokenIndex = tokenCount - 1;\n            let searchStartOffset = lineText.length;\n            let searchEndOffset = lineText.length;\n            if (lineNumber === position.lineNumber) {\n                tokenIndex = lineTokens.findTokenIndexAtOffset(position.column - 1);\n                searchStartOffset = position.column - 1;\n                searchEndOffset = position.column - 1;\n                const tokenLanguageId = lineTokens.getLanguageId(tokenIndex);\n                if (languageId !== tokenLanguageId) {\n                    languageId = tokenLanguageId;\n                    modeBrackets = this.languageConfigurationService.getLanguageConfiguration(languageId).brackets;\n                    bracketConfig = this.languageConfigurationService.getLanguageConfiguration(languageId).bracketsNew;\n                }\n            }\n            let prevSearchInToken = true;\n            for (; tokenIndex >= 0; tokenIndex--) {\n                const tokenLanguageId = lineTokens.getLanguageId(tokenIndex);\n                if (languageId !== tokenLanguageId) {\n                    // language id change!\n                    if (modeBrackets && bracketConfig && prevSearchInToken && searchStartOffset !== searchEndOffset) {\n                        const r = BracketsUtils.findPrevBracketInRange(modeBrackets.reversedRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n                        if (r) {\n                            return this._toFoundBracket(bracketConfig, r);\n                        }\n                        prevSearchInToken = false;\n                    }\n                    languageId = tokenLanguageId;\n                    modeBrackets = this.languageConfigurationService.getLanguageConfiguration(languageId).brackets;\n                    bracketConfig = this.languageConfigurationService.getLanguageConfiguration(languageId).bracketsNew;\n                }\n                const searchInToken = (!!modeBrackets && !ignoreBracketsInToken(lineTokens.getStandardTokenType(tokenIndex)));\n                if (searchInToken) {\n                    // this token should be searched\n                    if (prevSearchInToken) {\n                        // the previous token should be searched, simply extend searchStartOffset\n                        searchStartOffset = lineTokens.getStartOffset(tokenIndex);\n                    }\n                    else {\n                        // the previous token should not be searched\n                        searchStartOffset = lineTokens.getStartOffset(tokenIndex);\n                        searchEndOffset = lineTokens.getEndOffset(tokenIndex);\n                    }\n                }\n                else {\n                    // this token should not be searched\n                    if (bracketConfig && modeBrackets && prevSearchInToken && searchStartOffset !== searchEndOffset) {\n                        const r = BracketsUtils.findPrevBracketInRange(modeBrackets.reversedRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n                        if (r) {\n                            return this._toFoundBracket(bracketConfig, r);\n                        }\n                    }\n                }\n                prevSearchInToken = searchInToken;\n            }\n            if (bracketConfig && modeBrackets && prevSearchInToken && searchStartOffset !== searchEndOffset) {\n                const r = BracketsUtils.findPrevBracketInRange(modeBrackets.reversedRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n                if (r) {\n                    return this._toFoundBracket(bracketConfig, r);\n                }\n            }\n        }\n        return null;\n    }\n    findNextBracket(_position) {\n        const position = this.textModel.validatePosition(_position);\n        if (this.canBuildAST) {\n            this.bracketsRequested = true;\n            this.updateBracketPairsTree();\n            return this.bracketPairsTree.value?.object.getFirstBracketAfter(position) || null;\n        }\n        const lineCount = this.textModel.getLineCount();\n        let languageId = null;\n        let modeBrackets = null;\n        let bracketConfig = null;\n        for (let lineNumber = position.lineNumber; lineNumber <= lineCount; lineNumber++) {\n            const lineTokens = this.textModel.tokenization.getLineTokens(lineNumber);\n            const tokenCount = lineTokens.getCount();\n            const lineText = this.textModel.getLineContent(lineNumber);\n            let tokenIndex = 0;\n            let searchStartOffset = 0;\n            let searchEndOffset = 0;\n            if (lineNumber === position.lineNumber) {\n                tokenIndex = lineTokens.findTokenIndexAtOffset(position.column - 1);\n                searchStartOffset = position.column - 1;\n                searchEndOffset = position.column - 1;\n                const tokenLanguageId = lineTokens.getLanguageId(tokenIndex);\n                if (languageId !== tokenLanguageId) {\n                    languageId = tokenLanguageId;\n                    modeBrackets = this.languageConfigurationService.getLanguageConfiguration(languageId).brackets;\n                    bracketConfig = this.languageConfigurationService.getLanguageConfiguration(languageId).bracketsNew;\n                }\n            }\n            let prevSearchInToken = true;\n            for (; tokenIndex < tokenCount; tokenIndex++) {\n                const tokenLanguageId = lineTokens.getLanguageId(tokenIndex);\n                if (languageId !== tokenLanguageId) {\n                    // language id change!\n                    if (bracketConfig && modeBrackets && prevSearchInToken && searchStartOffset !== searchEndOffset) {\n                        const r = BracketsUtils.findNextBracketInRange(modeBrackets.forwardRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n                        if (r) {\n                            return this._toFoundBracket(bracketConfig, r);\n                        }\n                        prevSearchInToken = false;\n                    }\n                    languageId = tokenLanguageId;\n                    modeBrackets = this.languageConfigurationService.getLanguageConfiguration(languageId).brackets;\n                    bracketConfig = this.languageConfigurationService.getLanguageConfiguration(languageId).bracketsNew;\n                }\n                const searchInToken = (!!modeBrackets && !ignoreBracketsInToken(lineTokens.getStandardTokenType(tokenIndex)));\n                if (searchInToken) {\n                    // this token should be searched\n                    if (prevSearchInToken) {\n                        // the previous token should be searched, simply extend searchEndOffset\n                        searchEndOffset = lineTokens.getEndOffset(tokenIndex);\n                    }\n                    else {\n                        // the previous token should not be searched\n                        searchStartOffset = lineTokens.getStartOffset(tokenIndex);\n                        searchEndOffset = lineTokens.getEndOffset(tokenIndex);\n                    }\n                }\n                else {\n                    // this token should not be searched\n                    if (bracketConfig && modeBrackets && prevSearchInToken && searchStartOffset !== searchEndOffset) {\n                        const r = BracketsUtils.findNextBracketInRange(modeBrackets.forwardRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n                        if (r) {\n                            return this._toFoundBracket(bracketConfig, r);\n                        }\n                    }\n                }\n                prevSearchInToken = searchInToken;\n            }\n            if (bracketConfig && modeBrackets && prevSearchInToken && searchStartOffset !== searchEndOffset) {\n                const r = BracketsUtils.findNextBracketInRange(modeBrackets.forwardRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n                if (r) {\n                    return this._toFoundBracket(bracketConfig, r);\n                }\n            }\n        }\n        return null;\n    }\n    findEnclosingBrackets(_position, maxDuration) {\n        const position = this.textModel.validatePosition(_position);\n        if (this.canBuildAST) {\n            const range = Range.fromPositions(position);\n            const bracketPair = this.getBracketPairsInRange(Range.fromPositions(position, position)).findLast((item) => item.closingBracketRange !== undefined && item.range.strictContainsRange(range));\n            if (bracketPair) {\n                return [bracketPair.openingBracketRange, bracketPair.closingBracketRange];\n            }\n            return null;\n        }\n        const continueSearchPredicate = createTimeBasedContinueBracketSearchPredicate(maxDuration);\n        const lineCount = this.textModel.getLineCount();\n        const savedCounts = new Map();\n        let counts = [];\n        const resetCounts = (languageId, modeBrackets) => {\n            if (!savedCounts.has(languageId)) {\n                const tmp = [];\n                for (let i = 0, len = modeBrackets ? modeBrackets.brackets.length : 0; i < len; i++) {\n                    tmp[i] = 0;\n                }\n                savedCounts.set(languageId, tmp);\n            }\n            counts = savedCounts.get(languageId);\n        };\n        let totalCallCount = 0;\n        const searchInRange = (modeBrackets, lineNumber, lineText, searchStartOffset, searchEndOffset) => {\n            while (true) {\n                if (continueSearchPredicate && (++totalCallCount) % 100 === 0 && !continueSearchPredicate()) {\n                    return BracketSearchCanceled.INSTANCE;\n                }\n                const r = BracketsUtils.findNextBracketInRange(modeBrackets.forwardRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n                if (!r) {\n                    break;\n                }\n                const hitText = lineText.substring(r.startColumn - 1, r.endColumn - 1).toLowerCase();\n                const bracket = modeBrackets.textIsBracket[hitText];\n                if (bracket) {\n                    if (bracket.isOpen(hitText)) {\n                        counts[bracket.index]++;\n                    }\n                    else if (bracket.isClose(hitText)) {\n                        counts[bracket.index]--;\n                    }\n                    if (counts[bracket.index] === -1) {\n                        return this._matchFoundBracket(r, bracket, false, continueSearchPredicate);\n                    }\n                }\n                searchStartOffset = r.endColumn - 1;\n            }\n            return null;\n        };\n        let languageId = null;\n        let modeBrackets = null;\n        for (let lineNumber = position.lineNumber; lineNumber <= lineCount; lineNumber++) {\n            const lineTokens = this.textModel.tokenization.getLineTokens(lineNumber);\n            const tokenCount = lineTokens.getCount();\n            const lineText = this.textModel.getLineContent(lineNumber);\n            let tokenIndex = 0;\n            let searchStartOffset = 0;\n            let searchEndOffset = 0;\n            if (lineNumber === position.lineNumber) {\n                tokenIndex = lineTokens.findTokenIndexAtOffset(position.column - 1);\n                searchStartOffset = position.column - 1;\n                searchEndOffset = position.column - 1;\n                const tokenLanguageId = lineTokens.getLanguageId(tokenIndex);\n                if (languageId !== tokenLanguageId) {\n                    languageId = tokenLanguageId;\n                    modeBrackets = this.languageConfigurationService.getLanguageConfiguration(languageId).brackets;\n                    resetCounts(languageId, modeBrackets);\n                }\n            }\n            let prevSearchInToken = true;\n            for (; tokenIndex < tokenCount; tokenIndex++) {\n                const tokenLanguageId = lineTokens.getLanguageId(tokenIndex);\n                if (languageId !== tokenLanguageId) {\n                    // language id change!\n                    if (modeBrackets && prevSearchInToken && searchStartOffset !== searchEndOffset) {\n                        const r = searchInRange(modeBrackets, lineNumber, lineText, searchStartOffset, searchEndOffset);\n                        if (r) {\n                            return stripBracketSearchCanceled(r);\n                        }\n                        prevSearchInToken = false;\n                    }\n                    languageId = tokenLanguageId;\n                    modeBrackets = this.languageConfigurationService.getLanguageConfiguration(languageId).brackets;\n                    resetCounts(languageId, modeBrackets);\n                }\n                const searchInToken = (!!modeBrackets && !ignoreBracketsInToken(lineTokens.getStandardTokenType(tokenIndex)));\n                if (searchInToken) {\n                    // this token should be searched\n                    if (prevSearchInToken) {\n                        // the previous token should be searched, simply extend searchEndOffset\n                        searchEndOffset = lineTokens.getEndOffset(tokenIndex);\n                    }\n                    else {\n                        // the previous token should not be searched\n                        searchStartOffset = lineTokens.getStartOffset(tokenIndex);\n                        searchEndOffset = lineTokens.getEndOffset(tokenIndex);\n                    }\n                }\n                else {\n                    // this token should not be searched\n                    if (modeBrackets && prevSearchInToken && searchStartOffset !== searchEndOffset) {\n                        const r = searchInRange(modeBrackets, lineNumber, lineText, searchStartOffset, searchEndOffset);\n                        if (r) {\n                            return stripBracketSearchCanceled(r);\n                        }\n                    }\n                }\n                prevSearchInToken = searchInToken;\n            }\n            if (modeBrackets && prevSearchInToken && searchStartOffset !== searchEndOffset) {\n                const r = searchInRange(modeBrackets, lineNumber, lineText, searchStartOffset, searchEndOffset);\n                if (r) {\n                    return stripBracketSearchCanceled(r);\n                }\n            }\n        }\n        return null;\n    }\n    _toFoundBracket(bracketConfig, r) {\n        if (!r) {\n            return null;\n        }\n        let text = this.textModel.getValueInRange(r);\n        text = text.toLowerCase();\n        const bracketInfo = bracketConfig.getBracketInfo(text);\n        if (!bracketInfo) {\n            return null;\n        }\n        return {\n            range: r,\n            bracketInfo\n        };\n    }\n}\nfunction createDisposableRef(object, disposable) {\n    return {\n        object,\n        dispose: () => disposable?.dispose(),\n    };\n}\nfunction createTimeBasedContinueBracketSearchPredicate(maxDuration) {\n    if (typeof maxDuration === 'undefined') {\n        return () => true;\n    }\n    else {\n        const startTime = Date.now();\n        return () => {\n            return (Date.now() - startTime <= maxDuration);\n        };\n    }\n}\nclass BracketSearchCanceled {\n    static { this.INSTANCE = new BracketSearchCanceled(); }\n    constructor() {\n        this._searchCanceledBrand = undefined;\n    }\n}\nfunction stripBracketSearchCanceled(result) {\n    if (result instanceof BracketSearchCanceled) {\n        return null;\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { BugIndicatingError } from '../../../../../base/common/errors.js';\nimport { CursorColumns } from '../../../core/cursorColumns.js';\nimport { lengthAdd, lengthGetLineCount, lengthToObj, lengthZero } from './length.js';\nimport { SmallImmutableSet } from './smallImmutableSet.js';\n/**\n * The base implementation for all AST nodes.\n*/\nclass BaseAstNode {\n    /**\n     * The length of the entire node, which should equal the sum of lengths of all children.\n    */\n    get length() {\n        return this._length;\n    }\n    constructor(length) {\n        this._length = length;\n    }\n}\n/**\n * Represents a bracket pair including its child (e.g. `{ ... }`).\n * Might be unclosed.\n * Immutable, if all children are immutable.\n*/\nexport class PairAstNode extends BaseAstNode {\n    static create(openingBracket, child, closingBracket) {\n        let length = openingBracket.length;\n        if (child) {\n            length = lengthAdd(length, child.length);\n        }\n        if (closingBracket) {\n            length = lengthAdd(length, closingBracket.length);\n        }\n        return new PairAstNode(length, openingBracket, child, closingBracket, child ? child.missingOpeningBracketIds : SmallImmutableSet.getEmpty());\n    }\n    get kind() {\n        return 2 /* AstNodeKind.Pair */;\n    }\n    get listHeight() {\n        return 0;\n    }\n    get childrenLength() {\n        return 3;\n    }\n    getChild(idx) {\n        switch (idx) {\n            case 0: return this.openingBracket;\n            case 1: return this.child;\n            case 2: return this.closingBracket;\n        }\n        throw new Error('Invalid child index');\n    }\n    /**\n     * Avoid using this property, it allocates an array!\n    */\n    get children() {\n        const result = [];\n        result.push(this.openingBracket);\n        if (this.child) {\n            result.push(this.child);\n        }\n        if (this.closingBracket) {\n            result.push(this.closingBracket);\n        }\n        return result;\n    }\n    constructor(length, openingBracket, child, closingBracket, missingOpeningBracketIds) {\n        super(length);\n        this.openingBracket = openingBracket;\n        this.child = child;\n        this.closingBracket = closingBracket;\n        this.missingOpeningBracketIds = missingOpeningBracketIds;\n    }\n    canBeReused(openBracketIds) {\n        if (this.closingBracket === null) {\n            // Unclosed pair ast nodes only\n            // end at the end of the document\n            // or when a parent node is closed.\n            // This could be improved:\n            // Only return false if some next token is neither \"undefined\" nor a bracket that closes a parent.\n            return false;\n        }\n        if (openBracketIds.intersects(this.missingOpeningBracketIds)) {\n            return false;\n        }\n        return true;\n    }\n    deepClone() {\n        return new PairAstNode(this.length, this.openingBracket.deepClone(), this.child && this.child.deepClone(), this.closingBracket && this.closingBracket.deepClone(), this.missingOpeningBracketIds);\n    }\n    computeMinIndentation(offset, textModel) {\n        return this.child ? this.child.computeMinIndentation(lengthAdd(offset, this.openingBracket.length), textModel) : Number.MAX_SAFE_INTEGER;\n    }\n}\nexport class ListAstNode extends BaseAstNode {\n    /**\n     * This method uses more memory-efficient list nodes that can only store 2 or 3 children.\n    */\n    static create23(item1, item2, item3, immutable = false) {\n        let length = item1.length;\n        let missingBracketIds = item1.missingOpeningBracketIds;\n        if (item1.listHeight !== item2.listHeight) {\n            throw new Error('Invalid list heights');\n        }\n        length = lengthAdd(length, item2.length);\n        missingBracketIds = missingBracketIds.merge(item2.missingOpeningBracketIds);\n        if (item3) {\n            if (item1.listHeight !== item3.listHeight) {\n                throw new Error('Invalid list heights');\n            }\n            length = lengthAdd(length, item3.length);\n            missingBracketIds = missingBracketIds.merge(item3.missingOpeningBracketIds);\n        }\n        return immutable\n            ? new Immutable23ListAstNode(length, item1.listHeight + 1, item1, item2, item3, missingBracketIds)\n            : new TwoThreeListAstNode(length, item1.listHeight + 1, item1, item2, item3, missingBracketIds);\n    }\n    static getEmpty() {\n        return new ImmutableArrayListAstNode(lengthZero, 0, [], SmallImmutableSet.getEmpty());\n    }\n    get kind() {\n        return 4 /* AstNodeKind.List */;\n    }\n    get missingOpeningBracketIds() {\n        return this._missingOpeningBracketIds;\n    }\n    /**\n     * Use ListAstNode.create.\n    */\n    constructor(length, listHeight, _missingOpeningBracketIds) {\n        super(length);\n        this.listHeight = listHeight;\n        this._missingOpeningBracketIds = _missingOpeningBracketIds;\n        this.cachedMinIndentation = -1;\n    }\n    throwIfImmutable() {\n        // NOOP\n    }\n    makeLastElementMutable() {\n        this.throwIfImmutable();\n        const childCount = this.childrenLength;\n        if (childCount === 0) {\n            return undefined;\n        }\n        const lastChild = this.getChild(childCount - 1);\n        const mutable = lastChild.kind === 4 /* AstNodeKind.List */ ? lastChild.toMutable() : lastChild;\n        if (lastChild !== mutable) {\n            this.setChild(childCount - 1, mutable);\n        }\n        return mutable;\n    }\n    makeFirstElementMutable() {\n        this.throwIfImmutable();\n        const childCount = this.childrenLength;\n        if (childCount === 0) {\n            return undefined;\n        }\n        const firstChild = this.getChild(0);\n        const mutable = firstChild.kind === 4 /* AstNodeKind.List */ ? firstChild.toMutable() : firstChild;\n        if (firstChild !== mutable) {\n            this.setChild(0, mutable);\n        }\n        return mutable;\n    }\n    canBeReused(openBracketIds) {\n        if (openBracketIds.intersects(this.missingOpeningBracketIds)) {\n            return false;\n        }\n        if (this.childrenLength === 0) {\n            // Don't reuse empty lists.\n            return false;\n        }\n        let lastChild = this;\n        while (lastChild.kind === 4 /* AstNodeKind.List */) {\n            const lastLength = lastChild.childrenLength;\n            if (lastLength === 0) {\n                // Empty lists should never be contained in other lists.\n                throw new BugIndicatingError();\n            }\n            lastChild = lastChild.getChild(lastLength - 1);\n        }\n        return lastChild.canBeReused(openBracketIds);\n    }\n    handleChildrenChanged() {\n        this.throwIfImmutable();\n        const count = this.childrenLength;\n        let length = this.getChild(0).length;\n        let unopenedBrackets = this.getChild(0).missingOpeningBracketIds;\n        for (let i = 1; i < count; i++) {\n            const child = this.getChild(i);\n            length = lengthAdd(length, child.length);\n            unopenedBrackets = unopenedBrackets.merge(child.missingOpeningBracketIds);\n        }\n        this._length = length;\n        this._missingOpeningBracketIds = unopenedBrackets;\n        this.cachedMinIndentation = -1;\n    }\n    computeMinIndentation(offset, textModel) {\n        if (this.cachedMinIndentation !== -1) {\n            return this.cachedMinIndentation;\n        }\n        let minIndentation = Number.MAX_SAFE_INTEGER;\n        let childOffset = offset;\n        for (let i = 0; i < this.childrenLength; i++) {\n            const child = this.getChild(i);\n            if (child) {\n                minIndentation = Math.min(minIndentation, child.computeMinIndentation(childOffset, textModel));\n                childOffset = lengthAdd(childOffset, child.length);\n            }\n        }\n        this.cachedMinIndentation = minIndentation;\n        return minIndentation;\n    }\n}\nclass TwoThreeListAstNode extends ListAstNode {\n    get childrenLength() {\n        return this._item3 !== null ? 3 : 2;\n    }\n    getChild(idx) {\n        switch (idx) {\n            case 0: return this._item1;\n            case 1: return this._item2;\n            case 2: return this._item3;\n        }\n        throw new Error('Invalid child index');\n    }\n    setChild(idx, node) {\n        switch (idx) {\n            case 0:\n                this._item1 = node;\n                return;\n            case 1:\n                this._item2 = node;\n                return;\n            case 2:\n                this._item3 = node;\n                return;\n        }\n        throw new Error('Invalid child index');\n    }\n    get children() {\n        return this._item3 ? [this._item1, this._item2, this._item3] : [this._item1, this._item2];\n    }\n    get item1() {\n        return this._item1;\n    }\n    get item2() {\n        return this._item2;\n    }\n    get item3() {\n        return this._item3;\n    }\n    constructor(length, listHeight, _item1, _item2, _item3, missingOpeningBracketIds) {\n        super(length, listHeight, missingOpeningBracketIds);\n        this._item1 = _item1;\n        this._item2 = _item2;\n        this._item3 = _item3;\n    }\n    deepClone() {\n        return new TwoThreeListAstNode(this.length, this.listHeight, this._item1.deepClone(), this._item2.deepClone(), this._item3 ? this._item3.deepClone() : null, this.missingOpeningBracketIds);\n    }\n    appendChildOfSameHeight(node) {\n        if (this._item3) {\n            throw new Error('Cannot append to a full (2,3) tree node');\n        }\n        this.throwIfImmutable();\n        this._item3 = node;\n        this.handleChildrenChanged();\n    }\n    unappendChild() {\n        if (!this._item3) {\n            throw new Error('Cannot remove from a non-full (2,3) tree node');\n        }\n        this.throwIfImmutable();\n        const result = this._item3;\n        this._item3 = null;\n        this.handleChildrenChanged();\n        return result;\n    }\n    prependChildOfSameHeight(node) {\n        if (this._item3) {\n            throw new Error('Cannot prepend to a full (2,3) tree node');\n        }\n        this.throwIfImmutable();\n        this._item3 = this._item2;\n        this._item2 = this._item1;\n        this._item1 = node;\n        this.handleChildrenChanged();\n    }\n    unprependChild() {\n        if (!this._item3) {\n            throw new Error('Cannot remove from a non-full (2,3) tree node');\n        }\n        this.throwIfImmutable();\n        const result = this._item1;\n        this._item1 = this._item2;\n        this._item2 = this._item3;\n        this._item3 = null;\n        this.handleChildrenChanged();\n        return result;\n    }\n    toMutable() {\n        return this;\n    }\n}\n/**\n * Immutable, if all children are immutable.\n*/\nclass Immutable23ListAstNode extends TwoThreeListAstNode {\n    toMutable() {\n        return new TwoThreeListAstNode(this.length, this.listHeight, this.item1, this.item2, this.item3, this.missingOpeningBracketIds);\n    }\n    throwIfImmutable() {\n        throw new Error('this instance is immutable');\n    }\n}\n/**\n * For debugging.\n*/\nclass ArrayListAstNode extends ListAstNode {\n    get childrenLength() {\n        return this._children.length;\n    }\n    getChild(idx) {\n        return this._children[idx];\n    }\n    setChild(idx, child) {\n        this._children[idx] = child;\n    }\n    get children() {\n        return this._children;\n    }\n    constructor(length, listHeight, _children, missingOpeningBracketIds) {\n        super(length, listHeight, missingOpeningBracketIds);\n        this._children = _children;\n    }\n    deepClone() {\n        const children = new Array(this._children.length);\n        for (let i = 0; i < this._children.length; i++) {\n            children[i] = this._children[i].deepClone();\n        }\n        return new ArrayListAstNode(this.length, this.listHeight, children, this.missingOpeningBracketIds);\n    }\n    appendChildOfSameHeight(node) {\n        this.throwIfImmutable();\n        this._children.push(node);\n        this.handleChildrenChanged();\n    }\n    unappendChild() {\n        this.throwIfImmutable();\n        const item = this._children.pop();\n        this.handleChildrenChanged();\n        return item;\n    }\n    prependChildOfSameHeight(node) {\n        this.throwIfImmutable();\n        this._children.unshift(node);\n        this.handleChildrenChanged();\n    }\n    unprependChild() {\n        this.throwIfImmutable();\n        const item = this._children.shift();\n        this.handleChildrenChanged();\n        return item;\n    }\n    toMutable() {\n        return this;\n    }\n}\n/**\n * Immutable, if all children are immutable.\n*/\nclass ImmutableArrayListAstNode extends ArrayListAstNode {\n    toMutable() {\n        return new ArrayListAstNode(this.length, this.listHeight, [...this.children], this.missingOpeningBracketIds);\n    }\n    throwIfImmutable() {\n        throw new Error('this instance is immutable');\n    }\n}\nconst emptyArray = [];\nclass ImmutableLeafAstNode extends BaseAstNode {\n    get listHeight() {\n        return 0;\n    }\n    get childrenLength() {\n        return 0;\n    }\n    getChild(idx) {\n        return null;\n    }\n    get children() {\n        return emptyArray;\n    }\n    deepClone() {\n        return this;\n    }\n}\nexport class TextAstNode extends ImmutableLeafAstNode {\n    get kind() {\n        return 0 /* AstNodeKind.Text */;\n    }\n    get missingOpeningBracketIds() {\n        return SmallImmutableSet.getEmpty();\n    }\n    canBeReused(_openedBracketIds) {\n        return true;\n    }\n    computeMinIndentation(offset, textModel) {\n        const start = lengthToObj(offset);\n        // Text ast nodes don't have partial indentation (ensured by the tokenizer).\n        // Thus, if this text node does not start at column 0, the first line cannot have any indentation at all.\n        const startLineNumber = (start.columnCount === 0 ? start.lineCount : start.lineCount + 1) + 1;\n        const endLineNumber = lengthGetLineCount(lengthAdd(offset, this.length)) + 1;\n        let result = Number.MAX_SAFE_INTEGER;\n        for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n            const firstNonWsColumn = textModel.getLineFirstNonWhitespaceColumn(lineNumber);\n            const lineContent = textModel.getLineContent(lineNumber);\n            if (firstNonWsColumn === 0) {\n                continue;\n            }\n            const visibleColumn = CursorColumns.visibleColumnFromColumn(lineContent, firstNonWsColumn, textModel.getOptions().tabSize);\n            result = Math.min(result, visibleColumn);\n        }\n        return result;\n    }\n}\nexport class BracketAstNode extends ImmutableLeafAstNode {\n    static create(length, bracketInfo, bracketIds) {\n        const node = new BracketAstNode(length, bracketInfo, bracketIds);\n        return node;\n    }\n    get kind() {\n        return 1 /* AstNodeKind.Bracket */;\n    }\n    get missingOpeningBracketIds() {\n        return SmallImmutableSet.getEmpty();\n    }\n    constructor(length, bracketInfo, \n    /**\n     * In case of a opening bracket, this is the id of the opening bracket.\n     * In case of a closing bracket, this contains the ids of all opening brackets it can close.\n    */\n    bracketIds) {\n        super(length);\n        this.bracketInfo = bracketInfo;\n        this.bracketIds = bracketIds;\n    }\n    get text() {\n        return this.bracketInfo.bracketText;\n    }\n    get languageId() {\n        return this.bracketInfo.languageId;\n    }\n    canBeReused(_openedBracketIds) {\n        // These nodes could be reused,\n        // but not in a general way.\n        // Their parent may be reused.\n        return false;\n    }\n    computeMinIndentation(offset, textModel) {\n        return Number.MAX_SAFE_INTEGER;\n    }\n}\nexport class InvalidBracketAstNode extends ImmutableLeafAstNode {\n    get kind() {\n        return 3 /* AstNodeKind.UnexpectedClosingBracket */;\n    }\n    constructor(closingBrackets, length) {\n        super(length);\n        this.missingOpeningBracketIds = closingBrackets;\n    }\n    canBeReused(openedBracketIds) {\n        return !openedBracketIds.intersects(this.missingOpeningBracketIds);\n    }\n    computeMinIndentation(offset, textModel) {\n        return Number.MAX_SAFE_INTEGER;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../core/range.js';\nimport { lengthAdd, lengthDiffNonNegative, lengthLessThanEqual, lengthOfString, lengthToObj, positionToLength, toLength } from './length.js';\nexport class TextEditInfo {\n    static fromModelContentChanges(changes) {\n        // Must be sorted in ascending order\n        const edits = changes.map(c => {\n            const range = Range.lift(c.range);\n            return new TextEditInfo(positionToLength(range.getStartPosition()), positionToLength(range.getEndPosition()), lengthOfString(c.text));\n        }).reverse();\n        return edits;\n    }\n    constructor(startOffset, endOffset, newLength) {\n        this.startOffset = startOffset;\n        this.endOffset = endOffset;\n        this.newLength = newLength;\n    }\n    toString() {\n        return `[${lengthToObj(this.startOffset)}...${lengthToObj(this.endOffset)}) -> ${lengthToObj(this.newLength)}`;\n    }\n}\nexport class BeforeEditPositionMapper {\n    /**\n     * @param edits Must be sorted by offset in ascending order.\n    */\n    constructor(edits) {\n        this.nextEditIdx = 0;\n        this.deltaOldToNewLineCount = 0;\n        this.deltaOldToNewColumnCount = 0;\n        this.deltaLineIdxInOld = -1;\n        this.edits = edits.map(edit => TextEditInfoCache.from(edit));\n    }\n    /**\n     * @param offset Must be equal to or greater than the last offset this method has been called with.\n    */\n    getOffsetBeforeChange(offset) {\n        this.adjustNextEdit(offset);\n        return this.translateCurToOld(offset);\n    }\n    /**\n     * @param offset Must be equal to or greater than the last offset this method has been called with.\n     * Returns null if there is no edit anymore.\n    */\n    getDistanceToNextChange(offset) {\n        this.adjustNextEdit(offset);\n        const nextEdit = this.edits[this.nextEditIdx];\n        const nextChangeOffset = nextEdit ? this.translateOldToCur(nextEdit.offsetObj) : null;\n        if (nextChangeOffset === null) {\n            return null;\n        }\n        return lengthDiffNonNegative(offset, nextChangeOffset);\n    }\n    translateOldToCur(oldOffsetObj) {\n        if (oldOffsetObj.lineCount === this.deltaLineIdxInOld) {\n            return toLength(oldOffsetObj.lineCount + this.deltaOldToNewLineCount, oldOffsetObj.columnCount + this.deltaOldToNewColumnCount);\n        }\n        else {\n            return toLength(oldOffsetObj.lineCount + this.deltaOldToNewLineCount, oldOffsetObj.columnCount);\n        }\n    }\n    translateCurToOld(newOffset) {\n        const offsetObj = lengthToObj(newOffset);\n        if (offsetObj.lineCount - this.deltaOldToNewLineCount === this.deltaLineIdxInOld) {\n            return toLength(offsetObj.lineCount - this.deltaOldToNewLineCount, offsetObj.columnCount - this.deltaOldToNewColumnCount);\n        }\n        else {\n            return toLength(offsetObj.lineCount - this.deltaOldToNewLineCount, offsetObj.columnCount);\n        }\n    }\n    adjustNextEdit(offset) {\n        while (this.nextEditIdx < this.edits.length) {\n            const nextEdit = this.edits[this.nextEditIdx];\n            // After applying the edit, what is its end offset (considering all previous edits)?\n            const nextEditEndOffsetInCur = this.translateOldToCur(nextEdit.endOffsetAfterObj);\n            if (lengthLessThanEqual(nextEditEndOffsetInCur, offset)) {\n                // We are after the edit, skip it\n                this.nextEditIdx++;\n                const nextEditEndOffsetInCurObj = lengthToObj(nextEditEndOffsetInCur);\n                // Before applying the edit, what is its end offset (considering all previous edits)?\n                const nextEditEndOffsetBeforeInCurObj = lengthToObj(this.translateOldToCur(nextEdit.endOffsetBeforeObj));\n                const lineDelta = nextEditEndOffsetInCurObj.lineCount - nextEditEndOffsetBeforeInCurObj.lineCount;\n                this.deltaOldToNewLineCount += lineDelta;\n                const previousColumnDelta = this.deltaLineIdxInOld === nextEdit.endOffsetBeforeObj.lineCount ? this.deltaOldToNewColumnCount : 0;\n                const columnDelta = nextEditEndOffsetInCurObj.columnCount - nextEditEndOffsetBeforeInCurObj.columnCount;\n                this.deltaOldToNewColumnCount = previousColumnDelta + columnDelta;\n                this.deltaLineIdxInOld = nextEdit.endOffsetBeforeObj.lineCount;\n            }\n            else {\n                // We are in or before the edit.\n                break;\n            }\n        }\n    }\n}\nclass TextEditInfoCache {\n    static from(edit) {\n        return new TextEditInfoCache(edit.startOffset, edit.endOffset, edit.newLength);\n    }\n    constructor(startOffset, endOffset, textLength) {\n        this.endOffsetBeforeObj = lengthToObj(endOffset);\n        this.endOffsetAfterObj = lengthToObj(lengthAdd(startOffset, textLength));\n        this.offsetObj = lengthToObj(startOffset);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { BracketInfo, BracketPairWithMinIndentationInfo } from '../../../textModelBracketPairs.js';\nimport { TextEditInfo } from './beforeEditPositionMapper.js';\nimport { LanguageAgnosticBracketTokens } from './brackets.js';\nimport { lengthAdd, lengthGreaterThanEqual, lengthLessThan, lengthLessThanEqual, lengthsToRange, lengthZero, positionToLength, toLength } from './length.js';\nimport { parseDocument } from './parser.js';\nimport { DenseKeyProvider } from './smallImmutableSet.js';\nimport { FastTokenizer, TextBufferTokenizer } from './tokenizer.js';\nimport { CallbackIterable } from '../../../../../base/common/arrays.js';\nimport { combineTextEditInfos } from './combineTextEditInfos.js';\nexport class BracketPairsTree extends Disposable {\n    didLanguageChange(languageId) {\n        return this.brackets.didLanguageChange(languageId);\n    }\n    constructor(textModel, getLanguageConfiguration) {\n        super();\n        this.textModel = textModel;\n        this.getLanguageConfiguration = getLanguageConfiguration;\n        this.didChangeEmitter = new Emitter();\n        this.denseKeyProvider = new DenseKeyProvider();\n        this.brackets = new LanguageAgnosticBracketTokens(this.denseKeyProvider, this.getLanguageConfiguration);\n        this.onDidChange = this.didChangeEmitter.event;\n        this.queuedTextEditsForInitialAstWithoutTokens = [];\n        this.queuedTextEdits = [];\n        if (!textModel.tokenization.hasTokens) {\n            const brackets = this.brackets.getSingleLanguageBracketTokens(this.textModel.getLanguageId());\n            const tokenizer = new FastTokenizer(this.textModel.getValue(), brackets);\n            this.initialAstWithoutTokens = parseDocument(tokenizer, [], undefined, true);\n            this.astWithTokens = this.initialAstWithoutTokens;\n        }\n        else if (textModel.tokenization.backgroundTokenizationState === 2 /* BackgroundTokenizationState.Completed */) {\n            // Skip the initial ast, as there is no flickering.\n            // Directly create the tree with token information.\n            this.initialAstWithoutTokens = undefined;\n            this.astWithTokens = this.parseDocumentFromTextBuffer([], undefined, false);\n        }\n        else {\n            // We missed some token changes already, so we cannot use the fast tokenizer + delta increments\n            this.initialAstWithoutTokens = this.parseDocumentFromTextBuffer([], undefined, true);\n            this.astWithTokens = this.initialAstWithoutTokens;\n        }\n    }\n    //#region TextModel events\n    handleDidChangeBackgroundTokenizationState() {\n        if (this.textModel.tokenization.backgroundTokenizationState === 2 /* BackgroundTokenizationState.Completed */) {\n            const wasUndefined = this.initialAstWithoutTokens === undefined;\n            // Clear the initial tree as we can use the tree with token information now.\n            this.initialAstWithoutTokens = undefined;\n            if (!wasUndefined) {\n                this.didChangeEmitter.fire();\n            }\n        }\n    }\n    handleDidChangeTokens({ ranges }) {\n        const edits = ranges.map(r => new TextEditInfo(toLength(r.fromLineNumber - 1, 0), toLength(r.toLineNumber, 0), toLength(r.toLineNumber - r.fromLineNumber + 1, 0)));\n        this.handleEdits(edits, true);\n        if (!this.initialAstWithoutTokens) {\n            this.didChangeEmitter.fire();\n        }\n    }\n    handleContentChanged(change) {\n        const edits = TextEditInfo.fromModelContentChanges(change.changes);\n        this.handleEdits(edits, false);\n    }\n    handleEdits(edits, tokenChange) {\n        // Lazily queue the edits and only apply them when the tree is accessed.\n        const result = combineTextEditInfos(this.queuedTextEdits, edits);\n        this.queuedTextEdits = result;\n        if (this.initialAstWithoutTokens && !tokenChange) {\n            this.queuedTextEditsForInitialAstWithoutTokens = combineTextEditInfos(this.queuedTextEditsForInitialAstWithoutTokens, edits);\n        }\n    }\n    //#endregion\n    flushQueue() {\n        if (this.queuedTextEdits.length > 0) {\n            this.astWithTokens = this.parseDocumentFromTextBuffer(this.queuedTextEdits, this.astWithTokens, false);\n            this.queuedTextEdits = [];\n        }\n        if (this.queuedTextEditsForInitialAstWithoutTokens.length > 0) {\n            if (this.initialAstWithoutTokens) {\n                this.initialAstWithoutTokens = this.parseDocumentFromTextBuffer(this.queuedTextEditsForInitialAstWithoutTokens, this.initialAstWithoutTokens, false);\n            }\n            this.queuedTextEditsForInitialAstWithoutTokens = [];\n        }\n    }\n    /**\n     * @pure (only if isPure = true)\n    */\n    parseDocumentFromTextBuffer(edits, previousAst, immutable) {\n        // Is much faster if `isPure = false`.\n        const isPure = false;\n        const previousAstClone = isPure ? previousAst?.deepClone() : previousAst;\n        const tokenizer = new TextBufferTokenizer(this.textModel, this.brackets);\n        const result = parseDocument(tokenizer, edits, previousAstClone, immutable);\n        return result;\n    }\n    getBracketsInRange(range, onlyColorizedBrackets) {\n        this.flushQueue();\n        const startOffset = toLength(range.startLineNumber - 1, range.startColumn - 1);\n        const endOffset = toLength(range.endLineNumber - 1, range.endColumn - 1);\n        return new CallbackIterable(cb => {\n            const node = this.initialAstWithoutTokens || this.astWithTokens;\n            collectBrackets(node, lengthZero, node.length, startOffset, endOffset, cb, 0, 0, new Map(), onlyColorizedBrackets);\n        });\n    }\n    getBracketPairsInRange(range, includeMinIndentation) {\n        this.flushQueue();\n        const startLength = positionToLength(range.getStartPosition());\n        const endLength = positionToLength(range.getEndPosition());\n        return new CallbackIterable(cb => {\n            const node = this.initialAstWithoutTokens || this.astWithTokens;\n            const context = new CollectBracketPairsContext(cb, includeMinIndentation, this.textModel);\n            collectBracketPairs(node, lengthZero, node.length, startLength, endLength, context, 0, new Map());\n        });\n    }\n    getFirstBracketAfter(position) {\n        this.flushQueue();\n        const node = this.initialAstWithoutTokens || this.astWithTokens;\n        return getFirstBracketAfter(node, lengthZero, node.length, positionToLength(position));\n    }\n    getFirstBracketBefore(position) {\n        this.flushQueue();\n        const node = this.initialAstWithoutTokens || this.astWithTokens;\n        return getFirstBracketBefore(node, lengthZero, node.length, positionToLength(position));\n    }\n}\nfunction getFirstBracketBefore(node, nodeOffsetStart, nodeOffsetEnd, position) {\n    if (node.kind === 4 /* AstNodeKind.List */ || node.kind === 2 /* AstNodeKind.Pair */) {\n        const lengths = [];\n        for (const child of node.children) {\n            nodeOffsetEnd = lengthAdd(nodeOffsetStart, child.length);\n            lengths.push({ nodeOffsetStart, nodeOffsetEnd });\n            nodeOffsetStart = nodeOffsetEnd;\n        }\n        for (let i = lengths.length - 1; i >= 0; i--) {\n            const { nodeOffsetStart, nodeOffsetEnd } = lengths[i];\n            if (lengthLessThan(nodeOffsetStart, position)) {\n                const result = getFirstBracketBefore(node.children[i], nodeOffsetStart, nodeOffsetEnd, position);\n                if (result) {\n                    return result;\n                }\n            }\n        }\n        return null;\n    }\n    else if (node.kind === 3 /* AstNodeKind.UnexpectedClosingBracket */) {\n        return null;\n    }\n    else if (node.kind === 1 /* AstNodeKind.Bracket */) {\n        const range = lengthsToRange(nodeOffsetStart, nodeOffsetEnd);\n        return {\n            bracketInfo: node.bracketInfo,\n            range\n        };\n    }\n    return null;\n}\nfunction getFirstBracketAfter(node, nodeOffsetStart, nodeOffsetEnd, position) {\n    if (node.kind === 4 /* AstNodeKind.List */ || node.kind === 2 /* AstNodeKind.Pair */) {\n        for (const child of node.children) {\n            nodeOffsetEnd = lengthAdd(nodeOffsetStart, child.length);\n            if (lengthLessThan(position, nodeOffsetEnd)) {\n                const result = getFirstBracketAfter(child, nodeOffsetStart, nodeOffsetEnd, position);\n                if (result) {\n                    return result;\n                }\n            }\n            nodeOffsetStart = nodeOffsetEnd;\n        }\n        return null;\n    }\n    else if (node.kind === 3 /* AstNodeKind.UnexpectedClosingBracket */) {\n        return null;\n    }\n    else if (node.kind === 1 /* AstNodeKind.Bracket */) {\n        const range = lengthsToRange(nodeOffsetStart, nodeOffsetEnd);\n        return {\n            bracketInfo: node.bracketInfo,\n            range\n        };\n    }\n    return null;\n}\nfunction collectBrackets(node, nodeOffsetStart, nodeOffsetEnd, startOffset, endOffset, push, level, nestingLevelOfEqualBracketType, levelPerBracketType, onlyColorizedBrackets, parentPairIsIncomplete = false) {\n    if (level > 200) {\n        return true;\n    }\n    whileLoop: while (true) {\n        switch (node.kind) {\n            case 4 /* AstNodeKind.List */: {\n                const childCount = node.childrenLength;\n                for (let i = 0; i < childCount; i++) {\n                    const child = node.getChild(i);\n                    if (!child) {\n                        continue;\n                    }\n                    nodeOffsetEnd = lengthAdd(nodeOffsetStart, child.length);\n                    if (lengthLessThanEqual(nodeOffsetStart, endOffset) &&\n                        lengthGreaterThanEqual(nodeOffsetEnd, startOffset)) {\n                        const childEndsAfterEnd = lengthGreaterThanEqual(nodeOffsetEnd, endOffset);\n                        if (childEndsAfterEnd) {\n                            // No child after this child in the requested window, don't recurse\n                            node = child;\n                            continue whileLoop;\n                        }\n                        const shouldContinue = collectBrackets(child, nodeOffsetStart, nodeOffsetEnd, startOffset, endOffset, push, level, 0, levelPerBracketType, onlyColorizedBrackets);\n                        if (!shouldContinue) {\n                            return false;\n                        }\n                    }\n                    nodeOffsetStart = nodeOffsetEnd;\n                }\n                return true;\n            }\n            case 2 /* AstNodeKind.Pair */: {\n                const colorize = !onlyColorizedBrackets || !node.closingBracket || node.closingBracket.bracketInfo.closesColorized(node.openingBracket.bracketInfo);\n                let levelPerBracket = 0;\n                if (levelPerBracketType) {\n                    let existing = levelPerBracketType.get(node.openingBracket.text);\n                    if (existing === undefined) {\n                        existing = 0;\n                    }\n                    levelPerBracket = existing;\n                    if (colorize) {\n                        existing++;\n                        levelPerBracketType.set(node.openingBracket.text, existing);\n                    }\n                }\n                const childCount = node.childrenLength;\n                for (let i = 0; i < childCount; i++) {\n                    const child = node.getChild(i);\n                    if (!child) {\n                        continue;\n                    }\n                    nodeOffsetEnd = lengthAdd(nodeOffsetStart, child.length);\n                    if (lengthLessThanEqual(nodeOffsetStart, endOffset) &&\n                        lengthGreaterThanEqual(nodeOffsetEnd, startOffset)) {\n                        const childEndsAfterEnd = lengthGreaterThanEqual(nodeOffsetEnd, endOffset);\n                        if (childEndsAfterEnd && child.kind !== 1 /* AstNodeKind.Bracket */) {\n                            // No child after this child in the requested window, don't recurse\n                            // Don't do this for brackets because of unclosed/unopened brackets\n                            node = child;\n                            if (colorize) {\n                                level++;\n                                nestingLevelOfEqualBracketType = levelPerBracket + 1;\n                            }\n                            else {\n                                nestingLevelOfEqualBracketType = levelPerBracket;\n                            }\n                            continue whileLoop;\n                        }\n                        if (colorize || child.kind !== 1 /* AstNodeKind.Bracket */ || !node.closingBracket) {\n                            const shouldContinue = collectBrackets(child, nodeOffsetStart, nodeOffsetEnd, startOffset, endOffset, push, colorize ? level + 1 : level, colorize ? levelPerBracket + 1 : levelPerBracket, levelPerBracketType, onlyColorizedBrackets, !node.closingBracket);\n                            if (!shouldContinue) {\n                                return false;\n                            }\n                        }\n                    }\n                    nodeOffsetStart = nodeOffsetEnd;\n                }\n                levelPerBracketType?.set(node.openingBracket.text, levelPerBracket);\n                return true;\n            }\n            case 3 /* AstNodeKind.UnexpectedClosingBracket */: {\n                const range = lengthsToRange(nodeOffsetStart, nodeOffsetEnd);\n                return push(new BracketInfo(range, level - 1, 0, true));\n            }\n            case 1 /* AstNodeKind.Bracket */: {\n                const range = lengthsToRange(nodeOffsetStart, nodeOffsetEnd);\n                return push(new BracketInfo(range, level - 1, nestingLevelOfEqualBracketType - 1, parentPairIsIncomplete));\n            }\n            case 0 /* AstNodeKind.Text */:\n                return true;\n        }\n    }\n}\nclass CollectBracketPairsContext {\n    constructor(push, includeMinIndentation, textModel) {\n        this.push = push;\n        this.includeMinIndentation = includeMinIndentation;\n        this.textModel = textModel;\n    }\n}\nfunction collectBracketPairs(node, nodeOffsetStart, nodeOffsetEnd, startOffset, endOffset, context, level, levelPerBracketType) {\n    if (level > 200) {\n        return true;\n    }\n    let shouldContinue = true;\n    if (node.kind === 2 /* AstNodeKind.Pair */) {\n        let levelPerBracket = 0;\n        if (levelPerBracketType) {\n            let existing = levelPerBracketType.get(node.openingBracket.text);\n            if (existing === undefined) {\n                existing = 0;\n            }\n            levelPerBracket = existing;\n            existing++;\n            levelPerBracketType.set(node.openingBracket.text, existing);\n        }\n        const openingBracketEnd = lengthAdd(nodeOffsetStart, node.openingBracket.length);\n        let minIndentation = -1;\n        if (context.includeMinIndentation) {\n            minIndentation = node.computeMinIndentation(nodeOffsetStart, context.textModel);\n        }\n        shouldContinue = context.push(new BracketPairWithMinIndentationInfo(lengthsToRange(nodeOffsetStart, nodeOffsetEnd), lengthsToRange(nodeOffsetStart, openingBracketEnd), node.closingBracket\n            ? lengthsToRange(lengthAdd(openingBracketEnd, node.child?.length || lengthZero), nodeOffsetEnd)\n            : undefined, level, levelPerBracket, node, minIndentation));\n        nodeOffsetStart = openingBracketEnd;\n        if (shouldContinue && node.child) {\n            const child = node.child;\n            nodeOffsetEnd = lengthAdd(nodeOffsetStart, child.length);\n            if (lengthLessThanEqual(nodeOffsetStart, endOffset) &&\n                lengthGreaterThanEqual(nodeOffsetEnd, startOffset)) {\n                shouldContinue = collectBracketPairs(child, nodeOffsetStart, nodeOffsetEnd, startOffset, endOffset, context, level + 1, levelPerBracketType);\n                if (!shouldContinue) {\n                    return false;\n                }\n            }\n        }\n        levelPerBracketType?.set(node.openingBracket.text, levelPerBracket);\n    }\n    else {\n        let curOffset = nodeOffsetStart;\n        for (const child of node.children) {\n            const childOffset = curOffset;\n            curOffset = lengthAdd(curOffset, child.length);\n            if (lengthLessThanEqual(childOffset, endOffset) &&\n                lengthLessThanEqual(startOffset, curOffset)) {\n                shouldContinue = collectBracketPairs(child, childOffset, curOffset, startOffset, endOffset, context, level, levelPerBracketType);\n                if (!shouldContinue) {\n                    return false;\n                }\n            }\n        }\n    }\n    return shouldContinue;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { escapeRegExpCharacters } from '../../../../../base/common/strings.js';\nimport { BracketAstNode } from './ast.js';\nimport { toLength } from './length.js';\nimport { identityKeyProvider, SmallImmutableSet } from './smallImmutableSet.js';\nimport { Token } from './tokenizer.js';\nexport class BracketTokens {\n    static createFromLanguage(configuration, denseKeyProvider) {\n        function getId(bracketInfo) {\n            return denseKeyProvider.getKey(`${bracketInfo.languageId}:::${bracketInfo.bracketText}`);\n        }\n        const map = new Map();\n        for (const openingBracket of configuration.bracketsNew.openingBrackets) {\n            const length = toLength(0, openingBracket.bracketText.length);\n            const openingTextId = getId(openingBracket);\n            const bracketIds = SmallImmutableSet.getEmpty().add(openingTextId, identityKeyProvider);\n            map.set(openingBracket.bracketText, new Token(length, 1 /* TokenKind.OpeningBracket */, openingTextId, bracketIds, BracketAstNode.create(length, openingBracket, bracketIds)));\n        }\n        for (const closingBracket of configuration.bracketsNew.closingBrackets) {\n            const length = toLength(0, closingBracket.bracketText.length);\n            let bracketIds = SmallImmutableSet.getEmpty();\n            const closingBrackets = closingBracket.getOpeningBrackets();\n            for (const bracket of closingBrackets) {\n                bracketIds = bracketIds.add(getId(bracket), identityKeyProvider);\n            }\n            map.set(closingBracket.bracketText, new Token(length, 2 /* TokenKind.ClosingBracket */, getId(closingBrackets[0]), bracketIds, BracketAstNode.create(length, closingBracket, bracketIds)));\n        }\n        return new BracketTokens(map);\n    }\n    constructor(map) {\n        this.map = map;\n        this.hasRegExp = false;\n        this._regExpGlobal = null;\n    }\n    getRegExpStr() {\n        if (this.isEmpty) {\n            return null;\n        }\n        else {\n            const keys = [...this.map.keys()];\n            keys.sort();\n            keys.reverse();\n            return keys.map(k => prepareBracketForRegExp(k)).join('|');\n        }\n    }\n    /**\n     * Returns null if there is no such regexp (because there are no brackets).\n    */\n    get regExpGlobal() {\n        if (!this.hasRegExp) {\n            const regExpStr = this.getRegExpStr();\n            this._regExpGlobal = regExpStr ? new RegExp(regExpStr, 'gi') : null;\n            this.hasRegExp = true;\n        }\n        return this._regExpGlobal;\n    }\n    getToken(value) {\n        return this.map.get(value.toLowerCase());\n    }\n    findClosingTokenText(openingBracketIds) {\n        for (const [closingText, info] of this.map) {\n            if (info.kind === 2 /* TokenKind.ClosingBracket */ && info.bracketIds.intersects(openingBracketIds)) {\n                return closingText;\n            }\n        }\n        return undefined;\n    }\n    get isEmpty() {\n        return this.map.size === 0;\n    }\n}\nfunction prepareBracketForRegExp(str) {\n    let escaped = escapeRegExpCharacters(str);\n    // These bracket pair delimiters start or end with letters\n    // see https://github.com/microsoft/vscode/issues/132162 https://github.com/microsoft/vscode/issues/150440\n    if (/^[\\w ]+/.test(str)) {\n        escaped = `\\\\b${escaped}`;\n    }\n    if (/[\\w ]+$/.test(str)) {\n        escaped = `${escaped}\\\\b`;\n    }\n    return escaped;\n}\nexport class LanguageAgnosticBracketTokens {\n    constructor(denseKeyProvider, getLanguageConfiguration) {\n        this.denseKeyProvider = denseKeyProvider;\n        this.getLanguageConfiguration = getLanguageConfiguration;\n        this.languageIdToBracketTokens = new Map();\n    }\n    didLanguageChange(languageId) {\n        // Report a change whenever the language configuration updates.\n        return this.languageIdToBracketTokens.has(languageId);\n    }\n    getSingleLanguageBracketTokens(languageId) {\n        let singleLanguageBracketTokens = this.languageIdToBracketTokens.get(languageId);\n        if (!singleLanguageBracketTokens) {\n            singleLanguageBracketTokens = BracketTokens.createFromLanguage(this.getLanguageConfiguration(languageId), this.denseKeyProvider);\n            this.languageIdToBracketTokens.set(languageId, singleLanguageBracketTokens);\n        }\n        return singleLanguageBracketTokens;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ArrayQueue } from '../../../../../base/common/arrays.js';\nimport { TextEditInfo } from './beforeEditPositionMapper.js';\nimport { lengthAdd, lengthDiffNonNegative, lengthEquals, lengthIsZero, lengthToObj, lengthZero, sumLengths } from './length.js';\nexport function combineTextEditInfos(textEditInfoFirst, textEditInfoSecond) {\n    if (textEditInfoFirst.length === 0) {\n        return textEditInfoSecond;\n    }\n    if (textEditInfoSecond.length === 0) {\n        return textEditInfoFirst;\n    }\n    // s0: State before any edits\n    const s0ToS1Map = new ArrayQueue(toLengthMapping(textEditInfoFirst));\n    // s1: State after first edit, but before second edit\n    const s1ToS2Map = toLengthMapping(textEditInfoSecond);\n    s1ToS2Map.push({ modified: false, lengthBefore: undefined, lengthAfter: undefined }); // Copy everything from old to new\n    // s2: State after both edits\n    let curItem = s0ToS1Map.dequeue();\n    /**\n     * @param s1Length Use undefined for length \"infinity\"\n     */\n    function nextS0ToS1MapWithS1LengthOf(s1Length) {\n        if (s1Length === undefined) {\n            const arr = s0ToS1Map.takeWhile(v => true) || [];\n            if (curItem) {\n                arr.unshift(curItem);\n            }\n            return arr;\n        }\n        const result = [];\n        while (curItem && !lengthIsZero(s1Length)) {\n            const [item, remainingItem] = curItem.splitAt(s1Length);\n            result.push(item);\n            s1Length = lengthDiffNonNegative(item.lengthAfter, s1Length);\n            curItem = remainingItem ?? s0ToS1Map.dequeue();\n        }\n        if (!lengthIsZero(s1Length)) {\n            result.push(new LengthMapping(false, s1Length, s1Length));\n        }\n        return result;\n    }\n    const result = [];\n    function pushEdit(startOffset, endOffset, newLength) {\n        if (result.length > 0 && lengthEquals(result[result.length - 1].endOffset, startOffset)) {\n            const lastResult = result[result.length - 1];\n            result[result.length - 1] = new TextEditInfo(lastResult.startOffset, endOffset, lengthAdd(lastResult.newLength, newLength));\n        }\n        else {\n            result.push({ startOffset, endOffset, newLength });\n        }\n    }\n    let s0offset = lengthZero;\n    for (const s1ToS2 of s1ToS2Map) {\n        const s0ToS1Map = nextS0ToS1MapWithS1LengthOf(s1ToS2.lengthBefore);\n        if (s1ToS2.modified) {\n            const s0Length = sumLengths(s0ToS1Map, s => s.lengthBefore);\n            const s0EndOffset = lengthAdd(s0offset, s0Length);\n            pushEdit(s0offset, s0EndOffset, s1ToS2.lengthAfter);\n            s0offset = s0EndOffset;\n        }\n        else {\n            for (const s1 of s0ToS1Map) {\n                const s0startOffset = s0offset;\n                s0offset = lengthAdd(s0offset, s1.lengthBefore);\n                if (s1.modified) {\n                    pushEdit(s0startOffset, s0offset, s1.lengthAfter);\n                }\n            }\n        }\n    }\n    return result;\n}\nclass LengthMapping {\n    constructor(\n    /**\n     * If false, length before and length after equal.\n     */\n    modified, lengthBefore, lengthAfter) {\n        this.modified = modified;\n        this.lengthBefore = lengthBefore;\n        this.lengthAfter = lengthAfter;\n    }\n    splitAt(lengthAfter) {\n        const remainingLengthAfter = lengthDiffNonNegative(lengthAfter, this.lengthAfter);\n        if (lengthEquals(remainingLengthAfter, lengthZero)) {\n            return [this, undefined];\n        }\n        else if (this.modified) {\n            return [\n                new LengthMapping(this.modified, this.lengthBefore, lengthAfter),\n                new LengthMapping(this.modified, lengthZero, remainingLengthAfter)\n            ];\n        }\n        else {\n            return [\n                new LengthMapping(this.modified, lengthAfter, lengthAfter),\n                new LengthMapping(this.modified, remainingLengthAfter, remainingLengthAfter)\n            ];\n        }\n    }\n    toString() {\n        return `${this.modified ? 'M' : 'U'}:${lengthToObj(this.lengthBefore)} -> ${lengthToObj(this.lengthAfter)}`;\n    }\n}\nfunction toLengthMapping(textEditInfos) {\n    const result = [];\n    let lastOffset = lengthZero;\n    for (const textEditInfo of textEditInfos) {\n        const spaceLength = lengthDiffNonNegative(lastOffset, textEditInfo.startOffset);\n        if (!lengthIsZero(spaceLength)) {\n            result.push(new LengthMapping(false, spaceLength, spaceLength));\n        }\n        const lengthBefore = lengthDiffNonNegative(textEditInfo.startOffset, textEditInfo.endOffset);\n        result.push(new LengthMapping(true, lengthBefore, textEditInfo.newLength));\n        lastOffset = textEditInfo.endOffset;\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ListAstNode } from './ast.js';\n/**\n * Concatenates a list of (2,3) AstNode's into a single (2,3) AstNode.\n * This mutates the items of the input array!\n * If all items have the same height, this method has runtime O(items.length).\n * Otherwise, it has runtime O(items.length * max(log(items.length), items.max(i => i.height))).\n*/\nexport function concat23Trees(items) {\n    if (items.length === 0) {\n        return null;\n    }\n    if (items.length === 1) {\n        return items[0];\n    }\n    let i = 0;\n    /**\n     * Reads nodes of same height and concatenates them to a single node.\n    */\n    function readNode() {\n        if (i >= items.length) {\n            return null;\n        }\n        const start = i;\n        const height = items[start].listHeight;\n        i++;\n        while (i < items.length && items[i].listHeight === height) {\n            i++;\n        }\n        if (i - start >= 2) {\n            return concat23TreesOfSameHeight(start === 0 && i === items.length ? items : items.slice(start, i), false);\n        }\n        else {\n            return items[start];\n        }\n    }\n    // The items might not have the same height.\n    // We merge all items by using a binary concat operator.\n    let first = readNode(); // There must be a first item\n    let second = readNode();\n    if (!second) {\n        return first;\n    }\n    for (let item = readNode(); item; item = readNode()) {\n        // Prefer concatenating smaller trees, as the runtime of concat depends on the tree height.\n        if (heightDiff(first, second) <= heightDiff(second, item)) {\n            first = concat(first, second);\n            second = item;\n        }\n        else {\n            second = concat(second, item);\n        }\n    }\n    const result = concat(first, second);\n    return result;\n}\nexport function concat23TreesOfSameHeight(items, createImmutableLists = false) {\n    if (items.length === 0) {\n        return null;\n    }\n    if (items.length === 1) {\n        return items[0];\n    }\n    let length = items.length;\n    // All trees have same height, just create parent nodes.\n    while (length > 3) {\n        const newLength = length >> 1;\n        for (let i = 0; i < newLength; i++) {\n            const j = i << 1;\n            items[i] = ListAstNode.create23(items[j], items[j + 1], j + 3 === length ? items[j + 2] : null, createImmutableLists);\n        }\n        length = newLength;\n    }\n    return ListAstNode.create23(items[0], items[1], length >= 3 ? items[2] : null, createImmutableLists);\n}\nfunction heightDiff(node1, node2) {\n    return Math.abs(node1.listHeight - node2.listHeight);\n}\nfunction concat(node1, node2) {\n    if (node1.listHeight === node2.listHeight) {\n        return ListAstNode.create23(node1, node2, null, false);\n    }\n    else if (node1.listHeight > node2.listHeight) {\n        // node1 is the tree we want to insert into\n        return append(node1, node2);\n    }\n    else {\n        return prepend(node2, node1);\n    }\n}\n/**\n * Appends the given node to the end of this (2,3) tree.\n * Returns the new root.\n*/\nfunction append(list, nodeToAppend) {\n    list = list.toMutable();\n    let curNode = list;\n    const parents = [];\n    let nodeToAppendOfCorrectHeight;\n    while (true) {\n        // assert nodeToInsert.listHeight <= curNode.listHeight\n        if (nodeToAppend.listHeight === curNode.listHeight) {\n            nodeToAppendOfCorrectHeight = nodeToAppend;\n            break;\n        }\n        // assert 0 <= nodeToInsert.listHeight < curNode.listHeight\n        if (curNode.kind !== 4 /* AstNodeKind.List */) {\n            throw new Error('unexpected');\n        }\n        parents.push(curNode);\n        // assert 2 <= curNode.childrenLength <= 3\n        curNode = curNode.makeLastElementMutable();\n    }\n    // assert nodeToAppendOfCorrectHeight!.listHeight === curNode.listHeight\n    for (let i = parents.length - 1; i >= 0; i--) {\n        const parent = parents[i];\n        if (nodeToAppendOfCorrectHeight) {\n            // Can we take the element?\n            if (parent.childrenLength >= 3) {\n                // assert parent.childrenLength === 3 && parent.listHeight === nodeToAppendOfCorrectHeight.listHeight + 1\n                // we need to split to maintain (2,3)-tree property.\n                // Send the third element + the new element to the parent.\n                nodeToAppendOfCorrectHeight = ListAstNode.create23(parent.unappendChild(), nodeToAppendOfCorrectHeight, null, false);\n            }\n            else {\n                parent.appendChildOfSameHeight(nodeToAppendOfCorrectHeight);\n                nodeToAppendOfCorrectHeight = undefined;\n            }\n        }\n        else {\n            parent.handleChildrenChanged();\n        }\n    }\n    if (nodeToAppendOfCorrectHeight) {\n        return ListAstNode.create23(list, nodeToAppendOfCorrectHeight, null, false);\n    }\n    else {\n        return list;\n    }\n}\n/**\n * Prepends the given node to the end of this (2,3) tree.\n * Returns the new root.\n*/\nfunction prepend(list, nodeToAppend) {\n    list = list.toMutable();\n    let curNode = list;\n    const parents = [];\n    // assert nodeToInsert.listHeight <= curNode.listHeight\n    while (nodeToAppend.listHeight !== curNode.listHeight) {\n        // assert 0 <= nodeToInsert.listHeight < curNode.listHeight\n        if (curNode.kind !== 4 /* AstNodeKind.List */) {\n            throw new Error('unexpected');\n        }\n        parents.push(curNode);\n        // assert 2 <= curNode.childrenFast.length <= 3\n        curNode = curNode.makeFirstElementMutable();\n    }\n    let nodeToPrependOfCorrectHeight = nodeToAppend;\n    // assert nodeToAppendOfCorrectHeight!.listHeight === curNode.listHeight\n    for (let i = parents.length - 1; i >= 0; i--) {\n        const parent = parents[i];\n        if (nodeToPrependOfCorrectHeight) {\n            // Can we take the element?\n            if (parent.childrenLength >= 3) {\n                // assert parent.childrenLength === 3 && parent.listHeight === nodeToAppendOfCorrectHeight.listHeight + 1\n                // we need to split to maintain (2,3)-tree property.\n                // Send the third element + the new element to the parent.\n                nodeToPrependOfCorrectHeight = ListAstNode.create23(nodeToPrependOfCorrectHeight, parent.unprependChild(), null, false);\n            }\n            else {\n                parent.prependChildOfSameHeight(nodeToPrependOfCorrectHeight);\n                nodeToPrependOfCorrectHeight = undefined;\n            }\n        }\n        else {\n            parent.handleChildrenChanged();\n        }\n    }\n    if (nodeToPrependOfCorrectHeight) {\n        return ListAstNode.create23(nodeToPrependOfCorrectHeight, list, null, false);\n    }\n    else {\n        return list;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { splitLines } from '../../../../../base/common/strings.js';\nimport { Range } from '../../../core/range.js';\nimport { TextLength } from '../../../core/textLength.js';\n/**\n * The end must be greater than or equal to the start.\n*/\nexport function lengthDiff(startLineCount, startColumnCount, endLineCount, endColumnCount) {\n    return (startLineCount !== endLineCount)\n        ? toLength(endLineCount - startLineCount, endColumnCount)\n        : toLength(0, endColumnCount - startColumnCount);\n}\nexport const lengthZero = 0;\nexport function lengthIsZero(length) {\n    return length === 0;\n}\n/*\n * We have 52 bits available in a JS number.\n * We use the upper 26 bits to store the line and the lower 26 bits to store the column.\n */\n///*\nconst factor = 2 ** 26;\n/*/\nconst factor = 1000000;\n// */\nexport function toLength(lineCount, columnCount) {\n    // llllllllllllllllllllllllllcccccccccccccccccccccccccc (52 bits)\n    //       line count (26 bits)    column count (26 bits)\n    // If there is no overflow (all values/sums below 2^26 = 67108864),\n    // we have `toLength(lns1, cols1) + toLength(lns2, cols2) = toLength(lns1 + lns2, cols1 + cols2)`.\n    return (lineCount * factor + columnCount);\n}\nexport function lengthToObj(length) {\n    const l = length;\n    const lineCount = Math.floor(l / factor);\n    const columnCount = l - lineCount * factor;\n    return new TextLength(lineCount, columnCount);\n}\nexport function lengthGetLineCount(length) {\n    return Math.floor(length / factor);\n}\n/**\n * Returns the amount of columns of the given length, assuming that it does not span any line.\n*/\nexport function lengthGetColumnCountIfZeroLineCount(length) {\n    return length;\n}\nexport function lengthAdd(l1, l2) {\n    let r = l1 + l2;\n    if (l2 >= factor) {\n        r = r - (l1 % factor);\n    }\n    return r;\n}\nexport function sumLengths(items, lengthFn) {\n    return items.reduce((a, b) => lengthAdd(a, lengthFn(b)), lengthZero);\n}\nexport function lengthEquals(length1, length2) {\n    return length1 === length2;\n}\n/**\n * Returns a non negative length `result` such that `lengthAdd(length1, result) = length2`, or zero if such length does not exist.\n */\nexport function lengthDiffNonNegative(length1, length2) {\n    const l1 = length1;\n    const l2 = length2;\n    const diff = l2 - l1;\n    if (diff <= 0) {\n        // line-count of length1 is higher than line-count of length2\n        // or they are equal and column-count of length1 is higher than column-count of length2\n        return lengthZero;\n    }\n    const lineCount1 = Math.floor(l1 / factor);\n    const lineCount2 = Math.floor(l2 / factor);\n    const colCount2 = l2 - lineCount2 * factor;\n    if (lineCount1 === lineCount2) {\n        const colCount1 = l1 - lineCount1 * factor;\n        return toLength(0, colCount2 - colCount1);\n    }\n    else {\n        return toLength(lineCount2 - lineCount1, colCount2);\n    }\n}\nexport function lengthLessThan(length1, length2) {\n    // First, compare line counts, then column counts.\n    return length1 < length2;\n}\nexport function lengthLessThanEqual(length1, length2) {\n    return length1 <= length2;\n}\nexport function lengthGreaterThanEqual(length1, length2) {\n    return length1 >= length2;\n}\nexport function positionToLength(position) {\n    return toLength(position.lineNumber - 1, position.column - 1);\n}\nexport function lengthsToRange(lengthStart, lengthEnd) {\n    const l = lengthStart;\n    const lineCount = Math.floor(l / factor);\n    const colCount = l - lineCount * factor;\n    const l2 = lengthEnd;\n    const lineCount2 = Math.floor(l2 / factor);\n    const colCount2 = l2 - lineCount2 * factor;\n    return new Range(lineCount + 1, colCount + 1, lineCount2 + 1, colCount2 + 1);\n}\nexport function lengthOfString(str) {\n    const lines = splitLines(str);\n    return toLength(lines.length - 1, lines[lines.length - 1].length);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { lengthAdd, lengthZero, lengthLessThan } from './length.js';\n/**\n * Allows to efficiently find a longest child at a given offset in a fixed node.\n * The requested offsets must increase monotonously.\n*/\nexport class NodeReader {\n    constructor(node) {\n        this.lastOffset = lengthZero;\n        this.nextNodes = [node];\n        this.offsets = [lengthZero];\n        this.idxs = [];\n    }\n    /**\n     * Returns the longest node at `offset` that satisfies the predicate.\n     * @param offset must be greater than or equal to the last offset this method has been called with!\n    */\n    readLongestNodeAt(offset, predicate) {\n        if (lengthLessThan(offset, this.lastOffset)) {\n            throw new Error('Invalid offset');\n        }\n        this.lastOffset = offset;\n        // Find the longest node of all those that are closest to the current offset.\n        while (true) {\n            const curNode = lastOrUndefined(this.nextNodes);\n            if (!curNode) {\n                return undefined;\n            }\n            const curNodeOffset = lastOrUndefined(this.offsets);\n            if (lengthLessThan(offset, curNodeOffset)) {\n                // The next best node is not here yet.\n                // The reader must advance before a cached node is hit.\n                return undefined;\n            }\n            if (lengthLessThan(curNodeOffset, offset)) {\n                // The reader is ahead of the current node.\n                if (lengthAdd(curNodeOffset, curNode.length) <= offset) {\n                    // The reader is after the end of the current node.\n                    this.nextNodeAfterCurrent();\n                }\n                else {\n                    // The reader is somewhere in the current node.\n                    const nextChildIdx = getNextChildIdx(curNode);\n                    if (nextChildIdx !== -1) {\n                        // Go to the first child and repeat.\n                        this.nextNodes.push(curNode.getChild(nextChildIdx));\n                        this.offsets.push(curNodeOffset);\n                        this.idxs.push(nextChildIdx);\n                    }\n                    else {\n                        // We don't have children\n                        this.nextNodeAfterCurrent();\n                    }\n                }\n            }\n            else {\n                // readerOffsetBeforeChange === curNodeOffset\n                if (predicate(curNode)) {\n                    this.nextNodeAfterCurrent();\n                    return curNode;\n                }\n                else {\n                    const nextChildIdx = getNextChildIdx(curNode);\n                    // look for shorter node\n                    if (nextChildIdx === -1) {\n                        // There is no shorter node.\n                        this.nextNodeAfterCurrent();\n                        return undefined;\n                    }\n                    else {\n                        // Descend into first child & repeat.\n                        this.nextNodes.push(curNode.getChild(nextChildIdx));\n                        this.offsets.push(curNodeOffset);\n                        this.idxs.push(nextChildIdx);\n                    }\n                }\n            }\n        }\n    }\n    // Navigates to the longest node that continues after the current node.\n    nextNodeAfterCurrent() {\n        while (true) {\n            const currentOffset = lastOrUndefined(this.offsets);\n            const currentNode = lastOrUndefined(this.nextNodes);\n            this.nextNodes.pop();\n            this.offsets.pop();\n            if (this.idxs.length === 0) {\n                // We just popped the root node, there is no next node.\n                break;\n            }\n            // Parent is not undefined, because idxs is not empty\n            const parent = lastOrUndefined(this.nextNodes);\n            const nextChildIdx = getNextChildIdx(parent, this.idxs[this.idxs.length - 1]);\n            if (nextChildIdx !== -1) {\n                this.nextNodes.push(parent.getChild(nextChildIdx));\n                this.offsets.push(lengthAdd(currentOffset, currentNode.length));\n                this.idxs[this.idxs.length - 1] = nextChildIdx;\n                break;\n            }\n            else {\n                this.idxs.pop();\n            }\n            // We fully consumed the parent.\n            // Current node is now parent, so call nextNodeAfterCurrent again\n        }\n    }\n}\nfunction getNextChildIdx(node, curIdx = -1) {\n    while (true) {\n        curIdx++;\n        if (curIdx >= node.childrenLength) {\n            return -1;\n        }\n        if (node.getChild(curIdx)) {\n            return curIdx;\n        }\n    }\n}\nfunction lastOrUndefined(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { InvalidBracketAstNode, ListAstNode, PairAstNode, TextAstNode } from './ast.js';\nimport { BeforeEditPositionMapper } from './beforeEditPositionMapper.js';\nimport { SmallImmutableSet } from './smallImmutableSet.js';\nimport { lengthIsZero, lengthLessThan } from './length.js';\nimport { concat23Trees, concat23TreesOfSameHeight } from './concat23Trees.js';\nimport { NodeReader } from './nodeReader.js';\n/**\n * Non incrementally built ASTs are immutable.\n*/\nexport function parseDocument(tokenizer, edits, oldNode, createImmutableLists) {\n    const parser = new Parser(tokenizer, edits, oldNode, createImmutableLists);\n    return parser.parseDocument();\n}\n/**\n * Non incrementally built ASTs are immutable.\n*/\nclass Parser {\n    constructor(tokenizer, edits, oldNode, createImmutableLists) {\n        this.tokenizer = tokenizer;\n        this.createImmutableLists = createImmutableLists;\n        this._itemsConstructed = 0;\n        this._itemsFromCache = 0;\n        if (oldNode && createImmutableLists) {\n            throw new Error('Not supported');\n        }\n        this.oldNodeReader = oldNode ? new NodeReader(oldNode) : undefined;\n        this.positionMapper = new BeforeEditPositionMapper(edits);\n    }\n    parseDocument() {\n        this._itemsConstructed = 0;\n        this._itemsFromCache = 0;\n        let result = this.parseList(SmallImmutableSet.getEmpty(), 0);\n        if (!result) {\n            result = ListAstNode.getEmpty();\n        }\n        return result;\n    }\n    parseList(openedBracketIds, level) {\n        const items = [];\n        while (true) {\n            let child = this.tryReadChildFromCache(openedBracketIds);\n            if (!child) {\n                const token = this.tokenizer.peek();\n                if (!token ||\n                    (token.kind === 2 /* TokenKind.ClosingBracket */ &&\n                        token.bracketIds.intersects(openedBracketIds))) {\n                    break;\n                }\n                child = this.parseChild(openedBracketIds, level + 1);\n            }\n            if (child.kind === 4 /* AstNodeKind.List */ && child.childrenLength === 0) {\n                continue;\n            }\n            items.push(child);\n        }\n        // When there is no oldNodeReader, all items are created from scratch and must have the same height.\n        const result = this.oldNodeReader ? concat23Trees(items) : concat23TreesOfSameHeight(items, this.createImmutableLists);\n        return result;\n    }\n    tryReadChildFromCache(openedBracketIds) {\n        if (this.oldNodeReader) {\n            const maxCacheableLength = this.positionMapper.getDistanceToNextChange(this.tokenizer.offset);\n            if (maxCacheableLength === null || !lengthIsZero(maxCacheableLength)) {\n                const cachedNode = this.oldNodeReader.readLongestNodeAt(this.positionMapper.getOffsetBeforeChange(this.tokenizer.offset), curNode => {\n                    // The edit could extend the ending token, thus we cannot re-use nodes that touch the edit.\n                    // If there is no edit anymore, we can re-use the node in any case.\n                    if (maxCacheableLength !== null && !lengthLessThan(curNode.length, maxCacheableLength)) {\n                        // Either the node contains edited text or touches edited text.\n                        // In the latter case, brackets might have been extended (`end` -> `ending`), so even touching nodes cannot be reused.\n                        return false;\n                    }\n                    const canBeReused = curNode.canBeReused(openedBracketIds);\n                    return canBeReused;\n                });\n                if (cachedNode) {\n                    this._itemsFromCache++;\n                    this.tokenizer.skip(cachedNode.length);\n                    return cachedNode;\n                }\n            }\n        }\n        return undefined;\n    }\n    parseChild(openedBracketIds, level) {\n        this._itemsConstructed++;\n        const token = this.tokenizer.read();\n        switch (token.kind) {\n            case 2 /* TokenKind.ClosingBracket */:\n                return new InvalidBracketAstNode(token.bracketIds, token.length);\n            case 0 /* TokenKind.Text */:\n                return token.astNode;\n            case 1 /* TokenKind.OpeningBracket */: {\n                if (level > 300) {\n                    // To prevent stack overflows\n                    return new TextAstNode(token.length);\n                }\n                const set = openedBracketIds.merge(token.bracketIds);\n                const child = this.parseList(set, level + 1);\n                const nextToken = this.tokenizer.peek();\n                if (nextToken &&\n                    nextToken.kind === 2 /* TokenKind.ClosingBracket */ &&\n                    (nextToken.bracketId === token.bracketId || nextToken.bracketIds.intersects(token.bracketIds))) {\n                    this.tokenizer.read();\n                    return PairAstNode.create(token.astNode, child, nextToken.astNode);\n                }\n                else {\n                    return PairAstNode.create(token.astNode, child, null);\n                }\n            }\n            default:\n                throw new Error('unexpected');\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nconst emptyArr = [];\n/**\n * Represents an immutable set that works best for a small number of elements (less than 32).\n * It uses bits to encode element membership efficiently.\n*/\nexport class SmallImmutableSet {\n    static { this.cache = new Array(129); }\n    static create(items, additionalItems) {\n        if (items <= 128 && additionalItems.length === 0) {\n            // We create a cache of 128=2^7 elements to cover all sets with up to 7 (dense) elements.\n            let cached = SmallImmutableSet.cache[items];\n            if (!cached) {\n                cached = new SmallImmutableSet(items, additionalItems);\n                SmallImmutableSet.cache[items] = cached;\n            }\n            return cached;\n        }\n        return new SmallImmutableSet(items, additionalItems);\n    }\n    static { this.empty = SmallImmutableSet.create(0, emptyArr); }\n    static getEmpty() {\n        return this.empty;\n    }\n    constructor(items, additionalItems) {\n        this.items = items;\n        this.additionalItems = additionalItems;\n    }\n    add(value, keyProvider) {\n        const key = keyProvider.getKey(value);\n        let idx = key >> 5; // divided by 32\n        if (idx === 0) {\n            // fast path\n            const newItem = (1 << key) | this.items;\n            if (newItem === this.items) {\n                return this;\n            }\n            return SmallImmutableSet.create(newItem, this.additionalItems);\n        }\n        idx--;\n        const newItems = this.additionalItems.slice(0);\n        while (newItems.length < idx) {\n            newItems.push(0);\n        }\n        newItems[idx] |= 1 << (key & 31);\n        return SmallImmutableSet.create(this.items, newItems);\n    }\n    merge(other) {\n        const merged = this.items | other.items;\n        if (this.additionalItems === emptyArr && other.additionalItems === emptyArr) {\n            // fast path\n            if (merged === this.items) {\n                return this;\n            }\n            if (merged === other.items) {\n                return other;\n            }\n            return SmallImmutableSet.create(merged, emptyArr);\n        }\n        // This can be optimized, but it's not a common case\n        const newItems = [];\n        for (let i = 0; i < Math.max(this.additionalItems.length, other.additionalItems.length); i++) {\n            const item1 = this.additionalItems[i] || 0;\n            const item2 = other.additionalItems[i] || 0;\n            newItems.push(item1 | item2);\n        }\n        return SmallImmutableSet.create(merged, newItems);\n    }\n    intersects(other) {\n        if ((this.items & other.items) !== 0) {\n            return true;\n        }\n        for (let i = 0; i < Math.min(this.additionalItems.length, other.additionalItems.length); i++) {\n            if ((this.additionalItems[i] & other.additionalItems[i]) !== 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nexport const identityKeyProvider = {\n    getKey(value) {\n        return value;\n    }\n};\n/**\n * Assigns values a unique incrementing key.\n*/\nexport class DenseKeyProvider {\n    constructor() {\n        this.items = new Map();\n    }\n    getKey(value) {\n        let existing = this.items.get(value);\n        if (existing === undefined) {\n            existing = this.items.size;\n            this.items.set(value, existing);\n        }\n        return existing;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { NotSupportedError } from '../../../../../base/common/errors.js';\nimport { TokenMetadata } from '../../../encodedTokenAttributes.js';\nimport { TextAstNode } from './ast.js';\nimport { lengthAdd, lengthDiff, lengthGetColumnCountIfZeroLineCount, lengthToObj, lengthZero, toLength } from './length.js';\nimport { SmallImmutableSet } from './smallImmutableSet.js';\nexport class Token {\n    constructor(length, kind, \n    /**\n     * If this token is an opening bracket, this is the id of the opening bracket.\n     * If this token is a closing bracket, this is the id of the first opening bracket that is closed by this bracket.\n     * Otherwise, it is -1.\n     */\n    bracketId, \n    /**\n     * If this token is an opening bracket, this just contains `bracketId`.\n     * If this token is a closing bracket, this lists all opening bracket ids, that it closes.\n     * Otherwise, it is empty.\n     */\n    bracketIds, astNode) {\n        this.length = length;\n        this.kind = kind;\n        this.bracketId = bracketId;\n        this.bracketIds = bracketIds;\n        this.astNode = astNode;\n    }\n}\nexport class TextBufferTokenizer {\n    constructor(textModel, bracketTokens) {\n        this.textModel = textModel;\n        this.bracketTokens = bracketTokens;\n        this.reader = new NonPeekableTextBufferTokenizer(this.textModel, this.bracketTokens);\n        this._offset = lengthZero;\n        this.didPeek = false;\n        this.peeked = null;\n        this.textBufferLineCount = textModel.getLineCount();\n        this.textBufferLastLineLength = textModel.getLineLength(this.textBufferLineCount);\n    }\n    get offset() {\n        return this._offset;\n    }\n    get length() {\n        return toLength(this.textBufferLineCount - 1, this.textBufferLastLineLength);\n    }\n    skip(length) {\n        this.didPeek = false;\n        this._offset = lengthAdd(this._offset, length);\n        const obj = lengthToObj(this._offset);\n        this.reader.setPosition(obj.lineCount, obj.columnCount);\n    }\n    read() {\n        let token;\n        if (this.peeked) {\n            this.didPeek = false;\n            token = this.peeked;\n        }\n        else {\n            token = this.reader.read();\n        }\n        if (token) {\n            this._offset = lengthAdd(this._offset, token.length);\n        }\n        return token;\n    }\n    peek() {\n        if (!this.didPeek) {\n            this.peeked = this.reader.read();\n            this.didPeek = true;\n        }\n        return this.peeked;\n    }\n}\n/**\n * Does not support peek.\n*/\nclass NonPeekableTextBufferTokenizer {\n    constructor(textModel, bracketTokens) {\n        this.textModel = textModel;\n        this.bracketTokens = bracketTokens;\n        this.lineIdx = 0;\n        this.line = null;\n        this.lineCharOffset = 0;\n        this.lineTokens = null;\n        this.lineTokenOffset = 0;\n        /** Must be a zero line token. The end of the document cannot be peeked. */\n        this.peekedToken = null;\n        this.textBufferLineCount = textModel.getLineCount();\n        this.textBufferLastLineLength = textModel.getLineLength(this.textBufferLineCount);\n    }\n    setPosition(lineIdx, column) {\n        // We must not jump into a token!\n        if (lineIdx === this.lineIdx) {\n            this.lineCharOffset = column;\n            if (this.line !== null) {\n                this.lineTokenOffset = this.lineCharOffset === 0 ? 0 : this.lineTokens.findTokenIndexAtOffset(this.lineCharOffset);\n            }\n        }\n        else {\n            this.lineIdx = lineIdx;\n            this.lineCharOffset = column;\n            this.line = null;\n        }\n        this.peekedToken = null;\n    }\n    read() {\n        if (this.peekedToken) {\n            const token = this.peekedToken;\n            this.peekedToken = null;\n            this.lineCharOffset += lengthGetColumnCountIfZeroLineCount(token.length);\n            return token;\n        }\n        if (this.lineIdx > this.textBufferLineCount - 1 || (this.lineIdx === this.textBufferLineCount - 1 && this.lineCharOffset >= this.textBufferLastLineLength)) {\n            // We are after the end\n            return null;\n        }\n        if (this.line === null) {\n            this.lineTokens = this.textModel.tokenization.getLineTokens(this.lineIdx + 1);\n            this.line = this.lineTokens.getLineContent();\n            this.lineTokenOffset = this.lineCharOffset === 0 ? 0 : this.lineTokens.findTokenIndexAtOffset(this.lineCharOffset);\n        }\n        const startLineIdx = this.lineIdx;\n        const startLineCharOffset = this.lineCharOffset;\n        // limits the length of text tokens.\n        // If text tokens get too long, incremental updates will be slow\n        let lengthHeuristic = 0;\n        while (true) {\n            const lineTokens = this.lineTokens;\n            const tokenCount = lineTokens.getCount();\n            let peekedBracketToken = null;\n            if (this.lineTokenOffset < tokenCount) {\n                const tokenMetadata = lineTokens.getMetadata(this.lineTokenOffset);\n                while (this.lineTokenOffset + 1 < tokenCount && tokenMetadata === lineTokens.getMetadata(this.lineTokenOffset + 1)) {\n                    // Skip tokens that are identical.\n                    // Sometimes, (bracket) identifiers are split up into multiple tokens.\n                    this.lineTokenOffset++;\n                }\n                const isOther = TokenMetadata.getTokenType(tokenMetadata) === 0 /* StandardTokenType.Other */;\n                const containsBracketType = TokenMetadata.containsBalancedBrackets(tokenMetadata);\n                const endOffset = lineTokens.getEndOffset(this.lineTokenOffset);\n                // Is there a bracket token next? Only consume text.\n                if (containsBracketType && isOther && this.lineCharOffset < endOffset) {\n                    const languageId = lineTokens.getLanguageId(this.lineTokenOffset);\n                    const text = this.line.substring(this.lineCharOffset, endOffset);\n                    const brackets = this.bracketTokens.getSingleLanguageBracketTokens(languageId);\n                    const regexp = brackets.regExpGlobal;\n                    if (regexp) {\n                        regexp.lastIndex = 0;\n                        const match = regexp.exec(text);\n                        if (match) {\n                            peekedBracketToken = brackets.getToken(match[0]);\n                            if (peekedBracketToken) {\n                                // Consume leading text of the token\n                                this.lineCharOffset += match.index;\n                            }\n                        }\n                    }\n                }\n                lengthHeuristic += endOffset - this.lineCharOffset;\n                if (peekedBracketToken) {\n                    // Don't skip the entire token, as a single token could contain multiple brackets.\n                    if (startLineIdx !== this.lineIdx || startLineCharOffset !== this.lineCharOffset) {\n                        // There is text before the bracket\n                        this.peekedToken = peekedBracketToken;\n                        break;\n                    }\n                    else {\n                        // Consume the peeked token\n                        this.lineCharOffset += lengthGetColumnCountIfZeroLineCount(peekedBracketToken.length);\n                        return peekedBracketToken;\n                    }\n                }\n                else {\n                    // Skip the entire token, as the token contains no brackets at all.\n                    this.lineTokenOffset++;\n                    this.lineCharOffset = endOffset;\n                }\n            }\n            else {\n                if (this.lineIdx === this.textBufferLineCount - 1) {\n                    break;\n                }\n                this.lineIdx++;\n                this.lineTokens = this.textModel.tokenization.getLineTokens(this.lineIdx + 1);\n                this.lineTokenOffset = 0;\n                this.line = this.lineTokens.getLineContent();\n                this.lineCharOffset = 0;\n                lengthHeuristic += 33; // max 1000/33 = 30 lines\n                // This limits the amount of work to recompute min-indentation\n                if (lengthHeuristic > 1000) {\n                    // only break (automatically) at the end of line.\n                    break;\n                }\n            }\n            if (lengthHeuristic > 1500) {\n                // Eventually break regardless of the line length so that\n                // very long lines do not cause bad performance.\n                // This effective limits max indentation to 500, as\n                // indentation is not computed across multiple text nodes.\n                break;\n            }\n        }\n        // If a token contains some proper indentation, it also contains \\n{INDENTATION+}(?!{INDENTATION}),\n        // unless the line is too long.\n        // Thus, the min indentation of the document is the minimum min indentation of every text node.\n        const length = lengthDiff(startLineIdx, startLineCharOffset, this.lineIdx, this.lineCharOffset);\n        return new Token(length, 0 /* TokenKind.Text */, -1, SmallImmutableSet.getEmpty(), new TextAstNode(length));\n    }\n}\nexport class FastTokenizer {\n    constructor(text, brackets) {\n        this.text = text;\n        this._offset = lengthZero;\n        this.idx = 0;\n        const regExpStr = brackets.getRegExpStr();\n        const regexp = regExpStr ? new RegExp(regExpStr + '|\\n', 'gi') : null;\n        const tokens = [];\n        let match;\n        let curLineCount = 0;\n        let lastLineBreakOffset = 0;\n        let lastTokenEndOffset = 0;\n        let lastTokenEndLine = 0;\n        const smallTextTokens0Line = [];\n        for (let i = 0; i < 60; i++) {\n            smallTextTokens0Line.push(new Token(toLength(0, i), 0 /* TokenKind.Text */, -1, SmallImmutableSet.getEmpty(), new TextAstNode(toLength(0, i))));\n        }\n        const smallTextTokens1Line = [];\n        for (let i = 0; i < 60; i++) {\n            smallTextTokens1Line.push(new Token(toLength(1, i), 0 /* TokenKind.Text */, -1, SmallImmutableSet.getEmpty(), new TextAstNode(toLength(1, i))));\n        }\n        if (regexp) {\n            regexp.lastIndex = 0;\n            // If a token contains indentation, it also contains \\n{INDENTATION+}(?!{INDENTATION})\n            while ((match = regexp.exec(text)) !== null) {\n                const curOffset = match.index;\n                const value = match[0];\n                if (value === '\\n') {\n                    curLineCount++;\n                    lastLineBreakOffset = curOffset + 1;\n                }\n                else {\n                    if (lastTokenEndOffset !== curOffset) {\n                        let token;\n                        if (lastTokenEndLine === curLineCount) {\n                            const colCount = curOffset - lastTokenEndOffset;\n                            if (colCount < smallTextTokens0Line.length) {\n                                token = smallTextTokens0Line[colCount];\n                            }\n                            else {\n                                const length = toLength(0, colCount);\n                                token = new Token(length, 0 /* TokenKind.Text */, -1, SmallImmutableSet.getEmpty(), new TextAstNode(length));\n                            }\n                        }\n                        else {\n                            const lineCount = curLineCount - lastTokenEndLine;\n                            const colCount = curOffset - lastLineBreakOffset;\n                            if (lineCount === 1 && colCount < smallTextTokens1Line.length) {\n                                token = smallTextTokens1Line[colCount];\n                            }\n                            else {\n                                const length = toLength(lineCount, colCount);\n                                token = new Token(length, 0 /* TokenKind.Text */, -1, SmallImmutableSet.getEmpty(), new TextAstNode(length));\n                            }\n                        }\n                        tokens.push(token);\n                    }\n                    // value is matched by regexp, so the token must exist\n                    tokens.push(brackets.getToken(value));\n                    lastTokenEndOffset = curOffset + value.length;\n                    lastTokenEndLine = curLineCount;\n                }\n            }\n        }\n        const offset = text.length;\n        if (lastTokenEndOffset !== offset) {\n            const length = (lastTokenEndLine === curLineCount)\n                ? toLength(0, offset - lastTokenEndOffset)\n                : toLength(curLineCount - lastTokenEndLine, offset - lastLineBreakOffset);\n            tokens.push(new Token(length, 0 /* TokenKind.Text */, -1, SmallImmutableSet.getEmpty(), new TextAstNode(length)));\n        }\n        this.length = toLength(curLineCount, offset - lastLineBreakOffset);\n        this.tokens = tokens;\n    }\n    get offset() {\n        return this._offset;\n    }\n    read() {\n        return this.tokens[this.idx++] || null;\n    }\n    peek() {\n        return this.tokens[this.idx] || null;\n    }\n    skip(length) {\n        throw new NotSupportedError();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Range } from '../../core/range.js';\nimport { editorBracketHighlightingForeground1, editorBracketHighlightingForeground2, editorBracketHighlightingForeground3, editorBracketHighlightingForeground4, editorBracketHighlightingForeground5, editorBracketHighlightingForeground6, editorBracketHighlightingUnexpectedBracketForeground } from '../../core/editorColorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nexport class ColorizedBracketPairsDecorationProvider extends Disposable {\n    constructor(textModel) {\n        super();\n        this.textModel = textModel;\n        this.colorProvider = new ColorProvider();\n        this.onDidChangeEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEmitter.event;\n        this.colorizationOptions = textModel.getOptions().bracketPairColorizationOptions;\n        this._register(textModel.bracketPairs.onDidChange(e => {\n            this.onDidChangeEmitter.fire();\n        }));\n    }\n    //#region TextModel events\n    handleDidChangeOptions(e) {\n        this.colorizationOptions = this.textModel.getOptions().bracketPairColorizationOptions;\n    }\n    //#endregion\n    getDecorationsInRange(range, ownerId, filterOutValidation, onlyMinimapDecorations) {\n        if (onlyMinimapDecorations) {\n            // Bracket pair colorization decorations are not rendered in the minimap\n            return [];\n        }\n        if (ownerId === undefined) {\n            return [];\n        }\n        if (!this.colorizationOptions.enabled) {\n            return [];\n        }\n        const result = this.textModel.bracketPairs.getBracketsInRange(range, true).map(bracket => ({\n            id: `bracket${bracket.range.toString()}-${bracket.nestingLevel}`,\n            options: {\n                description: 'BracketPairColorization',\n                inlineClassName: this.colorProvider.getInlineClassName(bracket, this.colorizationOptions.independentColorPoolPerBracketType),\n            },\n            ownerId: 0,\n            range: bracket.range,\n        })).toArray();\n        return result;\n    }\n    getAllDecorations(ownerId, filterOutValidation) {\n        if (ownerId === undefined) {\n            return [];\n        }\n        if (!this.colorizationOptions.enabled) {\n            return [];\n        }\n        return this.getDecorationsInRange(new Range(1, 1, this.textModel.getLineCount(), 1), ownerId, filterOutValidation);\n    }\n}\nclass ColorProvider {\n    constructor() {\n        this.unexpectedClosingBracketClassName = 'unexpected-closing-bracket';\n    }\n    getInlineClassName(bracket, independentColorPoolPerBracketType) {\n        if (bracket.isInvalid) {\n            return this.unexpectedClosingBracketClassName;\n        }\n        return this.getInlineClassNameOfLevel(independentColorPoolPerBracketType ? bracket.nestingLevelOfEqualBracketType : bracket.nestingLevel);\n    }\n    getInlineClassNameOfLevel(level) {\n        // To support a dynamic amount of colors up to 6 colors,\n        // we use a number that is a lcm of all numbers from 1 to 6.\n        return `bracket-highlighting-${level % 30}`;\n    }\n}\nregisterThemingParticipant((theme, collector) => {\n    const colors = [\n        editorBracketHighlightingForeground1,\n        editorBracketHighlightingForeground2,\n        editorBracketHighlightingForeground3,\n        editorBracketHighlightingForeground4,\n        editorBracketHighlightingForeground5,\n        editorBracketHighlightingForeground6\n    ];\n    const colorProvider = new ColorProvider();\n    collector.addRule(`.monaco-editor .${colorProvider.unexpectedClosingBracketClassName} { color: ${theme.getColor(editorBracketHighlightingUnexpectedBracketForeground)}; }`);\n    const colorValues = colors\n        .map(c => theme.getColor(c))\n        .filter((c) => !!c)\n        .filter(c => !c.isTransparent());\n    for (let level = 0; level < 30; level++) {\n        const color = colorValues[level % colorValues.length];\n        collector.addRule(`.monaco-editor .${colorProvider.getInlineClassNameOfLevel(level)} { color: ${color}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../nls.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { Selection } from '../core/selection.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { TextChange, compressConsecutiveTextChanges } from '../core/textChange.js';\nimport * as buffer from '../../../base/common/buffer.js';\nimport { basename } from '../../../base/common/resources.js';\nfunction uriGetComparisonKey(resource) {\n    return resource.toString();\n}\nexport class SingleModelEditStackData {\n    static create(model, beforeCursorState) {\n        const alternativeVersionId = model.getAlternativeVersionId();\n        const eol = getModelEOL(model);\n        return new SingleModelEditStackData(alternativeVersionId, alternativeVersionId, eol, eol, beforeCursorState, beforeCursorState, []);\n    }\n    constructor(beforeVersionId, afterVersionId, beforeEOL, afterEOL, beforeCursorState, afterCursorState, changes) {\n        this.beforeVersionId = beforeVersionId;\n        this.afterVersionId = afterVersionId;\n        this.beforeEOL = beforeEOL;\n        this.afterEOL = afterEOL;\n        this.beforeCursorState = beforeCursorState;\n        this.afterCursorState = afterCursorState;\n        this.changes = changes;\n    }\n    append(model, textChanges, afterEOL, afterVersionId, afterCursorState) {\n        if (textChanges.length > 0) {\n            this.changes = compressConsecutiveTextChanges(this.changes, textChanges);\n        }\n        this.afterEOL = afterEOL;\n        this.afterVersionId = afterVersionId;\n        this.afterCursorState = afterCursorState;\n    }\n    static _writeSelectionsSize(selections) {\n        return 4 + 4 * 4 * (selections ? selections.length : 0);\n    }\n    static _writeSelections(b, selections, offset) {\n        buffer.writeUInt32BE(b, (selections ? selections.length : 0), offset);\n        offset += 4;\n        if (selections) {\n            for (const selection of selections) {\n                buffer.writeUInt32BE(b, selection.selectionStartLineNumber, offset);\n                offset += 4;\n                buffer.writeUInt32BE(b, selection.selectionStartColumn, offset);\n                offset += 4;\n                buffer.writeUInt32BE(b, selection.positionLineNumber, offset);\n                offset += 4;\n                buffer.writeUInt32BE(b, selection.positionColumn, offset);\n                offset += 4;\n            }\n        }\n        return offset;\n    }\n    static _readSelections(b, offset, dest) {\n        const count = buffer.readUInt32BE(b, offset);\n        offset += 4;\n        for (let i = 0; i < count; i++) {\n            const selectionStartLineNumber = buffer.readUInt32BE(b, offset);\n            offset += 4;\n            const selectionStartColumn = buffer.readUInt32BE(b, offset);\n            offset += 4;\n            const positionLineNumber = buffer.readUInt32BE(b, offset);\n            offset += 4;\n            const positionColumn = buffer.readUInt32BE(b, offset);\n            offset += 4;\n            dest.push(new Selection(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn));\n        }\n        return offset;\n    }\n    serialize() {\n        let necessarySize = (+4 // beforeVersionId\n            + 4 // afterVersionId\n            + 1 // beforeEOL\n            + 1 // afterEOL\n            + SingleModelEditStackData._writeSelectionsSize(this.beforeCursorState)\n            + SingleModelEditStackData._writeSelectionsSize(this.afterCursorState)\n            + 4 // change count\n        );\n        for (const change of this.changes) {\n            necessarySize += change.writeSize();\n        }\n        const b = new Uint8Array(necessarySize);\n        let offset = 0;\n        buffer.writeUInt32BE(b, this.beforeVersionId, offset);\n        offset += 4;\n        buffer.writeUInt32BE(b, this.afterVersionId, offset);\n        offset += 4;\n        buffer.writeUInt8(b, this.beforeEOL, offset);\n        offset += 1;\n        buffer.writeUInt8(b, this.afterEOL, offset);\n        offset += 1;\n        offset = SingleModelEditStackData._writeSelections(b, this.beforeCursorState, offset);\n        offset = SingleModelEditStackData._writeSelections(b, this.afterCursorState, offset);\n        buffer.writeUInt32BE(b, this.changes.length, offset);\n        offset += 4;\n        for (const change of this.changes) {\n            offset = change.write(b, offset);\n        }\n        return b.buffer;\n    }\n    static deserialize(source) {\n        const b = new Uint8Array(source);\n        let offset = 0;\n        const beforeVersionId = buffer.readUInt32BE(b, offset);\n        offset += 4;\n        const afterVersionId = buffer.readUInt32BE(b, offset);\n        offset += 4;\n        const beforeEOL = buffer.readUInt8(b, offset);\n        offset += 1;\n        const afterEOL = buffer.readUInt8(b, offset);\n        offset += 1;\n        const beforeCursorState = [];\n        offset = SingleModelEditStackData._readSelections(b, offset, beforeCursorState);\n        const afterCursorState = [];\n        offset = SingleModelEditStackData._readSelections(b, offset, afterCursorState);\n        const changeCount = buffer.readUInt32BE(b, offset);\n        offset += 4;\n        const changes = [];\n        for (let i = 0; i < changeCount; i++) {\n            offset = TextChange.read(b, offset, changes);\n        }\n        return new SingleModelEditStackData(beforeVersionId, afterVersionId, beforeEOL, afterEOL, beforeCursorState, afterCursorState, changes);\n    }\n}\nexport class SingleModelEditStackElement {\n    get type() {\n        return 0 /* UndoRedoElementType.Resource */;\n    }\n    get resource() {\n        if (URI.isUri(this.model)) {\n            return this.model;\n        }\n        return this.model.uri;\n    }\n    constructor(label, code, model, beforeCursorState) {\n        this.label = label;\n        this.code = code;\n        this.model = model;\n        this._data = SingleModelEditStackData.create(model, beforeCursorState);\n    }\n    toString() {\n        const data = (this._data instanceof SingleModelEditStackData ? this._data : SingleModelEditStackData.deserialize(this._data));\n        return data.changes.map(change => change.toString()).join(', ');\n    }\n    matchesResource(resource) {\n        const uri = (URI.isUri(this.model) ? this.model : this.model.uri);\n        return (uri.toString() === resource.toString());\n    }\n    setModel(model) {\n        this.model = model;\n    }\n    canAppend(model) {\n        return (this.model === model && this._data instanceof SingleModelEditStackData);\n    }\n    append(model, textChanges, afterEOL, afterVersionId, afterCursorState) {\n        if (this._data instanceof SingleModelEditStackData) {\n            this._data.append(model, textChanges, afterEOL, afterVersionId, afterCursorState);\n        }\n    }\n    close() {\n        if (this._data instanceof SingleModelEditStackData) {\n            this._data = this._data.serialize();\n        }\n    }\n    open() {\n        if (!(this._data instanceof SingleModelEditStackData)) {\n            this._data = SingleModelEditStackData.deserialize(this._data);\n        }\n    }\n    undo() {\n        if (URI.isUri(this.model)) {\n            // don't have a model\n            throw new Error(`Invalid SingleModelEditStackElement`);\n        }\n        if (this._data instanceof SingleModelEditStackData) {\n            this._data = this._data.serialize();\n        }\n        const data = SingleModelEditStackData.deserialize(this._data);\n        this.model._applyUndo(data.changes, data.beforeEOL, data.beforeVersionId, data.beforeCursorState);\n    }\n    redo() {\n        if (URI.isUri(this.model)) {\n            // don't have a model\n            throw new Error(`Invalid SingleModelEditStackElement`);\n        }\n        if (this._data instanceof SingleModelEditStackData) {\n            this._data = this._data.serialize();\n        }\n        const data = SingleModelEditStackData.deserialize(this._data);\n        this.model._applyRedo(data.changes, data.afterEOL, data.afterVersionId, data.afterCursorState);\n    }\n    heapSize() {\n        if (this._data instanceof SingleModelEditStackData) {\n            this._data = this._data.serialize();\n        }\n        return this._data.byteLength + 168 /*heap overhead*/;\n    }\n}\nexport class MultiModelEditStackElement {\n    get resources() {\n        return this._editStackElementsArr.map(editStackElement => editStackElement.resource);\n    }\n    constructor(label, code, editStackElements) {\n        this.label = label;\n        this.code = code;\n        this.type = 1 /* UndoRedoElementType.Workspace */;\n        this._isOpen = true;\n        this._editStackElementsArr = editStackElements.slice(0);\n        this._editStackElementsMap = new Map();\n        for (const editStackElement of this._editStackElementsArr) {\n            const key = uriGetComparisonKey(editStackElement.resource);\n            this._editStackElementsMap.set(key, editStackElement);\n        }\n        this._delegate = null;\n    }\n    prepareUndoRedo() {\n        if (this._delegate) {\n            return this._delegate.prepareUndoRedo(this);\n        }\n    }\n    matchesResource(resource) {\n        const key = uriGetComparisonKey(resource);\n        return (this._editStackElementsMap.has(key));\n    }\n    setModel(model) {\n        const key = uriGetComparisonKey(URI.isUri(model) ? model : model.uri);\n        if (this._editStackElementsMap.has(key)) {\n            this._editStackElementsMap.get(key).setModel(model);\n        }\n    }\n    canAppend(model) {\n        if (!this._isOpen) {\n            return false;\n        }\n        const key = uriGetComparisonKey(model.uri);\n        if (this._editStackElementsMap.has(key)) {\n            const editStackElement = this._editStackElementsMap.get(key);\n            return editStackElement.canAppend(model);\n        }\n        return false;\n    }\n    append(model, textChanges, afterEOL, afterVersionId, afterCursorState) {\n        const key = uriGetComparisonKey(model.uri);\n        const editStackElement = this._editStackElementsMap.get(key);\n        editStackElement.append(model, textChanges, afterEOL, afterVersionId, afterCursorState);\n    }\n    close() {\n        this._isOpen = false;\n    }\n    open() {\n        // cannot reopen\n    }\n    undo() {\n        this._isOpen = false;\n        for (const editStackElement of this._editStackElementsArr) {\n            editStackElement.undo();\n        }\n    }\n    redo() {\n        for (const editStackElement of this._editStackElementsArr) {\n            editStackElement.redo();\n        }\n    }\n    heapSize(resource) {\n        const key = uriGetComparisonKey(resource);\n        if (this._editStackElementsMap.has(key)) {\n            const editStackElement = this._editStackElementsMap.get(key);\n            return editStackElement.heapSize();\n        }\n        return 0;\n    }\n    split() {\n        return this._editStackElementsArr;\n    }\n    toString() {\n        const result = [];\n        for (const editStackElement of this._editStackElementsArr) {\n            result.push(`${basename(editStackElement.resource)}: ${editStackElement}`);\n        }\n        return `{${result.join(', ')}}`;\n    }\n}\nfunction getModelEOL(model) {\n    const eol = model.getEOL();\n    if (eol === '\\n') {\n        return 0 /* EndOfLineSequence.LF */;\n    }\n    else {\n        return 1 /* EndOfLineSequence.CRLF */;\n    }\n}\nexport function isEditStackElement(element) {\n    if (!element) {\n        return false;\n    }\n    return ((element instanceof SingleModelEditStackElement) || (element instanceof MultiModelEditStackElement));\n}\nexport class EditStack {\n    constructor(model, undoRedoService) {\n        this._model = model;\n        this._undoRedoService = undoRedoService;\n    }\n    pushStackElement() {\n        const lastElement = this._undoRedoService.getLastElement(this._model.uri);\n        if (isEditStackElement(lastElement)) {\n            lastElement.close();\n        }\n    }\n    popStackElement() {\n        const lastElement = this._undoRedoService.getLastElement(this._model.uri);\n        if (isEditStackElement(lastElement)) {\n            lastElement.open();\n        }\n    }\n    clear() {\n        this._undoRedoService.removeElements(this._model.uri);\n    }\n    _getOrCreateEditStackElement(beforeCursorState, group) {\n        const lastElement = this._undoRedoService.getLastElement(this._model.uri);\n        if (isEditStackElement(lastElement) && lastElement.canAppend(this._model)) {\n            return lastElement;\n        }\n        const newElement = new SingleModelEditStackElement(nls.localize('edit', \"Typing\"), 'undoredo.textBufferEdit', this._model, beforeCursorState);\n        this._undoRedoService.pushElement(newElement, group);\n        return newElement;\n    }\n    pushEOL(eol) {\n        const editStackElement = this._getOrCreateEditStackElement(null, undefined);\n        this._model.setEOL(eol);\n        editStackElement.append(this._model, [], getModelEOL(this._model), this._model.getAlternativeVersionId(), null);\n    }\n    pushEditOperation(beforeCursorState, editOperations, cursorStateComputer, group) {\n        const editStackElement = this._getOrCreateEditStackElement(beforeCursorState, group);\n        const inverseEditOperations = this._model.applyEdits(editOperations, true);\n        const afterCursorState = EditStack._computeCursorState(cursorStateComputer, inverseEditOperations);\n        const textChanges = inverseEditOperations.map((op, index) => ({ index: index, textChange: op.textChange }));\n        textChanges.sort((a, b) => {\n            if (a.textChange.oldPosition === b.textChange.oldPosition) {\n                return a.index - b.index;\n            }\n            return a.textChange.oldPosition - b.textChange.oldPosition;\n        });\n        editStackElement.append(this._model, textChanges.map(op => op.textChange), getModelEOL(this._model), this._model.getAlternativeVersionId(), afterCursorState);\n        return afterCursorState;\n    }\n    static _computeCursorState(cursorStateComputer, inverseEditOperations) {\n        try {\n            return cursorStateComputer ? cursorStateComputer(inverseEditOperations) : null;\n        }\n        catch (e) {\n            onUnexpectedError(e);\n            return null;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { arrayInsert } from '../../../base/common/arrays.js';\n/**\n * An array that avoids being sparse by always\n * filling up unused indices with a default value.\n */\nexport class FixedArray {\n    constructor(_default) {\n        this._default = _default;\n        this._store = [];\n    }\n    get(index) {\n        if (index < this._store.length) {\n            return this._store[index];\n        }\n        return this._default;\n    }\n    set(index, value) {\n        while (index >= this._store.length) {\n            this._store[this._store.length] = this._default;\n        }\n        this._store[index] = value;\n    }\n    replace(index, oldLength, newLength) {\n        if (index >= this._store.length) {\n            return;\n        }\n        if (oldLength === 0) {\n            this.insert(index, newLength);\n            return;\n        }\n        else if (newLength === 0) {\n            this.delete(index, oldLength);\n            return;\n        }\n        const before = this._store.slice(0, index);\n        const after = this._store.slice(index + oldLength);\n        const insertArr = arrayFill(newLength, this._default);\n        this._store = before.concat(insertArr, after);\n    }\n    delete(deleteIndex, deleteCount) {\n        if (deleteCount === 0 || deleteIndex >= this._store.length) {\n            return;\n        }\n        this._store.splice(deleteIndex, deleteCount);\n    }\n    insert(insertIndex, insertCount) {\n        if (insertCount === 0 || insertIndex >= this._store.length) {\n            return;\n        }\n        const arr = [];\n        for (let i = 0; i < insertCount; i++) {\n            arr[i] = this._default;\n        }\n        this._store = arrayInsert(this._store, insertIndex, arr);\n    }\n}\nfunction arrayFill(length, value) {\n    const arr = [];\n    for (let i = 0; i < length; i++) {\n        arr[i] = value;\n    }\n    return arr;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { findLast } from '../../../base/common/arraysFind.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { CursorColumns } from '../core/cursorColumns.js';\nimport { Range } from '../core/range.js';\nimport { TextModelPart } from './textModelPart.js';\nimport { computeIndentLevel } from './utils.js';\nimport { HorizontalGuidesState, IndentGuide, IndentGuideHorizontalLine } from '../textModelGuides.js';\nimport { BugIndicatingError } from '../../../base/common/errors.js';\nexport class GuidesTextModelPart extends TextModelPart {\n    constructor(textModel, languageConfigurationService) {\n        super();\n        this.textModel = textModel;\n        this.languageConfigurationService = languageConfigurationService;\n    }\n    getLanguageConfiguration(languageId) {\n        return this.languageConfigurationService.getLanguageConfiguration(languageId);\n    }\n    _computeIndentLevel(lineIndex) {\n        return computeIndentLevel(this.textModel.getLineContent(lineIndex + 1), this.textModel.getOptions().tabSize);\n    }\n    getActiveIndentGuide(lineNumber, minLineNumber, maxLineNumber) {\n        this.assertNotDisposed();\n        const lineCount = this.textModel.getLineCount();\n        if (lineNumber < 1 || lineNumber > lineCount) {\n            throw new BugIndicatingError('Illegal value for lineNumber');\n        }\n        const foldingRules = this.getLanguageConfiguration(this.textModel.getLanguageId()).foldingRules;\n        const offSide = Boolean(foldingRules && foldingRules.offSide);\n        let up_aboveContentLineIndex = -2; /* -2 is a marker for not having computed it */\n        let up_aboveContentLineIndent = -1;\n        let up_belowContentLineIndex = -2; /* -2 is a marker for not having computed it */\n        let up_belowContentLineIndent = -1;\n        const up_resolveIndents = (lineNumber) => {\n            if (up_aboveContentLineIndex !== -1 &&\n                (up_aboveContentLineIndex === -2 ||\n                    up_aboveContentLineIndex > lineNumber - 1)) {\n                up_aboveContentLineIndex = -1;\n                up_aboveContentLineIndent = -1;\n                // must find previous line with content\n                for (let lineIndex = lineNumber - 2; lineIndex >= 0; lineIndex--) {\n                    const indent = this._computeIndentLevel(lineIndex);\n                    if (indent >= 0) {\n                        up_aboveContentLineIndex = lineIndex;\n                        up_aboveContentLineIndent = indent;\n                        break;\n                    }\n                }\n            }\n            if (up_belowContentLineIndex === -2) {\n                up_belowContentLineIndex = -1;\n                up_belowContentLineIndent = -1;\n                // must find next line with content\n                for (let lineIndex = lineNumber; lineIndex < lineCount; lineIndex++) {\n                    const indent = this._computeIndentLevel(lineIndex);\n                    if (indent >= 0) {\n                        up_belowContentLineIndex = lineIndex;\n                        up_belowContentLineIndent = indent;\n                        break;\n                    }\n                }\n            }\n        };\n        let down_aboveContentLineIndex = -2; /* -2 is a marker for not having computed it */\n        let down_aboveContentLineIndent = -1;\n        let down_belowContentLineIndex = -2; /* -2 is a marker for not having computed it */\n        let down_belowContentLineIndent = -1;\n        const down_resolveIndents = (lineNumber) => {\n            if (down_aboveContentLineIndex === -2) {\n                down_aboveContentLineIndex = -1;\n                down_aboveContentLineIndent = -1;\n                // must find previous line with content\n                for (let lineIndex = lineNumber - 2; lineIndex >= 0; lineIndex--) {\n                    const indent = this._computeIndentLevel(lineIndex);\n                    if (indent >= 0) {\n                        down_aboveContentLineIndex = lineIndex;\n                        down_aboveContentLineIndent = indent;\n                        break;\n                    }\n                }\n            }\n            if (down_belowContentLineIndex !== -1 &&\n                (down_belowContentLineIndex === -2 ||\n                    down_belowContentLineIndex < lineNumber - 1)) {\n                down_belowContentLineIndex = -1;\n                down_belowContentLineIndent = -1;\n                // must find next line with content\n                for (let lineIndex = lineNumber; lineIndex < lineCount; lineIndex++) {\n                    const indent = this._computeIndentLevel(lineIndex);\n                    if (indent >= 0) {\n                        down_belowContentLineIndex = lineIndex;\n                        down_belowContentLineIndent = indent;\n                        break;\n                    }\n                }\n            }\n        };\n        let startLineNumber = 0;\n        let goUp = true;\n        let endLineNumber = 0;\n        let goDown = true;\n        let indent = 0;\n        let initialIndent = 0;\n        for (let distance = 0; goUp || goDown; distance++) {\n            const upLineNumber = lineNumber - distance;\n            const downLineNumber = lineNumber + distance;\n            if (distance > 1 && (upLineNumber < 1 || upLineNumber < minLineNumber)) {\n                goUp = false;\n            }\n            if (distance > 1 &&\n                (downLineNumber > lineCount || downLineNumber > maxLineNumber)) {\n                goDown = false;\n            }\n            if (distance > 50000) {\n                // stop processing\n                goUp = false;\n                goDown = false;\n            }\n            let upLineIndentLevel = -1;\n            if (goUp && upLineNumber >= 1) {\n                // compute indent level going up\n                const currentIndent = this._computeIndentLevel(upLineNumber - 1);\n                if (currentIndent >= 0) {\n                    // This line has content (besides whitespace)\n                    // Use the line's indent\n                    up_belowContentLineIndex = upLineNumber - 1;\n                    up_belowContentLineIndent = currentIndent;\n                    upLineIndentLevel = Math.ceil(currentIndent / this.textModel.getOptions().indentSize);\n                }\n                else {\n                    up_resolveIndents(upLineNumber);\n                    upLineIndentLevel = this._getIndentLevelForWhitespaceLine(offSide, up_aboveContentLineIndent, up_belowContentLineIndent);\n                }\n            }\n            let downLineIndentLevel = -1;\n            if (goDown && downLineNumber <= lineCount) {\n                // compute indent level going down\n                const currentIndent = this._computeIndentLevel(downLineNumber - 1);\n                if (currentIndent >= 0) {\n                    // This line has content (besides whitespace)\n                    // Use the line's indent\n                    down_aboveContentLineIndex = downLineNumber - 1;\n                    down_aboveContentLineIndent = currentIndent;\n                    downLineIndentLevel = Math.ceil(currentIndent / this.textModel.getOptions().indentSize);\n                }\n                else {\n                    down_resolveIndents(downLineNumber);\n                    downLineIndentLevel = this._getIndentLevelForWhitespaceLine(offSide, down_aboveContentLineIndent, down_belowContentLineIndent);\n                }\n            }\n            if (distance === 0) {\n                initialIndent = upLineIndentLevel;\n                continue;\n            }\n            if (distance === 1) {\n                if (downLineNumber <= lineCount &&\n                    downLineIndentLevel >= 0 &&\n                    initialIndent + 1 === downLineIndentLevel) {\n                    // This is the beginning of a scope, we have special handling here, since we want the\n                    // child scope indent to be active, not the parent scope\n                    goUp = false;\n                    startLineNumber = downLineNumber;\n                    endLineNumber = downLineNumber;\n                    indent = downLineIndentLevel;\n                    continue;\n                }\n                if (upLineNumber >= 1 &&\n                    upLineIndentLevel >= 0 &&\n                    upLineIndentLevel - 1 === initialIndent) {\n                    // This is the end of a scope, just like above\n                    goDown = false;\n                    startLineNumber = upLineNumber;\n                    endLineNumber = upLineNumber;\n                    indent = upLineIndentLevel;\n                    continue;\n                }\n                startLineNumber = lineNumber;\n                endLineNumber = lineNumber;\n                indent = initialIndent;\n                if (indent === 0) {\n                    // No need to continue\n                    return { startLineNumber, endLineNumber, indent };\n                }\n            }\n            if (goUp) {\n                if (upLineIndentLevel >= indent) {\n                    startLineNumber = upLineNumber;\n                }\n                else {\n                    goUp = false;\n                }\n            }\n            if (goDown) {\n                if (downLineIndentLevel >= indent) {\n                    endLineNumber = downLineNumber;\n                }\n                else {\n                    goDown = false;\n                }\n            }\n        }\n        return { startLineNumber, endLineNumber, indent };\n    }\n    getLinesBracketGuides(startLineNumber, endLineNumber, activePosition, options) {\n        const result = [];\n        for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n            result.push([]);\n        }\n        // If requested, this could be made configurable.\n        const includeSingleLinePairs = true;\n        const bracketPairs = this.textModel.bracketPairs.getBracketPairsInRangeWithMinIndentation(new Range(startLineNumber, 1, endLineNumber, this.textModel.getLineMaxColumn(endLineNumber))).toArray();\n        let activeBracketPairRange = undefined;\n        if (activePosition && bracketPairs.length > 0) {\n            const bracketsContainingActivePosition = (startLineNumber <= activePosition.lineNumber &&\n                activePosition.lineNumber <= endLineNumber\n                // We don't need to query the brackets again if the cursor is in the viewport\n                ? bracketPairs\n                : this.textModel.bracketPairs.getBracketPairsInRange(Range.fromPositions(activePosition)).toArray()).filter((bp) => Range.strictContainsPosition(bp.range, activePosition));\n            activeBracketPairRange = findLast(bracketsContainingActivePosition, (i) => includeSingleLinePairs || i.range.startLineNumber !== i.range.endLineNumber)?.range;\n        }\n        const independentColorPoolPerBracketType = this.textModel.getOptions().bracketPairColorizationOptions.independentColorPoolPerBracketType;\n        const colorProvider = new BracketPairGuidesClassNames();\n        for (const pair of bracketPairs) {\n            /*\n\n\n                    {\n                    |\n                    }\n\n                    {\n                    |\n                    ----}\n\n                ____{\n                |test\n                ----}\n\n                renderHorizontalEndLineAtTheBottom:\n                    {\n                    |\n                    |x}\n                    --\n                renderHorizontalEndLineAtTheBottom:\n                ____{\n                |test\n                | x }\n                ----\n            */\n            if (!pair.closingBracketRange) {\n                continue;\n            }\n            const isActive = activeBracketPairRange && pair.range.equalsRange(activeBracketPairRange);\n            if (!isActive && !options.includeInactive) {\n                continue;\n            }\n            const className = colorProvider.getInlineClassName(pair.nestingLevel, pair.nestingLevelOfEqualBracketType, independentColorPoolPerBracketType) +\n                (options.highlightActive && isActive\n                    ? ' ' + colorProvider.activeClassName\n                    : '');\n            const start = pair.openingBracketRange.getStartPosition();\n            const end = pair.closingBracketRange.getStartPosition();\n            const horizontalGuides = options.horizontalGuides === HorizontalGuidesState.Enabled || (options.horizontalGuides === HorizontalGuidesState.EnabledForActive && isActive);\n            if (pair.range.startLineNumber === pair.range.endLineNumber) {\n                if (includeSingleLinePairs && horizontalGuides) {\n                    result[pair.range.startLineNumber - startLineNumber].push(new IndentGuide(-1, pair.openingBracketRange.getEndPosition().column, className, new IndentGuideHorizontalLine(false, end.column), -1, -1));\n                }\n                continue;\n            }\n            const endVisibleColumn = this.getVisibleColumnFromPosition(end);\n            const startVisibleColumn = this.getVisibleColumnFromPosition(pair.openingBracketRange.getStartPosition());\n            const guideVisibleColumn = Math.min(startVisibleColumn, endVisibleColumn, pair.minVisibleColumnIndentation + 1);\n            let renderHorizontalEndLineAtTheBottom = false;\n            const firstNonWsIndex = strings.firstNonWhitespaceIndex(this.textModel.getLineContent(pair.closingBracketRange.startLineNumber));\n            const hasTextBeforeClosingBracket = firstNonWsIndex < pair.closingBracketRange.startColumn - 1;\n            if (hasTextBeforeClosingBracket) {\n                renderHorizontalEndLineAtTheBottom = true;\n            }\n            const visibleGuideStartLineNumber = Math.max(start.lineNumber, startLineNumber);\n            const visibleGuideEndLineNumber = Math.min(end.lineNumber, endLineNumber);\n            const offset = renderHorizontalEndLineAtTheBottom ? 1 : 0;\n            for (let l = visibleGuideStartLineNumber; l < visibleGuideEndLineNumber + offset; l++) {\n                result[l - startLineNumber].push(new IndentGuide(guideVisibleColumn, -1, className, null, l === start.lineNumber ? start.column : -1, l === end.lineNumber ? end.column : -1));\n            }\n            if (horizontalGuides) {\n                if (start.lineNumber >= startLineNumber && startVisibleColumn > guideVisibleColumn) {\n                    result[start.lineNumber - startLineNumber].push(new IndentGuide(guideVisibleColumn, -1, className, new IndentGuideHorizontalLine(false, start.column), -1, -1));\n                }\n                if (end.lineNumber <= endLineNumber && endVisibleColumn > guideVisibleColumn) {\n                    result[end.lineNumber - startLineNumber].push(new IndentGuide(guideVisibleColumn, -1, className, new IndentGuideHorizontalLine(!renderHorizontalEndLineAtTheBottom, end.column), -1, -1));\n                }\n            }\n        }\n        for (const guides of result) {\n            guides.sort((a, b) => a.visibleColumn - b.visibleColumn);\n        }\n        return result;\n    }\n    getVisibleColumnFromPosition(position) {\n        return (CursorColumns.visibleColumnFromColumn(this.textModel.getLineContent(position.lineNumber), position.column, this.textModel.getOptions().tabSize) + 1);\n    }\n    getLinesIndentGuides(startLineNumber, endLineNumber) {\n        this.assertNotDisposed();\n        const lineCount = this.textModel.getLineCount();\n        if (startLineNumber < 1 || startLineNumber > lineCount) {\n            throw new Error('Illegal value for startLineNumber');\n        }\n        if (endLineNumber < 1 || endLineNumber > lineCount) {\n            throw new Error('Illegal value for endLineNumber');\n        }\n        const options = this.textModel.getOptions();\n        const foldingRules = this.getLanguageConfiguration(this.textModel.getLanguageId()).foldingRules;\n        const offSide = Boolean(foldingRules && foldingRules.offSide);\n        const result = new Array(endLineNumber - startLineNumber + 1);\n        let aboveContentLineIndex = -2; /* -2 is a marker for not having computed it */\n        let aboveContentLineIndent = -1;\n        let belowContentLineIndex = -2; /* -2 is a marker for not having computed it */\n        let belowContentLineIndent = -1;\n        for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n            const resultIndex = lineNumber - startLineNumber;\n            const currentIndent = this._computeIndentLevel(lineNumber - 1);\n            if (currentIndent >= 0) {\n                // This line has content (besides whitespace)\n                // Use the line's indent\n                aboveContentLineIndex = lineNumber - 1;\n                aboveContentLineIndent = currentIndent;\n                result[resultIndex] = Math.ceil(currentIndent / options.indentSize);\n                continue;\n            }\n            if (aboveContentLineIndex === -2) {\n                aboveContentLineIndex = -1;\n                aboveContentLineIndent = -1;\n                // must find previous line with content\n                for (let lineIndex = lineNumber - 2; lineIndex >= 0; lineIndex--) {\n                    const indent = this._computeIndentLevel(lineIndex);\n                    if (indent >= 0) {\n                        aboveContentLineIndex = lineIndex;\n                        aboveContentLineIndent = indent;\n                        break;\n                    }\n                }\n            }\n            if (belowContentLineIndex !== -1 &&\n                (belowContentLineIndex === -2 || belowContentLineIndex < lineNumber - 1)) {\n                belowContentLineIndex = -1;\n                belowContentLineIndent = -1;\n                // must find next line with content\n                for (let lineIndex = lineNumber; lineIndex < lineCount; lineIndex++) {\n                    const indent = this._computeIndentLevel(lineIndex);\n                    if (indent >= 0) {\n                        belowContentLineIndex = lineIndex;\n                        belowContentLineIndent = indent;\n                        break;\n                    }\n                }\n            }\n            result[resultIndex] = this._getIndentLevelForWhitespaceLine(offSide, aboveContentLineIndent, belowContentLineIndent);\n        }\n        return result;\n    }\n    _getIndentLevelForWhitespaceLine(offSide, aboveContentLineIndent, belowContentLineIndent) {\n        const options = this.textModel.getOptions();\n        if (aboveContentLineIndent === -1 || belowContentLineIndent === -1) {\n            // At the top or bottom of the file\n            return 0;\n        }\n        else if (aboveContentLineIndent < belowContentLineIndent) {\n            // we are inside the region above\n            return 1 + Math.floor(aboveContentLineIndent / options.indentSize);\n        }\n        else if (aboveContentLineIndent === belowContentLineIndent) {\n            // we are in between two regions\n            return Math.ceil(belowContentLineIndent / options.indentSize);\n        }\n        else {\n            if (offSide) {\n                // same level as region below\n                return Math.ceil(belowContentLineIndent / options.indentSize);\n            }\n            else {\n                // we are inside the region that ends below\n                return 1 + Math.floor(belowContentLineIndent / options.indentSize);\n            }\n        }\n    }\n}\nexport class BracketPairGuidesClassNames {\n    constructor() {\n        this.activeClassName = 'indent-active';\n    }\n    getInlineClassName(nestingLevel, nestingLevelOfEqualBracketType, independentColorPoolPerBracketType) {\n        return this.getInlineClassNameOfLevel(independentColorPoolPerBracketType ? nestingLevelOfEqualBracketType : nestingLevel);\n    }\n    getInlineClassNameOfLevel(level) {\n        // To support a dynamic amount of colors up to 6 colors,\n        // we use a number that is a lcm of all numbers from 1 to 6.\n        return `bracket-indent-guide lvl-${level % 30}`;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nclass SpacesDiffResult {\n    constructor() {\n        this.spacesDiff = 0;\n        this.looksLikeAlignment = false;\n    }\n}\n/**\n * Compute the diff in spaces between two line's indentation.\n */\nfunction spacesDiff(a, aLength, b, bLength, result) {\n    result.spacesDiff = 0;\n    result.looksLikeAlignment = false;\n    // This can go both ways (e.g.):\n    //  - a: \"\\t\"\n    //  - b: \"\\t    \"\n    //  => This should count 1 tab and 4 spaces\n    let i;\n    for (i = 0; i < aLength && i < bLength; i++) {\n        const aCharCode = a.charCodeAt(i);\n        const bCharCode = b.charCodeAt(i);\n        if (aCharCode !== bCharCode) {\n            break;\n        }\n    }\n    let aSpacesCnt = 0, aTabsCount = 0;\n    for (let j = i; j < aLength; j++) {\n        const aCharCode = a.charCodeAt(j);\n        if (aCharCode === 32 /* CharCode.Space */) {\n            aSpacesCnt++;\n        }\n        else {\n            aTabsCount++;\n        }\n    }\n    let bSpacesCnt = 0, bTabsCount = 0;\n    for (let j = i; j < bLength; j++) {\n        const bCharCode = b.charCodeAt(j);\n        if (bCharCode === 32 /* CharCode.Space */) {\n            bSpacesCnt++;\n        }\n        else {\n            bTabsCount++;\n        }\n    }\n    if (aSpacesCnt > 0 && aTabsCount > 0) {\n        return;\n    }\n    if (bSpacesCnt > 0 && bTabsCount > 0) {\n        return;\n    }\n    const tabsDiff = Math.abs(aTabsCount - bTabsCount);\n    const spacesDiff = Math.abs(aSpacesCnt - bSpacesCnt);\n    if (tabsDiff === 0) {\n        // check if the indentation difference might be caused by alignment reasons\n        // sometime folks like to align their code, but this should not be used as a hint\n        result.spacesDiff = spacesDiff;\n        if (spacesDiff > 0 && 0 <= bSpacesCnt - 1 && bSpacesCnt - 1 < a.length && bSpacesCnt < b.length) {\n            if (b.charCodeAt(bSpacesCnt) !== 32 /* CharCode.Space */ && a.charCodeAt(bSpacesCnt - 1) === 32 /* CharCode.Space */) {\n                if (a.charCodeAt(a.length - 1) === 44 /* CharCode.Comma */) {\n                    // This looks like an alignment desire: e.g.\n                    // const a = b + c,\n                    //       d = b - c;\n                    result.looksLikeAlignment = true;\n                }\n            }\n        }\n        return;\n    }\n    if (spacesDiff % tabsDiff === 0) {\n        result.spacesDiff = spacesDiff / tabsDiff;\n        return;\n    }\n}\nexport function guessIndentation(source, defaultTabSize, defaultInsertSpaces) {\n    // Look at most at the first 10k lines\n    const linesCount = Math.min(source.getLineCount(), 10000);\n    let linesIndentedWithTabsCount = 0; // number of lines that contain at least one tab in indentation\n    let linesIndentedWithSpacesCount = 0; // number of lines that contain only spaces in indentation\n    let previousLineText = ''; // content of latest line that contained non-whitespace chars\n    let previousLineIndentation = 0; // index at which latest line contained the first non-whitespace char\n    const ALLOWED_TAB_SIZE_GUESSES = [2, 4, 6, 8, 3, 5, 7]; // prefer even guesses for `tabSize`, limit to [2, 8].\n    const MAX_ALLOWED_TAB_SIZE_GUESS = 8; // max(ALLOWED_TAB_SIZE_GUESSES) = 8\n    const spacesDiffCount = [0, 0, 0, 0, 0, 0, 0, 0, 0]; // `tabSize` scores\n    const tmp = new SpacesDiffResult();\n    for (let lineNumber = 1; lineNumber <= linesCount; lineNumber++) {\n        const currentLineLength = source.getLineLength(lineNumber);\n        const currentLineText = source.getLineContent(lineNumber);\n        // if the text buffer is chunk based, so long lines are cons-string, v8 will flattern the string when we check charCode.\n        // checking charCode on chunks directly is cheaper.\n        const useCurrentLineText = (currentLineLength <= 65536);\n        let currentLineHasContent = false; // does `currentLineText` contain non-whitespace chars\n        let currentLineIndentation = 0; // index at which `currentLineText` contains the first non-whitespace char\n        let currentLineSpacesCount = 0; // count of spaces found in `currentLineText` indentation\n        let currentLineTabsCount = 0; // count of tabs found in `currentLineText` indentation\n        for (let j = 0, lenJ = currentLineLength; j < lenJ; j++) {\n            const charCode = (useCurrentLineText ? currentLineText.charCodeAt(j) : source.getLineCharCode(lineNumber, j));\n            if (charCode === 9 /* CharCode.Tab */) {\n                currentLineTabsCount++;\n            }\n            else if (charCode === 32 /* CharCode.Space */) {\n                currentLineSpacesCount++;\n            }\n            else {\n                // Hit non whitespace character on this line\n                currentLineHasContent = true;\n                currentLineIndentation = j;\n                break;\n            }\n        }\n        // Ignore empty or only whitespace lines\n        if (!currentLineHasContent) {\n            continue;\n        }\n        if (currentLineTabsCount > 0) {\n            linesIndentedWithTabsCount++;\n        }\n        else if (currentLineSpacesCount > 1) {\n            linesIndentedWithSpacesCount++;\n        }\n        spacesDiff(previousLineText, previousLineIndentation, currentLineText, currentLineIndentation, tmp);\n        if (tmp.looksLikeAlignment) {\n            // if defaultInsertSpaces === true && the spaces count == tabSize, we may want to count it as valid indentation\n            //\n            // - item1\n            //   - item2\n            //\n            // otherwise skip this line entirely\n            //\n            // const a = 1,\n            //       b = 2;\n            if (!(defaultInsertSpaces && defaultTabSize === tmp.spacesDiff)) {\n                continue;\n            }\n        }\n        const currentSpacesDiff = tmp.spacesDiff;\n        if (currentSpacesDiff <= MAX_ALLOWED_TAB_SIZE_GUESS) {\n            spacesDiffCount[currentSpacesDiff]++;\n        }\n        previousLineText = currentLineText;\n        previousLineIndentation = currentLineIndentation;\n    }\n    let insertSpaces = defaultInsertSpaces;\n    if (linesIndentedWithTabsCount !== linesIndentedWithSpacesCount) {\n        insertSpaces = (linesIndentedWithTabsCount < linesIndentedWithSpacesCount);\n    }\n    let tabSize = defaultTabSize;\n    // Guess tabSize only if inserting spaces...\n    if (insertSpaces) {\n        let tabSizeScore = (insertSpaces ? 0 : 0.1 * linesCount);\n        // console.log(\"score threshold: \" + tabSizeScore);\n        ALLOWED_TAB_SIZE_GUESSES.forEach((possibleTabSize) => {\n            const possibleTabSizeScore = spacesDiffCount[possibleTabSize];\n            if (possibleTabSizeScore > tabSizeScore) {\n                tabSizeScore = possibleTabSizeScore;\n                tabSize = possibleTabSize;\n            }\n        });\n        // Let a tabSize of 2 win even if it is not the maximum\n        // (only in case 4 was guessed)\n        if (tabSize === 4 && spacesDiffCount[4] > 0 && spacesDiffCount[2] > 0 && spacesDiffCount[2] >= spacesDiffCount[4] / 2) {\n            tabSize = 2;\n        }\n    }\n    // console.log('--------------------------');\n    // console.log('linesIndentedWithTabsCount: ' + linesIndentedWithTabsCount + ', linesIndentedWithSpacesCount: ' + linesIndentedWithSpacesCount);\n    // console.log('spacesDiffCount: ' + spacesDiffCount);\n    // console.log('tabSize: ' + tabSize + ', tabSizeScore: ' + tabSizeScore);\n    return {\n        insertSpaces: insertSpaces,\n        tabSize: tabSize\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function getNodeColor(node) {\n    return ((node.metadata & 1 /* Constants.ColorMask */) >>> 0 /* Constants.ColorOffset */);\n}\nfunction setNodeColor(node, color) {\n    node.metadata = ((node.metadata & 254 /* Constants.ColorMaskInverse */) | (color << 0 /* Constants.ColorOffset */));\n}\nfunction getNodeIsVisited(node) {\n    return ((node.metadata & 2 /* Constants.IsVisitedMask */) >>> 1 /* Constants.IsVisitedOffset */) === 1;\n}\nfunction setNodeIsVisited(node, value) {\n    node.metadata = ((node.metadata & 253 /* Constants.IsVisitedMaskInverse */) | ((value ? 1 : 0) << 1 /* Constants.IsVisitedOffset */));\n}\nfunction getNodeIsForValidation(node) {\n    return ((node.metadata & 4 /* Constants.IsForValidationMask */) >>> 2 /* Constants.IsForValidationOffset */) === 1;\n}\nfunction setNodeIsForValidation(node, value) {\n    node.metadata = ((node.metadata & 251 /* Constants.IsForValidationMaskInverse */) | ((value ? 1 : 0) << 2 /* Constants.IsForValidationOffset */));\n}\nfunction getNodeIsInGlyphMargin(node) {\n    return ((node.metadata & 64 /* Constants.IsMarginMask */) >>> 6 /* Constants.IsMarginOffset */) === 1;\n}\nfunction setNodeIsInGlyphMargin(node, value) {\n    node.metadata = ((node.metadata & 191 /* Constants.IsMarginMaskInverse */) | ((value ? 1 : 0) << 6 /* Constants.IsMarginOffset */));\n}\nfunction getNodeStickiness(node) {\n    return ((node.metadata & 24 /* Constants.StickinessMask */) >>> 3 /* Constants.StickinessOffset */);\n}\nfunction _setNodeStickiness(node, stickiness) {\n    node.metadata = ((node.metadata & 231 /* Constants.StickinessMaskInverse */) | (stickiness << 3 /* Constants.StickinessOffset */));\n}\nfunction getCollapseOnReplaceEdit(node) {\n    return ((node.metadata & 32 /* Constants.CollapseOnReplaceEditMask */) >>> 5 /* Constants.CollapseOnReplaceEditOffset */) === 1;\n}\nfunction setCollapseOnReplaceEdit(node, value) {\n    node.metadata = ((node.metadata & 223 /* Constants.CollapseOnReplaceEditMaskInverse */) | ((value ? 1 : 0) << 5 /* Constants.CollapseOnReplaceEditOffset */));\n}\nexport class IntervalNode {\n    constructor(id, start, end) {\n        this.metadata = 0;\n        this.parent = this;\n        this.left = this;\n        this.right = this;\n        setNodeColor(this, 1 /* NodeColor.Red */);\n        this.start = start;\n        this.end = end;\n        // FORCE_OVERFLOWING_TEST: this.delta = start;\n        this.delta = 0;\n        this.maxEnd = end;\n        this.id = id;\n        this.ownerId = 0;\n        this.options = null;\n        setNodeIsForValidation(this, false);\n        setNodeIsInGlyphMargin(this, false);\n        _setNodeStickiness(this, 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */);\n        setCollapseOnReplaceEdit(this, false);\n        this.cachedVersionId = 0;\n        this.cachedAbsoluteStart = start;\n        this.cachedAbsoluteEnd = end;\n        this.range = null;\n        setNodeIsVisited(this, false);\n    }\n    reset(versionId, start, end, range) {\n        this.start = start;\n        this.end = end;\n        this.maxEnd = end;\n        this.cachedVersionId = versionId;\n        this.cachedAbsoluteStart = start;\n        this.cachedAbsoluteEnd = end;\n        this.range = range;\n    }\n    setOptions(options) {\n        this.options = options;\n        const className = this.options.className;\n        setNodeIsForValidation(this, (className === \"squiggly-error\" /* ClassName.EditorErrorDecoration */\n            || className === \"squiggly-warning\" /* ClassName.EditorWarningDecoration */\n            || className === \"squiggly-info\" /* ClassName.EditorInfoDecoration */));\n        setNodeIsInGlyphMargin(this, this.options.glyphMarginClassName !== null);\n        _setNodeStickiness(this, this.options.stickiness);\n        setCollapseOnReplaceEdit(this, this.options.collapseOnReplaceEdit);\n    }\n    setCachedOffsets(absoluteStart, absoluteEnd, cachedVersionId) {\n        if (this.cachedVersionId !== cachedVersionId) {\n            this.range = null;\n        }\n        this.cachedVersionId = cachedVersionId;\n        this.cachedAbsoluteStart = absoluteStart;\n        this.cachedAbsoluteEnd = absoluteEnd;\n    }\n    detach() {\n        this.parent = null;\n        this.left = null;\n        this.right = null;\n    }\n}\nexport const SENTINEL = new IntervalNode(null, 0, 0);\nSENTINEL.parent = SENTINEL;\nSENTINEL.left = SENTINEL;\nSENTINEL.right = SENTINEL;\nsetNodeColor(SENTINEL, 0 /* NodeColor.Black */);\nexport class IntervalTree {\n    constructor() {\n        this.root = SENTINEL;\n        this.requestNormalizeDelta = false;\n    }\n    intervalSearch(start, end, filterOwnerId, filterOutValidation, cachedVersionId, onlyMarginDecorations) {\n        if (this.root === SENTINEL) {\n            return [];\n        }\n        return intervalSearch(this, start, end, filterOwnerId, filterOutValidation, cachedVersionId, onlyMarginDecorations);\n    }\n    search(filterOwnerId, filterOutValidation, cachedVersionId, onlyMarginDecorations) {\n        if (this.root === SENTINEL) {\n            return [];\n        }\n        return search(this, filterOwnerId, filterOutValidation, cachedVersionId, onlyMarginDecorations);\n    }\n    /**\n     * Will not set `cachedAbsoluteStart` nor `cachedAbsoluteEnd` on the returned nodes!\n     */\n    collectNodesFromOwner(ownerId) {\n        return collectNodesFromOwner(this, ownerId);\n    }\n    /**\n     * Will not set `cachedAbsoluteStart` nor `cachedAbsoluteEnd` on the returned nodes!\n     */\n    collectNodesPostOrder() {\n        return collectNodesPostOrder(this);\n    }\n    insert(node) {\n        rbTreeInsert(this, node);\n        this._normalizeDeltaIfNecessary();\n    }\n    delete(node) {\n        rbTreeDelete(this, node);\n        this._normalizeDeltaIfNecessary();\n    }\n    resolveNode(node, cachedVersionId) {\n        const initialNode = node;\n        let delta = 0;\n        while (node !== this.root) {\n            if (node === node.parent.right) {\n                delta += node.parent.delta;\n            }\n            node = node.parent;\n        }\n        const nodeStart = initialNode.start + delta;\n        const nodeEnd = initialNode.end + delta;\n        initialNode.setCachedOffsets(nodeStart, nodeEnd, cachedVersionId);\n    }\n    acceptReplace(offset, length, textLength, forceMoveMarkers) {\n        // Our strategy is to remove all directly impacted nodes, and then add them back to the tree.\n        // (1) collect all nodes that are intersecting this edit as nodes of interest\n        const nodesOfInterest = searchForEditing(this, offset, offset + length);\n        // (2) remove all nodes that are intersecting this edit\n        for (let i = 0, len = nodesOfInterest.length; i < len; i++) {\n            const node = nodesOfInterest[i];\n            rbTreeDelete(this, node);\n        }\n        this._normalizeDeltaIfNecessary();\n        // (3) edit all tree nodes except the nodes of interest\n        noOverlapReplace(this, offset, offset + length, textLength);\n        this._normalizeDeltaIfNecessary();\n        // (4) edit the nodes of interest and insert them back in the tree\n        for (let i = 0, len = nodesOfInterest.length; i < len; i++) {\n            const node = nodesOfInterest[i];\n            node.start = node.cachedAbsoluteStart;\n            node.end = node.cachedAbsoluteEnd;\n            nodeAcceptEdit(node, offset, (offset + length), textLength, forceMoveMarkers);\n            node.maxEnd = node.end;\n            rbTreeInsert(this, node);\n        }\n        this._normalizeDeltaIfNecessary();\n    }\n    _normalizeDeltaIfNecessary() {\n        if (!this.requestNormalizeDelta) {\n            return;\n        }\n        this.requestNormalizeDelta = false;\n        normalizeDelta(this);\n    }\n}\n//#region Delta Normalization\nfunction normalizeDelta(T) {\n    let node = T.root;\n    let delta = 0;\n    while (node !== SENTINEL) {\n        if (node.left !== SENTINEL && !getNodeIsVisited(node.left)) {\n            // go left\n            node = node.left;\n            continue;\n        }\n        if (node.right !== SENTINEL && !getNodeIsVisited(node.right)) {\n            // go right\n            delta += node.delta;\n            node = node.right;\n            continue;\n        }\n        // handle current node\n        node.start = delta + node.start;\n        node.end = delta + node.end;\n        node.delta = 0;\n        recomputeMaxEnd(node);\n        setNodeIsVisited(node, true);\n        // going up from this node\n        setNodeIsVisited(node.left, false);\n        setNodeIsVisited(node.right, false);\n        if (node === node.parent.right) {\n            delta -= node.parent.delta;\n        }\n        node = node.parent;\n    }\n    setNodeIsVisited(T.root, false);\n}\nfunction adjustMarkerBeforeColumn(markerOffset, markerStickToPreviousCharacter, checkOffset, moveSemantics) {\n    if (markerOffset < checkOffset) {\n        return true;\n    }\n    if (markerOffset > checkOffset) {\n        return false;\n    }\n    if (moveSemantics === 1 /* MarkerMoveSemantics.ForceMove */) {\n        return false;\n    }\n    if (moveSemantics === 2 /* MarkerMoveSemantics.ForceStay */) {\n        return true;\n    }\n    return markerStickToPreviousCharacter;\n}\n/**\n * This is a lot more complicated than strictly necessary to maintain the same behaviour\n * as when decorations were implemented using two markers.\n */\nexport function nodeAcceptEdit(node, start, end, textLength, forceMoveMarkers) {\n    const nodeStickiness = getNodeStickiness(node);\n    const startStickToPreviousCharacter = (nodeStickiness === 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */\n        || nodeStickiness === 2 /* TrackedRangeStickiness.GrowsOnlyWhenTypingBefore */);\n    const endStickToPreviousCharacter = (nodeStickiness === 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */\n        || nodeStickiness === 2 /* TrackedRangeStickiness.GrowsOnlyWhenTypingBefore */);\n    const deletingCnt = (end - start);\n    const insertingCnt = textLength;\n    const commonLength = Math.min(deletingCnt, insertingCnt);\n    const nodeStart = node.start;\n    let startDone = false;\n    const nodeEnd = node.end;\n    let endDone = false;\n    if (start <= nodeStart && nodeEnd <= end && getCollapseOnReplaceEdit(node)) {\n        // This edit encompasses the entire decoration range\n        // and the decoration has asked to become collapsed\n        node.start = start;\n        startDone = true;\n        node.end = start;\n        endDone = true;\n    }\n    {\n        const moveSemantics = forceMoveMarkers ? 1 /* MarkerMoveSemantics.ForceMove */ : (deletingCnt > 0 ? 2 /* MarkerMoveSemantics.ForceStay */ : 0 /* MarkerMoveSemantics.MarkerDefined */);\n        if (!startDone && adjustMarkerBeforeColumn(nodeStart, startStickToPreviousCharacter, start, moveSemantics)) {\n            startDone = true;\n        }\n        if (!endDone && adjustMarkerBeforeColumn(nodeEnd, endStickToPreviousCharacter, start, moveSemantics)) {\n            endDone = true;\n        }\n    }\n    if (commonLength > 0 && !forceMoveMarkers) {\n        const moveSemantics = (deletingCnt > insertingCnt ? 2 /* MarkerMoveSemantics.ForceStay */ : 0 /* MarkerMoveSemantics.MarkerDefined */);\n        if (!startDone && adjustMarkerBeforeColumn(nodeStart, startStickToPreviousCharacter, start + commonLength, moveSemantics)) {\n            startDone = true;\n        }\n        if (!endDone && adjustMarkerBeforeColumn(nodeEnd, endStickToPreviousCharacter, start + commonLength, moveSemantics)) {\n            endDone = true;\n        }\n    }\n    {\n        const moveSemantics = forceMoveMarkers ? 1 /* MarkerMoveSemantics.ForceMove */ : 0 /* MarkerMoveSemantics.MarkerDefined */;\n        if (!startDone && adjustMarkerBeforeColumn(nodeStart, startStickToPreviousCharacter, end, moveSemantics)) {\n            node.start = start + insertingCnt;\n            startDone = true;\n        }\n        if (!endDone && adjustMarkerBeforeColumn(nodeEnd, endStickToPreviousCharacter, end, moveSemantics)) {\n            node.end = start + insertingCnt;\n            endDone = true;\n        }\n    }\n    // Finish\n    const deltaColumn = (insertingCnt - deletingCnt);\n    if (!startDone) {\n        node.start = Math.max(0, nodeStart + deltaColumn);\n    }\n    if (!endDone) {\n        node.end = Math.max(0, nodeEnd + deltaColumn);\n    }\n    if (node.start > node.end) {\n        node.end = node.start;\n    }\n}\nfunction searchForEditing(T, start, end) {\n    // https://en.wikipedia.org/wiki/Interval_tree#Augmented_tree\n    // Now, it is known that two intervals A and B overlap only when both\n    // A.low <= B.high and A.high >= B.low. When searching the trees for\n    // nodes overlapping with a given interval, you can immediately skip:\n    //  a) all nodes to the right of nodes whose low value is past the end of the given interval.\n    //  b) all nodes that have their maximum 'high' value below the start of the given interval.\n    let node = T.root;\n    let delta = 0;\n    let nodeMaxEnd = 0;\n    let nodeStart = 0;\n    let nodeEnd = 0;\n    const result = [];\n    let resultLen = 0;\n    while (node !== SENTINEL) {\n        if (getNodeIsVisited(node)) {\n            // going up from this node\n            setNodeIsVisited(node.left, false);\n            setNodeIsVisited(node.right, false);\n            if (node === node.parent.right) {\n                delta -= node.parent.delta;\n            }\n            node = node.parent;\n            continue;\n        }\n        if (!getNodeIsVisited(node.left)) {\n            // first time seeing this node\n            nodeMaxEnd = delta + node.maxEnd;\n            if (nodeMaxEnd < start) {\n                // cover case b) from above\n                // there is no need to search this node or its children\n                setNodeIsVisited(node, true);\n                continue;\n            }\n            if (node.left !== SENTINEL) {\n                // go left\n                node = node.left;\n                continue;\n            }\n        }\n        // handle current node\n        nodeStart = delta + node.start;\n        if (nodeStart > end) {\n            // cover case a) from above\n            // there is no need to search this node or its right subtree\n            setNodeIsVisited(node, true);\n            continue;\n        }\n        nodeEnd = delta + node.end;\n        if (nodeEnd >= start) {\n            node.setCachedOffsets(nodeStart, nodeEnd, 0);\n            result[resultLen++] = node;\n        }\n        setNodeIsVisited(node, true);\n        if (node.right !== SENTINEL && !getNodeIsVisited(node.right)) {\n            // go right\n            delta += node.delta;\n            node = node.right;\n            continue;\n        }\n    }\n    setNodeIsVisited(T.root, false);\n    return result;\n}\nfunction noOverlapReplace(T, start, end, textLength) {\n    // https://en.wikipedia.org/wiki/Interval_tree#Augmented_tree\n    // Now, it is known that two intervals A and B overlap only when both\n    // A.low <= B.high and A.high >= B.low. When searching the trees for\n    // nodes overlapping with a given interval, you can immediately skip:\n    //  a) all nodes to the right of nodes whose low value is past the end of the given interval.\n    //  b) all nodes that have their maximum 'high' value below the start of the given interval.\n    let node = T.root;\n    let delta = 0;\n    let nodeMaxEnd = 0;\n    let nodeStart = 0;\n    const editDelta = (textLength - (end - start));\n    while (node !== SENTINEL) {\n        if (getNodeIsVisited(node)) {\n            // going up from this node\n            setNodeIsVisited(node.left, false);\n            setNodeIsVisited(node.right, false);\n            if (node === node.parent.right) {\n                delta -= node.parent.delta;\n            }\n            recomputeMaxEnd(node);\n            node = node.parent;\n            continue;\n        }\n        if (!getNodeIsVisited(node.left)) {\n            // first time seeing this node\n            nodeMaxEnd = delta + node.maxEnd;\n            if (nodeMaxEnd < start) {\n                // cover case b) from above\n                // there is no need to search this node or its children\n                setNodeIsVisited(node, true);\n                continue;\n            }\n            if (node.left !== SENTINEL) {\n                // go left\n                node = node.left;\n                continue;\n            }\n        }\n        // handle current node\n        nodeStart = delta + node.start;\n        if (nodeStart > end) {\n            node.start += editDelta;\n            node.end += editDelta;\n            node.delta += editDelta;\n            if (node.delta < -1073741824 /* Constants.MIN_SAFE_DELTA */ || node.delta > 1073741824 /* Constants.MAX_SAFE_DELTA */) {\n                T.requestNormalizeDelta = true;\n            }\n            // cover case a) from above\n            // there is no need to search this node or its right subtree\n            setNodeIsVisited(node, true);\n            continue;\n        }\n        setNodeIsVisited(node, true);\n        if (node.right !== SENTINEL && !getNodeIsVisited(node.right)) {\n            // go right\n            delta += node.delta;\n            node = node.right;\n            continue;\n        }\n    }\n    setNodeIsVisited(T.root, false);\n}\n//#endregion\n//#region Searching\nfunction collectNodesFromOwner(T, ownerId) {\n    let node = T.root;\n    const result = [];\n    let resultLen = 0;\n    while (node !== SENTINEL) {\n        if (getNodeIsVisited(node)) {\n            // going up from this node\n            setNodeIsVisited(node.left, false);\n            setNodeIsVisited(node.right, false);\n            node = node.parent;\n            continue;\n        }\n        if (node.left !== SENTINEL && !getNodeIsVisited(node.left)) {\n            // go left\n            node = node.left;\n            continue;\n        }\n        // handle current node\n        if (node.ownerId === ownerId) {\n            result[resultLen++] = node;\n        }\n        setNodeIsVisited(node, true);\n        if (node.right !== SENTINEL && !getNodeIsVisited(node.right)) {\n            // go right\n            node = node.right;\n            continue;\n        }\n    }\n    setNodeIsVisited(T.root, false);\n    return result;\n}\nfunction collectNodesPostOrder(T) {\n    let node = T.root;\n    const result = [];\n    let resultLen = 0;\n    while (node !== SENTINEL) {\n        if (getNodeIsVisited(node)) {\n            // going up from this node\n            setNodeIsVisited(node.left, false);\n            setNodeIsVisited(node.right, false);\n            node = node.parent;\n            continue;\n        }\n        if (node.left !== SENTINEL && !getNodeIsVisited(node.left)) {\n            // go left\n            node = node.left;\n            continue;\n        }\n        if (node.right !== SENTINEL && !getNodeIsVisited(node.right)) {\n            // go right\n            node = node.right;\n            continue;\n        }\n        // handle current node\n        result[resultLen++] = node;\n        setNodeIsVisited(node, true);\n    }\n    setNodeIsVisited(T.root, false);\n    return result;\n}\nfunction search(T, filterOwnerId, filterOutValidation, cachedVersionId, onlyMarginDecorations) {\n    let node = T.root;\n    let delta = 0;\n    let nodeStart = 0;\n    let nodeEnd = 0;\n    const result = [];\n    let resultLen = 0;\n    while (node !== SENTINEL) {\n        if (getNodeIsVisited(node)) {\n            // going up from this node\n            setNodeIsVisited(node.left, false);\n            setNodeIsVisited(node.right, false);\n            if (node === node.parent.right) {\n                delta -= node.parent.delta;\n            }\n            node = node.parent;\n            continue;\n        }\n        if (node.left !== SENTINEL && !getNodeIsVisited(node.left)) {\n            // go left\n            node = node.left;\n            continue;\n        }\n        // handle current node\n        nodeStart = delta + node.start;\n        nodeEnd = delta + node.end;\n        node.setCachedOffsets(nodeStart, nodeEnd, cachedVersionId);\n        let include = true;\n        if (filterOwnerId && node.ownerId && node.ownerId !== filterOwnerId) {\n            include = false;\n        }\n        if (filterOutValidation && getNodeIsForValidation(node)) {\n            include = false;\n        }\n        if (onlyMarginDecorations && !getNodeIsInGlyphMargin(node)) {\n            include = false;\n        }\n        if (include) {\n            result[resultLen++] = node;\n        }\n        setNodeIsVisited(node, true);\n        if (node.right !== SENTINEL && !getNodeIsVisited(node.right)) {\n            // go right\n            delta += node.delta;\n            node = node.right;\n            continue;\n        }\n    }\n    setNodeIsVisited(T.root, false);\n    return result;\n}\nfunction intervalSearch(T, intervalStart, intervalEnd, filterOwnerId, filterOutValidation, cachedVersionId, onlyMarginDecorations) {\n    // https://en.wikipedia.org/wiki/Interval_tree#Augmented_tree\n    // Now, it is known that two intervals A and B overlap only when both\n    // A.low <= B.high and A.high >= B.low. When searching the trees for\n    // nodes overlapping with a given interval, you can immediately skip:\n    //  a) all nodes to the right of nodes whose low value is past the end of the given interval.\n    //  b) all nodes that have their maximum 'high' value below the start of the given interval.\n    let node = T.root;\n    let delta = 0;\n    let nodeMaxEnd = 0;\n    let nodeStart = 0;\n    let nodeEnd = 0;\n    const result = [];\n    let resultLen = 0;\n    while (node !== SENTINEL) {\n        if (getNodeIsVisited(node)) {\n            // going up from this node\n            setNodeIsVisited(node.left, false);\n            setNodeIsVisited(node.right, false);\n            if (node === node.parent.right) {\n                delta -= node.parent.delta;\n            }\n            node = node.parent;\n            continue;\n        }\n        if (!getNodeIsVisited(node.left)) {\n            // first time seeing this node\n            nodeMaxEnd = delta + node.maxEnd;\n            if (nodeMaxEnd < intervalStart) {\n                // cover case b) from above\n                // there is no need to search this node or its children\n                setNodeIsVisited(node, true);\n                continue;\n            }\n            if (node.left !== SENTINEL) {\n                // go left\n                node = node.left;\n                continue;\n            }\n        }\n        // handle current node\n        nodeStart = delta + node.start;\n        if (nodeStart > intervalEnd) {\n            // cover case a) from above\n            // there is no need to search this node or its right subtree\n            setNodeIsVisited(node, true);\n            continue;\n        }\n        nodeEnd = delta + node.end;\n        if (nodeEnd >= intervalStart) {\n            // There is overlap\n            node.setCachedOffsets(nodeStart, nodeEnd, cachedVersionId);\n            let include = true;\n            if (filterOwnerId && node.ownerId && node.ownerId !== filterOwnerId) {\n                include = false;\n            }\n            if (filterOutValidation && getNodeIsForValidation(node)) {\n                include = false;\n            }\n            if (onlyMarginDecorations && !getNodeIsInGlyphMargin(node)) {\n                include = false;\n            }\n            if (include) {\n                result[resultLen++] = node;\n            }\n        }\n        setNodeIsVisited(node, true);\n        if (node.right !== SENTINEL && !getNodeIsVisited(node.right)) {\n            // go right\n            delta += node.delta;\n            node = node.right;\n            continue;\n        }\n    }\n    setNodeIsVisited(T.root, false);\n    return result;\n}\n//#endregion\n//#region Insertion\nfunction rbTreeInsert(T, newNode) {\n    if (T.root === SENTINEL) {\n        newNode.parent = SENTINEL;\n        newNode.left = SENTINEL;\n        newNode.right = SENTINEL;\n        setNodeColor(newNode, 0 /* NodeColor.Black */);\n        T.root = newNode;\n        return T.root;\n    }\n    treeInsert(T, newNode);\n    recomputeMaxEndWalkToRoot(newNode.parent);\n    // repair tree\n    let x = newNode;\n    while (x !== T.root && getNodeColor(x.parent) === 1 /* NodeColor.Red */) {\n        if (x.parent === x.parent.parent.left) {\n            const y = x.parent.parent.right;\n            if (getNodeColor(y) === 1 /* NodeColor.Red */) {\n                setNodeColor(x.parent, 0 /* NodeColor.Black */);\n                setNodeColor(y, 0 /* NodeColor.Black */);\n                setNodeColor(x.parent.parent, 1 /* NodeColor.Red */);\n                x = x.parent.parent;\n            }\n            else {\n                if (x === x.parent.right) {\n                    x = x.parent;\n                    leftRotate(T, x);\n                }\n                setNodeColor(x.parent, 0 /* NodeColor.Black */);\n                setNodeColor(x.parent.parent, 1 /* NodeColor.Red */);\n                rightRotate(T, x.parent.parent);\n            }\n        }\n        else {\n            const y = x.parent.parent.left;\n            if (getNodeColor(y) === 1 /* NodeColor.Red */) {\n                setNodeColor(x.parent, 0 /* NodeColor.Black */);\n                setNodeColor(y, 0 /* NodeColor.Black */);\n                setNodeColor(x.parent.parent, 1 /* NodeColor.Red */);\n                x = x.parent.parent;\n            }\n            else {\n                if (x === x.parent.left) {\n                    x = x.parent;\n                    rightRotate(T, x);\n                }\n                setNodeColor(x.parent, 0 /* NodeColor.Black */);\n                setNodeColor(x.parent.parent, 1 /* NodeColor.Red */);\n                leftRotate(T, x.parent.parent);\n            }\n        }\n    }\n    setNodeColor(T.root, 0 /* NodeColor.Black */);\n    return newNode;\n}\nfunction treeInsert(T, z) {\n    let delta = 0;\n    let x = T.root;\n    const zAbsoluteStart = z.start;\n    const zAbsoluteEnd = z.end;\n    while (true) {\n        const cmp = intervalCompare(zAbsoluteStart, zAbsoluteEnd, x.start + delta, x.end + delta);\n        if (cmp < 0) {\n            // this node should be inserted to the left\n            // => it is not affected by the node's delta\n            if (x.left === SENTINEL) {\n                z.start -= delta;\n                z.end -= delta;\n                z.maxEnd -= delta;\n                x.left = z;\n                break;\n            }\n            else {\n                x = x.left;\n            }\n        }\n        else {\n            // this node should be inserted to the right\n            // => it is not affected by the node's delta\n            if (x.right === SENTINEL) {\n                z.start -= (delta + x.delta);\n                z.end -= (delta + x.delta);\n                z.maxEnd -= (delta + x.delta);\n                x.right = z;\n                break;\n            }\n            else {\n                delta += x.delta;\n                x = x.right;\n            }\n        }\n    }\n    z.parent = x;\n    z.left = SENTINEL;\n    z.right = SENTINEL;\n    setNodeColor(z, 1 /* NodeColor.Red */);\n}\n//#endregion\n//#region Deletion\nfunction rbTreeDelete(T, z) {\n    let x;\n    let y;\n    // RB-DELETE except we don't swap z and y in case c)\n    // i.e. we always delete what's pointed at by z.\n    if (z.left === SENTINEL) {\n        x = z.right;\n        y = z;\n        // x's delta is no longer influenced by z's delta\n        x.delta += z.delta;\n        if (x.delta < -1073741824 /* Constants.MIN_SAFE_DELTA */ || x.delta > 1073741824 /* Constants.MAX_SAFE_DELTA */) {\n            T.requestNormalizeDelta = true;\n        }\n        x.start += z.delta;\n        x.end += z.delta;\n    }\n    else if (z.right === SENTINEL) {\n        x = z.left;\n        y = z;\n    }\n    else {\n        y = leftest(z.right);\n        x = y.right;\n        // y's delta is no longer influenced by z's delta,\n        // but we don't want to walk the entire right-hand-side subtree of x.\n        // we therefore maintain z's delta in y, and adjust only x\n        x.start += y.delta;\n        x.end += y.delta;\n        x.delta += y.delta;\n        if (x.delta < -1073741824 /* Constants.MIN_SAFE_DELTA */ || x.delta > 1073741824 /* Constants.MAX_SAFE_DELTA */) {\n            T.requestNormalizeDelta = true;\n        }\n        y.start += z.delta;\n        y.end += z.delta;\n        y.delta = z.delta;\n        if (y.delta < -1073741824 /* Constants.MIN_SAFE_DELTA */ || y.delta > 1073741824 /* Constants.MAX_SAFE_DELTA */) {\n            T.requestNormalizeDelta = true;\n        }\n    }\n    if (y === T.root) {\n        T.root = x;\n        setNodeColor(x, 0 /* NodeColor.Black */);\n        z.detach();\n        resetSentinel();\n        recomputeMaxEnd(x);\n        T.root.parent = SENTINEL;\n        return;\n    }\n    const yWasRed = (getNodeColor(y) === 1 /* NodeColor.Red */);\n    if (y === y.parent.left) {\n        y.parent.left = x;\n    }\n    else {\n        y.parent.right = x;\n    }\n    if (y === z) {\n        x.parent = y.parent;\n    }\n    else {\n        if (y.parent === z) {\n            x.parent = y;\n        }\n        else {\n            x.parent = y.parent;\n        }\n        y.left = z.left;\n        y.right = z.right;\n        y.parent = z.parent;\n        setNodeColor(y, getNodeColor(z));\n        if (z === T.root) {\n            T.root = y;\n        }\n        else {\n            if (z === z.parent.left) {\n                z.parent.left = y;\n            }\n            else {\n                z.parent.right = y;\n            }\n        }\n        if (y.left !== SENTINEL) {\n            y.left.parent = y;\n        }\n        if (y.right !== SENTINEL) {\n            y.right.parent = y;\n        }\n    }\n    z.detach();\n    if (yWasRed) {\n        recomputeMaxEndWalkToRoot(x.parent);\n        if (y !== z) {\n            recomputeMaxEndWalkToRoot(y);\n            recomputeMaxEndWalkToRoot(y.parent);\n        }\n        resetSentinel();\n        return;\n    }\n    recomputeMaxEndWalkToRoot(x);\n    recomputeMaxEndWalkToRoot(x.parent);\n    if (y !== z) {\n        recomputeMaxEndWalkToRoot(y);\n        recomputeMaxEndWalkToRoot(y.parent);\n    }\n    // RB-DELETE-FIXUP\n    let w;\n    while (x !== T.root && getNodeColor(x) === 0 /* NodeColor.Black */) {\n        if (x === x.parent.left) {\n            w = x.parent.right;\n            if (getNodeColor(w) === 1 /* NodeColor.Red */) {\n                setNodeColor(w, 0 /* NodeColor.Black */);\n                setNodeColor(x.parent, 1 /* NodeColor.Red */);\n                leftRotate(T, x.parent);\n                w = x.parent.right;\n            }\n            if (getNodeColor(w.left) === 0 /* NodeColor.Black */ && getNodeColor(w.right) === 0 /* NodeColor.Black */) {\n                setNodeColor(w, 1 /* NodeColor.Red */);\n                x = x.parent;\n            }\n            else {\n                if (getNodeColor(w.right) === 0 /* NodeColor.Black */) {\n                    setNodeColor(w.left, 0 /* NodeColor.Black */);\n                    setNodeColor(w, 1 /* NodeColor.Red */);\n                    rightRotate(T, w);\n                    w = x.parent.right;\n                }\n                setNodeColor(w, getNodeColor(x.parent));\n                setNodeColor(x.parent, 0 /* NodeColor.Black */);\n                setNodeColor(w.right, 0 /* NodeColor.Black */);\n                leftRotate(T, x.parent);\n                x = T.root;\n            }\n        }\n        else {\n            w = x.parent.left;\n            if (getNodeColor(w) === 1 /* NodeColor.Red */) {\n                setNodeColor(w, 0 /* NodeColor.Black */);\n                setNodeColor(x.parent, 1 /* NodeColor.Red */);\n                rightRotate(T, x.parent);\n                w = x.parent.left;\n            }\n            if (getNodeColor(w.left) === 0 /* NodeColor.Black */ && getNodeColor(w.right) === 0 /* NodeColor.Black */) {\n                setNodeColor(w, 1 /* NodeColor.Red */);\n                x = x.parent;\n            }\n            else {\n                if (getNodeColor(w.left) === 0 /* NodeColor.Black */) {\n                    setNodeColor(w.right, 0 /* NodeColor.Black */);\n                    setNodeColor(w, 1 /* NodeColor.Red */);\n                    leftRotate(T, w);\n                    w = x.parent.left;\n                }\n                setNodeColor(w, getNodeColor(x.parent));\n                setNodeColor(x.parent, 0 /* NodeColor.Black */);\n                setNodeColor(w.left, 0 /* NodeColor.Black */);\n                rightRotate(T, x.parent);\n                x = T.root;\n            }\n        }\n    }\n    setNodeColor(x, 0 /* NodeColor.Black */);\n    resetSentinel();\n}\nfunction leftest(node) {\n    while (node.left !== SENTINEL) {\n        node = node.left;\n    }\n    return node;\n}\nfunction resetSentinel() {\n    SENTINEL.parent = SENTINEL;\n    SENTINEL.delta = 0; // optional\n    SENTINEL.start = 0; // optional\n    SENTINEL.end = 0; // optional\n}\n//#endregion\n//#region Rotations\nfunction leftRotate(T, x) {\n    const y = x.right; // set y.\n    y.delta += x.delta; // y's delta is no longer influenced by x's delta\n    if (y.delta < -1073741824 /* Constants.MIN_SAFE_DELTA */ || y.delta > 1073741824 /* Constants.MAX_SAFE_DELTA */) {\n        T.requestNormalizeDelta = true;\n    }\n    y.start += x.delta;\n    y.end += x.delta;\n    x.right = y.left; // turn y's left subtree into x's right subtree.\n    if (y.left !== SENTINEL) {\n        y.left.parent = x;\n    }\n    y.parent = x.parent; // link x's parent to y.\n    if (x.parent === SENTINEL) {\n        T.root = y;\n    }\n    else if (x === x.parent.left) {\n        x.parent.left = y;\n    }\n    else {\n        x.parent.right = y;\n    }\n    y.left = x; // put x on y's left.\n    x.parent = y;\n    recomputeMaxEnd(x);\n    recomputeMaxEnd(y);\n}\nfunction rightRotate(T, y) {\n    const x = y.left;\n    y.delta -= x.delta;\n    if (y.delta < -1073741824 /* Constants.MIN_SAFE_DELTA */ || y.delta > 1073741824 /* Constants.MAX_SAFE_DELTA */) {\n        T.requestNormalizeDelta = true;\n    }\n    y.start -= x.delta;\n    y.end -= x.delta;\n    y.left = x.right;\n    if (x.right !== SENTINEL) {\n        x.right.parent = y;\n    }\n    x.parent = y.parent;\n    if (y.parent === SENTINEL) {\n        T.root = x;\n    }\n    else if (y === y.parent.right) {\n        y.parent.right = x;\n    }\n    else {\n        y.parent.left = x;\n    }\n    x.right = y;\n    y.parent = x;\n    recomputeMaxEnd(y);\n    recomputeMaxEnd(x);\n}\n//#endregion\n//#region max end computation\nfunction computeMaxEnd(node) {\n    let maxEnd = node.end;\n    if (node.left !== SENTINEL) {\n        const leftMaxEnd = node.left.maxEnd;\n        if (leftMaxEnd > maxEnd) {\n            maxEnd = leftMaxEnd;\n        }\n    }\n    if (node.right !== SENTINEL) {\n        const rightMaxEnd = node.right.maxEnd + node.delta;\n        if (rightMaxEnd > maxEnd) {\n            maxEnd = rightMaxEnd;\n        }\n    }\n    return maxEnd;\n}\nexport function recomputeMaxEnd(node) {\n    node.maxEnd = computeMaxEnd(node);\n}\nfunction recomputeMaxEndWalkToRoot(node) {\n    while (node !== SENTINEL) {\n        const maxEnd = computeMaxEnd(node);\n        if (node.maxEnd === maxEnd) {\n            // no need to go further\n            return;\n        }\n        node.maxEnd = maxEnd;\n        node = node.parent;\n    }\n}\n//#endregion\n//#region utils\nexport function intervalCompare(aStart, aEnd, bStart, bEnd) {\n    if (aStart === bStart) {\n        return aEnd - bEnd;\n    }\n    return aStart - bStart;\n}\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { splitLines } from '../../../base/common/strings.js';\nimport { Position } from '../core/position.js';\nimport { PrefixSumComputer } from './prefixSumComputer.js';\nexport class MirrorTextModel {\n    constructor(uri, lines, eol, versionId) {\n        this._uri = uri;\n        this._lines = lines;\n        this._eol = eol;\n        this._versionId = versionId;\n        this._lineStarts = null;\n        this._cachedTextValue = null;\n    }\n    dispose() {\n        this._lines.length = 0;\n    }\n    get version() {\n        return this._versionId;\n    }\n    getText() {\n        if (this._cachedTextValue === null) {\n            this._cachedTextValue = this._lines.join(this._eol);\n        }\n        return this._cachedTextValue;\n    }\n    onEvents(e) {\n        if (e.eol && e.eol !== this._eol) {\n            this._eol = e.eol;\n            this._lineStarts = null;\n        }\n        // Update my lines\n        const changes = e.changes;\n        for (const change of changes) {\n            this._acceptDeleteRange(change.range);\n            this._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n        }\n        this._versionId = e.versionId;\n        this._cachedTextValue = null;\n    }\n    _ensureLineStarts() {\n        if (!this._lineStarts) {\n            const eolLength = this._eol.length;\n            const linesLength = this._lines.length;\n            const lineStartValues = new Uint32Array(linesLength);\n            for (let i = 0; i < linesLength; i++) {\n                lineStartValues[i] = this._lines[i].length + eolLength;\n            }\n            this._lineStarts = new PrefixSumComputer(lineStartValues);\n        }\n    }\n    /**\n     * All changes to a line's text go through this method\n     */\n    _setLineText(lineIndex, newValue) {\n        this._lines[lineIndex] = newValue;\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.setValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n        }\n    }\n    _acceptDeleteRange(range) {\n        if (range.startLineNumber === range.endLineNumber) {\n            if (range.startColumn === range.endColumn) {\n                // Nothing to delete\n                return;\n            }\n            // Delete text on the affected line\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n                + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\n            return;\n        }\n        // Take remaining text on last line and append it to remaining text on first line\n        this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n            + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\n        // Delete middle lines\n        this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        }\n    }\n    _acceptInsertText(position, insertText) {\n        if (insertText.length === 0) {\n            // Nothing to insert\n            return;\n        }\n        const insertLines = splitLines(insertText);\n        if (insertLines.length === 1) {\n            // Inserting text on one line\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n                + insertLines[0]\n                + this._lines[position.lineNumber - 1].substring(position.column - 1));\n            return;\n        }\n        // Append overflowing text from first line to the end of text to insert\n        insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n        // Delete overflowing text from first line and insert text on first line\n        this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n            + insertLines[0]);\n        // Insert new lines & store lengths\n        const newLengths = new Uint32Array(insertLines.length - 1);\n        for (let i = 1; i < insertLines.length; i++) {\n            this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n            newLengths[i - 1] = insertLines[i].length + this._eol.length;\n        }\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.insertValues(position.lineNumber, newLengths);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from '../../core/position.js';\nimport { Range } from '../../core/range.js';\nimport { FindMatch } from '../../model.js';\nimport { SENTINEL, TreeNode, fixInsert, leftest, rbDelete, righttest, updateTreeMetadata } from './rbTreeBase.js';\nimport { Searcher, createFindMatch, isValidMatch } from '../textModelSearch.js';\n// const lfRegex = new RegExp(/\\r\\n|\\r|\\n/g);\nconst AverageBufferSize = 65535;\nfunction createUintArray(arr) {\n    let r;\n    if (arr[arr.length - 1] < 65536) {\n        r = new Uint16Array(arr.length);\n    }\n    else {\n        r = new Uint32Array(arr.length);\n    }\n    r.set(arr, 0);\n    return r;\n}\nclass LineStarts {\n    constructor(lineStarts, cr, lf, crlf, isBasicASCII) {\n        this.lineStarts = lineStarts;\n        this.cr = cr;\n        this.lf = lf;\n        this.crlf = crlf;\n        this.isBasicASCII = isBasicASCII;\n    }\n}\nexport function createLineStartsFast(str, readonly = true) {\n    const r = [0];\n    let rLength = 1;\n    for (let i = 0, len = str.length; i < len; i++) {\n        const chr = str.charCodeAt(i);\n        if (chr === 13 /* CharCode.CarriageReturn */) {\n            if (i + 1 < len && str.charCodeAt(i + 1) === 10 /* CharCode.LineFeed */) {\n                // \\r\\n... case\n                r[rLength++] = i + 2;\n                i++; // skip \\n\n            }\n            else {\n                // \\r... case\n                r[rLength++] = i + 1;\n            }\n        }\n        else if (chr === 10 /* CharCode.LineFeed */) {\n            r[rLength++] = i + 1;\n        }\n    }\n    if (readonly) {\n        return createUintArray(r);\n    }\n    else {\n        return r;\n    }\n}\nexport function createLineStarts(r, str) {\n    r.length = 0;\n    r[0] = 0;\n    let rLength = 1;\n    let cr = 0, lf = 0, crlf = 0;\n    let isBasicASCII = true;\n    for (let i = 0, len = str.length; i < len; i++) {\n        const chr = str.charCodeAt(i);\n        if (chr === 13 /* CharCode.CarriageReturn */) {\n            if (i + 1 < len && str.charCodeAt(i + 1) === 10 /* CharCode.LineFeed */) {\n                // \\r\\n... case\n                crlf++;\n                r[rLength++] = i + 2;\n                i++; // skip \\n\n            }\n            else {\n                cr++;\n                // \\r... case\n                r[rLength++] = i + 1;\n            }\n        }\n        else if (chr === 10 /* CharCode.LineFeed */) {\n            lf++;\n            r[rLength++] = i + 1;\n        }\n        else {\n            if (isBasicASCII) {\n                if (chr !== 9 /* CharCode.Tab */ && (chr < 32 || chr > 126)) {\n                    isBasicASCII = false;\n                }\n            }\n        }\n    }\n    const result = new LineStarts(createUintArray(r), cr, lf, crlf, isBasicASCII);\n    r.length = 0;\n    return result;\n}\nexport class Piece {\n    constructor(bufferIndex, start, end, lineFeedCnt, length) {\n        this.bufferIndex = bufferIndex;\n        this.start = start;\n        this.end = end;\n        this.lineFeedCnt = lineFeedCnt;\n        this.length = length;\n    }\n}\nexport class StringBuffer {\n    constructor(buffer, lineStarts) {\n        this.buffer = buffer;\n        this.lineStarts = lineStarts;\n    }\n}\n/**\n * Readonly snapshot for piece tree.\n * In a real multiple thread environment, to make snapshot reading always work correctly, we need to\n * 1. Make TreeNode.piece immutable, then reading and writing can run in parallel.\n * 2. TreeNode/Buffers normalization should not happen during snapshot reading.\n */\nclass PieceTreeSnapshot {\n    constructor(tree, BOM) {\n        this._pieces = [];\n        this._tree = tree;\n        this._BOM = BOM;\n        this._index = 0;\n        if (tree.root !== SENTINEL) {\n            tree.iterate(tree.root, node => {\n                if (node !== SENTINEL) {\n                    this._pieces.push(node.piece);\n                }\n                return true;\n            });\n        }\n    }\n    read() {\n        if (this._pieces.length === 0) {\n            if (this._index === 0) {\n                this._index++;\n                return this._BOM;\n            }\n            else {\n                return null;\n            }\n        }\n        if (this._index > this._pieces.length - 1) {\n            return null;\n        }\n        if (this._index === 0) {\n            return this._BOM + this._tree.getPieceContent(this._pieces[this._index++]);\n        }\n        return this._tree.getPieceContent(this._pieces[this._index++]);\n    }\n}\nclass PieceTreeSearchCache {\n    constructor(limit) {\n        this._limit = limit;\n        this._cache = [];\n    }\n    get(offset) {\n        for (let i = this._cache.length - 1; i >= 0; i--) {\n            const nodePos = this._cache[i];\n            if (nodePos.nodeStartOffset <= offset && nodePos.nodeStartOffset + nodePos.node.piece.length >= offset) {\n                return nodePos;\n            }\n        }\n        return null;\n    }\n    get2(lineNumber) {\n        for (let i = this._cache.length - 1; i >= 0; i--) {\n            const nodePos = this._cache[i];\n            if (nodePos.nodeStartLineNumber && nodePos.nodeStartLineNumber < lineNumber && nodePos.nodeStartLineNumber + nodePos.node.piece.lineFeedCnt >= lineNumber) {\n                return nodePos;\n            }\n        }\n        return null;\n    }\n    set(nodePosition) {\n        if (this._cache.length >= this._limit) {\n            this._cache.shift();\n        }\n        this._cache.push(nodePosition);\n    }\n    validate(offset) {\n        let hasInvalidVal = false;\n        const tmp = this._cache;\n        for (let i = 0; i < tmp.length; i++) {\n            const nodePos = tmp[i];\n            if (nodePos.node.parent === null || nodePos.nodeStartOffset >= offset) {\n                tmp[i] = null;\n                hasInvalidVal = true;\n                continue;\n            }\n        }\n        if (hasInvalidVal) {\n            const newArr = [];\n            for (const entry of tmp) {\n                if (entry !== null) {\n                    newArr.push(entry);\n                }\n            }\n            this._cache = newArr;\n        }\n    }\n}\nexport class PieceTreeBase {\n    constructor(chunks, eol, eolNormalized) {\n        this.create(chunks, eol, eolNormalized);\n    }\n    create(chunks, eol, eolNormalized) {\n        this._buffers = [\n            new StringBuffer('', [0])\n        ];\n        this._lastChangeBufferPos = { line: 0, column: 0 };\n        this.root = SENTINEL;\n        this._lineCnt = 1;\n        this._length = 0;\n        this._EOL = eol;\n        this._EOLLength = eol.length;\n        this._EOLNormalized = eolNormalized;\n        let lastNode = null;\n        for (let i = 0, len = chunks.length; i < len; i++) {\n            if (chunks[i].buffer.length > 0) {\n                if (!chunks[i].lineStarts) {\n                    chunks[i].lineStarts = createLineStartsFast(chunks[i].buffer);\n                }\n                const piece = new Piece(i + 1, { line: 0, column: 0 }, { line: chunks[i].lineStarts.length - 1, column: chunks[i].buffer.length - chunks[i].lineStarts[chunks[i].lineStarts.length - 1] }, chunks[i].lineStarts.length - 1, chunks[i].buffer.length);\n                this._buffers.push(chunks[i]);\n                lastNode = this.rbInsertRight(lastNode, piece);\n            }\n        }\n        this._searchCache = new PieceTreeSearchCache(1);\n        this._lastVisitedLine = { lineNumber: 0, value: '' };\n        this.computeBufferMetadata();\n    }\n    normalizeEOL(eol) {\n        const averageBufferSize = AverageBufferSize;\n        const min = averageBufferSize - Math.floor(averageBufferSize / 3);\n        const max = min * 2;\n        let tempChunk = '';\n        let tempChunkLen = 0;\n        const chunks = [];\n        this.iterate(this.root, node => {\n            const str = this.getNodeContent(node);\n            const len = str.length;\n            if (tempChunkLen <= min || tempChunkLen + len < max) {\n                tempChunk += str;\n                tempChunkLen += len;\n                return true;\n            }\n            // flush anyways\n            const text = tempChunk.replace(/\\r\\n|\\r|\\n/g, eol);\n            chunks.push(new StringBuffer(text, createLineStartsFast(text)));\n            tempChunk = str;\n            tempChunkLen = len;\n            return true;\n        });\n        if (tempChunkLen > 0) {\n            const text = tempChunk.replace(/\\r\\n|\\r|\\n/g, eol);\n            chunks.push(new StringBuffer(text, createLineStartsFast(text)));\n        }\n        this.create(chunks, eol, true);\n    }\n    // #region Buffer API\n    getEOL() {\n        return this._EOL;\n    }\n    setEOL(newEOL) {\n        this._EOL = newEOL;\n        this._EOLLength = this._EOL.length;\n        this.normalizeEOL(newEOL);\n    }\n    createSnapshot(BOM) {\n        return new PieceTreeSnapshot(this, BOM);\n    }\n    getOffsetAt(lineNumber, column) {\n        let leftLen = 0; // inorder\n        let x = this.root;\n        while (x !== SENTINEL) {\n            if (x.left !== SENTINEL && x.lf_left + 1 >= lineNumber) {\n                x = x.left;\n            }\n            else if (x.lf_left + x.piece.lineFeedCnt + 1 >= lineNumber) {\n                leftLen += x.size_left;\n                // lineNumber >= 2\n                const accumualtedValInCurrentIndex = this.getAccumulatedValue(x, lineNumber - x.lf_left - 2);\n                return leftLen += accumualtedValInCurrentIndex + column - 1;\n            }\n            else {\n                lineNumber -= x.lf_left + x.piece.lineFeedCnt;\n                leftLen += x.size_left + x.piece.length;\n                x = x.right;\n            }\n        }\n        return leftLen;\n    }\n    getPositionAt(offset) {\n        offset = Math.floor(offset);\n        offset = Math.max(0, offset);\n        let x = this.root;\n        let lfCnt = 0;\n        const originalOffset = offset;\n        while (x !== SENTINEL) {\n            if (x.size_left !== 0 && x.size_left >= offset) {\n                x = x.left;\n            }\n            else if (x.size_left + x.piece.length >= offset) {\n                const out = this.getIndexOf(x, offset - x.size_left);\n                lfCnt += x.lf_left + out.index;\n                if (out.index === 0) {\n                    const lineStartOffset = this.getOffsetAt(lfCnt + 1, 1);\n                    const column = originalOffset - lineStartOffset;\n                    return new Position(lfCnt + 1, column + 1);\n                }\n                return new Position(lfCnt + 1, out.remainder + 1);\n            }\n            else {\n                offset -= x.size_left + x.piece.length;\n                lfCnt += x.lf_left + x.piece.lineFeedCnt;\n                if (x.right === SENTINEL) {\n                    // last node\n                    const lineStartOffset = this.getOffsetAt(lfCnt + 1, 1);\n                    const column = originalOffset - offset - lineStartOffset;\n                    return new Position(lfCnt + 1, column + 1);\n                }\n                else {\n                    x = x.right;\n                }\n            }\n        }\n        return new Position(1, 1);\n    }\n    getValueInRange(range, eol) {\n        if (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn) {\n            return '';\n        }\n        const startPosition = this.nodeAt2(range.startLineNumber, range.startColumn);\n        const endPosition = this.nodeAt2(range.endLineNumber, range.endColumn);\n        const value = this.getValueInRange2(startPosition, endPosition);\n        if (eol) {\n            if (eol !== this._EOL || !this._EOLNormalized) {\n                return value.replace(/\\r\\n|\\r|\\n/g, eol);\n            }\n            if (eol === this.getEOL() && this._EOLNormalized) {\n                if (eol === '\\r\\n') {\n                }\n                return value;\n            }\n            return value.replace(/\\r\\n|\\r|\\n/g, eol);\n        }\n        return value;\n    }\n    getValueInRange2(startPosition, endPosition) {\n        if (startPosition.node === endPosition.node) {\n            const node = startPosition.node;\n            const buffer = this._buffers[node.piece.bufferIndex].buffer;\n            const startOffset = this.offsetInBuffer(node.piece.bufferIndex, node.piece.start);\n            return buffer.substring(startOffset + startPosition.remainder, startOffset + endPosition.remainder);\n        }\n        let x = startPosition.node;\n        const buffer = this._buffers[x.piece.bufferIndex].buffer;\n        const startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n        let ret = buffer.substring(startOffset + startPosition.remainder, startOffset + x.piece.length);\n        x = x.next();\n        while (x !== SENTINEL) {\n            const buffer = this._buffers[x.piece.bufferIndex].buffer;\n            const startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n            if (x === endPosition.node) {\n                ret += buffer.substring(startOffset, startOffset + endPosition.remainder);\n                break;\n            }\n            else {\n                ret += buffer.substr(startOffset, x.piece.length);\n            }\n            x = x.next();\n        }\n        return ret;\n    }\n    getLinesContent() {\n        const lines = [];\n        let linesLength = 0;\n        let currentLine = '';\n        let danglingCR = false;\n        this.iterate(this.root, node => {\n            if (node === SENTINEL) {\n                return true;\n            }\n            const piece = node.piece;\n            let pieceLength = piece.length;\n            if (pieceLength === 0) {\n                return true;\n            }\n            const buffer = this._buffers[piece.bufferIndex].buffer;\n            const lineStarts = this._buffers[piece.bufferIndex].lineStarts;\n            const pieceStartLine = piece.start.line;\n            const pieceEndLine = piece.end.line;\n            let pieceStartOffset = lineStarts[pieceStartLine] + piece.start.column;\n            if (danglingCR) {\n                if (buffer.charCodeAt(pieceStartOffset) === 10 /* CharCode.LineFeed */) {\n                    // pretend the \\n was in the previous piece..\n                    pieceStartOffset++;\n                    pieceLength--;\n                }\n                lines[linesLength++] = currentLine;\n                currentLine = '';\n                danglingCR = false;\n                if (pieceLength === 0) {\n                    return true;\n                }\n            }\n            if (pieceStartLine === pieceEndLine) {\n                // this piece has no new lines\n                if (!this._EOLNormalized && buffer.charCodeAt(pieceStartOffset + pieceLength - 1) === 13 /* CharCode.CarriageReturn */) {\n                    danglingCR = true;\n                    currentLine += buffer.substr(pieceStartOffset, pieceLength - 1);\n                }\n                else {\n                    currentLine += buffer.substr(pieceStartOffset, pieceLength);\n                }\n                return true;\n            }\n            // add the text before the first line start in this piece\n            currentLine += (this._EOLNormalized\n                ? buffer.substring(pieceStartOffset, Math.max(pieceStartOffset, lineStarts[pieceStartLine + 1] - this._EOLLength))\n                : buffer.substring(pieceStartOffset, lineStarts[pieceStartLine + 1]).replace(/(\\r\\n|\\r|\\n)$/, ''));\n            lines[linesLength++] = currentLine;\n            for (let line = pieceStartLine + 1; line < pieceEndLine; line++) {\n                currentLine = (this._EOLNormalized\n                    ? buffer.substring(lineStarts[line], lineStarts[line + 1] - this._EOLLength)\n                    : buffer.substring(lineStarts[line], lineStarts[line + 1]).replace(/(\\r\\n|\\r|\\n)$/, ''));\n                lines[linesLength++] = currentLine;\n            }\n            if (!this._EOLNormalized && buffer.charCodeAt(lineStarts[pieceEndLine] + piece.end.column - 1) === 13 /* CharCode.CarriageReturn */) {\n                danglingCR = true;\n                if (piece.end.column === 0) {\n                    // The last line ended with a \\r, let's undo the push, it will be pushed by next iteration\n                    linesLength--;\n                }\n                else {\n                    currentLine = buffer.substr(lineStarts[pieceEndLine], piece.end.column - 1);\n                }\n            }\n            else {\n                currentLine = buffer.substr(lineStarts[pieceEndLine], piece.end.column);\n            }\n            return true;\n        });\n        if (danglingCR) {\n            lines[linesLength++] = currentLine;\n            currentLine = '';\n        }\n        lines[linesLength++] = currentLine;\n        return lines;\n    }\n    getLength() {\n        return this._length;\n    }\n    getLineCount() {\n        return this._lineCnt;\n    }\n    getLineContent(lineNumber) {\n        if (this._lastVisitedLine.lineNumber === lineNumber) {\n            return this._lastVisitedLine.value;\n        }\n        this._lastVisitedLine.lineNumber = lineNumber;\n        if (lineNumber === this._lineCnt) {\n            this._lastVisitedLine.value = this.getLineRawContent(lineNumber);\n        }\n        else if (this._EOLNormalized) {\n            this._lastVisitedLine.value = this.getLineRawContent(lineNumber, this._EOLLength);\n        }\n        else {\n            this._lastVisitedLine.value = this.getLineRawContent(lineNumber).replace(/(\\r\\n|\\r|\\n)$/, '');\n        }\n        return this._lastVisitedLine.value;\n    }\n    _getCharCode(nodePos) {\n        if (nodePos.remainder === nodePos.node.piece.length) {\n            // the char we want to fetch is at the head of next node.\n            const matchingNode = nodePos.node.next();\n            if (!matchingNode) {\n                return 0;\n            }\n            const buffer = this._buffers[matchingNode.piece.bufferIndex];\n            const startOffset = this.offsetInBuffer(matchingNode.piece.bufferIndex, matchingNode.piece.start);\n            return buffer.buffer.charCodeAt(startOffset);\n        }\n        else {\n            const buffer = this._buffers[nodePos.node.piece.bufferIndex];\n            const startOffset = this.offsetInBuffer(nodePos.node.piece.bufferIndex, nodePos.node.piece.start);\n            const targetOffset = startOffset + nodePos.remainder;\n            return buffer.buffer.charCodeAt(targetOffset);\n        }\n    }\n    getLineCharCode(lineNumber, index) {\n        const nodePos = this.nodeAt2(lineNumber, index + 1);\n        return this._getCharCode(nodePos);\n    }\n    getLineLength(lineNumber) {\n        if (lineNumber === this.getLineCount()) {\n            const startOffset = this.getOffsetAt(lineNumber, 1);\n            return this.getLength() - startOffset;\n        }\n        return this.getOffsetAt(lineNumber + 1, 1) - this.getOffsetAt(lineNumber, 1) - this._EOLLength;\n    }\n    findMatchesInNode(node, searcher, startLineNumber, startColumn, startCursor, endCursor, searchData, captureMatches, limitResultCount, resultLen, result) {\n        const buffer = this._buffers[node.piece.bufferIndex];\n        const startOffsetInBuffer = this.offsetInBuffer(node.piece.bufferIndex, node.piece.start);\n        const start = this.offsetInBuffer(node.piece.bufferIndex, startCursor);\n        const end = this.offsetInBuffer(node.piece.bufferIndex, endCursor);\n        let m;\n        // Reset regex to search from the beginning\n        const ret = { line: 0, column: 0 };\n        let searchText;\n        let offsetInBuffer;\n        if (searcher._wordSeparators) {\n            searchText = buffer.buffer.substring(start, end);\n            offsetInBuffer = (offset) => offset + start;\n            searcher.reset(0);\n        }\n        else {\n            searchText = buffer.buffer;\n            offsetInBuffer = (offset) => offset;\n            searcher.reset(start);\n        }\n        do {\n            m = searcher.next(searchText);\n            if (m) {\n                if (offsetInBuffer(m.index) >= end) {\n                    return resultLen;\n                }\n                this.positionInBuffer(node, offsetInBuffer(m.index) - startOffsetInBuffer, ret);\n                const lineFeedCnt = this.getLineFeedCnt(node.piece.bufferIndex, startCursor, ret);\n                const retStartColumn = ret.line === startCursor.line ? ret.column - startCursor.column + startColumn : ret.column + 1;\n                const retEndColumn = retStartColumn + m[0].length;\n                result[resultLen++] = createFindMatch(new Range(startLineNumber + lineFeedCnt, retStartColumn, startLineNumber + lineFeedCnt, retEndColumn), m, captureMatches);\n                if (offsetInBuffer(m.index) + m[0].length >= end) {\n                    return resultLen;\n                }\n                if (resultLen >= limitResultCount) {\n                    return resultLen;\n                }\n            }\n        } while (m);\n        return resultLen;\n    }\n    findMatchesLineByLine(searchRange, searchData, captureMatches, limitResultCount) {\n        const result = [];\n        let resultLen = 0;\n        const searcher = new Searcher(searchData.wordSeparators, searchData.regex);\n        let startPosition = this.nodeAt2(searchRange.startLineNumber, searchRange.startColumn);\n        if (startPosition === null) {\n            return [];\n        }\n        const endPosition = this.nodeAt2(searchRange.endLineNumber, searchRange.endColumn);\n        if (endPosition === null) {\n            return [];\n        }\n        let start = this.positionInBuffer(startPosition.node, startPosition.remainder);\n        const end = this.positionInBuffer(endPosition.node, endPosition.remainder);\n        if (startPosition.node === endPosition.node) {\n            this.findMatchesInNode(startPosition.node, searcher, searchRange.startLineNumber, searchRange.startColumn, start, end, searchData, captureMatches, limitResultCount, resultLen, result);\n            return result;\n        }\n        let startLineNumber = searchRange.startLineNumber;\n        let currentNode = startPosition.node;\n        while (currentNode !== endPosition.node) {\n            const lineBreakCnt = this.getLineFeedCnt(currentNode.piece.bufferIndex, start, currentNode.piece.end);\n            if (lineBreakCnt >= 1) {\n                // last line break position\n                const lineStarts = this._buffers[currentNode.piece.bufferIndex].lineStarts;\n                const startOffsetInBuffer = this.offsetInBuffer(currentNode.piece.bufferIndex, currentNode.piece.start);\n                const nextLineStartOffset = lineStarts[start.line + lineBreakCnt];\n                const startColumn = startLineNumber === searchRange.startLineNumber ? searchRange.startColumn : 1;\n                resultLen = this.findMatchesInNode(currentNode, searcher, startLineNumber, startColumn, start, this.positionInBuffer(currentNode, nextLineStartOffset - startOffsetInBuffer), searchData, captureMatches, limitResultCount, resultLen, result);\n                if (resultLen >= limitResultCount) {\n                    return result;\n                }\n                startLineNumber += lineBreakCnt;\n            }\n            const startColumn = startLineNumber === searchRange.startLineNumber ? searchRange.startColumn - 1 : 0;\n            // search for the remaining content\n            if (startLineNumber === searchRange.endLineNumber) {\n                const text = this.getLineContent(startLineNumber).substring(startColumn, searchRange.endColumn - 1);\n                resultLen = this._findMatchesInLine(searchData, searcher, text, searchRange.endLineNumber, startColumn, resultLen, result, captureMatches, limitResultCount);\n                return result;\n            }\n            resultLen = this._findMatchesInLine(searchData, searcher, this.getLineContent(startLineNumber).substr(startColumn), startLineNumber, startColumn, resultLen, result, captureMatches, limitResultCount);\n            if (resultLen >= limitResultCount) {\n                return result;\n            }\n            startLineNumber++;\n            startPosition = this.nodeAt2(startLineNumber, 1);\n            currentNode = startPosition.node;\n            start = this.positionInBuffer(startPosition.node, startPosition.remainder);\n        }\n        if (startLineNumber === searchRange.endLineNumber) {\n            const startColumn = startLineNumber === searchRange.startLineNumber ? searchRange.startColumn - 1 : 0;\n            const text = this.getLineContent(startLineNumber).substring(startColumn, searchRange.endColumn - 1);\n            resultLen = this._findMatchesInLine(searchData, searcher, text, searchRange.endLineNumber, startColumn, resultLen, result, captureMatches, limitResultCount);\n            return result;\n        }\n        const startColumn = startLineNumber === searchRange.startLineNumber ? searchRange.startColumn : 1;\n        resultLen = this.findMatchesInNode(endPosition.node, searcher, startLineNumber, startColumn, start, end, searchData, captureMatches, limitResultCount, resultLen, result);\n        return result;\n    }\n    _findMatchesInLine(searchData, searcher, text, lineNumber, deltaOffset, resultLen, result, captureMatches, limitResultCount) {\n        const wordSeparators = searchData.wordSeparators;\n        if (!captureMatches && searchData.simpleSearch) {\n            const searchString = searchData.simpleSearch;\n            const searchStringLen = searchString.length;\n            const textLength = text.length;\n            let lastMatchIndex = -searchStringLen;\n            while ((lastMatchIndex = text.indexOf(searchString, lastMatchIndex + searchStringLen)) !== -1) {\n                if (!wordSeparators || isValidMatch(wordSeparators, text, textLength, lastMatchIndex, searchStringLen)) {\n                    result[resultLen++] = new FindMatch(new Range(lineNumber, lastMatchIndex + 1 + deltaOffset, lineNumber, lastMatchIndex + 1 + searchStringLen + deltaOffset), null);\n                    if (resultLen >= limitResultCount) {\n                        return resultLen;\n                    }\n                }\n            }\n            return resultLen;\n        }\n        let m;\n        // Reset regex to search from the beginning\n        searcher.reset(0);\n        do {\n            m = searcher.next(text);\n            if (m) {\n                result[resultLen++] = createFindMatch(new Range(lineNumber, m.index + 1 + deltaOffset, lineNumber, m.index + 1 + m[0].length + deltaOffset), m, captureMatches);\n                if (resultLen >= limitResultCount) {\n                    return resultLen;\n                }\n            }\n        } while (m);\n        return resultLen;\n    }\n    // #endregion\n    // #region Piece Table\n    insert(offset, value, eolNormalized = false) {\n        this._EOLNormalized = this._EOLNormalized && eolNormalized;\n        this._lastVisitedLine.lineNumber = 0;\n        this._lastVisitedLine.value = '';\n        if (this.root !== SENTINEL) {\n            const { node, remainder, nodeStartOffset } = this.nodeAt(offset);\n            const piece = node.piece;\n            const bufferIndex = piece.bufferIndex;\n            const insertPosInBuffer = this.positionInBuffer(node, remainder);\n            if (node.piece.bufferIndex === 0 &&\n                piece.end.line === this._lastChangeBufferPos.line &&\n                piece.end.column === this._lastChangeBufferPos.column &&\n                (nodeStartOffset + piece.length === offset) &&\n                value.length < AverageBufferSize) {\n                // changed buffer\n                this.appendToNode(node, value);\n                this.computeBufferMetadata();\n                return;\n            }\n            if (nodeStartOffset === offset) {\n                this.insertContentToNodeLeft(value, node);\n                this._searchCache.validate(offset);\n            }\n            else if (nodeStartOffset + node.piece.length > offset) {\n                // we are inserting into the middle of a node.\n                const nodesToDel = [];\n                let newRightPiece = new Piece(piece.bufferIndex, insertPosInBuffer, piece.end, this.getLineFeedCnt(piece.bufferIndex, insertPosInBuffer, piece.end), this.offsetInBuffer(bufferIndex, piece.end) - this.offsetInBuffer(bufferIndex, insertPosInBuffer));\n                if (this.shouldCheckCRLF() && this.endWithCR(value)) {\n                    const headOfRight = this.nodeCharCodeAt(node, remainder);\n                    if (headOfRight === 10 /** \\n */) {\n                        const newStart = { line: newRightPiece.start.line + 1, column: 0 };\n                        newRightPiece = new Piece(newRightPiece.bufferIndex, newStart, newRightPiece.end, this.getLineFeedCnt(newRightPiece.bufferIndex, newStart, newRightPiece.end), newRightPiece.length - 1);\n                        value += '\\n';\n                    }\n                }\n                // reuse node for content before insertion point.\n                if (this.shouldCheckCRLF() && this.startWithLF(value)) {\n                    const tailOfLeft = this.nodeCharCodeAt(node, remainder - 1);\n                    if (tailOfLeft === 13 /** \\r */) {\n                        const previousPos = this.positionInBuffer(node, remainder - 1);\n                        this.deleteNodeTail(node, previousPos);\n                        value = '\\r' + value;\n                        if (node.piece.length === 0) {\n                            nodesToDel.push(node);\n                        }\n                    }\n                    else {\n                        this.deleteNodeTail(node, insertPosInBuffer);\n                    }\n                }\n                else {\n                    this.deleteNodeTail(node, insertPosInBuffer);\n                }\n                const newPieces = this.createNewPieces(value);\n                if (newRightPiece.length > 0) {\n                    this.rbInsertRight(node, newRightPiece);\n                }\n                let tmpNode = node;\n                for (let k = 0; k < newPieces.length; k++) {\n                    tmpNode = this.rbInsertRight(tmpNode, newPieces[k]);\n                }\n                this.deleteNodes(nodesToDel);\n            }\n            else {\n                this.insertContentToNodeRight(value, node);\n            }\n        }\n        else {\n            // insert new node\n            const pieces = this.createNewPieces(value);\n            let node = this.rbInsertLeft(null, pieces[0]);\n            for (let k = 1; k < pieces.length; k++) {\n                node = this.rbInsertRight(node, pieces[k]);\n            }\n        }\n        // todo, this is too brutal. Total line feed count should be updated the same way as lf_left.\n        this.computeBufferMetadata();\n    }\n    delete(offset, cnt) {\n        this._lastVisitedLine.lineNumber = 0;\n        this._lastVisitedLine.value = '';\n        if (cnt <= 0 || this.root === SENTINEL) {\n            return;\n        }\n        const startPosition = this.nodeAt(offset);\n        const endPosition = this.nodeAt(offset + cnt);\n        const startNode = startPosition.node;\n        const endNode = endPosition.node;\n        if (startNode === endNode) {\n            const startSplitPosInBuffer = this.positionInBuffer(startNode, startPosition.remainder);\n            const endSplitPosInBuffer = this.positionInBuffer(startNode, endPosition.remainder);\n            if (startPosition.nodeStartOffset === offset) {\n                if (cnt === startNode.piece.length) { // delete node\n                    const next = startNode.next();\n                    rbDelete(this, startNode);\n                    this.validateCRLFWithPrevNode(next);\n                    this.computeBufferMetadata();\n                    return;\n                }\n                this.deleteNodeHead(startNode, endSplitPosInBuffer);\n                this._searchCache.validate(offset);\n                this.validateCRLFWithPrevNode(startNode);\n                this.computeBufferMetadata();\n                return;\n            }\n            if (startPosition.nodeStartOffset + startNode.piece.length === offset + cnt) {\n                this.deleteNodeTail(startNode, startSplitPosInBuffer);\n                this.validateCRLFWithNextNode(startNode);\n                this.computeBufferMetadata();\n                return;\n            }\n            // delete content in the middle, this node will be splitted to nodes\n            this.shrinkNode(startNode, startSplitPosInBuffer, endSplitPosInBuffer);\n            this.computeBufferMetadata();\n            return;\n        }\n        const nodesToDel = [];\n        const startSplitPosInBuffer = this.positionInBuffer(startNode, startPosition.remainder);\n        this.deleteNodeTail(startNode, startSplitPosInBuffer);\n        this._searchCache.validate(offset);\n        if (startNode.piece.length === 0) {\n            nodesToDel.push(startNode);\n        }\n        // update last touched node\n        const endSplitPosInBuffer = this.positionInBuffer(endNode, endPosition.remainder);\n        this.deleteNodeHead(endNode, endSplitPosInBuffer);\n        if (endNode.piece.length === 0) {\n            nodesToDel.push(endNode);\n        }\n        // delete nodes in between\n        const secondNode = startNode.next();\n        for (let node = secondNode; node !== SENTINEL && node !== endNode; node = node.next()) {\n            nodesToDel.push(node);\n        }\n        const prev = startNode.piece.length === 0 ? startNode.prev() : startNode;\n        this.deleteNodes(nodesToDel);\n        this.validateCRLFWithNextNode(prev);\n        this.computeBufferMetadata();\n    }\n    insertContentToNodeLeft(value, node) {\n        // we are inserting content to the beginning of node\n        const nodesToDel = [];\n        if (this.shouldCheckCRLF() && this.endWithCR(value) && this.startWithLF(node)) {\n            // move `\\n` to new node.\n            const piece = node.piece;\n            const newStart = { line: piece.start.line + 1, column: 0 };\n            const nPiece = new Piece(piece.bufferIndex, newStart, piece.end, this.getLineFeedCnt(piece.bufferIndex, newStart, piece.end), piece.length - 1);\n            node.piece = nPiece;\n            value += '\\n';\n            updateTreeMetadata(this, node, -1, -1);\n            if (node.piece.length === 0) {\n                nodesToDel.push(node);\n            }\n        }\n        const newPieces = this.createNewPieces(value);\n        let newNode = this.rbInsertLeft(node, newPieces[newPieces.length - 1]);\n        for (let k = newPieces.length - 2; k >= 0; k--) {\n            newNode = this.rbInsertLeft(newNode, newPieces[k]);\n        }\n        this.validateCRLFWithPrevNode(newNode);\n        this.deleteNodes(nodesToDel);\n    }\n    insertContentToNodeRight(value, node) {\n        // we are inserting to the right of this node.\n        if (this.adjustCarriageReturnFromNext(value, node)) {\n            // move \\n to the new node.\n            value += '\\n';\n        }\n        const newPieces = this.createNewPieces(value);\n        const newNode = this.rbInsertRight(node, newPieces[0]);\n        let tmpNode = newNode;\n        for (let k = 1; k < newPieces.length; k++) {\n            tmpNode = this.rbInsertRight(tmpNode, newPieces[k]);\n        }\n        this.validateCRLFWithPrevNode(newNode);\n    }\n    positionInBuffer(node, remainder, ret) {\n        const piece = node.piece;\n        const bufferIndex = node.piece.bufferIndex;\n        const lineStarts = this._buffers[bufferIndex].lineStarts;\n        const startOffset = lineStarts[piece.start.line] + piece.start.column;\n        const offset = startOffset + remainder;\n        // binary search offset between startOffset and endOffset\n        let low = piece.start.line;\n        let high = piece.end.line;\n        let mid = 0;\n        let midStop = 0;\n        let midStart = 0;\n        while (low <= high) {\n            mid = low + ((high - low) / 2) | 0;\n            midStart = lineStarts[mid];\n            if (mid === high) {\n                break;\n            }\n            midStop = lineStarts[mid + 1];\n            if (offset < midStart) {\n                high = mid - 1;\n            }\n            else if (offset >= midStop) {\n                low = mid + 1;\n            }\n            else {\n                break;\n            }\n        }\n        if (ret) {\n            ret.line = mid;\n            ret.column = offset - midStart;\n            return null;\n        }\n        return {\n            line: mid,\n            column: offset - midStart\n        };\n    }\n    getLineFeedCnt(bufferIndex, start, end) {\n        // we don't need to worry about start: abc\\r|\\n, or abc|\\r, or abc|\\n, or abc|\\r\\n doesn't change the fact that, there is one line break after start.\n        // now let's take care of end: abc\\r|\\n, if end is in between \\r and \\n, we need to add line feed count by 1\n        if (end.column === 0) {\n            return end.line - start.line;\n        }\n        const lineStarts = this._buffers[bufferIndex].lineStarts;\n        if (end.line === lineStarts.length - 1) { // it means, there is no \\n after end, otherwise, there will be one more lineStart.\n            return end.line - start.line;\n        }\n        const nextLineStartOffset = lineStarts[end.line + 1];\n        const endOffset = lineStarts[end.line] + end.column;\n        if (nextLineStartOffset > endOffset + 1) { // there are more than 1 character after end, which means it can't be \\n\n            return end.line - start.line;\n        }\n        // endOffset + 1 === nextLineStartOffset\n        // character at endOffset is \\n, so we check the character before first\n        // if character at endOffset is \\r, end.column is 0 and we can't get here.\n        const previousCharOffset = endOffset - 1; // end.column > 0 so it's okay.\n        const buffer = this._buffers[bufferIndex].buffer;\n        if (buffer.charCodeAt(previousCharOffset) === 13) {\n            return end.line - start.line + 1;\n        }\n        else {\n            return end.line - start.line;\n        }\n    }\n    offsetInBuffer(bufferIndex, cursor) {\n        const lineStarts = this._buffers[bufferIndex].lineStarts;\n        return lineStarts[cursor.line] + cursor.column;\n    }\n    deleteNodes(nodes) {\n        for (let i = 0; i < nodes.length; i++) {\n            rbDelete(this, nodes[i]);\n        }\n    }\n    createNewPieces(text) {\n        if (text.length > AverageBufferSize) {\n            // the content is large, operations like substring, charCode becomes slow\n            // so here we split it into smaller chunks, just like what we did for CR/LF normalization\n            const newPieces = [];\n            while (text.length > AverageBufferSize) {\n                const lastChar = text.charCodeAt(AverageBufferSize - 1);\n                let splitText;\n                if (lastChar === 13 /* CharCode.CarriageReturn */ || (lastChar >= 0xD800 && lastChar <= 0xDBFF)) {\n                    // last character is \\r or a high surrogate => keep it back\n                    splitText = text.substring(0, AverageBufferSize - 1);\n                    text = text.substring(AverageBufferSize - 1);\n                }\n                else {\n                    splitText = text.substring(0, AverageBufferSize);\n                    text = text.substring(AverageBufferSize);\n                }\n                const lineStarts = createLineStartsFast(splitText);\n                newPieces.push(new Piece(this._buffers.length, /* buffer index */ { line: 0, column: 0 }, { line: lineStarts.length - 1, column: splitText.length - lineStarts[lineStarts.length - 1] }, lineStarts.length - 1, splitText.length));\n                this._buffers.push(new StringBuffer(splitText, lineStarts));\n            }\n            const lineStarts = createLineStartsFast(text);\n            newPieces.push(new Piece(this._buffers.length, /* buffer index */ { line: 0, column: 0 }, { line: lineStarts.length - 1, column: text.length - lineStarts[lineStarts.length - 1] }, lineStarts.length - 1, text.length));\n            this._buffers.push(new StringBuffer(text, lineStarts));\n            return newPieces;\n        }\n        let startOffset = this._buffers[0].buffer.length;\n        const lineStarts = createLineStartsFast(text, false);\n        let start = this._lastChangeBufferPos;\n        if (this._buffers[0].lineStarts[this._buffers[0].lineStarts.length - 1] === startOffset\n            && startOffset !== 0\n            && this.startWithLF(text)\n            && this.endWithCR(this._buffers[0].buffer) // todo, we can check this._lastChangeBufferPos's column as it's the last one\n        ) {\n            this._lastChangeBufferPos = { line: this._lastChangeBufferPos.line, column: this._lastChangeBufferPos.column + 1 };\n            start = this._lastChangeBufferPos;\n            for (let i = 0; i < lineStarts.length; i++) {\n                lineStarts[i] += startOffset + 1;\n            }\n            this._buffers[0].lineStarts = this._buffers[0].lineStarts.concat(lineStarts.slice(1));\n            this._buffers[0].buffer += '_' + text;\n            startOffset += 1;\n        }\n        else {\n            if (startOffset !== 0) {\n                for (let i = 0; i < lineStarts.length; i++) {\n                    lineStarts[i] += startOffset;\n                }\n            }\n            this._buffers[0].lineStarts = this._buffers[0].lineStarts.concat(lineStarts.slice(1));\n            this._buffers[0].buffer += text;\n        }\n        const endOffset = this._buffers[0].buffer.length;\n        const endIndex = this._buffers[0].lineStarts.length - 1;\n        const endColumn = endOffset - this._buffers[0].lineStarts[endIndex];\n        const endPos = { line: endIndex, column: endColumn };\n        const newPiece = new Piece(0, /** todo@peng */ start, endPos, this.getLineFeedCnt(0, start, endPos), endOffset - startOffset);\n        this._lastChangeBufferPos = endPos;\n        return [newPiece];\n    }\n    getLineRawContent(lineNumber, endOffset = 0) {\n        let x = this.root;\n        let ret = '';\n        const cache = this._searchCache.get2(lineNumber);\n        if (cache) {\n            x = cache.node;\n            const prevAccumulatedValue = this.getAccumulatedValue(x, lineNumber - cache.nodeStartLineNumber - 1);\n            const buffer = this._buffers[x.piece.bufferIndex].buffer;\n            const startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n            if (cache.nodeStartLineNumber + x.piece.lineFeedCnt === lineNumber) {\n                ret = buffer.substring(startOffset + prevAccumulatedValue, startOffset + x.piece.length);\n            }\n            else {\n                const accumulatedValue = this.getAccumulatedValue(x, lineNumber - cache.nodeStartLineNumber);\n                return buffer.substring(startOffset + prevAccumulatedValue, startOffset + accumulatedValue - endOffset);\n            }\n        }\n        else {\n            let nodeStartOffset = 0;\n            const originalLineNumber = lineNumber;\n            while (x !== SENTINEL) {\n                if (x.left !== SENTINEL && x.lf_left >= lineNumber - 1) {\n                    x = x.left;\n                }\n                else if (x.lf_left + x.piece.lineFeedCnt > lineNumber - 1) {\n                    const prevAccumulatedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 2);\n                    const accumulatedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 1);\n                    const buffer = this._buffers[x.piece.bufferIndex].buffer;\n                    const startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n                    nodeStartOffset += x.size_left;\n                    this._searchCache.set({\n                        node: x,\n                        nodeStartOffset,\n                        nodeStartLineNumber: originalLineNumber - (lineNumber - 1 - x.lf_left)\n                    });\n                    return buffer.substring(startOffset + prevAccumulatedValue, startOffset + accumulatedValue - endOffset);\n                }\n                else if (x.lf_left + x.piece.lineFeedCnt === lineNumber - 1) {\n                    const prevAccumulatedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 2);\n                    const buffer = this._buffers[x.piece.bufferIndex].buffer;\n                    const startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n                    ret = buffer.substring(startOffset + prevAccumulatedValue, startOffset + x.piece.length);\n                    break;\n                }\n                else {\n                    lineNumber -= x.lf_left + x.piece.lineFeedCnt;\n                    nodeStartOffset += x.size_left + x.piece.length;\n                    x = x.right;\n                }\n            }\n        }\n        // search in order, to find the node contains end column\n        x = x.next();\n        while (x !== SENTINEL) {\n            const buffer = this._buffers[x.piece.bufferIndex].buffer;\n            if (x.piece.lineFeedCnt > 0) {\n                const accumulatedValue = this.getAccumulatedValue(x, 0);\n                const startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n                ret += buffer.substring(startOffset, startOffset + accumulatedValue - endOffset);\n                return ret;\n            }\n            else {\n                const startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n                ret += buffer.substr(startOffset, x.piece.length);\n            }\n            x = x.next();\n        }\n        return ret;\n    }\n    computeBufferMetadata() {\n        let x = this.root;\n        let lfCnt = 1;\n        let len = 0;\n        while (x !== SENTINEL) {\n            lfCnt += x.lf_left + x.piece.lineFeedCnt;\n            len += x.size_left + x.piece.length;\n            x = x.right;\n        }\n        this._lineCnt = lfCnt;\n        this._length = len;\n        this._searchCache.validate(this._length);\n    }\n    // #region node operations\n    getIndexOf(node, accumulatedValue) {\n        const piece = node.piece;\n        const pos = this.positionInBuffer(node, accumulatedValue);\n        const lineCnt = pos.line - piece.start.line;\n        if (this.offsetInBuffer(piece.bufferIndex, piece.end) - this.offsetInBuffer(piece.bufferIndex, piece.start) === accumulatedValue) {\n            // we are checking the end of this node, so a CRLF check is necessary.\n            const realLineCnt = this.getLineFeedCnt(node.piece.bufferIndex, piece.start, pos);\n            if (realLineCnt !== lineCnt) {\n                // aha yes, CRLF\n                return { index: realLineCnt, remainder: 0 };\n            }\n        }\n        return { index: lineCnt, remainder: pos.column };\n    }\n    getAccumulatedValue(node, index) {\n        if (index < 0) {\n            return 0;\n        }\n        const piece = node.piece;\n        const lineStarts = this._buffers[piece.bufferIndex].lineStarts;\n        const expectedLineStartIndex = piece.start.line + index + 1;\n        if (expectedLineStartIndex > piece.end.line) {\n            return lineStarts[piece.end.line] + piece.end.column - lineStarts[piece.start.line] - piece.start.column;\n        }\n        else {\n            return lineStarts[expectedLineStartIndex] - lineStarts[piece.start.line] - piece.start.column;\n        }\n    }\n    deleteNodeTail(node, pos) {\n        const piece = node.piece;\n        const originalLFCnt = piece.lineFeedCnt;\n        const originalEndOffset = this.offsetInBuffer(piece.bufferIndex, piece.end);\n        const newEnd = pos;\n        const newEndOffset = this.offsetInBuffer(piece.bufferIndex, newEnd);\n        const newLineFeedCnt = this.getLineFeedCnt(piece.bufferIndex, piece.start, newEnd);\n        const lf_delta = newLineFeedCnt - originalLFCnt;\n        const size_delta = newEndOffset - originalEndOffset;\n        const newLength = piece.length + size_delta;\n        node.piece = new Piece(piece.bufferIndex, piece.start, newEnd, newLineFeedCnt, newLength);\n        updateTreeMetadata(this, node, size_delta, lf_delta);\n    }\n    deleteNodeHead(node, pos) {\n        const piece = node.piece;\n        const originalLFCnt = piece.lineFeedCnt;\n        const originalStartOffset = this.offsetInBuffer(piece.bufferIndex, piece.start);\n        const newStart = pos;\n        const newLineFeedCnt = this.getLineFeedCnt(piece.bufferIndex, newStart, piece.end);\n        const newStartOffset = this.offsetInBuffer(piece.bufferIndex, newStart);\n        const lf_delta = newLineFeedCnt - originalLFCnt;\n        const size_delta = originalStartOffset - newStartOffset;\n        const newLength = piece.length + size_delta;\n        node.piece = new Piece(piece.bufferIndex, newStart, piece.end, newLineFeedCnt, newLength);\n        updateTreeMetadata(this, node, size_delta, lf_delta);\n    }\n    shrinkNode(node, start, end) {\n        const piece = node.piece;\n        const originalStartPos = piece.start;\n        const originalEndPos = piece.end;\n        // old piece, originalStartPos, start\n        const oldLength = piece.length;\n        const oldLFCnt = piece.lineFeedCnt;\n        const newEnd = start;\n        const newLineFeedCnt = this.getLineFeedCnt(piece.bufferIndex, piece.start, newEnd);\n        const newLength = this.offsetInBuffer(piece.bufferIndex, start) - this.offsetInBuffer(piece.bufferIndex, originalStartPos);\n        node.piece = new Piece(piece.bufferIndex, piece.start, newEnd, newLineFeedCnt, newLength);\n        updateTreeMetadata(this, node, newLength - oldLength, newLineFeedCnt - oldLFCnt);\n        // new right piece, end, originalEndPos\n        const newPiece = new Piece(piece.bufferIndex, end, originalEndPos, this.getLineFeedCnt(piece.bufferIndex, end, originalEndPos), this.offsetInBuffer(piece.bufferIndex, originalEndPos) - this.offsetInBuffer(piece.bufferIndex, end));\n        const newNode = this.rbInsertRight(node, newPiece);\n        this.validateCRLFWithPrevNode(newNode);\n    }\n    appendToNode(node, value) {\n        if (this.adjustCarriageReturnFromNext(value, node)) {\n            value += '\\n';\n        }\n        const hitCRLF = this.shouldCheckCRLF() && this.startWithLF(value) && this.endWithCR(node);\n        const startOffset = this._buffers[0].buffer.length;\n        this._buffers[0].buffer += value;\n        const lineStarts = createLineStartsFast(value, false);\n        for (let i = 0; i < lineStarts.length; i++) {\n            lineStarts[i] += startOffset;\n        }\n        if (hitCRLF) {\n            const prevStartOffset = this._buffers[0].lineStarts[this._buffers[0].lineStarts.length - 2];\n            this._buffers[0].lineStarts.pop();\n            // _lastChangeBufferPos is already wrong\n            this._lastChangeBufferPos = { line: this._lastChangeBufferPos.line - 1, column: startOffset - prevStartOffset };\n        }\n        this._buffers[0].lineStarts = this._buffers[0].lineStarts.concat(lineStarts.slice(1));\n        const endIndex = this._buffers[0].lineStarts.length - 1;\n        const endColumn = this._buffers[0].buffer.length - this._buffers[0].lineStarts[endIndex];\n        const newEnd = { line: endIndex, column: endColumn };\n        const newLength = node.piece.length + value.length;\n        const oldLineFeedCnt = node.piece.lineFeedCnt;\n        const newLineFeedCnt = this.getLineFeedCnt(0, node.piece.start, newEnd);\n        const lf_delta = newLineFeedCnt - oldLineFeedCnt;\n        node.piece = new Piece(node.piece.bufferIndex, node.piece.start, newEnd, newLineFeedCnt, newLength);\n        this._lastChangeBufferPos = newEnd;\n        updateTreeMetadata(this, node, value.length, lf_delta);\n    }\n    nodeAt(offset) {\n        let x = this.root;\n        const cache = this._searchCache.get(offset);\n        if (cache) {\n            return {\n                node: cache.node,\n                nodeStartOffset: cache.nodeStartOffset,\n                remainder: offset - cache.nodeStartOffset\n            };\n        }\n        let nodeStartOffset = 0;\n        while (x !== SENTINEL) {\n            if (x.size_left > offset) {\n                x = x.left;\n            }\n            else if (x.size_left + x.piece.length >= offset) {\n                nodeStartOffset += x.size_left;\n                const ret = {\n                    node: x,\n                    remainder: offset - x.size_left,\n                    nodeStartOffset\n                };\n                this._searchCache.set(ret);\n                return ret;\n            }\n            else {\n                offset -= x.size_left + x.piece.length;\n                nodeStartOffset += x.size_left + x.piece.length;\n                x = x.right;\n            }\n        }\n        return null;\n    }\n    nodeAt2(lineNumber, column) {\n        let x = this.root;\n        let nodeStartOffset = 0;\n        while (x !== SENTINEL) {\n            if (x.left !== SENTINEL && x.lf_left >= lineNumber - 1) {\n                x = x.left;\n            }\n            else if (x.lf_left + x.piece.lineFeedCnt > lineNumber - 1) {\n                const prevAccumualtedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 2);\n                const accumulatedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 1);\n                nodeStartOffset += x.size_left;\n                return {\n                    node: x,\n                    remainder: Math.min(prevAccumualtedValue + column - 1, accumulatedValue),\n                    nodeStartOffset\n                };\n            }\n            else if (x.lf_left + x.piece.lineFeedCnt === lineNumber - 1) {\n                const prevAccumualtedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 2);\n                if (prevAccumualtedValue + column - 1 <= x.piece.length) {\n                    return {\n                        node: x,\n                        remainder: prevAccumualtedValue + column - 1,\n                        nodeStartOffset\n                    };\n                }\n                else {\n                    column -= x.piece.length - prevAccumualtedValue;\n                    break;\n                }\n            }\n            else {\n                lineNumber -= x.lf_left + x.piece.lineFeedCnt;\n                nodeStartOffset += x.size_left + x.piece.length;\n                x = x.right;\n            }\n        }\n        // search in order, to find the node contains position.column\n        x = x.next();\n        while (x !== SENTINEL) {\n            if (x.piece.lineFeedCnt > 0) {\n                const accumulatedValue = this.getAccumulatedValue(x, 0);\n                const nodeStartOffset = this.offsetOfNode(x);\n                return {\n                    node: x,\n                    remainder: Math.min(column - 1, accumulatedValue),\n                    nodeStartOffset\n                };\n            }\n            else {\n                if (x.piece.length >= column - 1) {\n                    const nodeStartOffset = this.offsetOfNode(x);\n                    return {\n                        node: x,\n                        remainder: column - 1,\n                        nodeStartOffset\n                    };\n                }\n                else {\n                    column -= x.piece.length;\n                }\n            }\n            x = x.next();\n        }\n        return null;\n    }\n    nodeCharCodeAt(node, offset) {\n        if (node.piece.lineFeedCnt < 1) {\n            return -1;\n        }\n        const buffer = this._buffers[node.piece.bufferIndex];\n        const newOffset = this.offsetInBuffer(node.piece.bufferIndex, node.piece.start) + offset;\n        return buffer.buffer.charCodeAt(newOffset);\n    }\n    offsetOfNode(node) {\n        if (!node) {\n            return 0;\n        }\n        let pos = node.size_left;\n        while (node !== this.root) {\n            if (node.parent.right === node) {\n                pos += node.parent.size_left + node.parent.piece.length;\n            }\n            node = node.parent;\n        }\n        return pos;\n    }\n    // #endregion\n    // #region CRLF\n    shouldCheckCRLF() {\n        return !(this._EOLNormalized && this._EOL === '\\n');\n    }\n    startWithLF(val) {\n        if (typeof val === 'string') {\n            return val.charCodeAt(0) === 10;\n        }\n        if (val === SENTINEL || val.piece.lineFeedCnt === 0) {\n            return false;\n        }\n        const piece = val.piece;\n        const lineStarts = this._buffers[piece.bufferIndex].lineStarts;\n        const line = piece.start.line;\n        const startOffset = lineStarts[line] + piece.start.column;\n        if (line === lineStarts.length - 1) {\n            // last line, so there is no line feed at the end of this line\n            return false;\n        }\n        const nextLineOffset = lineStarts[line + 1];\n        if (nextLineOffset > startOffset + 1) {\n            return false;\n        }\n        return this._buffers[piece.bufferIndex].buffer.charCodeAt(startOffset) === 10;\n    }\n    endWithCR(val) {\n        if (typeof val === 'string') {\n            return val.charCodeAt(val.length - 1) === 13;\n        }\n        if (val === SENTINEL || val.piece.lineFeedCnt === 0) {\n            return false;\n        }\n        return this.nodeCharCodeAt(val, val.piece.length - 1) === 13;\n    }\n    validateCRLFWithPrevNode(nextNode) {\n        if (this.shouldCheckCRLF() && this.startWithLF(nextNode)) {\n            const node = nextNode.prev();\n            if (this.endWithCR(node)) {\n                this.fixCRLF(node, nextNode);\n            }\n        }\n    }\n    validateCRLFWithNextNode(node) {\n        if (this.shouldCheckCRLF() && this.endWithCR(node)) {\n            const nextNode = node.next();\n            if (this.startWithLF(nextNode)) {\n                this.fixCRLF(node, nextNode);\n            }\n        }\n    }\n    fixCRLF(prev, next) {\n        const nodesToDel = [];\n        // update node\n        const lineStarts = this._buffers[prev.piece.bufferIndex].lineStarts;\n        let newEnd;\n        if (prev.piece.end.column === 0) {\n            // it means, last line ends with \\r, not \\r\\n\n            newEnd = { line: prev.piece.end.line - 1, column: lineStarts[prev.piece.end.line] - lineStarts[prev.piece.end.line - 1] - 1 };\n        }\n        else {\n            // \\r\\n\n            newEnd = { line: prev.piece.end.line, column: prev.piece.end.column - 1 };\n        }\n        const prevNewLength = prev.piece.length - 1;\n        const prevNewLFCnt = prev.piece.lineFeedCnt - 1;\n        prev.piece = new Piece(prev.piece.bufferIndex, prev.piece.start, newEnd, prevNewLFCnt, prevNewLength);\n        updateTreeMetadata(this, prev, -1, -1);\n        if (prev.piece.length === 0) {\n            nodesToDel.push(prev);\n        }\n        // update nextNode\n        const newStart = { line: next.piece.start.line + 1, column: 0 };\n        const newLength = next.piece.length - 1;\n        const newLineFeedCnt = this.getLineFeedCnt(next.piece.bufferIndex, newStart, next.piece.end);\n        next.piece = new Piece(next.piece.bufferIndex, newStart, next.piece.end, newLineFeedCnt, newLength);\n        updateTreeMetadata(this, next, -1, -1);\n        if (next.piece.length === 0) {\n            nodesToDel.push(next);\n        }\n        // create new piece which contains \\r\\n\n        const pieces = this.createNewPieces('\\r\\n');\n        this.rbInsertRight(prev, pieces[0]);\n        // delete empty nodes\n        for (let i = 0; i < nodesToDel.length; i++) {\n            rbDelete(this, nodesToDel[i]);\n        }\n    }\n    adjustCarriageReturnFromNext(value, node) {\n        if (this.shouldCheckCRLF() && this.endWithCR(value)) {\n            const nextNode = node.next();\n            if (this.startWithLF(nextNode)) {\n                // move `\\n` forward\n                value += '\\n';\n                if (nextNode.piece.length === 1) {\n                    rbDelete(this, nextNode);\n                }\n                else {\n                    const piece = nextNode.piece;\n                    const newStart = { line: piece.start.line + 1, column: 0 };\n                    const newLength = piece.length - 1;\n                    const newLineFeedCnt = this.getLineFeedCnt(piece.bufferIndex, newStart, piece.end);\n                    nextNode.piece = new Piece(piece.bufferIndex, newStart, piece.end, newLineFeedCnt, newLength);\n                    updateTreeMetadata(this, nextNode, -1, -1);\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    // #endregion\n    // #endregion\n    // #region Tree operations\n    iterate(node, callback) {\n        if (node === SENTINEL) {\n            return callback(SENTINEL);\n        }\n        const leftRet = this.iterate(node.left, callback);\n        if (!leftRet) {\n            return leftRet;\n        }\n        return callback(node) && this.iterate(node.right, callback);\n    }\n    getNodeContent(node) {\n        if (node === SENTINEL) {\n            return '';\n        }\n        const buffer = this._buffers[node.piece.bufferIndex];\n        const piece = node.piece;\n        const startOffset = this.offsetInBuffer(piece.bufferIndex, piece.start);\n        const endOffset = this.offsetInBuffer(piece.bufferIndex, piece.end);\n        const currentContent = buffer.buffer.substring(startOffset, endOffset);\n        return currentContent;\n    }\n    getPieceContent(piece) {\n        const buffer = this._buffers[piece.bufferIndex];\n        const startOffset = this.offsetInBuffer(piece.bufferIndex, piece.start);\n        const endOffset = this.offsetInBuffer(piece.bufferIndex, piece.end);\n        const currentContent = buffer.buffer.substring(startOffset, endOffset);\n        return currentContent;\n    }\n    /**\n     *      node              node\n     *     /  \\              /  \\\n     *    a   b    <----   a    b\n     *                         /\n     *                        z\n     */\n    rbInsertRight(node, p) {\n        const z = new TreeNode(p, 1 /* NodeColor.Red */);\n        z.left = SENTINEL;\n        z.right = SENTINEL;\n        z.parent = SENTINEL;\n        z.size_left = 0;\n        z.lf_left = 0;\n        const x = this.root;\n        if (x === SENTINEL) {\n            this.root = z;\n            z.color = 0 /* NodeColor.Black */;\n        }\n        else if (node.right === SENTINEL) {\n            node.right = z;\n            z.parent = node;\n        }\n        else {\n            const nextNode = leftest(node.right);\n            nextNode.left = z;\n            z.parent = nextNode;\n        }\n        fixInsert(this, z);\n        return z;\n    }\n    /**\n     *      node              node\n     *     /  \\              /  \\\n     *    a   b     ---->   a    b\n     *                       \\\n     *                        z\n     */\n    rbInsertLeft(node, p) {\n        const z = new TreeNode(p, 1 /* NodeColor.Red */);\n        z.left = SENTINEL;\n        z.right = SENTINEL;\n        z.parent = SENTINEL;\n        z.size_left = 0;\n        z.lf_left = 0;\n        if (this.root === SENTINEL) {\n            this.root = z;\n            z.color = 0 /* NodeColor.Black */;\n        }\n        else if (node.left === SENTINEL) {\n            node.left = z;\n            z.parent = node;\n        }\n        else {\n            const prevNode = righttest(node.left); // a\n            prevNode.right = z;\n            z.parent = prevNode;\n        }\n        fixInsert(this, z);\n        return z;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../../base/common/event.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { Range } from '../../core/range.js';\nimport { ApplyEditsResult } from '../../model.js';\nimport { PieceTreeBase } from './pieceTreeBase.js';\nimport { countEOL } from '../../core/eolCounter.js';\nimport { TextChange } from '../../core/textChange.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nexport class PieceTreeTextBuffer extends Disposable {\n    constructor(chunks, BOM, eol, containsRTL, containsUnusualLineTerminators, isBasicASCII, eolNormalized) {\n        super();\n        this._onDidChangeContent = this._register(new Emitter());\n        this._BOM = BOM;\n        this._mightContainNonBasicASCII = !isBasicASCII;\n        this._mightContainRTL = containsRTL;\n        this._mightContainUnusualLineTerminators = containsUnusualLineTerminators;\n        this._pieceTree = new PieceTreeBase(chunks, eol, eolNormalized);\n    }\n    mightContainRTL() {\n        return this._mightContainRTL;\n    }\n    mightContainUnusualLineTerminators() {\n        return this._mightContainUnusualLineTerminators;\n    }\n    resetMightContainUnusualLineTerminators() {\n        this._mightContainUnusualLineTerminators = false;\n    }\n    mightContainNonBasicASCII() {\n        return this._mightContainNonBasicASCII;\n    }\n    getBOM() {\n        return this._BOM;\n    }\n    getEOL() {\n        return this._pieceTree.getEOL();\n    }\n    createSnapshot(preserveBOM) {\n        return this._pieceTree.createSnapshot(preserveBOM ? this._BOM : '');\n    }\n    getOffsetAt(lineNumber, column) {\n        return this._pieceTree.getOffsetAt(lineNumber, column);\n    }\n    getPositionAt(offset) {\n        return this._pieceTree.getPositionAt(offset);\n    }\n    getRangeAt(start, length) {\n        const end = start + length;\n        const startPosition = this.getPositionAt(start);\n        const endPosition = this.getPositionAt(end);\n        return new Range(startPosition.lineNumber, startPosition.column, endPosition.lineNumber, endPosition.column);\n    }\n    getValueInRange(range, eol = 0 /* EndOfLinePreference.TextDefined */) {\n        if (range.isEmpty()) {\n            return '';\n        }\n        const lineEnding = this._getEndOfLine(eol);\n        return this._pieceTree.getValueInRange(range, lineEnding);\n    }\n    getValueLengthInRange(range, eol = 0 /* EndOfLinePreference.TextDefined */) {\n        if (range.isEmpty()) {\n            return 0;\n        }\n        if (range.startLineNumber === range.endLineNumber) {\n            return (range.endColumn - range.startColumn);\n        }\n        const startOffset = this.getOffsetAt(range.startLineNumber, range.startColumn);\n        const endOffset = this.getOffsetAt(range.endLineNumber, range.endColumn);\n        // offsets use the text EOL, so we need to compensate for length differences\n        // if the requested EOL doesn't match the text EOL\n        let eolOffsetCompensation = 0;\n        const desiredEOL = this._getEndOfLine(eol);\n        const actualEOL = this.getEOL();\n        if (desiredEOL.length !== actualEOL.length) {\n            const delta = desiredEOL.length - actualEOL.length;\n            const eolCount = range.endLineNumber - range.startLineNumber;\n            eolOffsetCompensation = delta * eolCount;\n        }\n        return endOffset - startOffset + eolOffsetCompensation;\n    }\n    getCharacterCountInRange(range, eol = 0 /* EndOfLinePreference.TextDefined */) {\n        if (this._mightContainNonBasicASCII) {\n            // we must count by iterating\n            let result = 0;\n            const fromLineNumber = range.startLineNumber;\n            const toLineNumber = range.endLineNumber;\n            for (let lineNumber = fromLineNumber; lineNumber <= toLineNumber; lineNumber++) {\n                const lineContent = this.getLineContent(lineNumber);\n                const fromOffset = (lineNumber === fromLineNumber ? range.startColumn - 1 : 0);\n                const toOffset = (lineNumber === toLineNumber ? range.endColumn - 1 : lineContent.length);\n                for (let offset = fromOffset; offset < toOffset; offset++) {\n                    if (strings.isHighSurrogate(lineContent.charCodeAt(offset))) {\n                        result = result + 1;\n                        offset = offset + 1;\n                    }\n                    else {\n                        result = result + 1;\n                    }\n                }\n            }\n            result += this._getEndOfLine(eol).length * (toLineNumber - fromLineNumber);\n            return result;\n        }\n        return this.getValueLengthInRange(range, eol);\n    }\n    getLength() {\n        return this._pieceTree.getLength();\n    }\n    getLineCount() {\n        return this._pieceTree.getLineCount();\n    }\n    getLinesContent() {\n        return this._pieceTree.getLinesContent();\n    }\n    getLineContent(lineNumber) {\n        return this._pieceTree.getLineContent(lineNumber);\n    }\n    getLineCharCode(lineNumber, index) {\n        return this._pieceTree.getLineCharCode(lineNumber, index);\n    }\n    getLineLength(lineNumber) {\n        return this._pieceTree.getLineLength(lineNumber);\n    }\n    getLineFirstNonWhitespaceColumn(lineNumber) {\n        const result = strings.firstNonWhitespaceIndex(this.getLineContent(lineNumber));\n        if (result === -1) {\n            return 0;\n        }\n        return result + 1;\n    }\n    getLineLastNonWhitespaceColumn(lineNumber) {\n        const result = strings.lastNonWhitespaceIndex(this.getLineContent(lineNumber));\n        if (result === -1) {\n            return 0;\n        }\n        return result + 2;\n    }\n    _getEndOfLine(eol) {\n        switch (eol) {\n            case 1 /* EndOfLinePreference.LF */:\n                return '\\n';\n            case 2 /* EndOfLinePreference.CRLF */:\n                return '\\r\\n';\n            case 0 /* EndOfLinePreference.TextDefined */:\n                return this.getEOL();\n            default:\n                throw new Error('Unknown EOL preference');\n        }\n    }\n    setEOL(newEOL) {\n        this._pieceTree.setEOL(newEOL);\n    }\n    applyEdits(rawOperations, recordTrimAutoWhitespace, computeUndoEdits) {\n        let mightContainRTL = this._mightContainRTL;\n        let mightContainUnusualLineTerminators = this._mightContainUnusualLineTerminators;\n        let mightContainNonBasicASCII = this._mightContainNonBasicASCII;\n        let canReduceOperations = true;\n        let operations = [];\n        for (let i = 0; i < rawOperations.length; i++) {\n            const op = rawOperations[i];\n            if (canReduceOperations && op._isTracked) {\n                canReduceOperations = false;\n            }\n            const validatedRange = op.range;\n            if (op.text) {\n                let textMightContainNonBasicASCII = true;\n                if (!mightContainNonBasicASCII) {\n                    textMightContainNonBasicASCII = !strings.isBasicASCII(op.text);\n                    mightContainNonBasicASCII = textMightContainNonBasicASCII;\n                }\n                if (!mightContainRTL && textMightContainNonBasicASCII) {\n                    // check if the new inserted text contains RTL\n                    mightContainRTL = strings.containsRTL(op.text);\n                }\n                if (!mightContainUnusualLineTerminators && textMightContainNonBasicASCII) {\n                    // check if the new inserted text contains unusual line terminators\n                    mightContainUnusualLineTerminators = strings.containsUnusualLineTerminators(op.text);\n                }\n            }\n            let validText = '';\n            let eolCount = 0;\n            let firstLineLength = 0;\n            let lastLineLength = 0;\n            if (op.text) {\n                let strEOL;\n                [eolCount, firstLineLength, lastLineLength, strEOL] = countEOL(op.text);\n                const bufferEOL = this.getEOL();\n                const expectedStrEOL = (bufferEOL === '\\r\\n' ? 2 /* StringEOL.CRLF */ : 1 /* StringEOL.LF */);\n                if (strEOL === 0 /* StringEOL.Unknown */ || strEOL === expectedStrEOL) {\n                    validText = op.text;\n                }\n                else {\n                    validText = op.text.replace(/\\r\\n|\\r|\\n/g, bufferEOL);\n                }\n            }\n            operations[i] = {\n                sortIndex: i,\n                identifier: op.identifier || null,\n                range: validatedRange,\n                rangeOffset: this.getOffsetAt(validatedRange.startLineNumber, validatedRange.startColumn),\n                rangeLength: this.getValueLengthInRange(validatedRange),\n                text: validText,\n                eolCount: eolCount,\n                firstLineLength: firstLineLength,\n                lastLineLength: lastLineLength,\n                forceMoveMarkers: Boolean(op.forceMoveMarkers),\n                isAutoWhitespaceEdit: op.isAutoWhitespaceEdit || false\n            };\n        }\n        // Sort operations ascending\n        operations.sort(PieceTreeTextBuffer._sortOpsAscending);\n        let hasTouchingRanges = false;\n        for (let i = 0, count = operations.length - 1; i < count; i++) {\n            const rangeEnd = operations[i].range.getEndPosition();\n            const nextRangeStart = operations[i + 1].range.getStartPosition();\n            if (nextRangeStart.isBeforeOrEqual(rangeEnd)) {\n                if (nextRangeStart.isBefore(rangeEnd)) {\n                    // overlapping ranges\n                    throw new Error('Overlapping ranges are not allowed!');\n                }\n                hasTouchingRanges = true;\n            }\n        }\n        if (canReduceOperations) {\n            operations = this._reduceOperations(operations);\n        }\n        // Delta encode operations\n        const reverseRanges = (computeUndoEdits || recordTrimAutoWhitespace ? PieceTreeTextBuffer._getInverseEditRanges(operations) : []);\n        const newTrimAutoWhitespaceCandidates = [];\n        if (recordTrimAutoWhitespace) {\n            for (let i = 0; i < operations.length; i++) {\n                const op = operations[i];\n                const reverseRange = reverseRanges[i];\n                if (op.isAutoWhitespaceEdit && op.range.isEmpty()) {\n                    // Record already the future line numbers that might be auto whitespace removal candidates on next edit\n                    for (let lineNumber = reverseRange.startLineNumber; lineNumber <= reverseRange.endLineNumber; lineNumber++) {\n                        let currentLineContent = '';\n                        if (lineNumber === reverseRange.startLineNumber) {\n                            currentLineContent = this.getLineContent(op.range.startLineNumber);\n                            if (strings.firstNonWhitespaceIndex(currentLineContent) !== -1) {\n                                continue;\n                            }\n                        }\n                        newTrimAutoWhitespaceCandidates.push({ lineNumber: lineNumber, oldContent: currentLineContent });\n                    }\n                }\n            }\n        }\n        let reverseOperations = null;\n        if (computeUndoEdits) {\n            let reverseRangeDeltaOffset = 0;\n            reverseOperations = [];\n            for (let i = 0; i < operations.length; i++) {\n                const op = operations[i];\n                const reverseRange = reverseRanges[i];\n                const bufferText = this.getValueInRange(op.range);\n                const reverseRangeOffset = op.rangeOffset + reverseRangeDeltaOffset;\n                reverseRangeDeltaOffset += (op.text.length - bufferText.length);\n                reverseOperations[i] = {\n                    sortIndex: op.sortIndex,\n                    identifier: op.identifier,\n                    range: reverseRange,\n                    text: bufferText,\n                    textChange: new TextChange(op.rangeOffset, bufferText, reverseRangeOffset, op.text)\n                };\n            }\n            // Can only sort reverse operations when the order is not significant\n            if (!hasTouchingRanges) {\n                reverseOperations.sort((a, b) => a.sortIndex - b.sortIndex);\n            }\n        }\n        this._mightContainRTL = mightContainRTL;\n        this._mightContainUnusualLineTerminators = mightContainUnusualLineTerminators;\n        this._mightContainNonBasicASCII = mightContainNonBasicASCII;\n        const contentChanges = this._doApplyEdits(operations);\n        let trimAutoWhitespaceLineNumbers = null;\n        if (recordTrimAutoWhitespace && newTrimAutoWhitespaceCandidates.length > 0) {\n            // sort line numbers auto whitespace removal candidates for next edit descending\n            newTrimAutoWhitespaceCandidates.sort((a, b) => b.lineNumber - a.lineNumber);\n            trimAutoWhitespaceLineNumbers = [];\n            for (let i = 0, len = newTrimAutoWhitespaceCandidates.length; i < len; i++) {\n                const lineNumber = newTrimAutoWhitespaceCandidates[i].lineNumber;\n                if (i > 0 && newTrimAutoWhitespaceCandidates[i - 1].lineNumber === lineNumber) {\n                    // Do not have the same line number twice\n                    continue;\n                }\n                const prevContent = newTrimAutoWhitespaceCandidates[i].oldContent;\n                const lineContent = this.getLineContent(lineNumber);\n                if (lineContent.length === 0 || lineContent === prevContent || strings.firstNonWhitespaceIndex(lineContent) !== -1) {\n                    continue;\n                }\n                trimAutoWhitespaceLineNumbers.push(lineNumber);\n            }\n        }\n        this._onDidChangeContent.fire();\n        return new ApplyEditsResult(reverseOperations, contentChanges, trimAutoWhitespaceLineNumbers);\n    }\n    /**\n     * Transform operations such that they represent the same logic edit,\n     * but that they also do not cause OOM crashes.\n     */\n    _reduceOperations(operations) {\n        if (operations.length < 1000) {\n            // We know from empirical testing that a thousand edits work fine regardless of their shape.\n            return operations;\n        }\n        // At one point, due to how events are emitted and how each operation is handled,\n        // some operations can trigger a high amount of temporary string allocations,\n        // that will immediately get edited again.\n        // e.g. a formatter inserting ridiculous ammounts of \\n on a model with a single line\n        // Therefore, the strategy is to collapse all the operations into a huge single edit operation\n        return [this._toSingleEditOperation(operations)];\n    }\n    _toSingleEditOperation(operations) {\n        let forceMoveMarkers = false;\n        const firstEditRange = operations[0].range;\n        const lastEditRange = operations[operations.length - 1].range;\n        const entireEditRange = new Range(firstEditRange.startLineNumber, firstEditRange.startColumn, lastEditRange.endLineNumber, lastEditRange.endColumn);\n        let lastEndLineNumber = firstEditRange.startLineNumber;\n        let lastEndColumn = firstEditRange.startColumn;\n        const result = [];\n        for (let i = 0, len = operations.length; i < len; i++) {\n            const operation = operations[i];\n            const range = operation.range;\n            forceMoveMarkers = forceMoveMarkers || operation.forceMoveMarkers;\n            // (1) -- Push old text\n            result.push(this.getValueInRange(new Range(lastEndLineNumber, lastEndColumn, range.startLineNumber, range.startColumn)));\n            // (2) -- Push new text\n            if (operation.text.length > 0) {\n                result.push(operation.text);\n            }\n            lastEndLineNumber = range.endLineNumber;\n            lastEndColumn = range.endColumn;\n        }\n        const text = result.join('');\n        const [eolCount, firstLineLength, lastLineLength] = countEOL(text);\n        return {\n            sortIndex: 0,\n            identifier: operations[0].identifier,\n            range: entireEditRange,\n            rangeOffset: this.getOffsetAt(entireEditRange.startLineNumber, entireEditRange.startColumn),\n            rangeLength: this.getValueLengthInRange(entireEditRange, 0 /* EndOfLinePreference.TextDefined */),\n            text: text,\n            eolCount: eolCount,\n            firstLineLength: firstLineLength,\n            lastLineLength: lastLineLength,\n            forceMoveMarkers: forceMoveMarkers,\n            isAutoWhitespaceEdit: false\n        };\n    }\n    _doApplyEdits(operations) {\n        operations.sort(PieceTreeTextBuffer._sortOpsDescending);\n        const contentChanges = [];\n        // operations are from bottom to top\n        for (let i = 0; i < operations.length; i++) {\n            const op = operations[i];\n            const startLineNumber = op.range.startLineNumber;\n            const startColumn = op.range.startColumn;\n            const endLineNumber = op.range.endLineNumber;\n            const endColumn = op.range.endColumn;\n            if (startLineNumber === endLineNumber && startColumn === endColumn && op.text.length === 0) {\n                // no-op\n                continue;\n            }\n            if (op.text) {\n                // replacement\n                this._pieceTree.delete(op.rangeOffset, op.rangeLength);\n                this._pieceTree.insert(op.rangeOffset, op.text, true);\n            }\n            else {\n                // deletion\n                this._pieceTree.delete(op.rangeOffset, op.rangeLength);\n            }\n            const contentChangeRange = new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n            contentChanges.push({\n                range: contentChangeRange,\n                rangeLength: op.rangeLength,\n                text: op.text,\n                rangeOffset: op.rangeOffset,\n                forceMoveMarkers: op.forceMoveMarkers\n            });\n        }\n        return contentChanges;\n    }\n    findMatchesLineByLine(searchRange, searchData, captureMatches, limitResultCount) {\n        return this._pieceTree.findMatchesLineByLine(searchRange, searchData, captureMatches, limitResultCount);\n    }\n    /**\n     * Assumes `operations` are validated and sorted ascending\n     */\n    static _getInverseEditRanges(operations) {\n        const result = [];\n        let prevOpEndLineNumber = 0;\n        let prevOpEndColumn = 0;\n        let prevOp = null;\n        for (let i = 0, len = operations.length; i < len; i++) {\n            const op = operations[i];\n            let startLineNumber;\n            let startColumn;\n            if (prevOp) {\n                if (prevOp.range.endLineNumber === op.range.startLineNumber) {\n                    startLineNumber = prevOpEndLineNumber;\n                    startColumn = prevOpEndColumn + (op.range.startColumn - prevOp.range.endColumn);\n                }\n                else {\n                    startLineNumber = prevOpEndLineNumber + (op.range.startLineNumber - prevOp.range.endLineNumber);\n                    startColumn = op.range.startColumn;\n                }\n            }\n            else {\n                startLineNumber = op.range.startLineNumber;\n                startColumn = op.range.startColumn;\n            }\n            let resultRange;\n            if (op.text.length > 0) {\n                // the operation inserts something\n                const lineCount = op.eolCount + 1;\n                if (lineCount === 1) {\n                    // single line insert\n                    resultRange = new Range(startLineNumber, startColumn, startLineNumber, startColumn + op.firstLineLength);\n                }\n                else {\n                    // multi line insert\n                    resultRange = new Range(startLineNumber, startColumn, startLineNumber + lineCount - 1, op.lastLineLength + 1);\n                }\n            }\n            else {\n                // There is nothing to insert\n                resultRange = new Range(startLineNumber, startColumn, startLineNumber, startColumn);\n            }\n            prevOpEndLineNumber = resultRange.endLineNumber;\n            prevOpEndColumn = resultRange.endColumn;\n            result.push(resultRange);\n            prevOp = op;\n        }\n        return result;\n    }\n    static _sortOpsAscending(a, b) {\n        const r = Range.compareRangesUsingEnds(a.range, b.range);\n        if (r === 0) {\n            return a.sortIndex - b.sortIndex;\n        }\n        return r;\n    }\n    static _sortOpsDescending(a, b) {\n        const r = Range.compareRangesUsingEnds(a.range, b.range);\n        if (r === 0) {\n            return b.sortIndex - a.sortIndex;\n        }\n        return -r;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../../base/common/strings.js';\nimport { StringBuffer, createLineStarts, createLineStartsFast } from './pieceTreeBase.js';\nimport { PieceTreeTextBuffer } from './pieceTreeTextBuffer.js';\nclass PieceTreeTextBufferFactory {\n    constructor(_chunks, _bom, _cr, _lf, _crlf, _containsRTL, _containsUnusualLineTerminators, _isBasicASCII, _normalizeEOL) {\n        this._chunks = _chunks;\n        this._bom = _bom;\n        this._cr = _cr;\n        this._lf = _lf;\n        this._crlf = _crlf;\n        this._containsRTL = _containsRTL;\n        this._containsUnusualLineTerminators = _containsUnusualLineTerminators;\n        this._isBasicASCII = _isBasicASCII;\n        this._normalizeEOL = _normalizeEOL;\n    }\n    _getEOL(defaultEOL) {\n        const totalEOLCount = this._cr + this._lf + this._crlf;\n        const totalCRCount = this._cr + this._crlf;\n        if (totalEOLCount === 0) {\n            // This is an empty file or a file with precisely one line\n            return (defaultEOL === 1 /* DefaultEndOfLine.LF */ ? '\\n' : '\\r\\n');\n        }\n        if (totalCRCount > totalEOLCount / 2) {\n            // More than half of the file contains \\r\\n ending lines\n            return '\\r\\n';\n        }\n        // At least one line more ends in \\n\n        return '\\n';\n    }\n    create(defaultEOL) {\n        const eol = this._getEOL(defaultEOL);\n        const chunks = this._chunks;\n        if (this._normalizeEOL &&\n            ((eol === '\\r\\n' && (this._cr > 0 || this._lf > 0))\n                || (eol === '\\n' && (this._cr > 0 || this._crlf > 0)))) {\n            // Normalize pieces\n            for (let i = 0, len = chunks.length; i < len; i++) {\n                const str = chunks[i].buffer.replace(/\\r\\n|\\r|\\n/g, eol);\n                const newLineStart = createLineStartsFast(str);\n                chunks[i] = new StringBuffer(str, newLineStart);\n            }\n        }\n        const textBuffer = new PieceTreeTextBuffer(chunks, this._bom, eol, this._containsRTL, this._containsUnusualLineTerminators, this._isBasicASCII, this._normalizeEOL);\n        return { textBuffer: textBuffer, disposable: textBuffer };\n    }\n}\nexport class PieceTreeTextBufferBuilder {\n    constructor() {\n        this.chunks = [];\n        this.BOM = '';\n        this._hasPreviousChar = false;\n        this._previousChar = 0;\n        this._tmpLineStarts = [];\n        this.cr = 0;\n        this.lf = 0;\n        this.crlf = 0;\n        this.containsRTL = false;\n        this.containsUnusualLineTerminators = false;\n        this.isBasicASCII = true;\n    }\n    acceptChunk(chunk) {\n        if (chunk.length === 0) {\n            return;\n        }\n        if (this.chunks.length === 0) {\n            if (strings.startsWithUTF8BOM(chunk)) {\n                this.BOM = strings.UTF8_BOM_CHARACTER;\n                chunk = chunk.substr(1);\n            }\n        }\n        const lastChar = chunk.charCodeAt(chunk.length - 1);\n        if (lastChar === 13 /* CharCode.CarriageReturn */ || (lastChar >= 0xD800 && lastChar <= 0xDBFF)) {\n            // last character is \\r or a high surrogate => keep it back\n            this._acceptChunk1(chunk.substr(0, chunk.length - 1), false);\n            this._hasPreviousChar = true;\n            this._previousChar = lastChar;\n        }\n        else {\n            this._acceptChunk1(chunk, false);\n            this._hasPreviousChar = false;\n            this._previousChar = lastChar;\n        }\n    }\n    _acceptChunk1(chunk, allowEmptyStrings) {\n        if (!allowEmptyStrings && chunk.length === 0) {\n            // Nothing to do\n            return;\n        }\n        if (this._hasPreviousChar) {\n            this._acceptChunk2(String.fromCharCode(this._previousChar) + chunk);\n        }\n        else {\n            this._acceptChunk2(chunk);\n        }\n    }\n    _acceptChunk2(chunk) {\n        const lineStarts = createLineStarts(this._tmpLineStarts, chunk);\n        this.chunks.push(new StringBuffer(chunk, lineStarts.lineStarts));\n        this.cr += lineStarts.cr;\n        this.lf += lineStarts.lf;\n        this.crlf += lineStarts.crlf;\n        if (!lineStarts.isBasicASCII) {\n            // this chunk contains non basic ASCII characters\n            this.isBasicASCII = false;\n            if (!this.containsRTL) {\n                this.containsRTL = strings.containsRTL(chunk);\n            }\n            if (!this.containsUnusualLineTerminators) {\n                this.containsUnusualLineTerminators = strings.containsUnusualLineTerminators(chunk);\n            }\n        }\n    }\n    finish(normalizeEOL = true) {\n        this._finish();\n        return new PieceTreeTextBufferFactory(this.chunks, this.BOM, this.cr, this.lf, this.crlf, this.containsRTL, this.containsUnusualLineTerminators, this.isBasicASCII, normalizeEOL);\n    }\n    _finish() {\n        if (this.chunks.length === 0) {\n            this._acceptChunk1('', true);\n        }\n        if (this._hasPreviousChar) {\n            this._hasPreviousChar = false;\n            // recreate last chunk\n            const lastChunk = this.chunks[this.chunks.length - 1];\n            lastChunk.buffer += String.fromCharCode(this._previousChar);\n            const newLineStarts = createLineStartsFast(lastChunk.buffer);\n            lastChunk.lineStarts = newLineStarts;\n            if (this._previousChar === 13 /* CharCode.CarriageReturn */) {\n                this.cr++;\n            }\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class TreeNode {\n    constructor(piece, color) {\n        this.piece = piece;\n        this.color = color;\n        this.size_left = 0;\n        this.lf_left = 0;\n        this.parent = this;\n        this.left = this;\n        this.right = this;\n    }\n    next() {\n        if (this.right !== SENTINEL) {\n            return leftest(this.right);\n        }\n        let node = this;\n        while (node.parent !== SENTINEL) {\n            if (node.parent.left === node) {\n                break;\n            }\n            node = node.parent;\n        }\n        if (node.parent === SENTINEL) {\n            return SENTINEL;\n        }\n        else {\n            return node.parent;\n        }\n    }\n    prev() {\n        if (this.left !== SENTINEL) {\n            return righttest(this.left);\n        }\n        let node = this;\n        while (node.parent !== SENTINEL) {\n            if (node.parent.right === node) {\n                break;\n            }\n            node = node.parent;\n        }\n        if (node.parent === SENTINEL) {\n            return SENTINEL;\n        }\n        else {\n            return node.parent;\n        }\n    }\n    detach() {\n        this.parent = null;\n        this.left = null;\n        this.right = null;\n    }\n}\nexport const SENTINEL = new TreeNode(null, 0 /* NodeColor.Black */);\nSENTINEL.parent = SENTINEL;\nSENTINEL.left = SENTINEL;\nSENTINEL.right = SENTINEL;\nSENTINEL.color = 0 /* NodeColor.Black */;\nexport function leftest(node) {\n    while (node.left !== SENTINEL) {\n        node = node.left;\n    }\n    return node;\n}\nexport function righttest(node) {\n    while (node.right !== SENTINEL) {\n        node = node.right;\n    }\n    return node;\n}\nfunction calculateSize(node) {\n    if (node === SENTINEL) {\n        return 0;\n    }\n    return node.size_left + node.piece.length + calculateSize(node.right);\n}\nfunction calculateLF(node) {\n    if (node === SENTINEL) {\n        return 0;\n    }\n    return node.lf_left + node.piece.lineFeedCnt + calculateLF(node.right);\n}\nfunction resetSentinel() {\n    SENTINEL.parent = SENTINEL;\n}\nexport function leftRotate(tree, x) {\n    const y = x.right;\n    // fix size_left\n    y.size_left += x.size_left + (x.piece ? x.piece.length : 0);\n    y.lf_left += x.lf_left + (x.piece ? x.piece.lineFeedCnt : 0);\n    x.right = y.left;\n    if (y.left !== SENTINEL) {\n        y.left.parent = x;\n    }\n    y.parent = x.parent;\n    if (x.parent === SENTINEL) {\n        tree.root = y;\n    }\n    else if (x.parent.left === x) {\n        x.parent.left = y;\n    }\n    else {\n        x.parent.right = y;\n    }\n    y.left = x;\n    x.parent = y;\n}\nexport function rightRotate(tree, y) {\n    const x = y.left;\n    y.left = x.right;\n    if (x.right !== SENTINEL) {\n        x.right.parent = y;\n    }\n    x.parent = y.parent;\n    // fix size_left\n    y.size_left -= x.size_left + (x.piece ? x.piece.length : 0);\n    y.lf_left -= x.lf_left + (x.piece ? x.piece.lineFeedCnt : 0);\n    if (y.parent === SENTINEL) {\n        tree.root = x;\n    }\n    else if (y === y.parent.right) {\n        y.parent.right = x;\n    }\n    else {\n        y.parent.left = x;\n    }\n    x.right = y;\n    y.parent = x;\n}\nexport function rbDelete(tree, z) {\n    let x;\n    let y;\n    if (z.left === SENTINEL) {\n        y = z;\n        x = y.right;\n    }\n    else if (z.right === SENTINEL) {\n        y = z;\n        x = y.left;\n    }\n    else {\n        y = leftest(z.right);\n        x = y.right;\n    }\n    if (y === tree.root) {\n        tree.root = x;\n        // if x is null, we are removing the only node\n        x.color = 0 /* NodeColor.Black */;\n        z.detach();\n        resetSentinel();\n        tree.root.parent = SENTINEL;\n        return;\n    }\n    const yWasRed = (y.color === 1 /* NodeColor.Red */);\n    if (y === y.parent.left) {\n        y.parent.left = x;\n    }\n    else {\n        y.parent.right = x;\n    }\n    if (y === z) {\n        x.parent = y.parent;\n        recomputeTreeMetadata(tree, x);\n    }\n    else {\n        if (y.parent === z) {\n            x.parent = y;\n        }\n        else {\n            x.parent = y.parent;\n        }\n        // as we make changes to x's hierarchy, update size_left of subtree first\n        recomputeTreeMetadata(tree, x);\n        y.left = z.left;\n        y.right = z.right;\n        y.parent = z.parent;\n        y.color = z.color;\n        if (z === tree.root) {\n            tree.root = y;\n        }\n        else {\n            if (z === z.parent.left) {\n                z.parent.left = y;\n            }\n            else {\n                z.parent.right = y;\n            }\n        }\n        if (y.left !== SENTINEL) {\n            y.left.parent = y;\n        }\n        if (y.right !== SENTINEL) {\n            y.right.parent = y;\n        }\n        // update metadata\n        // we replace z with y, so in this sub tree, the length change is z.item.length\n        y.size_left = z.size_left;\n        y.lf_left = z.lf_left;\n        recomputeTreeMetadata(tree, y);\n    }\n    z.detach();\n    if (x.parent.left === x) {\n        const newSizeLeft = calculateSize(x);\n        const newLFLeft = calculateLF(x);\n        if (newSizeLeft !== x.parent.size_left || newLFLeft !== x.parent.lf_left) {\n            const delta = newSizeLeft - x.parent.size_left;\n            const lf_delta = newLFLeft - x.parent.lf_left;\n            x.parent.size_left = newSizeLeft;\n            x.parent.lf_left = newLFLeft;\n            updateTreeMetadata(tree, x.parent, delta, lf_delta);\n        }\n    }\n    recomputeTreeMetadata(tree, x.parent);\n    if (yWasRed) {\n        resetSentinel();\n        return;\n    }\n    // RB-DELETE-FIXUP\n    let w;\n    while (x !== tree.root && x.color === 0 /* NodeColor.Black */) {\n        if (x === x.parent.left) {\n            w = x.parent.right;\n            if (w.color === 1 /* NodeColor.Red */) {\n                w.color = 0 /* NodeColor.Black */;\n                x.parent.color = 1 /* NodeColor.Red */;\n                leftRotate(tree, x.parent);\n                w = x.parent.right;\n            }\n            if (w.left.color === 0 /* NodeColor.Black */ && w.right.color === 0 /* NodeColor.Black */) {\n                w.color = 1 /* NodeColor.Red */;\n                x = x.parent;\n            }\n            else {\n                if (w.right.color === 0 /* NodeColor.Black */) {\n                    w.left.color = 0 /* NodeColor.Black */;\n                    w.color = 1 /* NodeColor.Red */;\n                    rightRotate(tree, w);\n                    w = x.parent.right;\n                }\n                w.color = x.parent.color;\n                x.parent.color = 0 /* NodeColor.Black */;\n                w.right.color = 0 /* NodeColor.Black */;\n                leftRotate(tree, x.parent);\n                x = tree.root;\n            }\n        }\n        else {\n            w = x.parent.left;\n            if (w.color === 1 /* NodeColor.Red */) {\n                w.color = 0 /* NodeColor.Black */;\n                x.parent.color = 1 /* NodeColor.Red */;\n                rightRotate(tree, x.parent);\n                w = x.parent.left;\n            }\n            if (w.left.color === 0 /* NodeColor.Black */ && w.right.color === 0 /* NodeColor.Black */) {\n                w.color = 1 /* NodeColor.Red */;\n                x = x.parent;\n            }\n            else {\n                if (w.left.color === 0 /* NodeColor.Black */) {\n                    w.right.color = 0 /* NodeColor.Black */;\n                    w.color = 1 /* NodeColor.Red */;\n                    leftRotate(tree, w);\n                    w = x.parent.left;\n                }\n                w.color = x.parent.color;\n                x.parent.color = 0 /* NodeColor.Black */;\n                w.left.color = 0 /* NodeColor.Black */;\n                rightRotate(tree, x.parent);\n                x = tree.root;\n            }\n        }\n    }\n    x.color = 0 /* NodeColor.Black */;\n    resetSentinel();\n}\nexport function fixInsert(tree, x) {\n    recomputeTreeMetadata(tree, x);\n    while (x !== tree.root && x.parent.color === 1 /* NodeColor.Red */) {\n        if (x.parent === x.parent.parent.left) {\n            const y = x.parent.parent.right;\n            if (y.color === 1 /* NodeColor.Red */) {\n                x.parent.color = 0 /* NodeColor.Black */;\n                y.color = 0 /* NodeColor.Black */;\n                x.parent.parent.color = 1 /* NodeColor.Red */;\n                x = x.parent.parent;\n            }\n            else {\n                if (x === x.parent.right) {\n                    x = x.parent;\n                    leftRotate(tree, x);\n                }\n                x.parent.color = 0 /* NodeColor.Black */;\n                x.parent.parent.color = 1 /* NodeColor.Red */;\n                rightRotate(tree, x.parent.parent);\n            }\n        }\n        else {\n            const y = x.parent.parent.left;\n            if (y.color === 1 /* NodeColor.Red */) {\n                x.parent.color = 0 /* NodeColor.Black */;\n                y.color = 0 /* NodeColor.Black */;\n                x.parent.parent.color = 1 /* NodeColor.Red */;\n                x = x.parent.parent;\n            }\n            else {\n                if (x === x.parent.left) {\n                    x = x.parent;\n                    rightRotate(tree, x);\n                }\n                x.parent.color = 0 /* NodeColor.Black */;\n                x.parent.parent.color = 1 /* NodeColor.Red */;\n                leftRotate(tree, x.parent.parent);\n            }\n        }\n    }\n    tree.root.color = 0 /* NodeColor.Black */;\n}\nexport function updateTreeMetadata(tree, x, delta, lineFeedCntDelta) {\n    // node length change or line feed count change\n    while (x !== tree.root && x !== SENTINEL) {\n        if (x.parent.left === x) {\n            x.parent.size_left += delta;\n            x.parent.lf_left += lineFeedCntDelta;\n        }\n        x = x.parent;\n    }\n}\nexport function recomputeTreeMetadata(tree, x) {\n    let delta = 0;\n    let lf_delta = 0;\n    if (x === tree.root) {\n        return;\n    }\n    // go upwards till the node whose left subtree is changed.\n    while (x !== tree.root && x === x.parent.right) {\n        x = x.parent;\n    }\n    if (x === tree.root) {\n        // well, it means we add a node to the end (inorder)\n        return;\n    }\n    // x is the node whose right subtree is changed.\n    x = x.parent;\n    delta = calculateSize(x.left) - x.size_left;\n    lf_delta = calculateLF(x.left) - x.lf_left;\n    x.size_left += delta;\n    x.lf_left += lf_delta;\n    // go upwards till root. O(logN)\n    while (x !== tree.root && (delta !== 0 || lf_delta !== 0)) {\n        if (x.parent.left === x) {\n            x.parent.size_left += delta;\n            x.parent.lf_left += lf_delta;\n        }\n        x = x.parent;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { arrayInsert } from '../../../base/common/arrays.js';\nimport { toUint32 } from '../../../base/common/uint.js';\nexport class PrefixSumComputer {\n    constructor(values) {\n        this.values = values;\n        this.prefixSum = new Uint32Array(values.length);\n        this.prefixSumValidIndex = new Int32Array(1);\n        this.prefixSumValidIndex[0] = -1;\n    }\n    insertValues(insertIndex, insertValues) {\n        insertIndex = toUint32(insertIndex);\n        const oldValues = this.values;\n        const oldPrefixSum = this.prefixSum;\n        const insertValuesLen = insertValues.length;\n        if (insertValuesLen === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length + insertValuesLen);\n        this.values.set(oldValues.subarray(0, insertIndex), 0);\n        this.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n        this.values.set(insertValues, insertIndex);\n        if (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = insertIndex - 1;\n        }\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    }\n    setValue(index, value) {\n        index = toUint32(index);\n        value = toUint32(value);\n        if (this.values[index] === value) {\n            return false;\n        }\n        this.values[index] = value;\n        if (index - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = index - 1;\n        }\n        return true;\n    }\n    removeValues(startIndex, count) {\n        startIndex = toUint32(startIndex);\n        count = toUint32(count);\n        const oldValues = this.values;\n        const oldPrefixSum = this.prefixSum;\n        if (startIndex >= oldValues.length) {\n            return false;\n        }\n        const maxCount = oldValues.length - startIndex;\n        if (count >= maxCount) {\n            count = maxCount;\n        }\n        if (count === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length - count);\n        this.values.set(oldValues.subarray(0, startIndex), 0);\n        this.values.set(oldValues.subarray(startIndex + count), startIndex);\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (startIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = startIndex - 1;\n        }\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    }\n    getTotalSum() {\n        if (this.values.length === 0) {\n            return 0;\n        }\n        return this._getPrefixSum(this.values.length - 1);\n    }\n    /**\n     * Returns the sum of the first `index + 1` many items.\n     * @returns `SUM(0 <= j <= index, values[j])`.\n     */\n    getPrefixSum(index) {\n        if (index < 0) {\n            return 0;\n        }\n        index = toUint32(index);\n        return this._getPrefixSum(index);\n    }\n    _getPrefixSum(index) {\n        if (index <= this.prefixSumValidIndex[0]) {\n            return this.prefixSum[index];\n        }\n        let startIndex = this.prefixSumValidIndex[0] + 1;\n        if (startIndex === 0) {\n            this.prefixSum[0] = this.values[0];\n            startIndex++;\n        }\n        if (index >= this.values.length) {\n            index = this.values.length - 1;\n        }\n        for (let i = startIndex; i <= index; i++) {\n            this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n        }\n        this.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n        return this.prefixSum[index];\n    }\n    getIndexOf(sum) {\n        sum = Math.floor(sum);\n        // Compute all sums (to get a fully valid prefixSum)\n        this.getTotalSum();\n        let low = 0;\n        let high = this.values.length - 1;\n        let mid = 0;\n        let midStop = 0;\n        let midStart = 0;\n        while (low <= high) {\n            mid = low + ((high - low) / 2) | 0;\n            midStop = this.prefixSum[mid];\n            midStart = midStop - this.values[mid];\n            if (sum < midStart) {\n                high = mid - 1;\n            }\n            else if (sum >= midStop) {\n                low = mid + 1;\n            }\n            else {\n                break;\n            }\n        }\n        return new PrefixSumIndexOfResult(mid, sum - midStart);\n    }\n}\n/**\n * {@link getIndexOf} has an amortized runtime complexity of O(1).\n *\n * ({@link PrefixSumComputer.getIndexOf} is just  O(log n))\n*/\nexport class ConstantTimePrefixSumComputer {\n    constructor(values) {\n        this._values = values;\n        this._isValid = false;\n        this._validEndIndex = -1;\n        this._prefixSum = [];\n        this._indexBySum = [];\n    }\n    /**\n     * @returns SUM(0 <= j < values.length, values[j])\n     */\n    getTotalSum() {\n        this._ensureValid();\n        return this._indexBySum.length;\n    }\n    /**\n     * Returns the sum of the first `count` many items.\n     * @returns `SUM(0 <= j < count, values[j])`.\n     */\n    getPrefixSum(count) {\n        this._ensureValid();\n        if (count === 0) {\n            return 0;\n        }\n        return this._prefixSum[count - 1];\n    }\n    /**\n     * @returns `result`, such that `getPrefixSum(result.index) + result.remainder = sum`\n     */\n    getIndexOf(sum) {\n        this._ensureValid();\n        const idx = this._indexBySum[sum];\n        const viewLinesAbove = idx > 0 ? this._prefixSum[idx - 1] : 0;\n        return new PrefixSumIndexOfResult(idx, sum - viewLinesAbove);\n    }\n    removeValues(start, deleteCount) {\n        this._values.splice(start, deleteCount);\n        this._invalidate(start);\n    }\n    insertValues(insertIndex, insertArr) {\n        this._values = arrayInsert(this._values, insertIndex, insertArr);\n        this._invalidate(insertIndex);\n    }\n    _invalidate(index) {\n        this._isValid = false;\n        this._validEndIndex = Math.min(this._validEndIndex, index - 1);\n    }\n    _ensureValid() {\n        if (this._isValid) {\n            return;\n        }\n        for (let i = this._validEndIndex + 1, len = this._values.length; i < len; i++) {\n            const value = this._values[i];\n            const sumAbove = i > 0 ? this._prefixSum[i - 1] : 0;\n            this._prefixSum[i] = sumAbove + value;\n            for (let j = 0; j < value; j++) {\n                this._indexBySum[sumAbove + j] = i;\n            }\n        }\n        // trim things\n        this._prefixSum.length = this._values.length;\n        this._indexBySum.length = this._prefixSum[this._prefixSum.length - 1];\n        // mark as valid\n        this._isValid = true;\n        this._validEndIndex = this._values.length - 1;\n    }\n    setValue(index, value) {\n        if (this._values[index] === value) {\n            // no change\n            return;\n        }\n        this._values[index] = value;\n        this._invalidate(index);\n    }\n}\nexport class PrefixSumIndexOfResult {\n    constructor(index, remainder) {\n        this.index = index;\n        this.remainder = remainder;\n        this._prefixSumIndexOfResultBrand = undefined;\n        this.index = index;\n        this.remainder = remainder;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar TextModel_1;\nimport { ArrayQueue, pushMany } from '../../../base/common/arrays.js';\nimport { Color } from '../../../base/common/color.js';\nimport { BugIndicatingError, illegalArgument, onUnexpectedError } from '../../../base/common/errors.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable, MutableDisposable, combinedDisposable } from '../../../base/common/lifecycle.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { countEOL } from '../core/eolCounter.js';\nimport { normalizeIndentation } from '../core/indentation.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { Selection } from '../core/selection.js';\nimport { EDITOR_MODEL_DEFAULTS } from '../core/textModelDefaults.js';\nimport { ILanguageService } from '../languages/language.js';\nimport { ILanguageConfigurationService } from '../languages/languageConfigurationRegistry.js';\nimport * as model from '../model.js';\nimport { BracketPairsTextModelPart } from './bracketPairsTextModelPart/bracketPairsImpl.js';\nimport { ColorizedBracketPairsDecorationProvider } from './bracketPairsTextModelPart/colorizedBracketPairsDecorationProvider.js';\nimport { EditStack } from './editStack.js';\nimport { GuidesTextModelPart } from './guidesTextModelPart.js';\nimport { guessIndentation } from './indentationGuesser.js';\nimport { IntervalNode, IntervalTree, recomputeMaxEnd } from './intervalTree.js';\nimport { PieceTreeTextBuffer } from './pieceTreeTextBuffer/pieceTreeTextBuffer.js';\nimport { PieceTreeTextBufferBuilder } from './pieceTreeTextBuffer/pieceTreeTextBufferBuilder.js';\nimport { SearchParams, TextModelSearch } from './textModelSearch.js';\nimport { TokenizationTextModelPart } from './tokenizationTextModelPart.js';\nimport { AttachedViews } from './tokens.js';\nimport { InternalModelContentChangeEvent, LineInjectedText, ModelInjectedTextChangedEvent, ModelRawContentChangedEvent, ModelRawEOLChanged, ModelRawFlush, ModelRawLineChanged, ModelRawLinesDeleted, ModelRawLinesInserted } from '../textModelEvents.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { IUndoRedoService } from '../../../platform/undoRedo/common/undoRedo.js';\nexport function createTextBufferFactory(text) {\n    const builder = new PieceTreeTextBufferBuilder();\n    builder.acceptChunk(text);\n    return builder.finish();\n}\nexport function createTextBufferFactoryFromSnapshot(snapshot) {\n    const builder = new PieceTreeTextBufferBuilder();\n    let chunk;\n    while (typeof (chunk = snapshot.read()) === 'string') {\n        builder.acceptChunk(chunk);\n    }\n    return builder.finish();\n}\nexport function createTextBuffer(value, defaultEOL) {\n    let factory;\n    if (typeof value === 'string') {\n        factory = createTextBufferFactory(value);\n    }\n    else if (model.isITextSnapshot(value)) {\n        factory = createTextBufferFactoryFromSnapshot(value);\n    }\n    else {\n        factory = value;\n    }\n    return factory.create(defaultEOL);\n}\nlet MODEL_ID = 0;\nconst LIMIT_FIND_COUNT = 999;\nconst LONG_LINE_BOUNDARY = 10000;\nclass TextModelSnapshot {\n    constructor(source) {\n        this._source = source;\n        this._eos = false;\n    }\n    read() {\n        if (this._eos) {\n            return null;\n        }\n        const result = [];\n        let resultCnt = 0;\n        let resultLength = 0;\n        do {\n            const tmp = this._source.read();\n            if (tmp === null) {\n                // end-of-stream\n                this._eos = true;\n                if (resultCnt === 0) {\n                    return null;\n                }\n                else {\n                    return result.join('');\n                }\n            }\n            if (tmp.length > 0) {\n                result[resultCnt++] = tmp;\n                resultLength += tmp.length;\n            }\n            if (resultLength >= 64 * 1024) {\n                return result.join('');\n            }\n        } while (true);\n    }\n}\nconst invalidFunc = () => { throw new Error(`Invalid change accessor`); };\nlet TextModel = class TextModel extends Disposable {\n    static { TextModel_1 = this; }\n    static { this._MODEL_SYNC_LIMIT = 50 * 1024 * 1024; } // 50 MB,  // used in tests\n    static { this.LARGE_FILE_SIZE_THRESHOLD = 20 * 1024 * 1024; } // 20 MB;\n    static { this.LARGE_FILE_LINE_COUNT_THRESHOLD = 300 * 1000; } // 300K lines\n    static { this.LARGE_FILE_HEAP_OPERATION_THRESHOLD = 256 * 1024 * 1024; } // 256M characters, usually ~> 512MB memory usage\n    static { this.DEFAULT_CREATION_OPTIONS = {\n        isForSimpleWidget: false,\n        tabSize: EDITOR_MODEL_DEFAULTS.tabSize,\n        indentSize: EDITOR_MODEL_DEFAULTS.indentSize,\n        insertSpaces: EDITOR_MODEL_DEFAULTS.insertSpaces,\n        detectIndentation: false,\n        defaultEOL: 1 /* model.DefaultEndOfLine.LF */,\n        trimAutoWhitespace: EDITOR_MODEL_DEFAULTS.trimAutoWhitespace,\n        largeFileOptimizations: EDITOR_MODEL_DEFAULTS.largeFileOptimizations,\n        bracketPairColorizationOptions: EDITOR_MODEL_DEFAULTS.bracketPairColorizationOptions,\n    }; }\n    static resolveOptions(textBuffer, options) {\n        if (options.detectIndentation) {\n            const guessedIndentation = guessIndentation(textBuffer, options.tabSize, options.insertSpaces);\n            return new model.TextModelResolvedOptions({\n                tabSize: guessedIndentation.tabSize,\n                indentSize: 'tabSize', // TODO@Alex: guess indentSize independent of tabSize\n                insertSpaces: guessedIndentation.insertSpaces,\n                trimAutoWhitespace: options.trimAutoWhitespace,\n                defaultEOL: options.defaultEOL,\n                bracketPairColorizationOptions: options.bracketPairColorizationOptions,\n            });\n        }\n        return new model.TextModelResolvedOptions(options);\n    }\n    get onDidChangeLanguage() { return this._tokenizationTextModelPart.onDidChangeLanguage; }\n    get onDidChangeLanguageConfiguration() { return this._tokenizationTextModelPart.onDidChangeLanguageConfiguration; }\n    get onDidChangeTokens() { return this._tokenizationTextModelPart.onDidChangeTokens; }\n    onDidChangeContent(listener) {\n        return this._eventEmitter.slowEvent((e) => listener(e.contentChangedEvent));\n    }\n    onDidChangeContentOrInjectedText(listener) {\n        return combinedDisposable(this._eventEmitter.fastEvent(e => listener(e)), this._onDidChangeInjectedText.event(e => listener(e)));\n    }\n    _isDisposing() { return this.__isDisposing; }\n    get tokenization() { return this._tokenizationTextModelPart; }\n    get bracketPairs() { return this._bracketPairs; }\n    get guides() { return this._guidesTextModelPart; }\n    constructor(source, languageIdOrSelection, creationOptions, associatedResource = null, _undoRedoService, _languageService, _languageConfigurationService, instantiationService) {\n        super();\n        this._undoRedoService = _undoRedoService;\n        this._languageService = _languageService;\n        this._languageConfigurationService = _languageConfigurationService;\n        this.instantiationService = instantiationService;\n        //#region Events\n        this._onWillDispose = this._register(new Emitter());\n        this.onWillDispose = this._onWillDispose.event;\n        this._onDidChangeDecorations = this._register(new DidChangeDecorationsEmitter(affectedInjectedTextLines => this.handleBeforeFireDecorationsChangedEvent(affectedInjectedTextLines)));\n        this.onDidChangeDecorations = this._onDidChangeDecorations.event;\n        this._onDidChangeOptions = this._register(new Emitter());\n        this.onDidChangeOptions = this._onDidChangeOptions.event;\n        this._onDidChangeAttached = this._register(new Emitter());\n        this.onDidChangeAttached = this._onDidChangeAttached.event;\n        this._onDidChangeInjectedText = this._register(new Emitter());\n        this._eventEmitter = this._register(new DidChangeContentEmitter());\n        this._languageSelectionListener = this._register(new MutableDisposable());\n        this._deltaDecorationCallCnt = 0;\n        this._attachedViews = new AttachedViews();\n        // Generate a new unique model id\n        MODEL_ID++;\n        this.id = '$model' + MODEL_ID;\n        this.isForSimpleWidget = creationOptions.isForSimpleWidget;\n        if (typeof associatedResource === 'undefined' || associatedResource === null) {\n            this._associatedResource = URI.parse('inmemory://model/' + MODEL_ID);\n        }\n        else {\n            this._associatedResource = associatedResource;\n        }\n        this._attachedEditorCount = 0;\n        const { textBuffer, disposable } = createTextBuffer(source, creationOptions.defaultEOL);\n        this._buffer = textBuffer;\n        this._bufferDisposable = disposable;\n        this._options = TextModel_1.resolveOptions(this._buffer, creationOptions);\n        const languageId = (typeof languageIdOrSelection === 'string' ? languageIdOrSelection : languageIdOrSelection.languageId);\n        if (typeof languageIdOrSelection !== 'string') {\n            this._languageSelectionListener.value = languageIdOrSelection.onDidChange(() => this._setLanguage(languageIdOrSelection.languageId));\n        }\n        this._bracketPairs = this._register(new BracketPairsTextModelPart(this, this._languageConfigurationService));\n        this._guidesTextModelPart = this._register(new GuidesTextModelPart(this, this._languageConfigurationService));\n        this._decorationProvider = this._register(new ColorizedBracketPairsDecorationProvider(this));\n        this._tokenizationTextModelPart = this.instantiationService.createInstance(TokenizationTextModelPart, this, this._bracketPairs, languageId, this._attachedViews);\n        const bufferLineCount = this._buffer.getLineCount();\n        const bufferTextLength = this._buffer.getValueLengthInRange(new Range(1, 1, bufferLineCount, this._buffer.getLineLength(bufferLineCount) + 1), 0 /* model.EndOfLinePreference.TextDefined */);\n        // !!! Make a decision in the ctor and permanently respect this decision !!!\n        // If a model is too large at construction time, it will never get tokenized,\n        // under no circumstances.\n        if (creationOptions.largeFileOptimizations) {\n            this._isTooLargeForTokenization = ((bufferTextLength > TextModel_1.LARGE_FILE_SIZE_THRESHOLD)\n                || (bufferLineCount > TextModel_1.LARGE_FILE_LINE_COUNT_THRESHOLD));\n            this._isTooLargeForHeapOperation = bufferTextLength > TextModel_1.LARGE_FILE_HEAP_OPERATION_THRESHOLD;\n        }\n        else {\n            this._isTooLargeForTokenization = false;\n            this._isTooLargeForHeapOperation = false;\n        }\n        this._isTooLargeForSyncing = (bufferTextLength > TextModel_1._MODEL_SYNC_LIMIT);\n        this._versionId = 1;\n        this._alternativeVersionId = 1;\n        this._initialUndoRedoSnapshot = null;\n        this._isDisposed = false;\n        this.__isDisposing = false;\n        this._instanceId = strings.singleLetterHash(MODEL_ID);\n        this._lastDecorationId = 0;\n        this._decorations = Object.create(null);\n        this._decorationsTree = new DecorationsTrees();\n        this._commandManager = new EditStack(this, this._undoRedoService);\n        this._isUndoing = false;\n        this._isRedoing = false;\n        this._trimAutoWhitespaceLines = null;\n        this._register(this._decorationProvider.onDidChange(() => {\n            this._onDidChangeDecorations.beginDeferredEmit();\n            this._onDidChangeDecorations.fire();\n            this._onDidChangeDecorations.endDeferredEmit();\n        }));\n        this._languageService.requestRichLanguageFeatures(languageId);\n        this._register(this._languageConfigurationService.onDidChange(e => {\n            this._bracketPairs.handleLanguageConfigurationServiceChange(e);\n            this._tokenizationTextModelPart.handleLanguageConfigurationServiceChange(e);\n        }));\n    }\n    dispose() {\n        this.__isDisposing = true;\n        this._onWillDispose.fire();\n        this._tokenizationTextModelPart.dispose();\n        this._isDisposed = true;\n        super.dispose();\n        this._bufferDisposable.dispose();\n        this.__isDisposing = false;\n        // Manually release reference to previous text buffer to avoid large leaks\n        // in case someone leaks a TextModel reference\n        const emptyDisposedTextBuffer = new PieceTreeTextBuffer([], '', '\\n', false, false, true, true);\n        emptyDisposedTextBuffer.dispose();\n        this._buffer = emptyDisposedTextBuffer;\n        this._bufferDisposable = Disposable.None;\n    }\n    _assertNotDisposed() {\n        if (this._isDisposed) {\n            throw new BugIndicatingError('Model is disposed!');\n        }\n    }\n    _emitContentChangedEvent(rawChange, change) {\n        if (this.__isDisposing) {\n            // Do not confuse listeners by emitting any event after disposing\n            return;\n        }\n        this._tokenizationTextModelPart.handleDidChangeContent(change);\n        this._bracketPairs.handleDidChangeContent(change);\n        this._eventEmitter.fire(new InternalModelContentChangeEvent(rawChange, change));\n    }\n    setValue(value) {\n        this._assertNotDisposed();\n        if (value === null || value === undefined) {\n            throw illegalArgument();\n        }\n        const { textBuffer, disposable } = createTextBuffer(value, this._options.defaultEOL);\n        this._setValueFromTextBuffer(textBuffer, disposable);\n    }\n    _createContentChanged2(range, rangeOffset, rangeLength, text, isUndoing, isRedoing, isFlush, isEolChange) {\n        return {\n            changes: [{\n                    range: range,\n                    rangeOffset: rangeOffset,\n                    rangeLength: rangeLength,\n                    text: text,\n                }],\n            eol: this._buffer.getEOL(),\n            isEolChange: isEolChange,\n            versionId: this.getVersionId(),\n            isUndoing: isUndoing,\n            isRedoing: isRedoing,\n            isFlush: isFlush\n        };\n    }\n    _setValueFromTextBuffer(textBuffer, textBufferDisposable) {\n        this._assertNotDisposed();\n        const oldFullModelRange = this.getFullModelRange();\n        const oldModelValueLength = this.getValueLengthInRange(oldFullModelRange);\n        const endLineNumber = this.getLineCount();\n        const endColumn = this.getLineMaxColumn(endLineNumber);\n        this._buffer = textBuffer;\n        this._bufferDisposable.dispose();\n        this._bufferDisposable = textBufferDisposable;\n        this._increaseVersionId();\n        // Destroy all my decorations\n        this._decorations = Object.create(null);\n        this._decorationsTree = new DecorationsTrees();\n        // Destroy my edit history and settings\n        this._commandManager.clear();\n        this._trimAutoWhitespaceLines = null;\n        this._emitContentChangedEvent(new ModelRawContentChangedEvent([\n            new ModelRawFlush()\n        ], this._versionId, false, false), this._createContentChanged2(new Range(1, 1, endLineNumber, endColumn), 0, oldModelValueLength, this.getValue(), false, false, true, false));\n    }\n    setEOL(eol) {\n        this._assertNotDisposed();\n        const newEOL = (eol === 1 /* model.EndOfLineSequence.CRLF */ ? '\\r\\n' : '\\n');\n        if (this._buffer.getEOL() === newEOL) {\n            // Nothing to do\n            return;\n        }\n        const oldFullModelRange = this.getFullModelRange();\n        const oldModelValueLength = this.getValueLengthInRange(oldFullModelRange);\n        const endLineNumber = this.getLineCount();\n        const endColumn = this.getLineMaxColumn(endLineNumber);\n        this._onBeforeEOLChange();\n        this._buffer.setEOL(newEOL);\n        this._increaseVersionId();\n        this._onAfterEOLChange();\n        this._emitContentChangedEvent(new ModelRawContentChangedEvent([\n            new ModelRawEOLChanged()\n        ], this._versionId, false, false), this._createContentChanged2(new Range(1, 1, endLineNumber, endColumn), 0, oldModelValueLength, this.getValue(), false, false, false, true));\n    }\n    _onBeforeEOLChange() {\n        // Ensure all decorations get their `range` set.\n        this._decorationsTree.ensureAllNodesHaveRanges(this);\n    }\n    _onAfterEOLChange() {\n        // Transform back `range` to offsets\n        const versionId = this.getVersionId();\n        const allDecorations = this._decorationsTree.collectNodesPostOrder();\n        for (let i = 0, len = allDecorations.length; i < len; i++) {\n            const node = allDecorations[i];\n            const range = node.range; // the range is defined due to `_onBeforeEOLChange`\n            const delta = node.cachedAbsoluteStart - node.start;\n            const startOffset = this._buffer.getOffsetAt(range.startLineNumber, range.startColumn);\n            const endOffset = this._buffer.getOffsetAt(range.endLineNumber, range.endColumn);\n            node.cachedAbsoluteStart = startOffset;\n            node.cachedAbsoluteEnd = endOffset;\n            node.cachedVersionId = versionId;\n            node.start = startOffset - delta;\n            node.end = endOffset - delta;\n            recomputeMaxEnd(node);\n        }\n    }\n    onBeforeAttached() {\n        this._attachedEditorCount++;\n        if (this._attachedEditorCount === 1) {\n            this._tokenizationTextModelPart.handleDidChangeAttached();\n            this._onDidChangeAttached.fire(undefined);\n        }\n        return this._attachedViews.attachView();\n    }\n    onBeforeDetached(view) {\n        this._attachedEditorCount--;\n        if (this._attachedEditorCount === 0) {\n            this._tokenizationTextModelPart.handleDidChangeAttached();\n            this._onDidChangeAttached.fire(undefined);\n        }\n        this._attachedViews.detachView(view);\n    }\n    isAttachedToEditor() {\n        return this._attachedEditorCount > 0;\n    }\n    getAttachedEditorCount() {\n        return this._attachedEditorCount;\n    }\n    isTooLargeForSyncing() {\n        return this._isTooLargeForSyncing;\n    }\n    isTooLargeForTokenization() {\n        return this._isTooLargeForTokenization;\n    }\n    isTooLargeForHeapOperation() {\n        return this._isTooLargeForHeapOperation;\n    }\n    isDisposed() {\n        return this._isDisposed;\n    }\n    isDominatedByLongLines() {\n        this._assertNotDisposed();\n        if (this.isTooLargeForTokenization()) {\n            // Cannot word wrap huge files anyways, so it doesn't really matter\n            return false;\n        }\n        let smallLineCharCount = 0;\n        let longLineCharCount = 0;\n        const lineCount = this._buffer.getLineCount();\n        for (let lineNumber = 1; lineNumber <= lineCount; lineNumber++) {\n            const lineLength = this._buffer.getLineLength(lineNumber);\n            if (lineLength >= LONG_LINE_BOUNDARY) {\n                longLineCharCount += lineLength;\n            }\n            else {\n                smallLineCharCount += lineLength;\n            }\n        }\n        return (longLineCharCount > smallLineCharCount);\n    }\n    get uri() {\n        return this._associatedResource;\n    }\n    //#region Options\n    getOptions() {\n        this._assertNotDisposed();\n        return this._options;\n    }\n    getFormattingOptions() {\n        return {\n            tabSize: this._options.indentSize,\n            insertSpaces: this._options.insertSpaces\n        };\n    }\n    updateOptions(_newOpts) {\n        this._assertNotDisposed();\n        const tabSize = (typeof _newOpts.tabSize !== 'undefined') ? _newOpts.tabSize : this._options.tabSize;\n        const indentSize = (typeof _newOpts.indentSize !== 'undefined') ? _newOpts.indentSize : this._options.originalIndentSize;\n        const insertSpaces = (typeof _newOpts.insertSpaces !== 'undefined') ? _newOpts.insertSpaces : this._options.insertSpaces;\n        const trimAutoWhitespace = (typeof _newOpts.trimAutoWhitespace !== 'undefined') ? _newOpts.trimAutoWhitespace : this._options.trimAutoWhitespace;\n        const bracketPairColorizationOptions = (typeof _newOpts.bracketColorizationOptions !== 'undefined') ? _newOpts.bracketColorizationOptions : this._options.bracketPairColorizationOptions;\n        const newOpts = new model.TextModelResolvedOptions({\n            tabSize: tabSize,\n            indentSize: indentSize,\n            insertSpaces: insertSpaces,\n            defaultEOL: this._options.defaultEOL,\n            trimAutoWhitespace: trimAutoWhitespace,\n            bracketPairColorizationOptions,\n        });\n        if (this._options.equals(newOpts)) {\n            return;\n        }\n        const e = this._options.createChangeEvent(newOpts);\n        this._options = newOpts;\n        this._bracketPairs.handleDidChangeOptions(e);\n        this._decorationProvider.handleDidChangeOptions(e);\n        this._onDidChangeOptions.fire(e);\n    }\n    detectIndentation(defaultInsertSpaces, defaultTabSize) {\n        this._assertNotDisposed();\n        const guessedIndentation = guessIndentation(this._buffer, defaultTabSize, defaultInsertSpaces);\n        this.updateOptions({\n            insertSpaces: guessedIndentation.insertSpaces,\n            tabSize: guessedIndentation.tabSize,\n            indentSize: guessedIndentation.tabSize, // TODO@Alex: guess indentSize independent of tabSize\n        });\n    }\n    normalizeIndentation(str) {\n        this._assertNotDisposed();\n        return normalizeIndentation(str, this._options.indentSize, this._options.insertSpaces);\n    }\n    //#endregion\n    //#region Reading\n    getVersionId() {\n        this._assertNotDisposed();\n        return this._versionId;\n    }\n    mightContainRTL() {\n        return this._buffer.mightContainRTL();\n    }\n    mightContainUnusualLineTerminators() {\n        return this._buffer.mightContainUnusualLineTerminators();\n    }\n    removeUnusualLineTerminators(selections = null) {\n        const matches = this.findMatches(strings.UNUSUAL_LINE_TERMINATORS.source, false, true, false, null, false, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */);\n        this._buffer.resetMightContainUnusualLineTerminators();\n        this.pushEditOperations(selections, matches.map(m => ({ range: m.range, text: null })), () => null);\n    }\n    mightContainNonBasicASCII() {\n        return this._buffer.mightContainNonBasicASCII();\n    }\n    getAlternativeVersionId() {\n        this._assertNotDisposed();\n        return this._alternativeVersionId;\n    }\n    getInitialUndoRedoSnapshot() {\n        this._assertNotDisposed();\n        return this._initialUndoRedoSnapshot;\n    }\n    getOffsetAt(rawPosition) {\n        this._assertNotDisposed();\n        const position = this._validatePosition(rawPosition.lineNumber, rawPosition.column, 0 /* StringOffsetValidationType.Relaxed */);\n        return this._buffer.getOffsetAt(position.lineNumber, position.column);\n    }\n    getPositionAt(rawOffset) {\n        this._assertNotDisposed();\n        const offset = (Math.min(this._buffer.getLength(), Math.max(0, rawOffset)));\n        return this._buffer.getPositionAt(offset);\n    }\n    _increaseVersionId() {\n        this._versionId = this._versionId + 1;\n        this._alternativeVersionId = this._versionId;\n    }\n    _overwriteVersionId(versionId) {\n        this._versionId = versionId;\n    }\n    _overwriteAlternativeVersionId(newAlternativeVersionId) {\n        this._alternativeVersionId = newAlternativeVersionId;\n    }\n    _overwriteInitialUndoRedoSnapshot(newInitialUndoRedoSnapshot) {\n        this._initialUndoRedoSnapshot = newInitialUndoRedoSnapshot;\n    }\n    getValue(eol, preserveBOM = false) {\n        this._assertNotDisposed();\n        if (this.isTooLargeForHeapOperation()) {\n            throw new BugIndicatingError('Operation would exceed heap memory limits');\n        }\n        const fullModelRange = this.getFullModelRange();\n        const fullModelValue = this.getValueInRange(fullModelRange, eol);\n        if (preserveBOM) {\n            return this._buffer.getBOM() + fullModelValue;\n        }\n        return fullModelValue;\n    }\n    createSnapshot(preserveBOM = false) {\n        return new TextModelSnapshot(this._buffer.createSnapshot(preserveBOM));\n    }\n    getValueLength(eol, preserveBOM = false) {\n        this._assertNotDisposed();\n        const fullModelRange = this.getFullModelRange();\n        const fullModelValue = this.getValueLengthInRange(fullModelRange, eol);\n        if (preserveBOM) {\n            return this._buffer.getBOM().length + fullModelValue;\n        }\n        return fullModelValue;\n    }\n    getValueInRange(rawRange, eol = 0 /* model.EndOfLinePreference.TextDefined */) {\n        this._assertNotDisposed();\n        return this._buffer.getValueInRange(this.validateRange(rawRange), eol);\n    }\n    getValueLengthInRange(rawRange, eol = 0 /* model.EndOfLinePreference.TextDefined */) {\n        this._assertNotDisposed();\n        return this._buffer.getValueLengthInRange(this.validateRange(rawRange), eol);\n    }\n    getCharacterCountInRange(rawRange, eol = 0 /* model.EndOfLinePreference.TextDefined */) {\n        this._assertNotDisposed();\n        return this._buffer.getCharacterCountInRange(this.validateRange(rawRange), eol);\n    }\n    getLineCount() {\n        this._assertNotDisposed();\n        return this._buffer.getLineCount();\n    }\n    getLineContent(lineNumber) {\n        this._assertNotDisposed();\n        if (lineNumber < 1 || lineNumber > this.getLineCount()) {\n            throw new BugIndicatingError('Illegal value for lineNumber');\n        }\n        return this._buffer.getLineContent(lineNumber);\n    }\n    getLineLength(lineNumber) {\n        this._assertNotDisposed();\n        if (lineNumber < 1 || lineNumber > this.getLineCount()) {\n            throw new BugIndicatingError('Illegal value for lineNumber');\n        }\n        return this._buffer.getLineLength(lineNumber);\n    }\n    getLinesContent() {\n        this._assertNotDisposed();\n        if (this.isTooLargeForHeapOperation()) {\n            throw new BugIndicatingError('Operation would exceed heap memory limits');\n        }\n        return this._buffer.getLinesContent();\n    }\n    getEOL() {\n        this._assertNotDisposed();\n        return this._buffer.getEOL();\n    }\n    getEndOfLineSequence() {\n        this._assertNotDisposed();\n        return (this._buffer.getEOL() === '\\n'\n            ? 0 /* model.EndOfLineSequence.LF */\n            : 1 /* model.EndOfLineSequence.CRLF */);\n    }\n    getLineMinColumn(lineNumber) {\n        this._assertNotDisposed();\n        return 1;\n    }\n    getLineMaxColumn(lineNumber) {\n        this._assertNotDisposed();\n        if (lineNumber < 1 || lineNumber > this.getLineCount()) {\n            throw new BugIndicatingError('Illegal value for lineNumber');\n        }\n        return this._buffer.getLineLength(lineNumber) + 1;\n    }\n    getLineFirstNonWhitespaceColumn(lineNumber) {\n        this._assertNotDisposed();\n        if (lineNumber < 1 || lineNumber > this.getLineCount()) {\n            throw new BugIndicatingError('Illegal value for lineNumber');\n        }\n        return this._buffer.getLineFirstNonWhitespaceColumn(lineNumber);\n    }\n    getLineLastNonWhitespaceColumn(lineNumber) {\n        this._assertNotDisposed();\n        if (lineNumber < 1 || lineNumber > this.getLineCount()) {\n            throw new BugIndicatingError('Illegal value for lineNumber');\n        }\n        return this._buffer.getLineLastNonWhitespaceColumn(lineNumber);\n    }\n    /**\n     * Validates `range` is within buffer bounds, but allows it to sit in between surrogate pairs, etc.\n     * Will try to not allocate if possible.\n     */\n    _validateRangeRelaxedNoAllocations(range) {\n        const linesCount = this._buffer.getLineCount();\n        const initialStartLineNumber = range.startLineNumber;\n        const initialStartColumn = range.startColumn;\n        let startLineNumber = Math.floor((typeof initialStartLineNumber === 'number' && !isNaN(initialStartLineNumber)) ? initialStartLineNumber : 1);\n        let startColumn = Math.floor((typeof initialStartColumn === 'number' && !isNaN(initialStartColumn)) ? initialStartColumn : 1);\n        if (startLineNumber < 1) {\n            startLineNumber = 1;\n            startColumn = 1;\n        }\n        else if (startLineNumber > linesCount) {\n            startLineNumber = linesCount;\n            startColumn = this.getLineMaxColumn(startLineNumber);\n        }\n        else {\n            if (startColumn <= 1) {\n                startColumn = 1;\n            }\n            else {\n                const maxColumn = this.getLineMaxColumn(startLineNumber);\n                if (startColumn >= maxColumn) {\n                    startColumn = maxColumn;\n                }\n            }\n        }\n        const initialEndLineNumber = range.endLineNumber;\n        const initialEndColumn = range.endColumn;\n        let endLineNumber = Math.floor((typeof initialEndLineNumber === 'number' && !isNaN(initialEndLineNumber)) ? initialEndLineNumber : 1);\n        let endColumn = Math.floor((typeof initialEndColumn === 'number' && !isNaN(initialEndColumn)) ? initialEndColumn : 1);\n        if (endLineNumber < 1) {\n            endLineNumber = 1;\n            endColumn = 1;\n        }\n        else if (endLineNumber > linesCount) {\n            endLineNumber = linesCount;\n            endColumn = this.getLineMaxColumn(endLineNumber);\n        }\n        else {\n            if (endColumn <= 1) {\n                endColumn = 1;\n            }\n            else {\n                const maxColumn = this.getLineMaxColumn(endLineNumber);\n                if (endColumn >= maxColumn) {\n                    endColumn = maxColumn;\n                }\n            }\n        }\n        if (initialStartLineNumber === startLineNumber\n            && initialStartColumn === startColumn\n            && initialEndLineNumber === endLineNumber\n            && initialEndColumn === endColumn\n            && range instanceof Range\n            && !(range instanceof Selection)) {\n            return range;\n        }\n        return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n    }\n    _isValidPosition(lineNumber, column, validationType) {\n        if (typeof lineNumber !== 'number' || typeof column !== 'number') {\n            return false;\n        }\n        if (isNaN(lineNumber) || isNaN(column)) {\n            return false;\n        }\n        if (lineNumber < 1 || column < 1) {\n            return false;\n        }\n        if ((lineNumber | 0) !== lineNumber || (column | 0) !== column) {\n            return false;\n        }\n        const lineCount = this._buffer.getLineCount();\n        if (lineNumber > lineCount) {\n            return false;\n        }\n        if (column === 1) {\n            return true;\n        }\n        const maxColumn = this.getLineMaxColumn(lineNumber);\n        if (column > maxColumn) {\n            return false;\n        }\n        if (validationType === 1 /* StringOffsetValidationType.SurrogatePairs */) {\n            // !!At this point, column > 1\n            const charCodeBefore = this._buffer.getLineCharCode(lineNumber, column - 2);\n            if (strings.isHighSurrogate(charCodeBefore)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    _validatePosition(_lineNumber, _column, validationType) {\n        const lineNumber = Math.floor((typeof _lineNumber === 'number' && !isNaN(_lineNumber)) ? _lineNumber : 1);\n        const column = Math.floor((typeof _column === 'number' && !isNaN(_column)) ? _column : 1);\n        const lineCount = this._buffer.getLineCount();\n        if (lineNumber < 1) {\n            return new Position(1, 1);\n        }\n        if (lineNumber > lineCount) {\n            return new Position(lineCount, this.getLineMaxColumn(lineCount));\n        }\n        if (column <= 1) {\n            return new Position(lineNumber, 1);\n        }\n        const maxColumn = this.getLineMaxColumn(lineNumber);\n        if (column >= maxColumn) {\n            return new Position(lineNumber, maxColumn);\n        }\n        if (validationType === 1 /* StringOffsetValidationType.SurrogatePairs */) {\n            // If the position would end up in the middle of a high-low surrogate pair,\n            // we move it to before the pair\n            // !!At this point, column > 1\n            const charCodeBefore = this._buffer.getLineCharCode(lineNumber, column - 2);\n            if (strings.isHighSurrogate(charCodeBefore)) {\n                return new Position(lineNumber, column - 1);\n            }\n        }\n        return new Position(lineNumber, column);\n    }\n    validatePosition(position) {\n        const validationType = 1 /* StringOffsetValidationType.SurrogatePairs */;\n        this._assertNotDisposed();\n        // Avoid object allocation and cover most likely case\n        if (position instanceof Position) {\n            if (this._isValidPosition(position.lineNumber, position.column, validationType)) {\n                return position;\n            }\n        }\n        return this._validatePosition(position.lineNumber, position.column, validationType);\n    }\n    _isValidRange(range, validationType) {\n        const startLineNumber = range.startLineNumber;\n        const startColumn = range.startColumn;\n        const endLineNumber = range.endLineNumber;\n        const endColumn = range.endColumn;\n        if (!this._isValidPosition(startLineNumber, startColumn, 0 /* StringOffsetValidationType.Relaxed */)) {\n            return false;\n        }\n        if (!this._isValidPosition(endLineNumber, endColumn, 0 /* StringOffsetValidationType.Relaxed */)) {\n            return false;\n        }\n        if (validationType === 1 /* StringOffsetValidationType.SurrogatePairs */) {\n            const charCodeBeforeStart = (startColumn > 1 ? this._buffer.getLineCharCode(startLineNumber, startColumn - 2) : 0);\n            const charCodeBeforeEnd = (endColumn > 1 && endColumn <= this._buffer.getLineLength(endLineNumber) ? this._buffer.getLineCharCode(endLineNumber, endColumn - 2) : 0);\n            const startInsideSurrogatePair = strings.isHighSurrogate(charCodeBeforeStart);\n            const endInsideSurrogatePair = strings.isHighSurrogate(charCodeBeforeEnd);\n            if (!startInsideSurrogatePair && !endInsideSurrogatePair) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    }\n    validateRange(_range) {\n        const validationType = 1 /* StringOffsetValidationType.SurrogatePairs */;\n        this._assertNotDisposed();\n        // Avoid object allocation and cover most likely case\n        if ((_range instanceof Range) && !(_range instanceof Selection)) {\n            if (this._isValidRange(_range, validationType)) {\n                return _range;\n            }\n        }\n        const start = this._validatePosition(_range.startLineNumber, _range.startColumn, 0 /* StringOffsetValidationType.Relaxed */);\n        const end = this._validatePosition(_range.endLineNumber, _range.endColumn, 0 /* StringOffsetValidationType.Relaxed */);\n        const startLineNumber = start.lineNumber;\n        const startColumn = start.column;\n        const endLineNumber = end.lineNumber;\n        const endColumn = end.column;\n        if (validationType === 1 /* StringOffsetValidationType.SurrogatePairs */) {\n            const charCodeBeforeStart = (startColumn > 1 ? this._buffer.getLineCharCode(startLineNumber, startColumn - 2) : 0);\n            const charCodeBeforeEnd = (endColumn > 1 && endColumn <= this._buffer.getLineLength(endLineNumber) ? this._buffer.getLineCharCode(endLineNumber, endColumn - 2) : 0);\n            const startInsideSurrogatePair = strings.isHighSurrogate(charCodeBeforeStart);\n            const endInsideSurrogatePair = strings.isHighSurrogate(charCodeBeforeEnd);\n            if (!startInsideSurrogatePair && !endInsideSurrogatePair) {\n                return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n            }\n            if (startLineNumber === endLineNumber && startColumn === endColumn) {\n                // do not expand a collapsed range, simply move it to a valid location\n                return new Range(startLineNumber, startColumn - 1, endLineNumber, endColumn - 1);\n            }\n            if (startInsideSurrogatePair && endInsideSurrogatePair) {\n                // expand range at both ends\n                return new Range(startLineNumber, startColumn - 1, endLineNumber, endColumn + 1);\n            }\n            if (startInsideSurrogatePair) {\n                // only expand range at the start\n                return new Range(startLineNumber, startColumn - 1, endLineNumber, endColumn);\n            }\n            // only expand range at the end\n            return new Range(startLineNumber, startColumn, endLineNumber, endColumn + 1);\n        }\n        return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n    }\n    modifyPosition(rawPosition, offset) {\n        this._assertNotDisposed();\n        const candidate = this.getOffsetAt(rawPosition) + offset;\n        return this.getPositionAt(Math.min(this._buffer.getLength(), Math.max(0, candidate)));\n    }\n    getFullModelRange() {\n        this._assertNotDisposed();\n        const lineCount = this.getLineCount();\n        return new Range(1, 1, lineCount, this.getLineMaxColumn(lineCount));\n    }\n    findMatchesLineByLine(searchRange, searchData, captureMatches, limitResultCount) {\n        return this._buffer.findMatchesLineByLine(searchRange, searchData, captureMatches, limitResultCount);\n    }\n    findMatches(searchString, rawSearchScope, isRegex, matchCase, wordSeparators, captureMatches, limitResultCount = LIMIT_FIND_COUNT) {\n        this._assertNotDisposed();\n        let searchRanges = null;\n        if (rawSearchScope !== null) {\n            if (!Array.isArray(rawSearchScope)) {\n                rawSearchScope = [rawSearchScope];\n            }\n            if (rawSearchScope.every((searchScope) => Range.isIRange(searchScope))) {\n                searchRanges = rawSearchScope.map((searchScope) => this.validateRange(searchScope));\n            }\n        }\n        if (searchRanges === null) {\n            searchRanges = [this.getFullModelRange()];\n        }\n        searchRanges = searchRanges.sort((d1, d2) => d1.startLineNumber - d2.startLineNumber || d1.startColumn - d2.startColumn);\n        const uniqueSearchRanges = [];\n        uniqueSearchRanges.push(searchRanges.reduce((prev, curr) => {\n            if (Range.areIntersecting(prev, curr)) {\n                return prev.plusRange(curr);\n            }\n            uniqueSearchRanges.push(prev);\n            return curr;\n        }));\n        let matchMapper;\n        if (!isRegex && searchString.indexOf('\\n') < 0) {\n            // not regex, not multi line\n            const searchParams = new SearchParams(searchString, isRegex, matchCase, wordSeparators);\n            const searchData = searchParams.parseSearchRequest();\n            if (!searchData) {\n                return [];\n            }\n            matchMapper = (searchRange) => this.findMatchesLineByLine(searchRange, searchData, captureMatches, limitResultCount);\n        }\n        else {\n            matchMapper = (searchRange) => TextModelSearch.findMatches(this, new SearchParams(searchString, isRegex, matchCase, wordSeparators), searchRange, captureMatches, limitResultCount);\n        }\n        return uniqueSearchRanges.map(matchMapper).reduce((arr, matches) => arr.concat(matches), []);\n    }\n    findNextMatch(searchString, rawSearchStart, isRegex, matchCase, wordSeparators, captureMatches) {\n        this._assertNotDisposed();\n        const searchStart = this.validatePosition(rawSearchStart);\n        if (!isRegex && searchString.indexOf('\\n') < 0) {\n            const searchParams = new SearchParams(searchString, isRegex, matchCase, wordSeparators);\n            const searchData = searchParams.parseSearchRequest();\n            if (!searchData) {\n                return null;\n            }\n            const lineCount = this.getLineCount();\n            let searchRange = new Range(searchStart.lineNumber, searchStart.column, lineCount, this.getLineMaxColumn(lineCount));\n            let ret = this.findMatchesLineByLine(searchRange, searchData, captureMatches, 1);\n            TextModelSearch.findNextMatch(this, new SearchParams(searchString, isRegex, matchCase, wordSeparators), searchStart, captureMatches);\n            if (ret.length > 0) {\n                return ret[0];\n            }\n            searchRange = new Range(1, 1, searchStart.lineNumber, this.getLineMaxColumn(searchStart.lineNumber));\n            ret = this.findMatchesLineByLine(searchRange, searchData, captureMatches, 1);\n            if (ret.length > 0) {\n                return ret[0];\n            }\n            return null;\n        }\n        return TextModelSearch.findNextMatch(this, new SearchParams(searchString, isRegex, matchCase, wordSeparators), searchStart, captureMatches);\n    }\n    findPreviousMatch(searchString, rawSearchStart, isRegex, matchCase, wordSeparators, captureMatches) {\n        this._assertNotDisposed();\n        const searchStart = this.validatePosition(rawSearchStart);\n        return TextModelSearch.findPreviousMatch(this, new SearchParams(searchString, isRegex, matchCase, wordSeparators), searchStart, captureMatches);\n    }\n    //#endregion\n    //#region Editing\n    pushStackElement() {\n        this._commandManager.pushStackElement();\n    }\n    popStackElement() {\n        this._commandManager.popStackElement();\n    }\n    pushEOL(eol) {\n        const currentEOL = (this.getEOL() === '\\n' ? 0 /* model.EndOfLineSequence.LF */ : 1 /* model.EndOfLineSequence.CRLF */);\n        if (currentEOL === eol) {\n            return;\n        }\n        try {\n            this._onDidChangeDecorations.beginDeferredEmit();\n            this._eventEmitter.beginDeferredEmit();\n            if (this._initialUndoRedoSnapshot === null) {\n                this._initialUndoRedoSnapshot = this._undoRedoService.createSnapshot(this.uri);\n            }\n            this._commandManager.pushEOL(eol);\n        }\n        finally {\n            this._eventEmitter.endDeferredEmit();\n            this._onDidChangeDecorations.endDeferredEmit();\n        }\n    }\n    _validateEditOperation(rawOperation) {\n        if (rawOperation instanceof model.ValidAnnotatedEditOperation) {\n            return rawOperation;\n        }\n        return new model.ValidAnnotatedEditOperation(rawOperation.identifier || null, this.validateRange(rawOperation.range), rawOperation.text, rawOperation.forceMoveMarkers || false, rawOperation.isAutoWhitespaceEdit || false, rawOperation._isTracked || false);\n    }\n    _validateEditOperations(rawOperations) {\n        const result = [];\n        for (let i = 0, len = rawOperations.length; i < len; i++) {\n            result[i] = this._validateEditOperation(rawOperations[i]);\n        }\n        return result;\n    }\n    pushEditOperations(beforeCursorState, editOperations, cursorStateComputer, group) {\n        try {\n            this._onDidChangeDecorations.beginDeferredEmit();\n            this._eventEmitter.beginDeferredEmit();\n            return this._pushEditOperations(beforeCursorState, this._validateEditOperations(editOperations), cursorStateComputer, group);\n        }\n        finally {\n            this._eventEmitter.endDeferredEmit();\n            this._onDidChangeDecorations.endDeferredEmit();\n        }\n    }\n    _pushEditOperations(beforeCursorState, editOperations, cursorStateComputer, group) {\n        if (this._options.trimAutoWhitespace && this._trimAutoWhitespaceLines) {\n            // Go through each saved line number and insert a trim whitespace edit\n            // if it is safe to do so (no conflicts with other edits).\n            const incomingEdits = editOperations.map((op) => {\n                return {\n                    range: this.validateRange(op.range),\n                    text: op.text\n                };\n            });\n            // Sometimes, auto-formatters change ranges automatically which can cause undesired auto whitespace trimming near the cursor\n            // We'll use the following heuristic: if the edits occur near the cursor, then it's ok to trim auto whitespace\n            let editsAreNearCursors = true;\n            if (beforeCursorState) {\n                for (let i = 0, len = beforeCursorState.length; i < len; i++) {\n                    const sel = beforeCursorState[i];\n                    let foundEditNearSel = false;\n                    for (let j = 0, lenJ = incomingEdits.length; j < lenJ; j++) {\n                        const editRange = incomingEdits[j].range;\n                        const selIsAbove = editRange.startLineNumber > sel.endLineNumber;\n                        const selIsBelow = sel.startLineNumber > editRange.endLineNumber;\n                        if (!selIsAbove && !selIsBelow) {\n                            foundEditNearSel = true;\n                            break;\n                        }\n                    }\n                    if (!foundEditNearSel) {\n                        editsAreNearCursors = false;\n                        break;\n                    }\n                }\n            }\n            if (editsAreNearCursors) {\n                for (let i = 0, len = this._trimAutoWhitespaceLines.length; i < len; i++) {\n                    const trimLineNumber = this._trimAutoWhitespaceLines[i];\n                    const maxLineColumn = this.getLineMaxColumn(trimLineNumber);\n                    let allowTrimLine = true;\n                    for (let j = 0, lenJ = incomingEdits.length; j < lenJ; j++) {\n                        const editRange = incomingEdits[j].range;\n                        const editText = incomingEdits[j].text;\n                        if (trimLineNumber < editRange.startLineNumber || trimLineNumber > editRange.endLineNumber) {\n                            // `trimLine` is completely outside this edit\n                            continue;\n                        }\n                        // At this point:\n                        //   editRange.startLineNumber <= trimLine <= editRange.endLineNumber\n                        if (trimLineNumber === editRange.startLineNumber && editRange.startColumn === maxLineColumn\n                            && editRange.isEmpty() && editText && editText.length > 0 && editText.charAt(0) === '\\n') {\n                            // This edit inserts a new line (and maybe other text) after `trimLine`\n                            continue;\n                        }\n                        if (trimLineNumber === editRange.startLineNumber && editRange.startColumn === 1\n                            && editRange.isEmpty() && editText && editText.length > 0 && editText.charAt(editText.length - 1) === '\\n') {\n                            // This edit inserts a new line (and maybe other text) before `trimLine`\n                            continue;\n                        }\n                        // Looks like we can't trim this line as it would interfere with an incoming edit\n                        allowTrimLine = false;\n                        break;\n                    }\n                    if (allowTrimLine) {\n                        const trimRange = new Range(trimLineNumber, 1, trimLineNumber, maxLineColumn);\n                        editOperations.push(new model.ValidAnnotatedEditOperation(null, trimRange, null, false, false, false));\n                    }\n                }\n            }\n            this._trimAutoWhitespaceLines = null;\n        }\n        if (this._initialUndoRedoSnapshot === null) {\n            this._initialUndoRedoSnapshot = this._undoRedoService.createSnapshot(this.uri);\n        }\n        return this._commandManager.pushEditOperation(beforeCursorState, editOperations, cursorStateComputer, group);\n    }\n    _applyUndo(changes, eol, resultingAlternativeVersionId, resultingSelection) {\n        const edits = changes.map((change) => {\n            const rangeStart = this.getPositionAt(change.newPosition);\n            const rangeEnd = this.getPositionAt(change.newEnd);\n            return {\n                range: new Range(rangeStart.lineNumber, rangeStart.column, rangeEnd.lineNumber, rangeEnd.column),\n                text: change.oldText\n            };\n        });\n        this._applyUndoRedoEdits(edits, eol, true, false, resultingAlternativeVersionId, resultingSelection);\n    }\n    _applyRedo(changes, eol, resultingAlternativeVersionId, resultingSelection) {\n        const edits = changes.map((change) => {\n            const rangeStart = this.getPositionAt(change.oldPosition);\n            const rangeEnd = this.getPositionAt(change.oldEnd);\n            return {\n                range: new Range(rangeStart.lineNumber, rangeStart.column, rangeEnd.lineNumber, rangeEnd.column),\n                text: change.newText\n            };\n        });\n        this._applyUndoRedoEdits(edits, eol, false, true, resultingAlternativeVersionId, resultingSelection);\n    }\n    _applyUndoRedoEdits(edits, eol, isUndoing, isRedoing, resultingAlternativeVersionId, resultingSelection) {\n        try {\n            this._onDidChangeDecorations.beginDeferredEmit();\n            this._eventEmitter.beginDeferredEmit();\n            this._isUndoing = isUndoing;\n            this._isRedoing = isRedoing;\n            this.applyEdits(edits, false);\n            this.setEOL(eol);\n            this._overwriteAlternativeVersionId(resultingAlternativeVersionId);\n        }\n        finally {\n            this._isUndoing = false;\n            this._isRedoing = false;\n            this._eventEmitter.endDeferredEmit(resultingSelection);\n            this._onDidChangeDecorations.endDeferredEmit();\n        }\n    }\n    applyEdits(rawOperations, computeUndoEdits = false) {\n        try {\n            this._onDidChangeDecorations.beginDeferredEmit();\n            this._eventEmitter.beginDeferredEmit();\n            const operations = this._validateEditOperations(rawOperations);\n            return this._doApplyEdits(operations, computeUndoEdits);\n        }\n        finally {\n            this._eventEmitter.endDeferredEmit();\n            this._onDidChangeDecorations.endDeferredEmit();\n        }\n    }\n    _doApplyEdits(rawOperations, computeUndoEdits) {\n        const oldLineCount = this._buffer.getLineCount();\n        const result = this._buffer.applyEdits(rawOperations, this._options.trimAutoWhitespace, computeUndoEdits);\n        const newLineCount = this._buffer.getLineCount();\n        const contentChanges = result.changes;\n        this._trimAutoWhitespaceLines = result.trimAutoWhitespaceLineNumbers;\n        if (contentChanges.length !== 0) {\n            // We do a first pass to update decorations\n            // because we want to read decorations in the second pass\n            // where we will emit content change events\n            // and we want to read the final decorations\n            for (let i = 0, len = contentChanges.length; i < len; i++) {\n                const change = contentChanges[i];\n                this._decorationsTree.acceptReplace(change.rangeOffset, change.rangeLength, change.text.length, change.forceMoveMarkers);\n            }\n            const rawContentChanges = [];\n            this._increaseVersionId();\n            let lineCount = oldLineCount;\n            for (let i = 0, len = contentChanges.length; i < len; i++) {\n                const change = contentChanges[i];\n                const [eolCount] = countEOL(change.text);\n                this._onDidChangeDecorations.fire();\n                const startLineNumber = change.range.startLineNumber;\n                const endLineNumber = change.range.endLineNumber;\n                const deletingLinesCnt = endLineNumber - startLineNumber;\n                const insertingLinesCnt = eolCount;\n                const editingLinesCnt = Math.min(deletingLinesCnt, insertingLinesCnt);\n                const changeLineCountDelta = (insertingLinesCnt - deletingLinesCnt);\n                const currentEditStartLineNumber = newLineCount - lineCount - changeLineCountDelta + startLineNumber;\n                const firstEditLineNumber = currentEditStartLineNumber;\n                const lastInsertedLineNumber = currentEditStartLineNumber + insertingLinesCnt;\n                const decorationsWithInjectedTextInEditedRange = this._decorationsTree.getInjectedTextInInterval(this, this.getOffsetAt(new Position(firstEditLineNumber, 1)), this.getOffsetAt(new Position(lastInsertedLineNumber, this.getLineMaxColumn(lastInsertedLineNumber))), 0);\n                const injectedTextInEditedRange = LineInjectedText.fromDecorations(decorationsWithInjectedTextInEditedRange);\n                const injectedTextInEditedRangeQueue = new ArrayQueue(injectedTextInEditedRange);\n                for (let j = editingLinesCnt; j >= 0; j--) {\n                    const editLineNumber = startLineNumber + j;\n                    const currentEditLineNumber = currentEditStartLineNumber + j;\n                    injectedTextInEditedRangeQueue.takeFromEndWhile(r => r.lineNumber > currentEditLineNumber);\n                    const decorationsInCurrentLine = injectedTextInEditedRangeQueue.takeFromEndWhile(r => r.lineNumber === currentEditLineNumber);\n                    rawContentChanges.push(new ModelRawLineChanged(editLineNumber, this.getLineContent(currentEditLineNumber), decorationsInCurrentLine));\n                }\n                if (editingLinesCnt < deletingLinesCnt) {\n                    // Must delete some lines\n                    const spliceStartLineNumber = startLineNumber + editingLinesCnt;\n                    rawContentChanges.push(new ModelRawLinesDeleted(spliceStartLineNumber + 1, endLineNumber));\n                }\n                if (editingLinesCnt < insertingLinesCnt) {\n                    const injectedTextInEditedRangeQueue = new ArrayQueue(injectedTextInEditedRange);\n                    // Must insert some lines\n                    const spliceLineNumber = startLineNumber + editingLinesCnt;\n                    const cnt = insertingLinesCnt - editingLinesCnt;\n                    const fromLineNumber = newLineCount - lineCount - cnt + spliceLineNumber + 1;\n                    const injectedTexts = [];\n                    const newLines = [];\n                    for (let i = 0; i < cnt; i++) {\n                        const lineNumber = fromLineNumber + i;\n                        newLines[i] = this.getLineContent(lineNumber);\n                        injectedTextInEditedRangeQueue.takeWhile(r => r.lineNumber < lineNumber);\n                        injectedTexts[i] = injectedTextInEditedRangeQueue.takeWhile(r => r.lineNumber === lineNumber);\n                    }\n                    rawContentChanges.push(new ModelRawLinesInserted(spliceLineNumber + 1, startLineNumber + insertingLinesCnt, newLines, injectedTexts));\n                }\n                lineCount += changeLineCountDelta;\n            }\n            this._emitContentChangedEvent(new ModelRawContentChangedEvent(rawContentChanges, this.getVersionId(), this._isUndoing, this._isRedoing), {\n                changes: contentChanges,\n                eol: this._buffer.getEOL(),\n                isEolChange: false,\n                versionId: this.getVersionId(),\n                isUndoing: this._isUndoing,\n                isRedoing: this._isRedoing,\n                isFlush: false\n            });\n        }\n        return (result.reverseEdits === null ? undefined : result.reverseEdits);\n    }\n    undo() {\n        return this._undoRedoService.undo(this.uri);\n    }\n    canUndo() {\n        return this._undoRedoService.canUndo(this.uri);\n    }\n    redo() {\n        return this._undoRedoService.redo(this.uri);\n    }\n    canRedo() {\n        return this._undoRedoService.canRedo(this.uri);\n    }\n    //#endregion\n    //#region Decorations\n    handleBeforeFireDecorationsChangedEvent(affectedInjectedTextLines) {\n        // This is called before the decoration changed event is fired.\n        if (affectedInjectedTextLines === null || affectedInjectedTextLines.size === 0) {\n            return;\n        }\n        const affectedLines = Array.from(affectedInjectedTextLines);\n        const lineChangeEvents = affectedLines.map(lineNumber => new ModelRawLineChanged(lineNumber, this.getLineContent(lineNumber), this._getInjectedTextInLine(lineNumber)));\n        this._onDidChangeInjectedText.fire(new ModelInjectedTextChangedEvent(lineChangeEvents));\n    }\n    changeDecorations(callback, ownerId = 0) {\n        this._assertNotDisposed();\n        try {\n            this._onDidChangeDecorations.beginDeferredEmit();\n            return this._changeDecorations(ownerId, callback);\n        }\n        finally {\n            this._onDidChangeDecorations.endDeferredEmit();\n        }\n    }\n    _changeDecorations(ownerId, callback) {\n        const changeAccessor = {\n            addDecoration: (range, options) => {\n                return this._deltaDecorationsImpl(ownerId, [], [{ range: range, options: options }])[0];\n            },\n            changeDecoration: (id, newRange) => {\n                this._changeDecorationImpl(id, newRange);\n            },\n            changeDecorationOptions: (id, options) => {\n                this._changeDecorationOptionsImpl(id, _normalizeOptions(options));\n            },\n            removeDecoration: (id) => {\n                this._deltaDecorationsImpl(ownerId, [id], []);\n            },\n            deltaDecorations: (oldDecorations, newDecorations) => {\n                if (oldDecorations.length === 0 && newDecorations.length === 0) {\n                    // nothing to do\n                    return [];\n                }\n                return this._deltaDecorationsImpl(ownerId, oldDecorations, newDecorations);\n            }\n        };\n        let result = null;\n        try {\n            result = callback(changeAccessor);\n        }\n        catch (e) {\n            onUnexpectedError(e);\n        }\n        // Invalidate change accessor\n        changeAccessor.addDecoration = invalidFunc;\n        changeAccessor.changeDecoration = invalidFunc;\n        changeAccessor.changeDecorationOptions = invalidFunc;\n        changeAccessor.removeDecoration = invalidFunc;\n        changeAccessor.deltaDecorations = invalidFunc;\n        return result;\n    }\n    deltaDecorations(oldDecorations, newDecorations, ownerId = 0) {\n        this._assertNotDisposed();\n        if (!oldDecorations) {\n            oldDecorations = [];\n        }\n        if (oldDecorations.length === 0 && newDecorations.length === 0) {\n            // nothing to do\n            return [];\n        }\n        try {\n            this._deltaDecorationCallCnt++;\n            if (this._deltaDecorationCallCnt > 1) {\n                console.warn(`Invoking deltaDecorations recursively could lead to leaking decorations.`);\n                onUnexpectedError(new Error(`Invoking deltaDecorations recursively could lead to leaking decorations.`));\n            }\n            this._onDidChangeDecorations.beginDeferredEmit();\n            return this._deltaDecorationsImpl(ownerId, oldDecorations, newDecorations);\n        }\n        finally {\n            this._onDidChangeDecorations.endDeferredEmit();\n            this._deltaDecorationCallCnt--;\n        }\n    }\n    _getTrackedRange(id) {\n        return this.getDecorationRange(id);\n    }\n    _setTrackedRange(id, newRange, newStickiness) {\n        const node = (id ? this._decorations[id] : null);\n        if (!node) {\n            if (!newRange) {\n                // node doesn't exist, the request is to delete => nothing to do\n                return null;\n            }\n            // node doesn't exist, the request is to set => add the tracked range\n            return this._deltaDecorationsImpl(0, [], [{ range: newRange, options: TRACKED_RANGE_OPTIONS[newStickiness] }], true)[0];\n        }\n        if (!newRange) {\n            // node exists, the request is to delete => delete node\n            this._decorationsTree.delete(node);\n            delete this._decorations[node.id];\n            return null;\n        }\n        // node exists, the request is to set => change the tracked range and its options\n        const range = this._validateRangeRelaxedNoAllocations(newRange);\n        const startOffset = this._buffer.getOffsetAt(range.startLineNumber, range.startColumn);\n        const endOffset = this._buffer.getOffsetAt(range.endLineNumber, range.endColumn);\n        this._decorationsTree.delete(node);\n        node.reset(this.getVersionId(), startOffset, endOffset, range);\n        node.setOptions(TRACKED_RANGE_OPTIONS[newStickiness]);\n        this._decorationsTree.insert(node);\n        return node.id;\n    }\n    removeAllDecorationsWithOwnerId(ownerId) {\n        if (this._isDisposed) {\n            return;\n        }\n        const nodes = this._decorationsTree.collectNodesFromOwner(ownerId);\n        for (let i = 0, len = nodes.length; i < len; i++) {\n            const node = nodes[i];\n            this._decorationsTree.delete(node);\n            delete this._decorations[node.id];\n        }\n    }\n    getDecorationOptions(decorationId) {\n        const node = this._decorations[decorationId];\n        if (!node) {\n            return null;\n        }\n        return node.options;\n    }\n    getDecorationRange(decorationId) {\n        const node = this._decorations[decorationId];\n        if (!node) {\n            return null;\n        }\n        return this._decorationsTree.getNodeRange(this, node);\n    }\n    getLineDecorations(lineNumber, ownerId = 0, filterOutValidation = false) {\n        if (lineNumber < 1 || lineNumber > this.getLineCount()) {\n            return [];\n        }\n        return this.getLinesDecorations(lineNumber, lineNumber, ownerId, filterOutValidation);\n    }\n    getLinesDecorations(_startLineNumber, _endLineNumber, ownerId = 0, filterOutValidation = false, onlyMarginDecorations = false) {\n        const lineCount = this.getLineCount();\n        const startLineNumber = Math.min(lineCount, Math.max(1, _startLineNumber));\n        const endLineNumber = Math.min(lineCount, Math.max(1, _endLineNumber));\n        const endColumn = this.getLineMaxColumn(endLineNumber);\n        const range = new Range(startLineNumber, 1, endLineNumber, endColumn);\n        const decorations = this._getDecorationsInRange(range, ownerId, filterOutValidation, onlyMarginDecorations);\n        pushMany(decorations, this._decorationProvider.getDecorationsInRange(range, ownerId, filterOutValidation));\n        return decorations;\n    }\n    getDecorationsInRange(range, ownerId = 0, filterOutValidation = false, onlyMinimapDecorations = false, onlyMarginDecorations = false) {\n        const validatedRange = this.validateRange(range);\n        const decorations = this._getDecorationsInRange(validatedRange, ownerId, filterOutValidation, onlyMarginDecorations);\n        pushMany(decorations, this._decorationProvider.getDecorationsInRange(validatedRange, ownerId, filterOutValidation, onlyMinimapDecorations));\n        return decorations;\n    }\n    getOverviewRulerDecorations(ownerId = 0, filterOutValidation = false) {\n        return this._decorationsTree.getAll(this, ownerId, filterOutValidation, true, false);\n    }\n    getInjectedTextDecorations(ownerId = 0) {\n        return this._decorationsTree.getAllInjectedText(this, ownerId);\n    }\n    _getInjectedTextInLine(lineNumber) {\n        const startOffset = this._buffer.getOffsetAt(lineNumber, 1);\n        const endOffset = startOffset + this._buffer.getLineLength(lineNumber);\n        const result = this._decorationsTree.getInjectedTextInInterval(this, startOffset, endOffset, 0);\n        return LineInjectedText.fromDecorations(result).filter(t => t.lineNumber === lineNumber);\n    }\n    getAllDecorations(ownerId = 0, filterOutValidation = false) {\n        let result = this._decorationsTree.getAll(this, ownerId, filterOutValidation, false, false);\n        result = result.concat(this._decorationProvider.getAllDecorations(ownerId, filterOutValidation));\n        return result;\n    }\n    getAllMarginDecorations(ownerId = 0) {\n        return this._decorationsTree.getAll(this, ownerId, false, false, true);\n    }\n    _getDecorationsInRange(filterRange, filterOwnerId, filterOutValidation, onlyMarginDecorations) {\n        const startOffset = this._buffer.getOffsetAt(filterRange.startLineNumber, filterRange.startColumn);\n        const endOffset = this._buffer.getOffsetAt(filterRange.endLineNumber, filterRange.endColumn);\n        return this._decorationsTree.getAllInInterval(this, startOffset, endOffset, filterOwnerId, filterOutValidation, onlyMarginDecorations);\n    }\n    getRangeAt(start, end) {\n        return this._buffer.getRangeAt(start, end - start);\n    }\n    _changeDecorationImpl(decorationId, _range) {\n        const node = this._decorations[decorationId];\n        if (!node) {\n            return;\n        }\n        if (node.options.after) {\n            const oldRange = this.getDecorationRange(decorationId);\n            this._onDidChangeDecorations.recordLineAffectedByInjectedText(oldRange.endLineNumber);\n        }\n        if (node.options.before) {\n            const oldRange = this.getDecorationRange(decorationId);\n            this._onDidChangeDecorations.recordLineAffectedByInjectedText(oldRange.startLineNumber);\n        }\n        const range = this._validateRangeRelaxedNoAllocations(_range);\n        const startOffset = this._buffer.getOffsetAt(range.startLineNumber, range.startColumn);\n        const endOffset = this._buffer.getOffsetAt(range.endLineNumber, range.endColumn);\n        this._decorationsTree.delete(node);\n        node.reset(this.getVersionId(), startOffset, endOffset, range);\n        this._decorationsTree.insert(node);\n        this._onDidChangeDecorations.checkAffectedAndFire(node.options);\n        if (node.options.after) {\n            this._onDidChangeDecorations.recordLineAffectedByInjectedText(range.endLineNumber);\n        }\n        if (node.options.before) {\n            this._onDidChangeDecorations.recordLineAffectedByInjectedText(range.startLineNumber);\n        }\n    }\n    _changeDecorationOptionsImpl(decorationId, options) {\n        const node = this._decorations[decorationId];\n        if (!node) {\n            return;\n        }\n        const nodeWasInOverviewRuler = (node.options.overviewRuler && node.options.overviewRuler.color ? true : false);\n        const nodeIsInOverviewRuler = (options.overviewRuler && options.overviewRuler.color ? true : false);\n        this._onDidChangeDecorations.checkAffectedAndFire(node.options);\n        this._onDidChangeDecorations.checkAffectedAndFire(options);\n        if (node.options.after || options.after) {\n            const nodeRange = this._decorationsTree.getNodeRange(this, node);\n            this._onDidChangeDecorations.recordLineAffectedByInjectedText(nodeRange.endLineNumber);\n        }\n        if (node.options.before || options.before) {\n            const nodeRange = this._decorationsTree.getNodeRange(this, node);\n            this._onDidChangeDecorations.recordLineAffectedByInjectedText(nodeRange.startLineNumber);\n        }\n        const movedInOverviewRuler = nodeWasInOverviewRuler !== nodeIsInOverviewRuler;\n        const changedWhetherInjectedText = isOptionsInjectedText(options) !== isNodeInjectedText(node);\n        if (movedInOverviewRuler || changedWhetherInjectedText) {\n            this._decorationsTree.delete(node);\n            node.setOptions(options);\n            this._decorationsTree.insert(node);\n        }\n        else {\n            node.setOptions(options);\n        }\n    }\n    _deltaDecorationsImpl(ownerId, oldDecorationsIds, newDecorations, suppressEvents = false) {\n        const versionId = this.getVersionId();\n        const oldDecorationsLen = oldDecorationsIds.length;\n        let oldDecorationIndex = 0;\n        const newDecorationsLen = newDecorations.length;\n        let newDecorationIndex = 0;\n        this._onDidChangeDecorations.beginDeferredEmit();\n        try {\n            const result = new Array(newDecorationsLen);\n            while (oldDecorationIndex < oldDecorationsLen || newDecorationIndex < newDecorationsLen) {\n                let node = null;\n                if (oldDecorationIndex < oldDecorationsLen) {\n                    // (1) get ourselves an old node\n                    do {\n                        node = this._decorations[oldDecorationsIds[oldDecorationIndex++]];\n                    } while (!node && oldDecorationIndex < oldDecorationsLen);\n                    // (2) remove the node from the tree (if it exists)\n                    if (node) {\n                        if (node.options.after) {\n                            const nodeRange = this._decorationsTree.getNodeRange(this, node);\n                            this._onDidChangeDecorations.recordLineAffectedByInjectedText(nodeRange.endLineNumber);\n                        }\n                        if (node.options.before) {\n                            const nodeRange = this._decorationsTree.getNodeRange(this, node);\n                            this._onDidChangeDecorations.recordLineAffectedByInjectedText(nodeRange.startLineNumber);\n                        }\n                        this._decorationsTree.delete(node);\n                        if (!suppressEvents) {\n                            this._onDidChangeDecorations.checkAffectedAndFire(node.options);\n                        }\n                    }\n                }\n                if (newDecorationIndex < newDecorationsLen) {\n                    // (3) create a new node if necessary\n                    if (!node) {\n                        const internalDecorationId = (++this._lastDecorationId);\n                        const decorationId = `${this._instanceId};${internalDecorationId}`;\n                        node = new IntervalNode(decorationId, 0, 0);\n                        this._decorations[decorationId] = node;\n                    }\n                    // (4) initialize node\n                    const newDecoration = newDecorations[newDecorationIndex];\n                    const range = this._validateRangeRelaxedNoAllocations(newDecoration.range);\n                    const options = _normalizeOptions(newDecoration.options);\n                    const startOffset = this._buffer.getOffsetAt(range.startLineNumber, range.startColumn);\n                    const endOffset = this._buffer.getOffsetAt(range.endLineNumber, range.endColumn);\n                    node.ownerId = ownerId;\n                    node.reset(versionId, startOffset, endOffset, range);\n                    node.setOptions(options);\n                    if (node.options.after) {\n                        this._onDidChangeDecorations.recordLineAffectedByInjectedText(range.endLineNumber);\n                    }\n                    if (node.options.before) {\n                        this._onDidChangeDecorations.recordLineAffectedByInjectedText(range.startLineNumber);\n                    }\n                    if (!suppressEvents) {\n                        this._onDidChangeDecorations.checkAffectedAndFire(options);\n                    }\n                    this._decorationsTree.insert(node);\n                    result[newDecorationIndex] = node.id;\n                    newDecorationIndex++;\n                }\n                else {\n                    if (node) {\n                        delete this._decorations[node.id];\n                    }\n                }\n            }\n            return result;\n        }\n        finally {\n            this._onDidChangeDecorations.endDeferredEmit();\n        }\n    }\n    //#endregion\n    //#region Tokenization\n    // TODO move them to the tokenization part.\n    getLanguageId() {\n        return this.tokenization.getLanguageId();\n    }\n    setLanguage(languageIdOrSelection, source) {\n        if (typeof languageIdOrSelection === 'string') {\n            this._languageSelectionListener.clear();\n            this._setLanguage(languageIdOrSelection, source);\n        }\n        else {\n            this._languageSelectionListener.value = languageIdOrSelection.onDidChange(() => this._setLanguage(languageIdOrSelection.languageId, source));\n            this._setLanguage(languageIdOrSelection.languageId, source);\n        }\n    }\n    _setLanguage(languageId, source) {\n        this.tokenization.setLanguageId(languageId, source);\n        this._languageService.requestRichLanguageFeatures(languageId);\n    }\n    getLanguageIdAtPosition(lineNumber, column) {\n        return this.tokenization.getLanguageIdAtPosition(lineNumber, column);\n    }\n    getWordAtPosition(position) {\n        return this._tokenizationTextModelPart.getWordAtPosition(position);\n    }\n    getWordUntilPosition(position) {\n        return this._tokenizationTextModelPart.getWordUntilPosition(position);\n    }\n    //#endregion\n    normalizePosition(position, affinity) {\n        return position;\n    }\n    /**\n     * Gets the column at which indentation stops at a given line.\n     * @internal\n    */\n    getLineIndentColumn(lineNumber) {\n        // Columns start with 1.\n        return indentOfLine(this.getLineContent(lineNumber)) + 1;\n    }\n};\nTextModel = TextModel_1 = __decorate([\n    __param(4, IUndoRedoService),\n    __param(5, ILanguageService),\n    __param(6, ILanguageConfigurationService),\n    __param(7, IInstantiationService)\n], TextModel);\nexport { TextModel };\nexport function indentOfLine(line) {\n    let indent = 0;\n    for (const c of line) {\n        if (c === ' ' || c === '\\t') {\n            indent++;\n        }\n        else {\n            break;\n        }\n    }\n    return indent;\n}\n//#region Decorations\nfunction isNodeInOverviewRuler(node) {\n    return (node.options.overviewRuler && node.options.overviewRuler.color ? true : false);\n}\nfunction isOptionsInjectedText(options) {\n    return !!options.after || !!options.before;\n}\nfunction isNodeInjectedText(node) {\n    return !!node.options.after || !!node.options.before;\n}\nclass DecorationsTrees {\n    constructor() {\n        this._decorationsTree0 = new IntervalTree();\n        this._decorationsTree1 = new IntervalTree();\n        this._injectedTextDecorationsTree = new IntervalTree();\n    }\n    ensureAllNodesHaveRanges(host) {\n        this.getAll(host, 0, false, false, false);\n    }\n    _ensureNodesHaveRanges(host, nodes) {\n        for (const node of nodes) {\n            if (node.range === null) {\n                node.range = host.getRangeAt(node.cachedAbsoluteStart, node.cachedAbsoluteEnd);\n            }\n        }\n        return nodes;\n    }\n    getAllInInterval(host, start, end, filterOwnerId, filterOutValidation, onlyMarginDecorations) {\n        const versionId = host.getVersionId();\n        const result = this._intervalSearch(start, end, filterOwnerId, filterOutValidation, versionId, onlyMarginDecorations);\n        return this._ensureNodesHaveRanges(host, result);\n    }\n    _intervalSearch(start, end, filterOwnerId, filterOutValidation, cachedVersionId, onlyMarginDecorations) {\n        const r0 = this._decorationsTree0.intervalSearch(start, end, filterOwnerId, filterOutValidation, cachedVersionId, onlyMarginDecorations);\n        const r1 = this._decorationsTree1.intervalSearch(start, end, filterOwnerId, filterOutValidation, cachedVersionId, onlyMarginDecorations);\n        const r2 = this._injectedTextDecorationsTree.intervalSearch(start, end, filterOwnerId, filterOutValidation, cachedVersionId, onlyMarginDecorations);\n        return r0.concat(r1).concat(r2);\n    }\n    getInjectedTextInInterval(host, start, end, filterOwnerId) {\n        const versionId = host.getVersionId();\n        const result = this._injectedTextDecorationsTree.intervalSearch(start, end, filterOwnerId, false, versionId, false);\n        return this._ensureNodesHaveRanges(host, result).filter((i) => i.options.showIfCollapsed || !i.range.isEmpty());\n    }\n    getAllInjectedText(host, filterOwnerId) {\n        const versionId = host.getVersionId();\n        const result = this._injectedTextDecorationsTree.search(filterOwnerId, false, versionId, false);\n        return this._ensureNodesHaveRanges(host, result).filter((i) => i.options.showIfCollapsed || !i.range.isEmpty());\n    }\n    getAll(host, filterOwnerId, filterOutValidation, overviewRulerOnly, onlyMarginDecorations) {\n        const versionId = host.getVersionId();\n        const result = this._search(filterOwnerId, filterOutValidation, overviewRulerOnly, versionId, onlyMarginDecorations);\n        return this._ensureNodesHaveRanges(host, result);\n    }\n    _search(filterOwnerId, filterOutValidation, overviewRulerOnly, cachedVersionId, onlyMarginDecorations) {\n        if (overviewRulerOnly) {\n            return this._decorationsTree1.search(filterOwnerId, filterOutValidation, cachedVersionId, onlyMarginDecorations);\n        }\n        else {\n            const r0 = this._decorationsTree0.search(filterOwnerId, filterOutValidation, cachedVersionId, onlyMarginDecorations);\n            const r1 = this._decorationsTree1.search(filterOwnerId, filterOutValidation, cachedVersionId, onlyMarginDecorations);\n            const r2 = this._injectedTextDecorationsTree.search(filterOwnerId, filterOutValidation, cachedVersionId, onlyMarginDecorations);\n            return r0.concat(r1).concat(r2);\n        }\n    }\n    collectNodesFromOwner(ownerId) {\n        const r0 = this._decorationsTree0.collectNodesFromOwner(ownerId);\n        const r1 = this._decorationsTree1.collectNodesFromOwner(ownerId);\n        const r2 = this._injectedTextDecorationsTree.collectNodesFromOwner(ownerId);\n        return r0.concat(r1).concat(r2);\n    }\n    collectNodesPostOrder() {\n        const r0 = this._decorationsTree0.collectNodesPostOrder();\n        const r1 = this._decorationsTree1.collectNodesPostOrder();\n        const r2 = this._injectedTextDecorationsTree.collectNodesPostOrder();\n        return r0.concat(r1).concat(r2);\n    }\n    insert(node) {\n        if (isNodeInjectedText(node)) {\n            this._injectedTextDecorationsTree.insert(node);\n        }\n        else if (isNodeInOverviewRuler(node)) {\n            this._decorationsTree1.insert(node);\n        }\n        else {\n            this._decorationsTree0.insert(node);\n        }\n    }\n    delete(node) {\n        if (isNodeInjectedText(node)) {\n            this._injectedTextDecorationsTree.delete(node);\n        }\n        else if (isNodeInOverviewRuler(node)) {\n            this._decorationsTree1.delete(node);\n        }\n        else {\n            this._decorationsTree0.delete(node);\n        }\n    }\n    getNodeRange(host, node) {\n        const versionId = host.getVersionId();\n        if (node.cachedVersionId !== versionId) {\n            this._resolveNode(node, versionId);\n        }\n        if (node.range === null) {\n            node.range = host.getRangeAt(node.cachedAbsoluteStart, node.cachedAbsoluteEnd);\n        }\n        return node.range;\n    }\n    _resolveNode(node, cachedVersionId) {\n        if (isNodeInjectedText(node)) {\n            this._injectedTextDecorationsTree.resolveNode(node, cachedVersionId);\n        }\n        else if (isNodeInOverviewRuler(node)) {\n            this._decorationsTree1.resolveNode(node, cachedVersionId);\n        }\n        else {\n            this._decorationsTree0.resolveNode(node, cachedVersionId);\n        }\n    }\n    acceptReplace(offset, length, textLength, forceMoveMarkers) {\n        this._decorationsTree0.acceptReplace(offset, length, textLength, forceMoveMarkers);\n        this._decorationsTree1.acceptReplace(offset, length, textLength, forceMoveMarkers);\n        this._injectedTextDecorationsTree.acceptReplace(offset, length, textLength, forceMoveMarkers);\n    }\n}\nfunction cleanClassName(className) {\n    return className.replace(/[^a-z0-9\\-_]/gi, ' ');\n}\nclass DecorationOptions {\n    constructor(options) {\n        this.color = options.color || '';\n        this.darkColor = options.darkColor || '';\n    }\n}\nexport class ModelDecorationOverviewRulerOptions extends DecorationOptions {\n    constructor(options) {\n        super(options);\n        this._resolvedColor = null;\n        this.position = (typeof options.position === 'number' ? options.position : model.OverviewRulerLane.Center);\n    }\n    getColor(theme) {\n        if (!this._resolvedColor) {\n            if (theme.type !== 'light' && this.darkColor) {\n                this._resolvedColor = this._resolveColor(this.darkColor, theme);\n            }\n            else {\n                this._resolvedColor = this._resolveColor(this.color, theme);\n            }\n        }\n        return this._resolvedColor;\n    }\n    invalidateCachedColor() {\n        this._resolvedColor = null;\n    }\n    _resolveColor(color, theme) {\n        if (typeof color === 'string') {\n            return color;\n        }\n        const c = color ? theme.getColor(color.id) : null;\n        if (!c) {\n            return '';\n        }\n        return c.toString();\n    }\n}\nexport class ModelDecorationGlyphMarginOptions {\n    constructor(options) {\n        this.position = options?.position ?? model.GlyphMarginLane.Center;\n        this.persistLane = options?.persistLane;\n    }\n}\nexport class ModelDecorationMinimapOptions extends DecorationOptions {\n    constructor(options) {\n        super(options);\n        this.position = options.position;\n        this.sectionHeaderStyle = options.sectionHeaderStyle ?? null;\n        this.sectionHeaderText = options.sectionHeaderText ?? null;\n    }\n    getColor(theme) {\n        if (!this._resolvedColor) {\n            if (theme.type !== 'light' && this.darkColor) {\n                this._resolvedColor = this._resolveColor(this.darkColor, theme);\n            }\n            else {\n                this._resolvedColor = this._resolveColor(this.color, theme);\n            }\n        }\n        return this._resolvedColor;\n    }\n    invalidateCachedColor() {\n        this._resolvedColor = undefined;\n    }\n    _resolveColor(color, theme) {\n        if (typeof color === 'string') {\n            return Color.fromHex(color);\n        }\n        return theme.getColor(color.id);\n    }\n}\nexport class ModelDecorationInjectedTextOptions {\n    static from(options) {\n        if (options instanceof ModelDecorationInjectedTextOptions) {\n            return options;\n        }\n        return new ModelDecorationInjectedTextOptions(options);\n    }\n    constructor(options) {\n        this.content = options.content || '';\n        this.inlineClassName = options.inlineClassName || null;\n        this.inlineClassNameAffectsLetterSpacing = options.inlineClassNameAffectsLetterSpacing || false;\n        this.attachedData = options.attachedData || null;\n        this.cursorStops = options.cursorStops || null;\n    }\n}\nexport class ModelDecorationOptions {\n    static register(options) {\n        return new ModelDecorationOptions(options);\n    }\n    static createDynamic(options) {\n        return new ModelDecorationOptions(options);\n    }\n    constructor(options) {\n        this.description = options.description;\n        this.blockClassName = options.blockClassName ? cleanClassName(options.blockClassName) : null;\n        this.blockDoesNotCollapse = options.blockDoesNotCollapse ?? null;\n        this.blockIsAfterEnd = options.blockIsAfterEnd ?? null;\n        this.blockPadding = options.blockPadding ?? null;\n        this.stickiness = options.stickiness || 0 /* model.TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */;\n        this.zIndex = options.zIndex || 0;\n        this.className = options.className ? cleanClassName(options.className) : null;\n        this.shouldFillLineOnLineBreak = options.shouldFillLineOnLineBreak ?? null;\n        this.hoverMessage = options.hoverMessage || null;\n        this.glyphMarginHoverMessage = options.glyphMarginHoverMessage || null;\n        this.lineNumberHoverMessage = options.lineNumberHoverMessage || null;\n        this.isWholeLine = options.isWholeLine || false;\n        this.showIfCollapsed = options.showIfCollapsed || false;\n        this.collapseOnReplaceEdit = options.collapseOnReplaceEdit || false;\n        this.overviewRuler = options.overviewRuler ? new ModelDecorationOverviewRulerOptions(options.overviewRuler) : null;\n        this.minimap = options.minimap ? new ModelDecorationMinimapOptions(options.minimap) : null;\n        this.glyphMargin = options.glyphMarginClassName ? new ModelDecorationGlyphMarginOptions(options.glyphMargin) : null;\n        this.glyphMarginClassName = options.glyphMarginClassName ? cleanClassName(options.glyphMarginClassName) : null;\n        this.linesDecorationsClassName = options.linesDecorationsClassName ? cleanClassName(options.linesDecorationsClassName) : null;\n        this.lineNumberClassName = options.lineNumberClassName ? cleanClassName(options.lineNumberClassName) : null;\n        this.linesDecorationsTooltip = options.linesDecorationsTooltip ? strings.htmlAttributeEncodeValue(options.linesDecorationsTooltip) : null;\n        this.firstLineDecorationClassName = options.firstLineDecorationClassName ? cleanClassName(options.firstLineDecorationClassName) : null;\n        this.marginClassName = options.marginClassName ? cleanClassName(options.marginClassName) : null;\n        this.inlineClassName = options.inlineClassName ? cleanClassName(options.inlineClassName) : null;\n        this.inlineClassNameAffectsLetterSpacing = options.inlineClassNameAffectsLetterSpacing || false;\n        this.beforeContentClassName = options.beforeContentClassName ? cleanClassName(options.beforeContentClassName) : null;\n        this.afterContentClassName = options.afterContentClassName ? cleanClassName(options.afterContentClassName) : null;\n        this.after = options.after ? ModelDecorationInjectedTextOptions.from(options.after) : null;\n        this.before = options.before ? ModelDecorationInjectedTextOptions.from(options.before) : null;\n        this.hideInCommentTokens = options.hideInCommentTokens ?? false;\n        this.hideInStringTokens = options.hideInStringTokens ?? false;\n    }\n}\nModelDecorationOptions.EMPTY = ModelDecorationOptions.register({ description: 'empty' });\n/**\n * The order carefully matches the values of the enum.\n */\nconst TRACKED_RANGE_OPTIONS = [\n    ModelDecorationOptions.register({ description: 'tracked-range-always-grows-when-typing-at-edges', stickiness: 0 /* model.TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */ }),\n    ModelDecorationOptions.register({ description: 'tracked-range-never-grows-when-typing-at-edges', stickiness: 1 /* model.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */ }),\n    ModelDecorationOptions.register({ description: 'tracked-range-grows-only-when-typing-before', stickiness: 2 /* model.TrackedRangeStickiness.GrowsOnlyWhenTypingBefore */ }),\n    ModelDecorationOptions.register({ description: 'tracked-range-grows-only-when-typing-after', stickiness: 3 /* model.TrackedRangeStickiness.GrowsOnlyWhenTypingAfter */ }),\n];\nfunction _normalizeOptions(options) {\n    if (options instanceof ModelDecorationOptions) {\n        return options;\n    }\n    return ModelDecorationOptions.createDynamic(options);\n}\nclass DidChangeDecorationsEmitter extends Disposable {\n    constructor(handleBeforeFire) {\n        super();\n        this.handleBeforeFire = handleBeforeFire;\n        this._actual = this._register(new Emitter());\n        this.event = this._actual.event;\n        this._affectedInjectedTextLines = null;\n        this._deferredCnt = 0;\n        this._shouldFireDeferred = false;\n        this._affectsMinimap = false;\n        this._affectsOverviewRuler = false;\n        this._affectsGlyphMargin = false;\n        this._affectsLineNumber = false;\n    }\n    beginDeferredEmit() {\n        this._deferredCnt++;\n    }\n    endDeferredEmit() {\n        this._deferredCnt--;\n        if (this._deferredCnt === 0) {\n            if (this._shouldFireDeferred) {\n                this.doFire();\n            }\n            this._affectedInjectedTextLines?.clear();\n            this._affectedInjectedTextLines = null;\n        }\n    }\n    recordLineAffectedByInjectedText(lineNumber) {\n        if (!this._affectedInjectedTextLines) {\n            this._affectedInjectedTextLines = new Set();\n        }\n        this._affectedInjectedTextLines.add(lineNumber);\n    }\n    checkAffectedAndFire(options) {\n        this._affectsMinimap ||= !!options.minimap?.position;\n        this._affectsOverviewRuler ||= !!options.overviewRuler?.color;\n        this._affectsGlyphMargin ||= !!options.glyphMarginClassName;\n        this._affectsLineNumber ||= !!options.lineNumberClassName;\n        this.tryFire();\n    }\n    fire() {\n        this._affectsMinimap = true;\n        this._affectsOverviewRuler = true;\n        this._affectsGlyphMargin = true;\n        this.tryFire();\n    }\n    tryFire() {\n        if (this._deferredCnt === 0) {\n            this.doFire();\n        }\n        else {\n            this._shouldFireDeferred = true;\n        }\n    }\n    doFire() {\n        this.handleBeforeFire(this._affectedInjectedTextLines);\n        const event = {\n            affectsMinimap: this._affectsMinimap,\n            affectsOverviewRuler: this._affectsOverviewRuler,\n            affectsGlyphMargin: this._affectsGlyphMargin,\n            affectsLineNumber: this._affectsLineNumber,\n        };\n        this._shouldFireDeferred = false;\n        this._affectsMinimap = false;\n        this._affectsOverviewRuler = false;\n        this._affectsGlyphMargin = false;\n        this._actual.fire(event);\n    }\n}\n//#endregion\nclass DidChangeContentEmitter extends Disposable {\n    constructor() {\n        super();\n        /**\n         * Both `fastEvent` and `slowEvent` work the same way and contain the same events, but first we invoke `fastEvent` and then `slowEvent`.\n         */\n        this._fastEmitter = this._register(new Emitter());\n        this.fastEvent = this._fastEmitter.event;\n        this._slowEmitter = this._register(new Emitter());\n        this.slowEvent = this._slowEmitter.event;\n        this._deferredCnt = 0;\n        this._deferredEvent = null;\n    }\n    beginDeferredEmit() {\n        this._deferredCnt++;\n    }\n    endDeferredEmit(resultingSelection = null) {\n        this._deferredCnt--;\n        if (this._deferredCnt === 0) {\n            if (this._deferredEvent !== null) {\n                this._deferredEvent.rawContentChangedEvent.resultingSelection = resultingSelection;\n                const e = this._deferredEvent;\n                this._deferredEvent = null;\n                this._fastEmitter.fire(e);\n                this._slowEmitter.fire(e);\n            }\n        }\n    }\n    fire(e) {\n        if (this._deferredCnt > 0) {\n            if (this._deferredEvent) {\n                this._deferredEvent = this._deferredEvent.merge(e);\n            }\n            else {\n                this._deferredEvent = e;\n            }\n            return;\n        }\n        this._fastEmitter.fire(e);\n        this._slowEmitter.fire(e);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../base/common/lifecycle.js';\nexport class TextModelPart extends Disposable {\n    constructor() {\n        super(...arguments);\n        this._isDisposed = false;\n    }\n    dispose() {\n        super.dispose();\n        this._isDisposed = true;\n    }\n    assertNotDisposed() {\n        if (this._isDisposed) {\n            throw new Error('TextModelPart is disposed!');\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../base/common/strings.js';\nimport { getMapForWordSeparators } from '../core/wordCharacterClassifier.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { FindMatch, SearchData } from '../model.js';\nconst LIMIT_FIND_COUNT = 999;\nexport class SearchParams {\n    constructor(searchString, isRegex, matchCase, wordSeparators) {\n        this.searchString = searchString;\n        this.isRegex = isRegex;\n        this.matchCase = matchCase;\n        this.wordSeparators = wordSeparators;\n    }\n    parseSearchRequest() {\n        if (this.searchString === '') {\n            return null;\n        }\n        // Try to create a RegExp out of the params\n        let multiline;\n        if (this.isRegex) {\n            multiline = isMultilineRegexSource(this.searchString);\n        }\n        else {\n            multiline = (this.searchString.indexOf('\\n') >= 0);\n        }\n        let regex = null;\n        try {\n            regex = strings.createRegExp(this.searchString, this.isRegex, {\n                matchCase: this.matchCase,\n                wholeWord: false,\n                multiline: multiline,\n                global: true,\n                unicode: true\n            });\n        }\n        catch (err) {\n            return null;\n        }\n        if (!regex) {\n            return null;\n        }\n        let canUseSimpleSearch = (!this.isRegex && !multiline);\n        if (canUseSimpleSearch && this.searchString.toLowerCase() !== this.searchString.toUpperCase()) {\n            // casing might make a difference\n            canUseSimpleSearch = this.matchCase;\n        }\n        return new SearchData(regex, this.wordSeparators ? getMapForWordSeparators(this.wordSeparators, []) : null, canUseSimpleSearch ? this.searchString : null);\n    }\n}\nexport function isMultilineRegexSource(searchString) {\n    if (!searchString || searchString.length === 0) {\n        return false;\n    }\n    for (let i = 0, len = searchString.length; i < len; i++) {\n        const chCode = searchString.charCodeAt(i);\n        if (chCode === 10 /* CharCode.LineFeed */) {\n            return true;\n        }\n        if (chCode === 92 /* CharCode.Backslash */) {\n            // move to next char\n            i++;\n            if (i >= len) {\n                // string ends with a \\\n                break;\n            }\n            const nextChCode = searchString.charCodeAt(i);\n            if (nextChCode === 110 /* CharCode.n */ || nextChCode === 114 /* CharCode.r */ || nextChCode === 87 /* CharCode.W */) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nexport function createFindMatch(range, rawMatches, captureMatches) {\n    if (!captureMatches) {\n        return new FindMatch(range, null);\n    }\n    const matches = [];\n    for (let i = 0, len = rawMatches.length; i < len; i++) {\n        matches[i] = rawMatches[i];\n    }\n    return new FindMatch(range, matches);\n}\nclass LineFeedCounter {\n    constructor(text) {\n        const lineFeedsOffsets = [];\n        let lineFeedsOffsetsLen = 0;\n        for (let i = 0, textLen = text.length; i < textLen; i++) {\n            if (text.charCodeAt(i) === 10 /* CharCode.LineFeed */) {\n                lineFeedsOffsets[lineFeedsOffsetsLen++] = i;\n            }\n        }\n        this._lineFeedsOffsets = lineFeedsOffsets;\n    }\n    findLineFeedCountBeforeOffset(offset) {\n        const lineFeedsOffsets = this._lineFeedsOffsets;\n        let min = 0;\n        let max = lineFeedsOffsets.length - 1;\n        if (max === -1) {\n            // no line feeds\n            return 0;\n        }\n        if (offset <= lineFeedsOffsets[0]) {\n            // before first line feed\n            return 0;\n        }\n        while (min < max) {\n            const mid = min + ((max - min) / 2 >> 0);\n            if (lineFeedsOffsets[mid] >= offset) {\n                max = mid - 1;\n            }\n            else {\n                if (lineFeedsOffsets[mid + 1] >= offset) {\n                    // bingo!\n                    min = mid;\n                    max = mid;\n                }\n                else {\n                    min = mid + 1;\n                }\n            }\n        }\n        return min + 1;\n    }\n}\nexport class TextModelSearch {\n    static findMatches(model, searchParams, searchRange, captureMatches, limitResultCount) {\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return [];\n        }\n        if (searchData.regex.multiline) {\n            return this._doFindMatchesMultiline(model, searchRange, new Searcher(searchData.wordSeparators, searchData.regex), captureMatches, limitResultCount);\n        }\n        return this._doFindMatchesLineByLine(model, searchRange, searchData, captureMatches, limitResultCount);\n    }\n    /**\n     * Multiline search always executes on the lines concatenated with \\n.\n     * We must therefore compensate for the count of \\n in case the model is CRLF\n     */\n    static _getMultilineMatchRange(model, deltaOffset, text, lfCounter, matchIndex, match0) {\n        let startOffset;\n        let lineFeedCountBeforeMatch = 0;\n        if (lfCounter) {\n            lineFeedCountBeforeMatch = lfCounter.findLineFeedCountBeforeOffset(matchIndex);\n            startOffset = deltaOffset + matchIndex + lineFeedCountBeforeMatch /* add as many \\r as there were \\n */;\n        }\n        else {\n            startOffset = deltaOffset + matchIndex;\n        }\n        let endOffset;\n        if (lfCounter) {\n            const lineFeedCountBeforeEndOfMatch = lfCounter.findLineFeedCountBeforeOffset(matchIndex + match0.length);\n            const lineFeedCountInMatch = lineFeedCountBeforeEndOfMatch - lineFeedCountBeforeMatch;\n            endOffset = startOffset + match0.length + lineFeedCountInMatch /* add as many \\r as there were \\n */;\n        }\n        else {\n            endOffset = startOffset + match0.length;\n        }\n        const startPosition = model.getPositionAt(startOffset);\n        const endPosition = model.getPositionAt(endOffset);\n        return new Range(startPosition.lineNumber, startPosition.column, endPosition.lineNumber, endPosition.column);\n    }\n    static _doFindMatchesMultiline(model, searchRange, searcher, captureMatches, limitResultCount) {\n        const deltaOffset = model.getOffsetAt(searchRange.getStartPosition());\n        // We always execute multiline search over the lines joined with \\n\n        // This makes it that \\n will match the EOL for both CRLF and LF models\n        // We compensate for offset errors in `_getMultilineMatchRange`\n        const text = model.getValueInRange(searchRange, 1 /* EndOfLinePreference.LF */);\n        const lfCounter = (model.getEOL() === '\\r\\n' ? new LineFeedCounter(text) : null);\n        const result = [];\n        let counter = 0;\n        let m;\n        searcher.reset(0);\n        while ((m = searcher.next(text))) {\n            result[counter++] = createFindMatch(this._getMultilineMatchRange(model, deltaOffset, text, lfCounter, m.index, m[0]), m, captureMatches);\n            if (counter >= limitResultCount) {\n                return result;\n            }\n        }\n        return result;\n    }\n    static _doFindMatchesLineByLine(model, searchRange, searchData, captureMatches, limitResultCount) {\n        const result = [];\n        let resultLen = 0;\n        // Early case for a search range that starts & stops on the same line number\n        if (searchRange.startLineNumber === searchRange.endLineNumber) {\n            const text = model.getLineContent(searchRange.startLineNumber).substring(searchRange.startColumn - 1, searchRange.endColumn - 1);\n            resultLen = this._findMatchesInLine(searchData, text, searchRange.startLineNumber, searchRange.startColumn - 1, resultLen, result, captureMatches, limitResultCount);\n            return result;\n        }\n        // Collect results from first line\n        const text = model.getLineContent(searchRange.startLineNumber).substring(searchRange.startColumn - 1);\n        resultLen = this._findMatchesInLine(searchData, text, searchRange.startLineNumber, searchRange.startColumn - 1, resultLen, result, captureMatches, limitResultCount);\n        // Collect results from middle lines\n        for (let lineNumber = searchRange.startLineNumber + 1; lineNumber < searchRange.endLineNumber && resultLen < limitResultCount; lineNumber++) {\n            resultLen = this._findMatchesInLine(searchData, model.getLineContent(lineNumber), lineNumber, 0, resultLen, result, captureMatches, limitResultCount);\n        }\n        // Collect results from last line\n        if (resultLen < limitResultCount) {\n            const text = model.getLineContent(searchRange.endLineNumber).substring(0, searchRange.endColumn - 1);\n            resultLen = this._findMatchesInLine(searchData, text, searchRange.endLineNumber, 0, resultLen, result, captureMatches, limitResultCount);\n        }\n        return result;\n    }\n    static _findMatchesInLine(searchData, text, lineNumber, deltaOffset, resultLen, result, captureMatches, limitResultCount) {\n        const wordSeparators = searchData.wordSeparators;\n        if (!captureMatches && searchData.simpleSearch) {\n            const searchString = searchData.simpleSearch;\n            const searchStringLen = searchString.length;\n            const textLength = text.length;\n            let lastMatchIndex = -searchStringLen;\n            while ((lastMatchIndex = text.indexOf(searchString, lastMatchIndex + searchStringLen)) !== -1) {\n                if (!wordSeparators || isValidMatch(wordSeparators, text, textLength, lastMatchIndex, searchStringLen)) {\n                    result[resultLen++] = new FindMatch(new Range(lineNumber, lastMatchIndex + 1 + deltaOffset, lineNumber, lastMatchIndex + 1 + searchStringLen + deltaOffset), null);\n                    if (resultLen >= limitResultCount) {\n                        return resultLen;\n                    }\n                }\n            }\n            return resultLen;\n        }\n        const searcher = new Searcher(searchData.wordSeparators, searchData.regex);\n        let m;\n        // Reset regex to search from the beginning\n        searcher.reset(0);\n        do {\n            m = searcher.next(text);\n            if (m) {\n                result[resultLen++] = createFindMatch(new Range(lineNumber, m.index + 1 + deltaOffset, lineNumber, m.index + 1 + m[0].length + deltaOffset), m, captureMatches);\n                if (resultLen >= limitResultCount) {\n                    return resultLen;\n                }\n            }\n        } while (m);\n        return resultLen;\n    }\n    static findNextMatch(model, searchParams, searchStart, captureMatches) {\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return null;\n        }\n        const searcher = new Searcher(searchData.wordSeparators, searchData.regex);\n        if (searchData.regex.multiline) {\n            return this._doFindNextMatchMultiline(model, searchStart, searcher, captureMatches);\n        }\n        return this._doFindNextMatchLineByLine(model, searchStart, searcher, captureMatches);\n    }\n    static _doFindNextMatchMultiline(model, searchStart, searcher, captureMatches) {\n        const searchTextStart = new Position(searchStart.lineNumber, 1);\n        const deltaOffset = model.getOffsetAt(searchTextStart);\n        const lineCount = model.getLineCount();\n        // We always execute multiline search over the lines joined with \\n\n        // This makes it that \\n will match the EOL for both CRLF and LF models\n        // We compensate for offset errors in `_getMultilineMatchRange`\n        const text = model.getValueInRange(new Range(searchTextStart.lineNumber, searchTextStart.column, lineCount, model.getLineMaxColumn(lineCount)), 1 /* EndOfLinePreference.LF */);\n        const lfCounter = (model.getEOL() === '\\r\\n' ? new LineFeedCounter(text) : null);\n        searcher.reset(searchStart.column - 1);\n        const m = searcher.next(text);\n        if (m) {\n            return createFindMatch(this._getMultilineMatchRange(model, deltaOffset, text, lfCounter, m.index, m[0]), m, captureMatches);\n        }\n        if (searchStart.lineNumber !== 1 || searchStart.column !== 1) {\n            // Try again from the top\n            return this._doFindNextMatchMultiline(model, new Position(1, 1), searcher, captureMatches);\n        }\n        return null;\n    }\n    static _doFindNextMatchLineByLine(model, searchStart, searcher, captureMatches) {\n        const lineCount = model.getLineCount();\n        const startLineNumber = searchStart.lineNumber;\n        // Look in first line\n        const text = model.getLineContent(startLineNumber);\n        const r = this._findFirstMatchInLine(searcher, text, startLineNumber, searchStart.column, captureMatches);\n        if (r) {\n            return r;\n        }\n        for (let i = 1; i <= lineCount; i++) {\n            const lineIndex = (startLineNumber + i - 1) % lineCount;\n            const text = model.getLineContent(lineIndex + 1);\n            const r = this._findFirstMatchInLine(searcher, text, lineIndex + 1, 1, captureMatches);\n            if (r) {\n                return r;\n            }\n        }\n        return null;\n    }\n    static _findFirstMatchInLine(searcher, text, lineNumber, fromColumn, captureMatches) {\n        // Set regex to search from column\n        searcher.reset(fromColumn - 1);\n        const m = searcher.next(text);\n        if (m) {\n            return createFindMatch(new Range(lineNumber, m.index + 1, lineNumber, m.index + 1 + m[0].length), m, captureMatches);\n        }\n        return null;\n    }\n    static findPreviousMatch(model, searchParams, searchStart, captureMatches) {\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return null;\n        }\n        const searcher = new Searcher(searchData.wordSeparators, searchData.regex);\n        if (searchData.regex.multiline) {\n            return this._doFindPreviousMatchMultiline(model, searchStart, searcher, captureMatches);\n        }\n        return this._doFindPreviousMatchLineByLine(model, searchStart, searcher, captureMatches);\n    }\n    static _doFindPreviousMatchMultiline(model, searchStart, searcher, captureMatches) {\n        const matches = this._doFindMatchesMultiline(model, new Range(1, 1, searchStart.lineNumber, searchStart.column), searcher, captureMatches, 10 * LIMIT_FIND_COUNT);\n        if (matches.length > 0) {\n            return matches[matches.length - 1];\n        }\n        const lineCount = model.getLineCount();\n        if (searchStart.lineNumber !== lineCount || searchStart.column !== model.getLineMaxColumn(lineCount)) {\n            // Try again with all content\n            return this._doFindPreviousMatchMultiline(model, new Position(lineCount, model.getLineMaxColumn(lineCount)), searcher, captureMatches);\n        }\n        return null;\n    }\n    static _doFindPreviousMatchLineByLine(model, searchStart, searcher, captureMatches) {\n        const lineCount = model.getLineCount();\n        const startLineNumber = searchStart.lineNumber;\n        // Look in first line\n        const text = model.getLineContent(startLineNumber).substring(0, searchStart.column - 1);\n        const r = this._findLastMatchInLine(searcher, text, startLineNumber, captureMatches);\n        if (r) {\n            return r;\n        }\n        for (let i = 1; i <= lineCount; i++) {\n            const lineIndex = (lineCount + startLineNumber - i - 1) % lineCount;\n            const text = model.getLineContent(lineIndex + 1);\n            const r = this._findLastMatchInLine(searcher, text, lineIndex + 1, captureMatches);\n            if (r) {\n                return r;\n            }\n        }\n        return null;\n    }\n    static _findLastMatchInLine(searcher, text, lineNumber, captureMatches) {\n        let bestResult = null;\n        let m;\n        searcher.reset(0);\n        while ((m = searcher.next(text))) {\n            bestResult = createFindMatch(new Range(lineNumber, m.index + 1, lineNumber, m.index + 1 + m[0].length), m, captureMatches);\n        }\n        return bestResult;\n    }\n}\nfunction leftIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength) {\n    if (matchStartIndex === 0) {\n        // Match starts at start of string\n        return true;\n    }\n    const charBefore = text.charCodeAt(matchStartIndex - 1);\n    if (wordSeparators.get(charBefore) !== 0 /* WordCharacterClass.Regular */) {\n        // The character before the match is a word separator\n        return true;\n    }\n    if (charBefore === 13 /* CharCode.CarriageReturn */ || charBefore === 10 /* CharCode.LineFeed */) {\n        // The character before the match is line break or carriage return.\n        return true;\n    }\n    if (matchLength > 0) {\n        const firstCharInMatch = text.charCodeAt(matchStartIndex);\n        if (wordSeparators.get(firstCharInMatch) !== 0 /* WordCharacterClass.Regular */) {\n            // The first character inside the match is a word separator\n            return true;\n        }\n    }\n    return false;\n}\nfunction rightIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength) {\n    if (matchStartIndex + matchLength === textLength) {\n        // Match ends at end of string\n        return true;\n    }\n    const charAfter = text.charCodeAt(matchStartIndex + matchLength);\n    if (wordSeparators.get(charAfter) !== 0 /* WordCharacterClass.Regular */) {\n        // The character after the match is a word separator\n        return true;\n    }\n    if (charAfter === 13 /* CharCode.CarriageReturn */ || charAfter === 10 /* CharCode.LineFeed */) {\n        // The character after the match is line break or carriage return.\n        return true;\n    }\n    if (matchLength > 0) {\n        const lastCharInMatch = text.charCodeAt(matchStartIndex + matchLength - 1);\n        if (wordSeparators.get(lastCharInMatch) !== 0 /* WordCharacterClass.Regular */) {\n            // The last character in the match is a word separator\n            return true;\n        }\n    }\n    return false;\n}\nexport function isValidMatch(wordSeparators, text, textLength, matchStartIndex, matchLength) {\n    return (leftIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength)\n        && rightIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength));\n}\nexport class Searcher {\n    constructor(wordSeparators, searchRegex) {\n        this._wordSeparators = wordSeparators;\n        this._searchRegex = searchRegex;\n        this._prevMatchStartIndex = -1;\n        this._prevMatchLength = 0;\n    }\n    reset(lastIndex) {\n        this._searchRegex.lastIndex = lastIndex;\n        this._prevMatchStartIndex = -1;\n        this._prevMatchLength = 0;\n    }\n    next(text) {\n        const textLength = text.length;\n        let m;\n        do {\n            if (this._prevMatchStartIndex + this._prevMatchLength === textLength) {\n                // Reached the end of the line\n                return null;\n            }\n            m = this._searchRegex.exec(text);\n            if (!m) {\n                return null;\n            }\n            const matchStartIndex = m.index;\n            const matchLength = m[0].length;\n            if (matchStartIndex === this._prevMatchStartIndex && matchLength === this._prevMatchLength) {\n                if (matchLength === 0) {\n                    // the search result is an empty string and won't advance `regex.lastIndex`, so `regex.exec` will stuck here\n                    // we attempt to recover from that by advancing by two if surrogate pair found and by one otherwise\n                    if (strings.getNextCodePoint(text, textLength, this._searchRegex.lastIndex) > 0xFFFF) {\n                        this._searchRegex.lastIndex += 2;\n                    }\n                    else {\n                        this._searchRegex.lastIndex += 1;\n                    }\n                    continue;\n                }\n                // Exit early if the regex matches the same range twice\n                return null;\n            }\n            this._prevMatchStartIndex = matchStartIndex;\n            this._prevMatchLength = matchLength;\n            if (!this._wordSeparators || isValidMatch(this._wordSeparators, text, textLength, matchStartIndex, matchLength)) {\n                return m;\n            }\n        } while (m);\n        return null;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { runWhenGlobalIdle } from '../../../base/common/async.js';\nimport { BugIndicatingError, onUnexpectedError } from '../../../base/common/errors.js';\nimport { setTimeout0 } from '../../../base/common/platform.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\nimport { countEOL } from '../core/eolCounter.js';\nimport { LineRange } from '../core/lineRange.js';\nimport { OffsetRange } from '../core/offsetRange.js';\nimport { nullTokenizeEncoded } from '../languages/nullTokenize.js';\nimport { FixedArray } from './fixedArray.js';\nimport { ContiguousMultilineTokensBuilder } from '../tokens/contiguousMultilineTokensBuilder.js';\nimport { LineTokens } from '../tokens/lineTokens.js';\nexport class TokenizerWithStateStore {\n    constructor(lineCount, tokenizationSupport) {\n        this.tokenizationSupport = tokenizationSupport;\n        this.initialState = this.tokenizationSupport.getInitialState();\n        this.store = new TrackingTokenizationStateStore(lineCount);\n    }\n    getStartState(lineNumber) {\n        return this.store.getStartState(lineNumber, this.initialState);\n    }\n    getFirstInvalidLine() {\n        return this.store.getFirstInvalidLine(this.initialState);\n    }\n}\nexport class TokenizerWithStateStoreAndTextModel extends TokenizerWithStateStore {\n    constructor(lineCount, tokenizationSupport, _textModel, _languageIdCodec) {\n        super(lineCount, tokenizationSupport);\n        this._textModel = _textModel;\n        this._languageIdCodec = _languageIdCodec;\n    }\n    updateTokensUntilLine(builder, lineNumber) {\n        const languageId = this._textModel.getLanguageId();\n        while (true) {\n            const lineToTokenize = this.getFirstInvalidLine();\n            if (!lineToTokenize || lineToTokenize.lineNumber > lineNumber) {\n                break;\n            }\n            const text = this._textModel.getLineContent(lineToTokenize.lineNumber);\n            const r = safeTokenize(this._languageIdCodec, languageId, this.tokenizationSupport, text, true, lineToTokenize.startState);\n            builder.add(lineToTokenize.lineNumber, r.tokens);\n            this.store.setEndState(lineToTokenize.lineNumber, r.endState);\n        }\n    }\n    /** assumes state is up to date */\n    getTokenTypeIfInsertingCharacter(position, character) {\n        // TODO@hediet: use tokenizeLineWithEdit\n        const lineStartState = this.getStartState(position.lineNumber);\n        if (!lineStartState) {\n            return 0 /* StandardTokenType.Other */;\n        }\n        const languageId = this._textModel.getLanguageId();\n        const lineContent = this._textModel.getLineContent(position.lineNumber);\n        // Create the text as if `character` was inserted\n        const text = (lineContent.substring(0, position.column - 1)\n            + character\n            + lineContent.substring(position.column - 1));\n        const r = safeTokenize(this._languageIdCodec, languageId, this.tokenizationSupport, text, true, lineStartState);\n        const lineTokens = new LineTokens(r.tokens, text, this._languageIdCodec);\n        if (lineTokens.getCount() === 0) {\n            return 0 /* StandardTokenType.Other */;\n        }\n        const tokenIndex = lineTokens.findTokenIndexAtOffset(position.column - 1);\n        return lineTokens.getStandardTokenType(tokenIndex);\n    }\n    /** assumes state is up to date */\n    tokenizeLineWithEdit(position, length, newText) {\n        const lineNumber = position.lineNumber;\n        const column = position.column;\n        const lineStartState = this.getStartState(lineNumber);\n        if (!lineStartState) {\n            return null;\n        }\n        const curLineContent = this._textModel.getLineContent(lineNumber);\n        const newLineContent = curLineContent.substring(0, column - 1)\n            + newText + curLineContent.substring(column - 1 + length);\n        const languageId = this._textModel.getLanguageIdAtPosition(lineNumber, 0);\n        const result = safeTokenize(this._languageIdCodec, languageId, this.tokenizationSupport, newLineContent, true, lineStartState);\n        const lineTokens = new LineTokens(result.tokens, newLineContent, this._languageIdCodec);\n        return lineTokens;\n    }\n    hasAccurateTokensForLine(lineNumber) {\n        const firstInvalidLineNumber = this.store.getFirstInvalidEndStateLineNumberOrMax();\n        return (lineNumber < firstInvalidLineNumber);\n    }\n    isCheapToTokenize(lineNumber) {\n        const firstInvalidLineNumber = this.store.getFirstInvalidEndStateLineNumberOrMax();\n        if (lineNumber < firstInvalidLineNumber) {\n            return true;\n        }\n        if (lineNumber === firstInvalidLineNumber\n            && this._textModel.getLineLength(lineNumber) < 2048 /* Constants.CHEAP_TOKENIZATION_LENGTH_LIMIT */) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * The result is not cached.\n     */\n    tokenizeHeuristically(builder, startLineNumber, endLineNumber) {\n        if (endLineNumber <= this.store.getFirstInvalidEndStateLineNumberOrMax()) {\n            // nothing to do\n            return { heuristicTokens: false };\n        }\n        if (startLineNumber <= this.store.getFirstInvalidEndStateLineNumberOrMax()) {\n            // tokenization has reached the viewport start...\n            this.updateTokensUntilLine(builder, endLineNumber);\n            return { heuristicTokens: false };\n        }\n        let state = this.guessStartState(startLineNumber);\n        const languageId = this._textModel.getLanguageId();\n        for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n            const text = this._textModel.getLineContent(lineNumber);\n            const r = safeTokenize(this._languageIdCodec, languageId, this.tokenizationSupport, text, true, state);\n            builder.add(lineNumber, r.tokens);\n            state = r.endState;\n        }\n        return { heuristicTokens: true };\n    }\n    guessStartState(lineNumber) {\n        let nonWhitespaceColumn = this._textModel.getLineFirstNonWhitespaceColumn(lineNumber);\n        const likelyRelevantLines = [];\n        let initialState = null;\n        for (let i = lineNumber - 1; nonWhitespaceColumn > 1 && i >= 1; i--) {\n            const newNonWhitespaceIndex = this._textModel.getLineFirstNonWhitespaceColumn(i);\n            // Ignore lines full of whitespace\n            if (newNonWhitespaceIndex === 0) {\n                continue;\n            }\n            if (newNonWhitespaceIndex < nonWhitespaceColumn) {\n                likelyRelevantLines.push(this._textModel.getLineContent(i));\n                nonWhitespaceColumn = newNonWhitespaceIndex;\n                initialState = this.getStartState(i);\n                if (initialState) {\n                    break;\n                }\n            }\n        }\n        if (!initialState) {\n            initialState = this.tokenizationSupport.getInitialState();\n        }\n        likelyRelevantLines.reverse();\n        const languageId = this._textModel.getLanguageId();\n        let state = initialState;\n        for (const line of likelyRelevantLines) {\n            const r = safeTokenize(this._languageIdCodec, languageId, this.tokenizationSupport, line, false, state);\n            state = r.endState;\n        }\n        return state;\n    }\n}\n/**\n * **Invariant:**\n * If the text model is retokenized from line 1 to {@link getFirstInvalidEndStateLineNumber}() - 1,\n * then the recomputed end state for line l will be equal to {@link getEndState}(l).\n */\nexport class TrackingTokenizationStateStore {\n    constructor(lineCount) {\n        this.lineCount = lineCount;\n        this._tokenizationStateStore = new TokenizationStateStore();\n        this._invalidEndStatesLineNumbers = new RangePriorityQueueImpl();\n        this._invalidEndStatesLineNumbers.addRange(new OffsetRange(1, lineCount + 1));\n    }\n    getEndState(lineNumber) {\n        return this._tokenizationStateStore.getEndState(lineNumber);\n    }\n    /**\n     * @returns if the end state has changed.\n     */\n    setEndState(lineNumber, state) {\n        if (!state) {\n            throw new BugIndicatingError('Cannot set null/undefined state');\n        }\n        this._invalidEndStatesLineNumbers.delete(lineNumber);\n        const r = this._tokenizationStateStore.setEndState(lineNumber, state);\n        if (r && lineNumber < this.lineCount) {\n            // because the state changed, we cannot trust the next state anymore and have to invalidate it.\n            this._invalidEndStatesLineNumbers.addRange(new OffsetRange(lineNumber + 1, lineNumber + 2));\n        }\n        return r;\n    }\n    acceptChange(range, newLineCount) {\n        this.lineCount += newLineCount - range.length;\n        this._tokenizationStateStore.acceptChange(range, newLineCount);\n        this._invalidEndStatesLineNumbers.addRangeAndResize(new OffsetRange(range.startLineNumber, range.endLineNumberExclusive), newLineCount);\n    }\n    acceptChanges(changes) {\n        for (const c of changes) {\n            const [eolCount] = countEOL(c.text);\n            this.acceptChange(new LineRange(c.range.startLineNumber, c.range.endLineNumber + 1), eolCount + 1);\n        }\n    }\n    invalidateEndStateRange(range) {\n        this._invalidEndStatesLineNumbers.addRange(new OffsetRange(range.startLineNumber, range.endLineNumberExclusive));\n    }\n    getFirstInvalidEndStateLineNumber() { return this._invalidEndStatesLineNumbers.min; }\n    getFirstInvalidEndStateLineNumberOrMax() {\n        return this.getFirstInvalidEndStateLineNumber() || Number.MAX_SAFE_INTEGER;\n    }\n    allStatesValid() { return this._invalidEndStatesLineNumbers.min === null; }\n    getStartState(lineNumber, initialState) {\n        if (lineNumber === 1) {\n            return initialState;\n        }\n        return this.getEndState(lineNumber - 1);\n    }\n    getFirstInvalidLine(initialState) {\n        const lineNumber = this.getFirstInvalidEndStateLineNumber();\n        if (lineNumber === null) {\n            return null;\n        }\n        const startState = this.getStartState(lineNumber, initialState);\n        if (!startState) {\n            throw new BugIndicatingError('Start state must be defined');\n        }\n        return { lineNumber, startState };\n    }\n}\nexport class TokenizationStateStore {\n    constructor() {\n        this._lineEndStates = new FixedArray(null);\n    }\n    getEndState(lineNumber) {\n        return this._lineEndStates.get(lineNumber);\n    }\n    setEndState(lineNumber, state) {\n        const oldState = this._lineEndStates.get(lineNumber);\n        if (oldState && oldState.equals(state)) {\n            return false;\n        }\n        this._lineEndStates.set(lineNumber, state);\n        return true;\n    }\n    acceptChange(range, newLineCount) {\n        let length = range.length;\n        if (newLineCount > 0 && length > 0) {\n            // Keep the last state, even though it is unrelated.\n            // But if the new state happens to agree with this last state, then we know we can stop tokenizing.\n            length--;\n            newLineCount--;\n        }\n        this._lineEndStates.replace(range.startLineNumber, length, newLineCount);\n    }\n}\nexport class RangePriorityQueueImpl {\n    constructor() {\n        this._ranges = [];\n    }\n    get min() {\n        if (this._ranges.length === 0) {\n            return null;\n        }\n        return this._ranges[0].start;\n    }\n    delete(value) {\n        const idx = this._ranges.findIndex(r => r.contains(value));\n        if (idx !== -1) {\n            const range = this._ranges[idx];\n            if (range.start === value) {\n                if (range.endExclusive === value + 1) {\n                    this._ranges.splice(idx, 1);\n                }\n                else {\n                    this._ranges[idx] = new OffsetRange(value + 1, range.endExclusive);\n                }\n            }\n            else {\n                if (range.endExclusive === value + 1) {\n                    this._ranges[idx] = new OffsetRange(range.start, value);\n                }\n                else {\n                    this._ranges.splice(idx, 1, new OffsetRange(range.start, value), new OffsetRange(value + 1, range.endExclusive));\n                }\n            }\n        }\n    }\n    addRange(range) {\n        OffsetRange.addRange(range, this._ranges);\n    }\n    addRangeAndResize(range, newLength) {\n        let idxFirstMightBeIntersecting = 0;\n        while (!(idxFirstMightBeIntersecting >= this._ranges.length || range.start <= this._ranges[idxFirstMightBeIntersecting].endExclusive)) {\n            idxFirstMightBeIntersecting++;\n        }\n        let idxFirstIsAfter = idxFirstMightBeIntersecting;\n        while (!(idxFirstIsAfter >= this._ranges.length || range.endExclusive < this._ranges[idxFirstIsAfter].start)) {\n            idxFirstIsAfter++;\n        }\n        const delta = newLength - range.length;\n        for (let i = idxFirstIsAfter; i < this._ranges.length; i++) {\n            this._ranges[i] = this._ranges[i].delta(delta);\n        }\n        if (idxFirstMightBeIntersecting === idxFirstIsAfter) {\n            const newRange = new OffsetRange(range.start, range.start + newLength);\n            if (!newRange.isEmpty) {\n                this._ranges.splice(idxFirstMightBeIntersecting, 0, newRange);\n            }\n        }\n        else {\n            const start = Math.min(range.start, this._ranges[idxFirstMightBeIntersecting].start);\n            const endEx = Math.max(range.endExclusive, this._ranges[idxFirstIsAfter - 1].endExclusive);\n            const newRange = new OffsetRange(start, endEx + delta);\n            if (!newRange.isEmpty) {\n                this._ranges.splice(idxFirstMightBeIntersecting, idxFirstIsAfter - idxFirstMightBeIntersecting, newRange);\n            }\n            else {\n                this._ranges.splice(idxFirstMightBeIntersecting, idxFirstIsAfter - idxFirstMightBeIntersecting);\n            }\n        }\n    }\n    toString() {\n        return this._ranges.map(r => r.toString()).join(' + ');\n    }\n}\nfunction safeTokenize(languageIdCodec, languageId, tokenizationSupport, text, hasEOL, state) {\n    let r = null;\n    if (tokenizationSupport) {\n        try {\n            r = tokenizationSupport.tokenizeEncoded(text, hasEOL, state.clone());\n        }\n        catch (e) {\n            onUnexpectedError(e);\n        }\n    }\n    if (!r) {\n        r = nullTokenizeEncoded(languageIdCodec.encodeLanguageId(languageId), state);\n    }\n    LineTokens.convertToEndOffset(r.tokens, text.length);\n    return r;\n}\nexport class DefaultBackgroundTokenizer {\n    constructor(_tokenizerWithStateStore, _backgroundTokenStore) {\n        this._tokenizerWithStateStore = _tokenizerWithStateStore;\n        this._backgroundTokenStore = _backgroundTokenStore;\n        this._isDisposed = false;\n        this._isScheduled = false;\n    }\n    dispose() {\n        this._isDisposed = true;\n    }\n    handleChanges() {\n        this._beginBackgroundTokenization();\n    }\n    _beginBackgroundTokenization() {\n        if (this._isScheduled || !this._tokenizerWithStateStore._textModel.isAttachedToEditor() || !this._hasLinesToTokenize()) {\n            return;\n        }\n        this._isScheduled = true;\n        runWhenGlobalIdle((deadline) => {\n            this._isScheduled = false;\n            this._backgroundTokenizeWithDeadline(deadline);\n        });\n    }\n    /**\n     * Tokenize until the deadline occurs, but try to yield every 1-2ms.\n     */\n    _backgroundTokenizeWithDeadline(deadline) {\n        // Read the time remaining from the `deadline` immediately because it is unclear\n        // if the `deadline` object will be valid after execution leaves this function.\n        const endTime = Date.now() + deadline.timeRemaining();\n        const execute = () => {\n            if (this._isDisposed || !this._tokenizerWithStateStore._textModel.isAttachedToEditor() || !this._hasLinesToTokenize()) {\n                // disposed in the meantime or detached or finished\n                return;\n            }\n            this._backgroundTokenizeForAtLeast1ms();\n            if (Date.now() < endTime) {\n                // There is still time before reaching the deadline, so yield to the browser and then\n                // continue execution\n                setTimeout0(execute);\n            }\n            else {\n                // The deadline has been reached, so schedule a new idle callback if necessary\n                this._beginBackgroundTokenization();\n            }\n        };\n        execute();\n    }\n    /**\n     * Tokenize for at least 1ms.\n     */\n    _backgroundTokenizeForAtLeast1ms() {\n        const lineCount = this._tokenizerWithStateStore._textModel.getLineCount();\n        const builder = new ContiguousMultilineTokensBuilder();\n        const sw = StopWatch.create(false);\n        do {\n            if (sw.elapsed() > 1) {\n                // the comparison is intentionally > 1 and not >= 1 to ensure that\n                // a full millisecond has elapsed, given how microseconds are rounded\n                // to milliseconds\n                break;\n            }\n            const tokenizedLineNumber = this._tokenizeOneInvalidLine(builder);\n            if (tokenizedLineNumber >= lineCount) {\n                break;\n            }\n        } while (this._hasLinesToTokenize());\n        this._backgroundTokenStore.setTokens(builder.finalize());\n        this.checkFinished();\n    }\n    _hasLinesToTokenize() {\n        if (!this._tokenizerWithStateStore) {\n            return false;\n        }\n        return !this._tokenizerWithStateStore.store.allStatesValid();\n    }\n    _tokenizeOneInvalidLine(builder) {\n        const firstInvalidLine = this._tokenizerWithStateStore?.getFirstInvalidLine();\n        if (!firstInvalidLine) {\n            return this._tokenizerWithStateStore._textModel.getLineCount() + 1;\n        }\n        this._tokenizerWithStateStore.updateTokensUntilLine(builder, firstInvalidLine.lineNumber);\n        return firstInvalidLine.lineNumber;\n    }\n    checkFinished() {\n        if (this._isDisposed) {\n            return;\n        }\n        if (this._tokenizerWithStateStore.store.allStatesValid()) {\n            this._backgroundTokenStore.backgroundTokenizationFinished();\n        }\n    }\n    requestTokens(startLineNumber, endLineNumberExclusive) {\n        this._tokenizerWithStateStore.store.invalidateEndStateRange(new LineRange(startLineNumber, endLineNumberExclusive));\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar TokenizationTextModelPart_1;\nimport { BugIndicatingError, onUnexpectedError } from '../../../base/common/errors.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { DisposableMap, DisposableStore, MutableDisposable } from '../../../base/common/lifecycle.js';\nimport { countEOL } from '../core/eolCounter.js';\nimport { LineRange } from '../core/lineRange.js';\nimport { Position } from '../core/position.js';\nimport { getWordAtText } from '../core/wordHelper.js';\nimport { TokenizationRegistry, TreeSitterTokenizationRegistry } from '../languages.js';\nimport { ILanguageService } from '../languages/language.js';\nimport { ILanguageConfigurationService } from '../languages/languageConfigurationRegistry.js';\nimport { TextModelPart } from './textModelPart.js';\nimport { DefaultBackgroundTokenizer, TokenizerWithStateStoreAndTextModel, TrackingTokenizationStateStore } from './textModelTokens.js';\nimport { AbstractTokens, AttachedViewHandler } from './tokens.js';\nimport { TreeSitterTokens } from './treeSitterTokens.js';\nimport { ITreeSitterParserService } from '../services/treeSitterParserService.js';\nimport { ContiguousMultilineTokensBuilder } from '../tokens/contiguousMultilineTokensBuilder.js';\nimport { ContiguousTokensStore } from '../tokens/contiguousTokensStore.js';\nimport { SparseTokensStore } from '../tokens/sparseTokensStore.js';\nlet TokenizationTextModelPart = TokenizationTextModelPart_1 = class TokenizationTextModelPart extends TextModelPart {\n    constructor(_textModel, _bracketPairsTextModelPart, _languageId, _attachedViews, _languageService, _languageConfigurationService, _treeSitterService) {\n        super();\n        this._textModel = _textModel;\n        this._bracketPairsTextModelPart = _bracketPairsTextModelPart;\n        this._languageId = _languageId;\n        this._attachedViews = _attachedViews;\n        this._languageService = _languageService;\n        this._languageConfigurationService = _languageConfigurationService;\n        this._treeSitterService = _treeSitterService;\n        this._semanticTokens = new SparseTokensStore(this._languageService.languageIdCodec);\n        this._onDidChangeLanguage = this._register(new Emitter());\n        this.onDidChangeLanguage = this._onDidChangeLanguage.event;\n        this._onDidChangeLanguageConfiguration = this._register(new Emitter());\n        this.onDidChangeLanguageConfiguration = this._onDidChangeLanguageConfiguration.event;\n        this._onDidChangeTokens = this._register(new Emitter());\n        this.onDidChangeTokens = this._onDidChangeTokens.event;\n        this._tokensDisposables = this._register(new DisposableStore());\n        this._register(this._languageConfigurationService.onDidChange(e => {\n            if (e.affects(this._languageId)) {\n                this._onDidChangeLanguageConfiguration.fire({});\n            }\n        }));\n        // We just look at registry changes to determine whether to use tree sitter.\n        // This means that removing a language from the setting will not cause a switch to textmate and will require a reload.\n        // Adding a language to the setting will not need a reload, however.\n        this._register(Event.filter(TreeSitterTokenizationRegistry.onDidChange, (e) => e.changedLanguages.includes(this._languageId))(() => {\n            this.createPreferredTokenProvider();\n        }));\n        this.createPreferredTokenProvider();\n    }\n    createGrammarTokens() {\n        return this._register(new GrammarTokens(this._languageService.languageIdCodec, this._textModel, () => this._languageId, this._attachedViews));\n    }\n    createTreeSitterTokens() {\n        return this._register(new TreeSitterTokens(this._treeSitterService, this._languageService.languageIdCodec, this._textModel, () => this._languageId));\n    }\n    createTokens(useTreeSitter) {\n        const needsReset = this._tokens !== undefined;\n        this._tokens?.dispose();\n        this._tokens = useTreeSitter ? this.createTreeSitterTokens() : this.createGrammarTokens();\n        this._tokensDisposables.clear();\n        this._tokensDisposables.add(this._tokens.onDidChangeTokens(e => {\n            this._emitModelTokensChangedEvent(e);\n        }));\n        this._tokensDisposables.add(this._tokens.onDidChangeBackgroundTokenizationState(e => {\n            this._bracketPairsTextModelPart.handleDidChangeBackgroundTokenizationState();\n        }));\n        if (needsReset) {\n            // We need to reset the tokenization, as the new token provider otherwise won't have a chance to provide tokens until some action happens in the editor.\n            this._tokens.resetTokenization();\n        }\n    }\n    createPreferredTokenProvider() {\n        if (TreeSitterTokenizationRegistry.get(this._languageId)) {\n            if (!(this._tokens instanceof TreeSitterTokens)) {\n                this.createTokens(true);\n            }\n        }\n        else {\n            if (!(this._tokens instanceof GrammarTokens)) {\n                this.createTokens(false);\n            }\n        }\n    }\n    handleLanguageConfigurationServiceChange(e) {\n        if (e.affects(this._languageId)) {\n            this._onDidChangeLanguageConfiguration.fire({});\n        }\n    }\n    handleDidChangeContent(e) {\n        if (e.isFlush) {\n            this._semanticTokens.flush();\n        }\n        else if (!e.isEolChange) { // We don't have to do anything on an EOL change\n            for (const c of e.changes) {\n                const [eolCount, firstLineLength, lastLineLength] = countEOL(c.text);\n                this._semanticTokens.acceptEdit(c.range, eolCount, firstLineLength, lastLineLength, c.text.length > 0 ? c.text.charCodeAt(0) : 0 /* CharCode.Null */);\n            }\n        }\n        this._tokens.handleDidChangeContent(e);\n    }\n    handleDidChangeAttached() {\n        this._tokens.handleDidChangeAttached();\n    }\n    /**\n     * Includes grammar and semantic tokens.\n     */\n    getLineTokens(lineNumber) {\n        this.validateLineNumber(lineNumber);\n        const syntacticTokens = this._tokens.getLineTokens(lineNumber);\n        return this._semanticTokens.addSparseTokens(lineNumber, syntacticTokens);\n    }\n    _emitModelTokensChangedEvent(e) {\n        if (!this._textModel._isDisposing()) {\n            this._bracketPairsTextModelPart.handleDidChangeTokens(e);\n            this._onDidChangeTokens.fire(e);\n        }\n    }\n    // #region Grammar Tokens\n    validateLineNumber(lineNumber) {\n        if (lineNumber < 1 || lineNumber > this._textModel.getLineCount()) {\n            throw new BugIndicatingError('Illegal value for lineNumber');\n        }\n    }\n    get hasTokens() {\n        return this._tokens.hasTokens;\n    }\n    resetTokenization() {\n        this._tokens.resetTokenization();\n    }\n    get backgroundTokenizationState() {\n        return this._tokens.backgroundTokenizationState;\n    }\n    forceTokenization(lineNumber) {\n        this.validateLineNumber(lineNumber);\n        this._tokens.forceTokenization(lineNumber);\n    }\n    hasAccurateTokensForLine(lineNumber) {\n        this.validateLineNumber(lineNumber);\n        return this._tokens.hasAccurateTokensForLine(lineNumber);\n    }\n    isCheapToTokenize(lineNumber) {\n        this.validateLineNumber(lineNumber);\n        return this._tokens.isCheapToTokenize(lineNumber);\n    }\n    tokenizeIfCheap(lineNumber) {\n        this.validateLineNumber(lineNumber);\n        this._tokens.tokenizeIfCheap(lineNumber);\n    }\n    getTokenTypeIfInsertingCharacter(lineNumber, column, character) {\n        return this._tokens.getTokenTypeIfInsertingCharacter(lineNumber, column, character);\n    }\n    tokenizeLineWithEdit(position, length, newText) {\n        return this._tokens.tokenizeLineWithEdit(position, length, newText);\n    }\n    // #endregion\n    // #region Semantic Tokens\n    setSemanticTokens(tokens, isComplete) {\n        this._semanticTokens.set(tokens, isComplete);\n        this._emitModelTokensChangedEvent({\n            semanticTokensApplied: tokens !== null,\n            ranges: [{ fromLineNumber: 1, toLineNumber: this._textModel.getLineCount() }],\n        });\n    }\n    hasCompleteSemanticTokens() {\n        return this._semanticTokens.isComplete();\n    }\n    hasSomeSemanticTokens() {\n        return !this._semanticTokens.isEmpty();\n    }\n    setPartialSemanticTokens(range, tokens) {\n        if (this.hasCompleteSemanticTokens()) {\n            return;\n        }\n        const changedRange = this._textModel.validateRange(this._semanticTokens.setPartial(range, tokens));\n        this._emitModelTokensChangedEvent({\n            semanticTokensApplied: true,\n            ranges: [\n                {\n                    fromLineNumber: changedRange.startLineNumber,\n                    toLineNumber: changedRange.endLineNumber,\n                },\n            ],\n        });\n    }\n    // #endregion\n    // #region Utility Methods\n    getWordAtPosition(_position) {\n        this.assertNotDisposed();\n        const position = this._textModel.validatePosition(_position);\n        const lineContent = this._textModel.getLineContent(position.lineNumber);\n        const lineTokens = this.getLineTokens(position.lineNumber);\n        const tokenIndex = lineTokens.findTokenIndexAtOffset(position.column - 1);\n        // (1). First try checking right biased word\n        const [rbStartOffset, rbEndOffset] = TokenizationTextModelPart_1._findLanguageBoundaries(lineTokens, tokenIndex);\n        const rightBiasedWord = getWordAtText(position.column, this.getLanguageConfiguration(lineTokens.getLanguageId(tokenIndex)).getWordDefinition(), lineContent.substring(rbStartOffset, rbEndOffset), rbStartOffset);\n        // Make sure the result touches the original passed in position\n        if (rightBiasedWord &&\n            rightBiasedWord.startColumn <= _position.column &&\n            _position.column <= rightBiasedWord.endColumn) {\n            return rightBiasedWord;\n        }\n        // (2). Else, if we were at a language boundary, check the left biased word\n        if (tokenIndex > 0 && rbStartOffset === position.column - 1) {\n            // edge case, where `position` sits between two tokens belonging to two different languages\n            const [lbStartOffset, lbEndOffset] = TokenizationTextModelPart_1._findLanguageBoundaries(lineTokens, tokenIndex - 1);\n            const leftBiasedWord = getWordAtText(position.column, this.getLanguageConfiguration(lineTokens.getLanguageId(tokenIndex - 1)).getWordDefinition(), lineContent.substring(lbStartOffset, lbEndOffset), lbStartOffset);\n            // Make sure the result touches the original passed in position\n            if (leftBiasedWord &&\n                leftBiasedWord.startColumn <= _position.column &&\n                _position.column <= leftBiasedWord.endColumn) {\n                return leftBiasedWord;\n            }\n        }\n        return null;\n    }\n    getLanguageConfiguration(languageId) {\n        return this._languageConfigurationService.getLanguageConfiguration(languageId);\n    }\n    static _findLanguageBoundaries(lineTokens, tokenIndex) {\n        const languageId = lineTokens.getLanguageId(tokenIndex);\n        // go left until a different language is hit\n        let startOffset = 0;\n        for (let i = tokenIndex; i >= 0 && lineTokens.getLanguageId(i) === languageId; i--) {\n            startOffset = lineTokens.getStartOffset(i);\n        }\n        // go right until a different language is hit\n        let endOffset = lineTokens.getLineContent().length;\n        for (let i = tokenIndex, tokenCount = lineTokens.getCount(); i < tokenCount && lineTokens.getLanguageId(i) === languageId; i++) {\n            endOffset = lineTokens.getEndOffset(i);\n        }\n        return [startOffset, endOffset];\n    }\n    getWordUntilPosition(position) {\n        const wordAtPosition = this.getWordAtPosition(position);\n        if (!wordAtPosition) {\n            return { word: '', startColumn: position.column, endColumn: position.column, };\n        }\n        return {\n            word: wordAtPosition.word.substr(0, position.column - wordAtPosition.startColumn),\n            startColumn: wordAtPosition.startColumn,\n            endColumn: position.column,\n        };\n    }\n    // #endregion\n    // #region Language Id handling\n    getLanguageId() {\n        return this._languageId;\n    }\n    getLanguageIdAtPosition(lineNumber, column) {\n        const position = this._textModel.validatePosition(new Position(lineNumber, column));\n        const lineTokens = this.getLineTokens(position.lineNumber);\n        return lineTokens.getLanguageId(lineTokens.findTokenIndexAtOffset(position.column - 1));\n    }\n    setLanguageId(languageId, source = 'api') {\n        if (this._languageId === languageId) {\n            // There's nothing to do\n            return;\n        }\n        const e = {\n            oldLanguage: this._languageId,\n            newLanguage: languageId,\n            source\n        };\n        this._languageId = languageId;\n        this._bracketPairsTextModelPart.handleDidChangeLanguage(e);\n        this._tokens.resetTokenization();\n        this.createPreferredTokenProvider();\n        this._onDidChangeLanguage.fire(e);\n        this._onDidChangeLanguageConfiguration.fire({});\n    }\n};\nTokenizationTextModelPart = TokenizationTextModelPart_1 = __decorate([\n    __param(4, ILanguageService),\n    __param(5, ILanguageConfigurationService),\n    __param(6, ITreeSitterParserService)\n], TokenizationTextModelPart);\nexport { TokenizationTextModelPart };\nclass GrammarTokens extends AbstractTokens {\n    constructor(languageIdCodec, textModel, getLanguageId, attachedViews) {\n        super(languageIdCodec, textModel, getLanguageId);\n        this._tokenizer = null;\n        this._defaultBackgroundTokenizer = null;\n        this._backgroundTokenizer = this._register(new MutableDisposable());\n        this._tokens = new ContiguousTokensStore(this._languageIdCodec);\n        this._debugBackgroundTokenizer = this._register(new MutableDisposable());\n        this._attachedViewStates = this._register(new DisposableMap());\n        this._register(TokenizationRegistry.onDidChange((e) => {\n            const languageId = this.getLanguageId();\n            if (e.changedLanguages.indexOf(languageId) === -1) {\n                return;\n            }\n            this.resetTokenization();\n        }));\n        this.resetTokenization();\n        this._register(attachedViews.onDidChangeVisibleRanges(({ view, state }) => {\n            if (state) {\n                let existing = this._attachedViewStates.get(view);\n                if (!existing) {\n                    existing = new AttachedViewHandler(() => this.refreshRanges(existing.lineRanges));\n                    this._attachedViewStates.set(view, existing);\n                }\n                existing.handleStateChange(state);\n            }\n            else {\n                this._attachedViewStates.deleteAndDispose(view);\n            }\n        }));\n    }\n    resetTokenization(fireTokenChangeEvent = true) {\n        this._tokens.flush();\n        this._debugBackgroundTokens?.flush();\n        if (this._debugBackgroundStates) {\n            this._debugBackgroundStates = new TrackingTokenizationStateStore(this._textModel.getLineCount());\n        }\n        if (fireTokenChangeEvent) {\n            this._onDidChangeTokens.fire({\n                semanticTokensApplied: false,\n                ranges: [\n                    {\n                        fromLineNumber: 1,\n                        toLineNumber: this._textModel.getLineCount(),\n                    },\n                ],\n            });\n        }\n        const initializeTokenization = () => {\n            if (this._textModel.isTooLargeForTokenization()) {\n                return [null, null];\n            }\n            const tokenizationSupport = TokenizationRegistry.get(this.getLanguageId());\n            if (!tokenizationSupport) {\n                return [null, null];\n            }\n            let initialState;\n            try {\n                initialState = tokenizationSupport.getInitialState();\n            }\n            catch (e) {\n                onUnexpectedError(e);\n                return [null, null];\n            }\n            return [tokenizationSupport, initialState];\n        };\n        const [tokenizationSupport, initialState] = initializeTokenization();\n        if (tokenizationSupport && initialState) {\n            this._tokenizer = new TokenizerWithStateStoreAndTextModel(this._textModel.getLineCount(), tokenizationSupport, this._textModel, this._languageIdCodec);\n        }\n        else {\n            this._tokenizer = null;\n        }\n        this._backgroundTokenizer.clear();\n        this._defaultBackgroundTokenizer = null;\n        if (this._tokenizer) {\n            const b = {\n                setTokens: (tokens) => {\n                    this.setTokens(tokens);\n                },\n                backgroundTokenizationFinished: () => {\n                    if (this._backgroundTokenizationState === 2 /* BackgroundTokenizationState.Completed */) {\n                        // We already did a full tokenization and don't go back to progressing.\n                        return;\n                    }\n                    const newState = 2 /* BackgroundTokenizationState.Completed */;\n                    this._backgroundTokenizationState = newState;\n                    this._onDidChangeBackgroundTokenizationState.fire();\n                },\n                setEndState: (lineNumber, state) => {\n                    if (!this._tokenizer) {\n                        return;\n                    }\n                    const firstInvalidEndStateLineNumber = this._tokenizer.store.getFirstInvalidEndStateLineNumber();\n                    // Don't accept states for definitely valid states, the renderer is ahead of the worker!\n                    if (firstInvalidEndStateLineNumber !== null && lineNumber >= firstInvalidEndStateLineNumber) {\n                        this._tokenizer?.store.setEndState(lineNumber, state);\n                    }\n                },\n            };\n            if (tokenizationSupport && tokenizationSupport.createBackgroundTokenizer && !tokenizationSupport.backgroundTokenizerShouldOnlyVerifyTokens) {\n                this._backgroundTokenizer.value = tokenizationSupport.createBackgroundTokenizer(this._textModel, b);\n            }\n            if (!this._backgroundTokenizer.value && !this._textModel.isTooLargeForTokenization()) {\n                this._backgroundTokenizer.value = this._defaultBackgroundTokenizer =\n                    new DefaultBackgroundTokenizer(this._tokenizer, b);\n                this._defaultBackgroundTokenizer.handleChanges();\n            }\n            if (tokenizationSupport?.backgroundTokenizerShouldOnlyVerifyTokens && tokenizationSupport.createBackgroundTokenizer) {\n                this._debugBackgroundTokens = new ContiguousTokensStore(this._languageIdCodec);\n                this._debugBackgroundStates = new TrackingTokenizationStateStore(this._textModel.getLineCount());\n                this._debugBackgroundTokenizer.clear();\n                this._debugBackgroundTokenizer.value = tokenizationSupport.createBackgroundTokenizer(this._textModel, {\n                    setTokens: (tokens) => {\n                        this._debugBackgroundTokens?.setMultilineTokens(tokens, this._textModel);\n                    },\n                    backgroundTokenizationFinished() {\n                        // NO OP\n                    },\n                    setEndState: (lineNumber, state) => {\n                        this._debugBackgroundStates?.setEndState(lineNumber, state);\n                    },\n                });\n            }\n            else {\n                this._debugBackgroundTokens = undefined;\n                this._debugBackgroundStates = undefined;\n                this._debugBackgroundTokenizer.value = undefined;\n            }\n        }\n        this.refreshAllVisibleLineTokens();\n    }\n    handleDidChangeAttached() {\n        this._defaultBackgroundTokenizer?.handleChanges();\n    }\n    handleDidChangeContent(e) {\n        if (e.isFlush) {\n            // Don't fire the event, as the view might not have got the text change event yet\n            this.resetTokenization(false);\n        }\n        else if (!e.isEolChange) { // We don't have to do anything on an EOL change\n            for (const c of e.changes) {\n                const [eolCount, firstLineLength] = countEOL(c.text);\n                this._tokens.acceptEdit(c.range, eolCount, firstLineLength);\n                this._debugBackgroundTokens?.acceptEdit(c.range, eolCount, firstLineLength);\n            }\n            this._debugBackgroundStates?.acceptChanges(e.changes);\n            if (this._tokenizer) {\n                this._tokenizer.store.acceptChanges(e.changes);\n            }\n            this._defaultBackgroundTokenizer?.handleChanges();\n        }\n    }\n    setTokens(tokens) {\n        const { changes } = this._tokens.setMultilineTokens(tokens, this._textModel);\n        if (changes.length > 0) {\n            this._onDidChangeTokens.fire({ semanticTokensApplied: false, ranges: changes, });\n        }\n        return { changes: changes };\n    }\n    refreshAllVisibleLineTokens() {\n        const ranges = LineRange.joinMany([...this._attachedViewStates].map(([_, s]) => s.lineRanges));\n        this.refreshRanges(ranges);\n    }\n    refreshRanges(ranges) {\n        for (const range of ranges) {\n            this.refreshRange(range.startLineNumber, range.endLineNumberExclusive - 1);\n        }\n    }\n    refreshRange(startLineNumber, endLineNumber) {\n        if (!this._tokenizer) {\n            return;\n        }\n        startLineNumber = Math.max(1, Math.min(this._textModel.getLineCount(), startLineNumber));\n        endLineNumber = Math.min(this._textModel.getLineCount(), endLineNumber);\n        const builder = new ContiguousMultilineTokensBuilder();\n        const { heuristicTokens } = this._tokenizer.tokenizeHeuristically(builder, startLineNumber, endLineNumber);\n        const changedTokens = this.setTokens(builder.finalize());\n        if (heuristicTokens) {\n            // We overrode tokens with heuristically computed ones.\n            // Because old states might get reused (thus stopping invalidation),\n            // we have to explicitly request the tokens for the changed ranges again.\n            for (const c of changedTokens.changes) {\n                this._backgroundTokenizer.value?.requestTokens(c.fromLineNumber, c.toLineNumber + 1);\n            }\n        }\n        this._defaultBackgroundTokenizer?.checkFinished();\n    }\n    forceTokenization(lineNumber) {\n        const builder = new ContiguousMultilineTokensBuilder();\n        this._tokenizer?.updateTokensUntilLine(builder, lineNumber);\n        this.setTokens(builder.finalize());\n        this._defaultBackgroundTokenizer?.checkFinished();\n    }\n    hasAccurateTokensForLine(lineNumber) {\n        if (!this._tokenizer) {\n            return true;\n        }\n        return this._tokenizer.hasAccurateTokensForLine(lineNumber);\n    }\n    isCheapToTokenize(lineNumber) {\n        if (!this._tokenizer) {\n            return true;\n        }\n        return this._tokenizer.isCheapToTokenize(lineNumber);\n    }\n    getLineTokens(lineNumber) {\n        const lineText = this._textModel.getLineContent(lineNumber);\n        const result = this._tokens.getTokens(this._textModel.getLanguageId(), lineNumber - 1, lineText);\n        if (this._debugBackgroundTokens && this._debugBackgroundStates && this._tokenizer) {\n            if (this._debugBackgroundStates.getFirstInvalidEndStateLineNumberOrMax() > lineNumber && this._tokenizer.store.getFirstInvalidEndStateLineNumberOrMax() > lineNumber) {\n                const backgroundResult = this._debugBackgroundTokens.getTokens(this._textModel.getLanguageId(), lineNumber - 1, lineText);\n                if (!result.equals(backgroundResult) && this._debugBackgroundTokenizer.value?.reportMismatchingTokens) {\n                    this._debugBackgroundTokenizer.value.reportMismatchingTokens(lineNumber);\n                }\n            }\n        }\n        return result;\n    }\n    getTokenTypeIfInsertingCharacter(lineNumber, column, character) {\n        if (!this._tokenizer) {\n            return 0 /* StandardTokenType.Other */;\n        }\n        const position = this._textModel.validatePosition(new Position(lineNumber, column));\n        this.forceTokenization(position.lineNumber);\n        return this._tokenizer.getTokenTypeIfInsertingCharacter(position, character);\n    }\n    tokenizeLineWithEdit(position, length, newText) {\n        if (!this._tokenizer) {\n            return null;\n        }\n        const validatedPosition = this._textModel.validatePosition(position);\n        this.forceTokenization(validatedPosition.lineNumber);\n        return this._tokenizer.tokenizeLineWithEdit(validatedPosition, length, newText);\n    }\n    get hasTokens() {\n        return this._tokens.hasTokens;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { equals } from '../../../base/common/arrays.js';\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { LineRange } from '../core/lineRange.js';\n/**\n * @internal\n */\nexport class AttachedViews {\n    constructor() {\n        this._onDidChangeVisibleRanges = new Emitter();\n        this.onDidChangeVisibleRanges = this._onDidChangeVisibleRanges.event;\n        this._views = new Set();\n    }\n    attachView() {\n        const view = new AttachedViewImpl((state) => {\n            this._onDidChangeVisibleRanges.fire({ view, state });\n        });\n        this._views.add(view);\n        return view;\n    }\n    detachView(view) {\n        this._views.delete(view);\n        this._onDidChangeVisibleRanges.fire({ view, state: undefined });\n    }\n}\nclass AttachedViewImpl {\n    constructor(handleStateChange) {\n        this.handleStateChange = handleStateChange;\n    }\n    setVisibleLines(visibleLines, stabilized) {\n        const visibleLineRanges = visibleLines.map((line) => new LineRange(line.startLineNumber, line.endLineNumber + 1));\n        this.handleStateChange({ visibleLineRanges, stabilized });\n    }\n}\nexport class AttachedViewHandler extends Disposable {\n    get lineRanges() { return this._lineRanges; }\n    constructor(_refreshTokens) {\n        super();\n        this._refreshTokens = _refreshTokens;\n        this.runner = this._register(new RunOnceScheduler(() => this.update(), 50));\n        this._computedLineRanges = [];\n        this._lineRanges = [];\n    }\n    update() {\n        if (equals(this._computedLineRanges, this._lineRanges, (a, b) => a.equals(b))) {\n            return;\n        }\n        this._computedLineRanges = this._lineRanges;\n        this._refreshTokens();\n    }\n    handleStateChange(state) {\n        this._lineRanges = state.visibleLineRanges;\n        if (state.stabilized) {\n            this.runner.cancel();\n            this.update();\n        }\n        else {\n            this.runner.schedule();\n        }\n    }\n}\nexport class AbstractTokens extends Disposable {\n    get backgroundTokenizationState() {\n        return this._backgroundTokenizationState;\n    }\n    constructor(_languageIdCodec, _textModel, getLanguageId) {\n        super();\n        this._languageIdCodec = _languageIdCodec;\n        this._textModel = _textModel;\n        this.getLanguageId = getLanguageId;\n        this._backgroundTokenizationState = 1 /* BackgroundTokenizationState.InProgress */;\n        this._onDidChangeBackgroundTokenizationState = this._register(new Emitter());\n        /** @internal, should not be exposed by the text model! */\n        this.onDidChangeBackgroundTokenizationState = this._onDidChangeBackgroundTokenizationState.event;\n        this._onDidChangeTokens = this._register(new Emitter());\n        /** @internal, should not be exposed by the text model! */\n        this.onDidChangeTokens = this._onDidChangeTokens.event;\n    }\n    tokenizeIfCheap(lineNumber) {\n        if (this.isCheapToTokenize(lineNumber)) {\n            this.forceTokenization(lineNumber);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { TreeSitterTokenizationRegistry } from '../languages.js';\nimport { LineTokens } from '../tokens/lineTokens.js';\nimport { AbstractTokens } from './tokens.js';\nexport class TreeSitterTokens extends AbstractTokens {\n    constructor(_treeSitterService, languageIdCodec, textModel, languageId) {\n        super(languageIdCodec, textModel, languageId);\n        this._treeSitterService = _treeSitterService;\n        this._tokenizationSupport = null;\n        this._initialize();\n    }\n    _initialize() {\n        const newLanguage = this.getLanguageId();\n        if (!this._tokenizationSupport || this._lastLanguageId !== newLanguage) {\n            this._lastLanguageId = newLanguage;\n            this._tokenizationSupport = TreeSitterTokenizationRegistry.get(newLanguage);\n        }\n    }\n    getLineTokens(lineNumber) {\n        const content = this._textModel.getLineContent(lineNumber);\n        if (this._tokenizationSupport) {\n            const rawTokens = this._tokenizationSupport.tokenizeEncoded(lineNumber, this._textModel);\n            if (rawTokens) {\n                return new LineTokens(rawTokens, content, this._languageIdCodec);\n            }\n        }\n        return LineTokens.createEmpty(content, this._languageIdCodec);\n    }\n    resetTokenization(fireTokenChangeEvent = true) {\n        if (fireTokenChangeEvent) {\n            this._onDidChangeTokens.fire({\n                semanticTokensApplied: false,\n                ranges: [\n                    {\n                        fromLineNumber: 1,\n                        toLineNumber: this._textModel.getLineCount(),\n                    },\n                ],\n            });\n        }\n        this._initialize();\n    }\n    handleDidChangeAttached() {\n        // TODO @alexr00 implement for background tokenization\n    }\n    handleDidChangeContent(e) {\n        if (e.isFlush) {\n            // Don't fire the event, as the view might not have got the text change event yet\n            this.resetTokenization(false);\n        }\n    }\n    forceTokenization(lineNumber) {\n        // TODO @alexr00 implement\n    }\n    hasAccurateTokensForLine(lineNumber) {\n        // TODO @alexr00 update for background tokenization\n        return true;\n    }\n    isCheapToTokenize(lineNumber) {\n        // TODO @alexr00 update for background tokenization\n        return true;\n    }\n    getTokenTypeIfInsertingCharacter(lineNumber, column, character) {\n        // TODO @alexr00 implement once we have custom parsing and don't just feed in the whole text model value\n        return 0 /* StandardTokenType.Other */;\n    }\n    tokenizeLineWithEdit(position, length, newText) {\n        // TODO @alexr00 understand what this is for and implement\n        return null;\n    }\n    get hasTokens() {\n        // TODO @alexr00 once we have a token store, implement properly\n        const hasTree = this._treeSitterService.getParseResult(this._textModel) !== undefined;\n        return hasTree;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Returns:\n *  - -1 => the line consists of whitespace\n *  - otherwise => the indent level is returned value\n */\nexport function computeIndentLevel(line, tabSize) {\n    let indent = 0;\n    let i = 0;\n    const len = line.length;\n    while (i < len) {\n        const chCode = line.charCodeAt(i);\n        if (chCode === 32 /* CharCode.Space */) {\n            indent++;\n        }\n        else if (chCode === 9 /* CharCode.Tab */) {\n            indent = indent - indent % tabSize + tabSize;\n        }\n        else {\n            break;\n        }\n        i++;\n    }\n    if (i === len) {\n        return -1; // line only consists of whitespace\n    }\n    return indent;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { KeyChord } from '../../../base/common/keyCodes.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { Selection } from '../core/selection.js';\nimport { Token } from '../languages.js';\nimport * as standaloneEnums from '../standalone/standaloneEnums.js';\nexport class KeyMod {\n    static { this.CtrlCmd = 2048 /* ConstKeyMod.CtrlCmd */; }\n    static { this.Shift = 1024 /* ConstKeyMod.Shift */; }\n    static { this.Alt = 512 /* ConstKeyMod.Alt */; }\n    static { this.WinCtrl = 256 /* ConstKeyMod.WinCtrl */; }\n    static chord(firstPart, secondPart) {\n        return KeyChord(firstPart, secondPart);\n    }\n}\nexport function createMonacoBaseAPI() {\n    return {\n        editor: undefined, // undefined override expected here\n        languages: undefined, // undefined override expected here\n        CancellationTokenSource: CancellationTokenSource,\n        Emitter: Emitter,\n        KeyCode: standaloneEnums.KeyCode,\n        KeyMod: KeyMod,\n        Position: Position,\n        Range: Range,\n        Selection: Selection,\n        SelectionDirection: standaloneEnums.SelectionDirection,\n        MarkerSeverity: standaloneEnums.MarkerSeverity,\n        MarkerTag: standaloneEnums.MarkerTag,\n        Uri: URI,\n        Token: Token\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { stringDiff } from '../../../base/common/diff/diff.js';\nimport { Range } from '../core/range.js';\nimport { computeLinks } from '../languages/linkComputer.js';\nimport { BasicInplaceReplace } from '../languages/supports/inplaceReplaceSupport.js';\nimport { createMonacoBaseAPI } from './editorBaseApi.js';\nimport { EditorWorkerHost } from './editorWorkerHost.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\nimport { UnicodeTextModelHighlighter } from './unicodeTextModelHighlighter.js';\nimport { linesDiffComputers } from '../diff/linesDiffComputers.js';\nimport { createProxyObject, getAllMethodNames } from '../../../base/common/objects.js';\nimport { FileAccess } from '../../../base/common/network.js';\nimport { computeDefaultDocumentColors } from '../languages/defaultDocumentColorsComputer.js';\nimport { findSectionHeaders } from './findSectionHeaders.js';\nimport { WorkerTextModelSyncServer } from './textModelSync/textModelSync.impl.js';\n// ESM-comment-begin\n// const isESM = false;\n// ESM-comment-end\n// ESM-uncomment-begin\nconst isESM = true;\n/**\n * @internal\n */\nexport class BaseEditorSimpleWorker {\n    constructor() {\n        this._workerTextModelSyncServer = new WorkerTextModelSyncServer();\n    }\n    dispose() {\n    }\n    _getModel(uri) {\n        return this._workerTextModelSyncServer.getModel(uri);\n    }\n    _getModels() {\n        return this._workerTextModelSyncServer.getModels();\n    }\n    $acceptNewModel(data) {\n        this._workerTextModelSyncServer.$acceptNewModel(data);\n    }\n    $acceptModelChanged(uri, e) {\n        this._workerTextModelSyncServer.$acceptModelChanged(uri, e);\n    }\n    $acceptRemovedModel(uri) {\n        this._workerTextModelSyncServer.$acceptRemovedModel(uri);\n    }\n    async $computeUnicodeHighlights(url, options, range) {\n        const model = this._getModel(url);\n        if (!model) {\n            return { ranges: [], hasMore: false, ambiguousCharacterCount: 0, invisibleCharacterCount: 0, nonBasicAsciiCharacterCount: 0 };\n        }\n        return UnicodeTextModelHighlighter.computeUnicodeHighlights(model, options, range);\n    }\n    async $findSectionHeaders(url, options) {\n        const model = this._getModel(url);\n        if (!model) {\n            return [];\n        }\n        return findSectionHeaders(model, options);\n    }\n    // ---- BEGIN diff --------------------------------------------------------------------------\n    async $computeDiff(originalUrl, modifiedUrl, options, algorithm) {\n        const original = this._getModel(originalUrl);\n        const modified = this._getModel(modifiedUrl);\n        if (!original || !modified) {\n            return null;\n        }\n        const result = EditorSimpleWorker.computeDiff(original, modified, options, algorithm);\n        return result;\n    }\n    static computeDiff(originalTextModel, modifiedTextModel, options, algorithm) {\n        const diffAlgorithm = algorithm === 'advanced' ? linesDiffComputers.getDefault() : linesDiffComputers.getLegacy();\n        const originalLines = originalTextModel.getLinesContent();\n        const modifiedLines = modifiedTextModel.getLinesContent();\n        const result = diffAlgorithm.computeDiff(originalLines, modifiedLines, options);\n        const identical = (result.changes.length > 0 ? false : this._modelsAreIdentical(originalTextModel, modifiedTextModel));\n        function getLineChanges(changes) {\n            return changes.map(m => ([m.original.startLineNumber, m.original.endLineNumberExclusive, m.modified.startLineNumber, m.modified.endLineNumberExclusive, m.innerChanges?.map(m => [\n                    m.originalRange.startLineNumber,\n                    m.originalRange.startColumn,\n                    m.originalRange.endLineNumber,\n                    m.originalRange.endColumn,\n                    m.modifiedRange.startLineNumber,\n                    m.modifiedRange.startColumn,\n                    m.modifiedRange.endLineNumber,\n                    m.modifiedRange.endColumn,\n                ])]));\n        }\n        return {\n            identical,\n            quitEarly: result.hitTimeout,\n            changes: getLineChanges(result.changes),\n            moves: result.moves.map(m => ([\n                m.lineRangeMapping.original.startLineNumber,\n                m.lineRangeMapping.original.endLineNumberExclusive,\n                m.lineRangeMapping.modified.startLineNumber,\n                m.lineRangeMapping.modified.endLineNumberExclusive,\n                getLineChanges(m.changes)\n            ])),\n        };\n    }\n    static _modelsAreIdentical(original, modified) {\n        const originalLineCount = original.getLineCount();\n        const modifiedLineCount = modified.getLineCount();\n        if (originalLineCount !== modifiedLineCount) {\n            return false;\n        }\n        for (let line = 1; line <= originalLineCount; line++) {\n            const originalLine = original.getLineContent(line);\n            const modifiedLine = modified.getLineContent(line);\n            if (originalLine !== modifiedLine) {\n                return false;\n            }\n        }\n        return true;\n    }\n    // ---- END diff --------------------------------------------------------------------------\n    // ---- BEGIN minimal edits ---------------------------------------------------------------\n    static { this._diffLimit = 100000; }\n    async $computeMoreMinimalEdits(modelUrl, edits, pretty) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return edits;\n        }\n        const result = [];\n        let lastEol = undefined;\n        edits = edits.slice(0).sort((a, b) => {\n            if (a.range && b.range) {\n                return Range.compareRangesUsingStarts(a.range, b.range);\n            }\n            // eol only changes should go to the end\n            const aRng = a.range ? 0 : 1;\n            const bRng = b.range ? 0 : 1;\n            return aRng - bRng;\n        });\n        // merge adjacent edits\n        let writeIndex = 0;\n        for (let readIndex = 1; readIndex < edits.length; readIndex++) {\n            if (Range.getEndPosition(edits[writeIndex].range).equals(Range.getStartPosition(edits[readIndex].range))) {\n                edits[writeIndex].range = Range.fromPositions(Range.getStartPosition(edits[writeIndex].range), Range.getEndPosition(edits[readIndex].range));\n                edits[writeIndex].text += edits[readIndex].text;\n            }\n            else {\n                writeIndex++;\n                edits[writeIndex] = edits[readIndex];\n            }\n        }\n        edits.length = writeIndex + 1;\n        for (let { range, text, eol } of edits) {\n            if (typeof eol === 'number') {\n                lastEol = eol;\n            }\n            if (Range.isEmpty(range) && !text) {\n                // empty change\n                continue;\n            }\n            const original = model.getValueInRange(range);\n            text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n            if (original === text) {\n                // noop\n                continue;\n            }\n            // make sure diff won't take too long\n            if (Math.max(text.length, original.length) > EditorSimpleWorker._diffLimit) {\n                result.push({ range, text });\n                continue;\n            }\n            // compute diff between original and edit.text\n            const changes = stringDiff(original, text, pretty);\n            const editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n            for (const change of changes) {\n                const start = model.positionAt(editOffset + change.originalStart);\n                const end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n                const newEdit = {\n                    text: text.substr(change.modifiedStart, change.modifiedLength),\n                    range: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n                };\n                if (model.getValueInRange(newEdit.range) !== newEdit.text) {\n                    result.push(newEdit);\n                }\n            }\n        }\n        if (typeof lastEol === 'number') {\n            result.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n        }\n        return result;\n    }\n    // ---- END minimal edits ---------------------------------------------------------------\n    async $computeLinks(modelUrl) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return null;\n        }\n        return computeLinks(model);\n    }\n    // --- BEGIN default document colors -----------------------------------------------------------\n    async $computeDefaultDocumentColors(modelUrl) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return null;\n        }\n        return computeDefaultDocumentColors(model);\n    }\n    // ---- BEGIN suggest --------------------------------------------------------------------------\n    static { this._suggestionsLimit = 10000; }\n    async $textualSuggest(modelUrls, leadingWord, wordDef, wordDefFlags) {\n        const sw = new StopWatch();\n        const wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        const seen = new Set();\n        outer: for (const url of modelUrls) {\n            const model = this._getModel(url);\n            if (!model) {\n                continue;\n            }\n            for (const word of model.words(wordDefRegExp)) {\n                if (word === leadingWord || !isNaN(Number(word))) {\n                    continue;\n                }\n                seen.add(word);\n                if (seen.size > EditorSimpleWorker._suggestionsLimit) {\n                    break outer;\n                }\n            }\n        }\n        return { words: Array.from(seen), duration: sw.elapsed() };\n    }\n    // ---- END suggest --------------------------------------------------------------------------\n    //#region -- word ranges --\n    async $computeWordRanges(modelUrl, range, wordDef, wordDefFlags) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return Object.create(null);\n        }\n        const wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        const result = Object.create(null);\n        for (let line = range.startLineNumber; line < range.endLineNumber; line++) {\n            const words = model.getLineWords(line, wordDefRegExp);\n            for (const word of words) {\n                if (!isNaN(Number(word.word))) {\n                    continue;\n                }\n                let array = result[word.word];\n                if (!array) {\n                    array = [];\n                    result[word.word] = array;\n                }\n                array.push({\n                    startLineNumber: line,\n                    startColumn: word.startColumn,\n                    endLineNumber: line,\n                    endColumn: word.endColumn\n                });\n            }\n        }\n        return result;\n    }\n    //#endregion\n    async $navigateValueSet(modelUrl, range, up, wordDef, wordDefFlags) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return null;\n        }\n        const wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        if (range.startColumn === range.endColumn) {\n            range = {\n                startLineNumber: range.startLineNumber,\n                startColumn: range.startColumn,\n                endLineNumber: range.endLineNumber,\n                endColumn: range.endColumn + 1\n            };\n        }\n        const selectionText = model.getValueInRange(range);\n        const wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n        if (!wordRange) {\n            return null;\n        }\n        const word = model.getValueInRange(wordRange);\n        const result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n        return result;\n    }\n}\n/**\n * @internal\n */\nexport class EditorSimpleWorker extends BaseEditorSimpleWorker {\n    constructor(_host, _foreignModuleFactory) {\n        super();\n        this._host = _host;\n        this._foreignModuleFactory = _foreignModuleFactory;\n        this._foreignModule = null;\n    }\n    async $ping() {\n        return 'pong';\n    }\n    // ---- BEGIN foreign module support --------------------------------------------------------------------------\n    $loadForeignModule(moduleId, createData, foreignHostMethods) {\n        const proxyMethodRequest = (method, args) => {\n            return this._host.$fhr(method, args);\n        };\n        const foreignHost = createProxyObject(foreignHostMethods, proxyMethodRequest);\n        const ctx = {\n            host: foreignHost,\n            getMirrorModels: () => {\n                return this._getModels();\n            }\n        };\n        if (this._foreignModuleFactory) {\n            this._foreignModule = this._foreignModuleFactory(ctx, createData);\n            // static foreing module\n            return Promise.resolve(getAllMethodNames(this._foreignModule));\n        }\n        return new Promise((resolve, reject) => {\n            const onModuleCallback = (foreignModule) => {\n                this._foreignModule = foreignModule.create(ctx, createData);\n                resolve(getAllMethodNames(this._foreignModule));\n            };\n            if (!isESM) {\n                require([`${moduleId}`], onModuleCallback, reject);\n            }\n            else {\n                const url = FileAccess.asBrowserUri(`${moduleId}.js`).toString(true);\n                import(`${url}`).then(onModuleCallback).catch(reject);\n            }\n        });\n    }\n    // foreign method request\n    $fmr(method, args) {\n        if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n}\n/**\n * Defines the worker entry point. Must be exported and named `create`.\n * @skipMangle\n * @internal\n */\nexport function create(workerServer) {\n    return new EditorSimpleWorker(EditorWorkerHost.getChannel(workerServer), null);\n}\nif (typeof importScripts === 'function') {\n    // Running in a web worker\n    globalThis.monaco = createMonacoBaseAPI();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nexport const IEditorWorkerService = createDecorator('editorWorkerService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class EditorWorkerHost {\n    static { this.CHANNEL_NAME = 'editorWorkerHost'; }\n    static getChannel(workerServer) {\n        return workerServer.getChannel(EditorWorkerHost.CHANNEL_NAME);\n    }\n    static setChannel(workerClient, obj) {\n        workerClient.setChannel(EditorWorkerHost.CHANNEL_NAME, obj);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nconst markRegex = new RegExp('\\\\bMARK:\\\\s*(.*)$', 'd');\nconst trimDashesRegex = /^-+|-+$/g;\n/**\n * Find section headers in the model.\n *\n * @param model the text model to search in\n * @param options options to search with\n * @returns an array of section headers\n */\nexport function findSectionHeaders(model, options) {\n    let headers = [];\n    if (options.findRegionSectionHeaders && options.foldingRules?.markers) {\n        const regionHeaders = collectRegionHeaders(model, options);\n        headers = headers.concat(regionHeaders);\n    }\n    if (options.findMarkSectionHeaders) {\n        const markHeaders = collectMarkHeaders(model);\n        headers = headers.concat(markHeaders);\n    }\n    return headers;\n}\nfunction collectRegionHeaders(model, options) {\n    const regionHeaders = [];\n    const endLineNumber = model.getLineCount();\n    for (let lineNumber = 1; lineNumber <= endLineNumber; lineNumber++) {\n        const lineContent = model.getLineContent(lineNumber);\n        const match = lineContent.match(options.foldingRules.markers.start);\n        if (match) {\n            const range = { startLineNumber: lineNumber, startColumn: match[0].length + 1, endLineNumber: lineNumber, endColumn: lineContent.length + 1 };\n            if (range.endColumn > range.startColumn) {\n                const sectionHeader = {\n                    range,\n                    ...getHeaderText(lineContent.substring(match[0].length)),\n                    shouldBeInComments: false\n                };\n                if (sectionHeader.text || sectionHeader.hasSeparatorLine) {\n                    regionHeaders.push(sectionHeader);\n                }\n            }\n        }\n    }\n    return regionHeaders;\n}\nfunction collectMarkHeaders(model) {\n    const markHeaders = [];\n    const endLineNumber = model.getLineCount();\n    for (let lineNumber = 1; lineNumber <= endLineNumber; lineNumber++) {\n        const lineContent = model.getLineContent(lineNumber);\n        addMarkHeaderIfFound(lineContent, lineNumber, markHeaders);\n    }\n    return markHeaders;\n}\nfunction addMarkHeaderIfFound(lineContent, lineNumber, sectionHeaders) {\n    markRegex.lastIndex = 0;\n    const match = markRegex.exec(lineContent);\n    if (match) {\n        const column = match.indices[1][0] + 1;\n        const endColumn = match.indices[1][1] + 1;\n        const range = { startLineNumber: lineNumber, startColumn: column, endLineNumber: lineNumber, endColumn: endColumn };\n        if (range.endColumn > range.startColumn) {\n            const sectionHeader = {\n                range,\n                ...getHeaderText(match[1]),\n                shouldBeInComments: true\n            };\n            if (sectionHeader.text || sectionHeader.hasSeparatorLine) {\n                sectionHeaders.push(sectionHeader);\n            }\n        }\n    }\n}\nfunction getHeaderText(text) {\n    text = text.trim();\n    const hasSeparatorLine = text.startsWith('-');\n    text = text.replace(trimDashesRegex, '');\n    return { text, hasSeparatorLine };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Schemas } from '../../../base/common/network.js';\nimport { DataUri } from '../../../base/common/resources.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../languages/modesRegistry.js';\nimport { FileKind } from '../../../platform/files/common/files.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nconst fileIconDirectoryRegex = /(?:\\/|^)(?:([^\\/]+)\\/)?([^\\/]+)$/;\nexport function getIconClasses(modelService, languageService, resource, fileKind, icon) {\n    if (ThemeIcon.isThemeIcon(icon)) {\n        return [`codicon-${icon.id}`, 'predefined-file-icon'];\n    }\n    if (URI.isUri(icon)) {\n        return [];\n    }\n    // we always set these base classes even if we do not have a path\n    const classes = fileKind === FileKind.ROOT_FOLDER ? ['rootfolder-icon'] : fileKind === FileKind.FOLDER ? ['folder-icon'] : ['file-icon'];\n    if (resource) {\n        // Get the path and name of the resource. For data-URIs, we need to parse specially\n        let name;\n        if (resource.scheme === Schemas.data) {\n            const metadata = DataUri.parseMetaData(resource);\n            name = metadata.get(DataUri.META_DATA_LABEL);\n        }\n        else {\n            const match = resource.path.match(fileIconDirectoryRegex);\n            if (match) {\n                name = cssEscape(match[2].toLowerCase());\n                if (match[1]) {\n                    classes.push(`${cssEscape(match[1].toLowerCase())}-name-dir-icon`); // parent directory\n                }\n            }\n            else {\n                name = cssEscape(resource.authority.toLowerCase());\n            }\n        }\n        // Root Folders\n        if (fileKind === FileKind.ROOT_FOLDER) {\n            classes.push(`${name}-root-name-folder-icon`);\n        }\n        // Folders\n        else if (fileKind === FileKind.FOLDER) {\n            classes.push(`${name}-name-folder-icon`);\n        }\n        // Files\n        else {\n            // Name & Extension(s)\n            if (name) {\n                classes.push(`${name}-name-file-icon`);\n                classes.push(`name-file-icon`); // extra segment to increase file-name score\n                // Avoid doing an explosive combination of extensions for very long filenames\n                // (most file systems do not allow files > 255 length) with lots of `.` characters\n                // https://github.com/microsoft/vscode/issues/116199\n                if (name.length <= 255) {\n                    const dotSegments = name.split('.');\n                    for (let i = 1; i < dotSegments.length; i++) {\n                        classes.push(`${dotSegments.slice(i).join('.')}-ext-file-icon`); // add each combination of all found extensions if more than one\n                    }\n                }\n                classes.push(`ext-file-icon`); // extra segment to increase file-ext score\n            }\n            // Detected Mode\n            const detectedLanguageId = detectLanguageId(modelService, languageService, resource);\n            if (detectedLanguageId) {\n                classes.push(`${cssEscape(detectedLanguageId)}-lang-file-icon`);\n            }\n        }\n    }\n    return classes;\n}\nfunction detectLanguageId(modelService, languageService, resource) {\n    if (!resource) {\n        return null; // we need a resource at least\n    }\n    let languageId = null;\n    // Data URI: check for encoded metadata\n    if (resource.scheme === Schemas.data) {\n        const metadata = DataUri.parseMetaData(resource);\n        const mime = metadata.get(DataUri.META_DATA_MIME);\n        if (mime) {\n            languageId = languageService.getLanguageIdByMimeType(mime);\n        }\n    }\n    // Any other URI: check for model if existing\n    else {\n        const model = modelService.getModel(resource);\n        if (model) {\n            languageId = model.getLanguageId();\n        }\n    }\n    // only take if the language id is specific (aka no just plain text)\n    if (languageId && languageId !== PLAINTEXT_LANGUAGE_ID) {\n        return languageId;\n    }\n    // otherwise fallback to path based detection\n    return languageService.guessLanguageIdByFilepathOrFirstLine(resource);\n}\nfunction cssEscape(str) {\n    return str.replace(/[\\s]/g, '/'); // HTML class names can not contain certain whitespace characters (https://dom.spec.whatwg.org/#interface-domtokenlist), use / instead, which doesn't exist in file names.\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { doHash } from '../../../base/common/hash.js';\nimport { LRUCache } from '../../../base/common/map.js';\nimport { clamp, MovingAverage, SlidingWindowAverage } from '../../../base/common/numbers.js';\nimport { IEnvironmentService } from '../../../platform/environment/common/environment.js';\nimport { registerSingleton } from '../../../platform/instantiation/common/extensions.js';\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { matchesScheme } from '../../../base/common/network.js';\nexport const ILanguageFeatureDebounceService = createDecorator('ILanguageFeatureDebounceService');\nvar IdentityHash;\n(function (IdentityHash) {\n    const _hashes = new WeakMap();\n    let pool = 0;\n    function of(obj) {\n        let value = _hashes.get(obj);\n        if (value === undefined) {\n            value = ++pool;\n            _hashes.set(obj, value);\n        }\n        return value;\n    }\n    IdentityHash.of = of;\n})(IdentityHash || (IdentityHash = {}));\nclass NullDebounceInformation {\n    constructor(_default) {\n        this._default = _default;\n    }\n    get(_model) {\n        return this._default;\n    }\n    update(_model, _value) {\n        return this._default;\n    }\n    default() {\n        return this._default;\n    }\n}\nclass FeatureDebounceInformation {\n    constructor(_logService, _name, _registry, _default, _min, _max) {\n        this._logService = _logService;\n        this._name = _name;\n        this._registry = _registry;\n        this._default = _default;\n        this._min = _min;\n        this._max = _max;\n        this._cache = new LRUCache(50, 0.7);\n    }\n    _key(model) {\n        return model.id + this._registry.all(model).reduce((hashVal, obj) => doHash(IdentityHash.of(obj), hashVal), 0);\n    }\n    get(model) {\n        const key = this._key(model);\n        const avg = this._cache.get(key);\n        return avg\n            ? clamp(avg.value, this._min, this._max)\n            : this.default();\n    }\n    update(model, value) {\n        const key = this._key(model);\n        let avg = this._cache.get(key);\n        if (!avg) {\n            avg = new SlidingWindowAverage(6);\n            this._cache.set(key, avg);\n        }\n        const newValue = clamp(avg.update(value), this._min, this._max);\n        if (!matchesScheme(model.uri, 'output')) {\n            this._logService.trace(`[DEBOUNCE: ${this._name}] for ${model.uri.toString()} is ${newValue}ms`);\n        }\n        return newValue;\n    }\n    _overall() {\n        const result = new MovingAverage();\n        for (const [, avg] of this._cache) {\n            result.update(avg.value);\n        }\n        return result.value;\n    }\n    default() {\n        const value = (this._overall() | 0) || this._default;\n        return clamp(value, this._min, this._max);\n    }\n}\nlet LanguageFeatureDebounceService = class LanguageFeatureDebounceService {\n    constructor(_logService, envService) {\n        this._logService = _logService;\n        this._data = new Map();\n        this._isDev = envService.isExtensionDevelopment || !envService.isBuilt;\n    }\n    for(feature, name, config) {\n        const min = config?.min ?? 50;\n        const max = config?.max ?? min ** 2;\n        const extra = config?.key ?? undefined;\n        const key = `${IdentityHash.of(feature)},${min}${extra ? ',' + extra : ''}`;\n        let info = this._data.get(key);\n        if (!info) {\n            if (this._isDev) {\n                this._logService.debug(`[DEBOUNCE: ${name}] is disabled in developed mode`);\n                info = new NullDebounceInformation(min * 1.5);\n            }\n            else {\n                info = new FeatureDebounceInformation(this._logService, name, feature, (this._overallAverage() | 0) || (min * 1.5), // default is overall default or derived from min-value\n                min, max);\n            }\n            this._data.set(key, info);\n        }\n        return info;\n    }\n    _overallAverage() {\n        // Average of all language features. Not a great value but an approximation\n        const result = new MovingAverage();\n        for (const info of this._data.values()) {\n            result.update(info.default());\n        }\n        return result.value;\n    }\n};\nLanguageFeatureDebounceService = __decorate([\n    __param(0, ILogService),\n    __param(1, IEnvironmentService)\n], LanguageFeatureDebounceService);\nexport { LanguageFeatureDebounceService };\nregisterSingleton(ILanguageFeatureDebounceService, LanguageFeatureDebounceService, 1 /* InstantiationType.Delayed */);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nexport const ILanguageFeaturesService = createDecorator('ILanguageFeaturesService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LanguageFeatureRegistry } from '../languageFeatureRegistry.js';\nimport { ILanguageFeaturesService } from './languageFeatures.js';\nimport { registerSingleton } from '../../../platform/instantiation/common/extensions.js';\nexport class LanguageFeaturesService {\n    constructor() {\n        this.referenceProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.renameProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.newSymbolNamesProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.codeActionProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.definitionProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.typeDefinitionProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.declarationProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.implementationProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.documentSymbolProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.inlayHintsProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.colorProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.codeLensProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.documentFormattingEditProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.documentRangeFormattingEditProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.onTypeFormattingEditProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.signatureHelpProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.hoverProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.documentHighlightProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.multiDocumentHighlightProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.selectionRangeProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.foldingRangeProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.linkProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.inlineCompletionsProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.inlineEditProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.completionProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.linkedEditingRangeProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.documentRangeSemanticTokensProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.documentSemanticTokensProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.documentDropEditProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.documentPasteEditProvider = new LanguageFeatureRegistry(this._score.bind(this));\n    }\n    _score(uri) {\n        return this._notebookTypeResolver?.(uri);\n    }\n}\nregisterSingleton(ILanguageFeaturesService, LanguageFeaturesService, 1 /* InstantiationType.Delayed */);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { LanguagesRegistry } from './languagesRegistry.js';\nimport { firstOrDefault } from '../../../base/common/arrays.js';\nimport { TokenizationRegistry } from '../languages.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../languages/modesRegistry.js';\nimport { observableFromEvent } from '../../../base/common/observable.js';\nexport class LanguageService extends Disposable {\n    static { this.instanceCount = 0; }\n    constructor(warnOnOverwrite = false) {\n        super();\n        this._onDidRequestBasicLanguageFeatures = this._register(new Emitter());\n        this.onDidRequestBasicLanguageFeatures = this._onDidRequestBasicLanguageFeatures.event;\n        this._onDidRequestRichLanguageFeatures = this._register(new Emitter());\n        this.onDidRequestRichLanguageFeatures = this._onDidRequestRichLanguageFeatures.event;\n        this._onDidChange = this._register(new Emitter({ leakWarningThreshold: 200 /* https://github.com/microsoft/vscode/issues/119968 */ }));\n        this.onDidChange = this._onDidChange.event;\n        this._requestedBasicLanguages = new Set();\n        this._requestedRichLanguages = new Set();\n        LanguageService.instanceCount++;\n        this._registry = this._register(new LanguagesRegistry(true, warnOnOverwrite));\n        this.languageIdCodec = this._registry.languageIdCodec;\n        this._register(this._registry.onDidChange(() => this._onDidChange.fire()));\n    }\n    dispose() {\n        LanguageService.instanceCount--;\n        super.dispose();\n    }\n    isRegisteredLanguageId(languageId) {\n        return this._registry.isRegisteredLanguageId(languageId);\n    }\n    getLanguageIdByLanguageName(languageName) {\n        return this._registry.getLanguageIdByLanguageName(languageName);\n    }\n    getLanguageIdByMimeType(mimeType) {\n        return this._registry.getLanguageIdByMimeType(mimeType);\n    }\n    guessLanguageIdByFilepathOrFirstLine(resource, firstLine) {\n        const languageIds = this._registry.guessLanguageIdByFilepathOrFirstLine(resource, firstLine);\n        return firstOrDefault(languageIds, null);\n    }\n    createById(languageId) {\n        return new LanguageSelection(this.onDidChange, () => {\n            return this._createAndGetLanguageIdentifier(languageId);\n        });\n    }\n    createByFilepathOrFirstLine(resource, firstLine) {\n        return new LanguageSelection(this.onDidChange, () => {\n            const languageId = this.guessLanguageIdByFilepathOrFirstLine(resource, firstLine);\n            return this._createAndGetLanguageIdentifier(languageId);\n        });\n    }\n    _createAndGetLanguageIdentifier(languageId) {\n        if (!languageId || !this.isRegisteredLanguageId(languageId)) {\n            // Fall back to plain text if language is unknown\n            languageId = PLAINTEXT_LANGUAGE_ID;\n        }\n        return languageId;\n    }\n    requestBasicLanguageFeatures(languageId) {\n        if (!this._requestedBasicLanguages.has(languageId)) {\n            this._requestedBasicLanguages.add(languageId);\n            this._onDidRequestBasicLanguageFeatures.fire(languageId);\n        }\n    }\n    requestRichLanguageFeatures(languageId) {\n        if (!this._requestedRichLanguages.has(languageId)) {\n            this._requestedRichLanguages.add(languageId);\n            // Ensure basic features are requested\n            this.requestBasicLanguageFeatures(languageId);\n            // Ensure tokenizers are created\n            TokenizationRegistry.getOrCreate(languageId);\n            this._onDidRequestRichLanguageFeatures.fire(languageId);\n        }\n    }\n}\nclass LanguageSelection {\n    constructor(onDidChangeLanguages, selector) {\n        this._value = observableFromEvent(this, onDidChangeLanguages, () => selector());\n        this.onDidChange = Event.fromObservable(this._value);\n    }\n    get languageId() {\n        return this._value.get();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { parse } from '../../../base/common/glob.js';\nimport { Mimes } from '../../../base/common/mime.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { basename, posix } from '../../../base/common/path.js';\nimport { DataUri } from '../../../base/common/resources.js';\nimport { startsWithUTF8BOM } from '../../../base/common/strings.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../languages/modesRegistry.js';\nlet registeredAssociations = [];\nlet nonUserRegisteredAssociations = [];\nlet userRegisteredAssociations = [];\n/**\n * Associate a language to the registry (platform).\n * * **NOTE**: This association will lose over associations registered using `registerConfiguredLanguageAssociation`.\n * * **NOTE**: Use `clearPlatformLanguageAssociations` to remove all associations registered using this function.\n */\nexport function registerPlatformLanguageAssociation(association, warnOnOverwrite = false) {\n    _registerLanguageAssociation(association, false, warnOnOverwrite);\n}\nfunction _registerLanguageAssociation(association, userConfigured, warnOnOverwrite) {\n    // Register\n    const associationItem = toLanguageAssociationItem(association, userConfigured);\n    registeredAssociations.push(associationItem);\n    if (!associationItem.userConfigured) {\n        nonUserRegisteredAssociations.push(associationItem);\n    }\n    else {\n        userRegisteredAssociations.push(associationItem);\n    }\n    // Check for conflicts unless this is a user configured association\n    if (warnOnOverwrite && !associationItem.userConfigured) {\n        registeredAssociations.forEach(a => {\n            if (a.mime === associationItem.mime || a.userConfigured) {\n                return; // same mime or userConfigured is ok\n            }\n            if (associationItem.extension && a.extension === associationItem.extension) {\n                console.warn(`Overwriting extension <<${associationItem.extension}>> to now point to mime <<${associationItem.mime}>>`);\n            }\n            if (associationItem.filename && a.filename === associationItem.filename) {\n                console.warn(`Overwriting filename <<${associationItem.filename}>> to now point to mime <<${associationItem.mime}>>`);\n            }\n            if (associationItem.filepattern && a.filepattern === associationItem.filepattern) {\n                console.warn(`Overwriting filepattern <<${associationItem.filepattern}>> to now point to mime <<${associationItem.mime}>>`);\n            }\n            if (associationItem.firstline && a.firstline === associationItem.firstline) {\n                console.warn(`Overwriting firstline <<${associationItem.firstline}>> to now point to mime <<${associationItem.mime}>>`);\n            }\n        });\n    }\n}\nfunction toLanguageAssociationItem(association, userConfigured) {\n    return {\n        id: association.id,\n        mime: association.mime,\n        filename: association.filename,\n        extension: association.extension,\n        filepattern: association.filepattern,\n        firstline: association.firstline,\n        userConfigured: userConfigured,\n        filenameLowercase: association.filename ? association.filename.toLowerCase() : undefined,\n        extensionLowercase: association.extension ? association.extension.toLowerCase() : undefined,\n        filepatternLowercase: association.filepattern ? parse(association.filepattern.toLowerCase()) : undefined,\n        filepatternOnPath: association.filepattern ? association.filepattern.indexOf(posix.sep) >= 0 : false\n    };\n}\n/**\n * Clear language associations from the registry (platform).\n */\nexport function clearPlatformLanguageAssociations() {\n    registeredAssociations = registeredAssociations.filter(a => a.userConfigured);\n    nonUserRegisteredAssociations = [];\n}\n/**\n * @see `getMimeTypes`\n */\nexport function getLanguageIds(resource, firstLine) {\n    return getAssociations(resource, firstLine).map(item => item.id);\n}\nfunction getAssociations(resource, firstLine) {\n    let path;\n    if (resource) {\n        switch (resource.scheme) {\n            case Schemas.file:\n                path = resource.fsPath;\n                break;\n            case Schemas.data: {\n                const metadata = DataUri.parseMetaData(resource);\n                path = metadata.get(DataUri.META_DATA_LABEL);\n                break;\n            }\n            case Schemas.vscodeNotebookCell:\n                // File path not relevant for language detection of cell\n                path = undefined;\n                break;\n            default:\n                path = resource.path;\n        }\n    }\n    if (!path) {\n        return [{ id: 'unknown', mime: Mimes.unknown }];\n    }\n    path = path.toLowerCase();\n    const filename = basename(path);\n    // 1.) User configured mappings have highest priority\n    const configuredLanguage = getAssociationByPath(path, filename, userRegisteredAssociations);\n    if (configuredLanguage) {\n        return [configuredLanguage, { id: PLAINTEXT_LANGUAGE_ID, mime: Mimes.text }];\n    }\n    // 2.) Registered mappings have middle priority\n    const registeredLanguage = getAssociationByPath(path, filename, nonUserRegisteredAssociations);\n    if (registeredLanguage) {\n        return [registeredLanguage, { id: PLAINTEXT_LANGUAGE_ID, mime: Mimes.text }];\n    }\n    // 3.) Firstline has lowest priority\n    if (firstLine) {\n        const firstlineLanguage = getAssociationByFirstline(firstLine);\n        if (firstlineLanguage) {\n            return [firstlineLanguage, { id: PLAINTEXT_LANGUAGE_ID, mime: Mimes.text }];\n        }\n    }\n    return [{ id: 'unknown', mime: Mimes.unknown }];\n}\nfunction getAssociationByPath(path, filename, associations) {\n    let filenameMatch = undefined;\n    let patternMatch = undefined;\n    let extensionMatch = undefined;\n    // We want to prioritize associations based on the order they are registered so that the last registered\n    // association wins over all other. This is for https://github.com/microsoft/vscode/issues/20074\n    for (let i = associations.length - 1; i >= 0; i--) {\n        const association = associations[i];\n        // First exact name match\n        if (filename === association.filenameLowercase) {\n            filenameMatch = association;\n            break; // take it!\n        }\n        // Longest pattern match\n        if (association.filepattern) {\n            if (!patternMatch || association.filepattern.length > patternMatch.filepattern.length) {\n                const target = association.filepatternOnPath ? path : filename; // match on full path if pattern contains path separator\n                if (association.filepatternLowercase?.(target)) {\n                    patternMatch = association;\n                }\n            }\n        }\n        // Longest extension match\n        if (association.extension) {\n            if (!extensionMatch || association.extension.length > extensionMatch.extension.length) {\n                if (filename.endsWith(association.extensionLowercase)) {\n                    extensionMatch = association;\n                }\n            }\n        }\n    }\n    // 1.) Exact name match has second highest priority\n    if (filenameMatch) {\n        return filenameMatch;\n    }\n    // 2.) Match on pattern\n    if (patternMatch) {\n        return patternMatch;\n    }\n    // 3.) Match on extension comes next\n    if (extensionMatch) {\n        return extensionMatch;\n    }\n    return undefined;\n}\nfunction getAssociationByFirstline(firstLine) {\n    if (startsWithUTF8BOM(firstLine)) {\n        firstLine = firstLine.substr(1);\n    }\n    if (firstLine.length > 0) {\n        // We want to prioritize associations based on the order they are registered so that the last registered\n        // association wins over all other. This is for https://github.com/microsoft/vscode/issues/20074\n        for (let i = registeredAssociations.length - 1; i >= 0; i--) {\n            const association = registeredAssociations[i];\n            if (!association.firstline) {\n                continue;\n            }\n            const matches = firstLine.match(association.firstline);\n            if (matches && matches.length > 0) {\n                return association;\n            }\n        }\n    }\n    return undefined;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { regExpLeadsToEndlessLoop } from '../../../base/common/strings.js';\nimport { clearPlatformLanguageAssociations, getLanguageIds, registerPlatformLanguageAssociation } from './languagesAssociations.js';\nimport { ModesRegistry, PLAINTEXT_LANGUAGE_ID } from '../languages/modesRegistry.js';\nimport { Extensions } from '../../../platform/configuration/common/configurationRegistry.js';\nimport { Registry } from '../../../platform/registry/common/platform.js';\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst NULL_LANGUAGE_ID = 'vs.editor.nullLanguage';\nexport class LanguageIdCodec {\n    constructor() {\n        this._languageIdToLanguage = [];\n        this._languageToLanguageId = new Map();\n        this._register(NULL_LANGUAGE_ID, 0 /* LanguageId.Null */);\n        this._register(PLAINTEXT_LANGUAGE_ID, 1 /* LanguageId.PlainText */);\n        this._nextLanguageId = 2;\n    }\n    _register(language, languageId) {\n        this._languageIdToLanguage[languageId] = language;\n        this._languageToLanguageId.set(language, languageId);\n    }\n    register(language) {\n        if (this._languageToLanguageId.has(language)) {\n            return;\n        }\n        const languageId = this._nextLanguageId++;\n        this._register(language, languageId);\n    }\n    encodeLanguageId(languageId) {\n        return this._languageToLanguageId.get(languageId) || 0 /* LanguageId.Null */;\n    }\n    decodeLanguageId(languageId) {\n        return this._languageIdToLanguage[languageId] || NULL_LANGUAGE_ID;\n    }\n}\nexport class LanguagesRegistry extends Disposable {\n    static { this.instanceCount = 0; }\n    constructor(useModesRegistry = true, warnOnOverwrite = false) {\n        super();\n        this._onDidChange = this._register(new Emitter());\n        this.onDidChange = this._onDidChange.event;\n        LanguagesRegistry.instanceCount++;\n        this._warnOnOverwrite = warnOnOverwrite;\n        this.languageIdCodec = new LanguageIdCodec();\n        this._dynamicLanguages = [];\n        this._languages = {};\n        this._mimeTypesMap = {};\n        this._nameMap = {};\n        this._lowercaseNameMap = {};\n        if (useModesRegistry) {\n            this._initializeFromRegistry();\n            this._register(ModesRegistry.onDidChangeLanguages((m) => {\n                this._initializeFromRegistry();\n            }));\n        }\n    }\n    dispose() {\n        LanguagesRegistry.instanceCount--;\n        super.dispose();\n    }\n    _initializeFromRegistry() {\n        this._languages = {};\n        this._mimeTypesMap = {};\n        this._nameMap = {};\n        this._lowercaseNameMap = {};\n        clearPlatformLanguageAssociations();\n        const desc = [].concat(ModesRegistry.getLanguages()).concat(this._dynamicLanguages);\n        this._registerLanguages(desc);\n    }\n    _registerLanguages(desc) {\n        for (const d of desc) {\n            this._registerLanguage(d);\n        }\n        // Rebuild fast path maps\n        this._mimeTypesMap = {};\n        this._nameMap = {};\n        this._lowercaseNameMap = {};\n        Object.keys(this._languages).forEach((langId) => {\n            const language = this._languages[langId];\n            if (language.name) {\n                this._nameMap[language.name] = language.identifier;\n            }\n            language.aliases.forEach((alias) => {\n                this._lowercaseNameMap[alias.toLowerCase()] = language.identifier;\n            });\n            language.mimetypes.forEach((mimetype) => {\n                this._mimeTypesMap[mimetype] = language.identifier;\n            });\n        });\n        Registry.as(Extensions.Configuration).registerOverrideIdentifiers(this.getRegisteredLanguageIds());\n        this._onDidChange.fire();\n    }\n    _registerLanguage(lang) {\n        const langId = lang.id;\n        let resolvedLanguage;\n        if (hasOwnProperty.call(this._languages, langId)) {\n            resolvedLanguage = this._languages[langId];\n        }\n        else {\n            this.languageIdCodec.register(langId);\n            resolvedLanguage = {\n                identifier: langId,\n                name: null,\n                mimetypes: [],\n                aliases: [],\n                extensions: [],\n                filenames: [],\n                configurationFiles: [],\n                icons: []\n            };\n            this._languages[langId] = resolvedLanguage;\n        }\n        this._mergeLanguage(resolvedLanguage, lang);\n    }\n    _mergeLanguage(resolvedLanguage, lang) {\n        const langId = lang.id;\n        let primaryMime = null;\n        if (Array.isArray(lang.mimetypes) && lang.mimetypes.length > 0) {\n            resolvedLanguage.mimetypes.push(...lang.mimetypes);\n            primaryMime = lang.mimetypes[0];\n        }\n        if (!primaryMime) {\n            primaryMime = `text/x-${langId}`;\n            resolvedLanguage.mimetypes.push(primaryMime);\n        }\n        if (Array.isArray(lang.extensions)) {\n            if (lang.configuration) {\n                // insert first as this appears to be the 'primary' language definition\n                resolvedLanguage.extensions = lang.extensions.concat(resolvedLanguage.extensions);\n            }\n            else {\n                resolvedLanguage.extensions = resolvedLanguage.extensions.concat(lang.extensions);\n            }\n            for (const extension of lang.extensions) {\n                registerPlatformLanguageAssociation({ id: langId, mime: primaryMime, extension: extension }, this._warnOnOverwrite);\n            }\n        }\n        if (Array.isArray(lang.filenames)) {\n            for (const filename of lang.filenames) {\n                registerPlatformLanguageAssociation({ id: langId, mime: primaryMime, filename: filename }, this._warnOnOverwrite);\n                resolvedLanguage.filenames.push(filename);\n            }\n        }\n        if (Array.isArray(lang.filenamePatterns)) {\n            for (const filenamePattern of lang.filenamePatterns) {\n                registerPlatformLanguageAssociation({ id: langId, mime: primaryMime, filepattern: filenamePattern }, this._warnOnOverwrite);\n            }\n        }\n        if (typeof lang.firstLine === 'string' && lang.firstLine.length > 0) {\n            let firstLineRegexStr = lang.firstLine;\n            if (firstLineRegexStr.charAt(0) !== '^') {\n                firstLineRegexStr = '^' + firstLineRegexStr;\n            }\n            try {\n                const firstLineRegex = new RegExp(firstLineRegexStr);\n                if (!regExpLeadsToEndlessLoop(firstLineRegex)) {\n                    registerPlatformLanguageAssociation({ id: langId, mime: primaryMime, firstline: firstLineRegex }, this._warnOnOverwrite);\n                }\n            }\n            catch (err) {\n                // Most likely, the regex was bad\n                console.warn(`[${lang.id}]: Invalid regular expression \\`${firstLineRegexStr}\\`: `, err);\n            }\n        }\n        resolvedLanguage.aliases.push(langId);\n        let langAliases = null;\n        if (typeof lang.aliases !== 'undefined' && Array.isArray(lang.aliases)) {\n            if (lang.aliases.length === 0) {\n                // signal that this language should not get a name\n                langAliases = [null];\n            }\n            else {\n                langAliases = lang.aliases;\n            }\n        }\n        if (langAliases !== null) {\n            for (const langAlias of langAliases) {\n                if (!langAlias || langAlias.length === 0) {\n                    continue;\n                }\n                resolvedLanguage.aliases.push(langAlias);\n            }\n        }\n        const containsAliases = (langAliases !== null && langAliases.length > 0);\n        if (containsAliases && langAliases[0] === null) {\n            // signal that this language should not get a name\n        }\n        else {\n            const bestName = (containsAliases ? langAliases[0] : null) || langId;\n            if (containsAliases || !resolvedLanguage.name) {\n                resolvedLanguage.name = bestName;\n            }\n        }\n        if (lang.configuration) {\n            resolvedLanguage.configurationFiles.push(lang.configuration);\n        }\n        if (lang.icon) {\n            resolvedLanguage.icons.push(lang.icon);\n        }\n    }\n    isRegisteredLanguageId(languageId) {\n        if (!languageId) {\n            return false;\n        }\n        return hasOwnProperty.call(this._languages, languageId);\n    }\n    getRegisteredLanguageIds() {\n        return Object.keys(this._languages);\n    }\n    getLanguageIdByLanguageName(languageName) {\n        const languageNameLower = languageName.toLowerCase();\n        if (!hasOwnProperty.call(this._lowercaseNameMap, languageNameLower)) {\n            return null;\n        }\n        return this._lowercaseNameMap[languageNameLower];\n    }\n    getLanguageIdByMimeType(mimeType) {\n        if (!mimeType) {\n            return null;\n        }\n        if (hasOwnProperty.call(this._mimeTypesMap, mimeType)) {\n            return this._mimeTypesMap[mimeType];\n        }\n        return null;\n    }\n    guessLanguageIdByFilepathOrFirstLine(resource, firstLine) {\n        if (!resource && !firstLine) {\n            return [];\n        }\n        return getLanguageIds(resource, firstLine);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nexport const IMarkerDecorationsService = createDecorator('markerDecorationsService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { IMarkerService, MarkerSeverity } from '../../../platform/markers/common/markers.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { OverviewRulerLane } from '../model.js';\nimport { themeColorFromId } from '../../../platform/theme/common/themeService.js';\nimport { overviewRulerWarning, overviewRulerInfo, overviewRulerError } from '../core/editorColorRegistry.js';\nimport { IModelService } from './model.js';\nimport { Range } from '../core/range.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { minimapInfo, minimapWarning, minimapError } from '../../../platform/theme/common/colorRegistry.js';\nimport { BidirectionalMap, ResourceMap } from '../../../base/common/map.js';\nimport { diffSets } from '../../../base/common/collections.js';\nlet MarkerDecorationsService = class MarkerDecorationsService extends Disposable {\n    constructor(modelService, _markerService) {\n        super();\n        this._markerService = _markerService;\n        this._onDidChangeMarker = this._register(new Emitter());\n        this._markerDecorations = new ResourceMap();\n        modelService.getModels().forEach(model => this._onModelAdded(model));\n        this._register(modelService.onModelAdded(this._onModelAdded, this));\n        this._register(modelService.onModelRemoved(this._onModelRemoved, this));\n        this._register(this._markerService.onMarkerChanged(this._handleMarkerChange, this));\n    }\n    dispose() {\n        super.dispose();\n        this._markerDecorations.forEach(value => value.dispose());\n        this._markerDecorations.clear();\n    }\n    getMarker(uri, decoration) {\n        const markerDecorations = this._markerDecorations.get(uri);\n        return markerDecorations ? (markerDecorations.getMarker(decoration) || null) : null;\n    }\n    _handleMarkerChange(changedResources) {\n        changedResources.forEach((resource) => {\n            const markerDecorations = this._markerDecorations.get(resource);\n            if (markerDecorations) {\n                this._updateDecorations(markerDecorations);\n            }\n        });\n    }\n    _onModelAdded(model) {\n        const markerDecorations = new MarkerDecorations(model);\n        this._markerDecorations.set(model.uri, markerDecorations);\n        this._updateDecorations(markerDecorations);\n    }\n    _onModelRemoved(model) {\n        const markerDecorations = this._markerDecorations.get(model.uri);\n        if (markerDecorations) {\n            markerDecorations.dispose();\n            this._markerDecorations.delete(model.uri);\n        }\n        // clean up markers for internal, transient models\n        if (model.uri.scheme === Schemas.inMemory\n            || model.uri.scheme === Schemas.internal\n            || model.uri.scheme === Schemas.vscode) {\n            this._markerService?.read({ resource: model.uri }).map(marker => marker.owner).forEach(owner => this._markerService.remove(owner, [model.uri]));\n        }\n    }\n    _updateDecorations(markerDecorations) {\n        // Limit to the first 500 errors/warnings\n        const markers = this._markerService.read({ resource: markerDecorations.model.uri, take: 500 });\n        if (markerDecorations.update(markers)) {\n            this._onDidChangeMarker.fire(markerDecorations.model);\n        }\n    }\n};\nMarkerDecorationsService = __decorate([\n    __param(0, IModelService),\n    __param(1, IMarkerService)\n], MarkerDecorationsService);\nexport { MarkerDecorationsService };\nclass MarkerDecorations extends Disposable {\n    constructor(model) {\n        super();\n        this.model = model;\n        this._map = new BidirectionalMap();\n        this._register(toDisposable(() => {\n            this.model.deltaDecorations([...this._map.values()], []);\n            this._map.clear();\n        }));\n    }\n    update(markers) {\n        // We use the fact that marker instances are not recreated when different owners\n        // update. So we can compare references to find out what changed since the last update.\n        const { added, removed } = diffSets(new Set(this._map.keys()), new Set(markers));\n        if (added.length === 0 && removed.length === 0) {\n            return false;\n        }\n        const oldIds = removed.map(marker => this._map.get(marker));\n        const newDecorations = added.map(marker => {\n            return {\n                range: this._createDecorationRange(this.model, marker),\n                options: this._createDecorationOption(marker)\n            };\n        });\n        const ids = this.model.deltaDecorations(oldIds, newDecorations);\n        for (const removedMarker of removed) {\n            this._map.delete(removedMarker);\n        }\n        for (let index = 0; index < ids.length; index++) {\n            this._map.set(added[index], ids[index]);\n        }\n        return true;\n    }\n    getMarker(decoration) {\n        return this._map.getKey(decoration.id);\n    }\n    _createDecorationRange(model, rawMarker) {\n        let ret = Range.lift(rawMarker);\n        if (rawMarker.severity === MarkerSeverity.Hint && !this._hasMarkerTag(rawMarker, 1 /* MarkerTag.Unnecessary */) && !this._hasMarkerTag(rawMarker, 2 /* MarkerTag.Deprecated */)) {\n            // * never render hints on multiple lines\n            // * make enough space for three dots\n            ret = ret.setEndPosition(ret.startLineNumber, ret.startColumn + 2);\n        }\n        ret = model.validateRange(ret);\n        if (ret.isEmpty()) {\n            const maxColumn = model.getLineLastNonWhitespaceColumn(ret.startLineNumber) ||\n                model.getLineMaxColumn(ret.startLineNumber);\n            if (maxColumn === 1 || ret.endColumn >= maxColumn) {\n                // empty line or behind eol\n                // keep the range as is, it will be rendered 1ch wide\n                return ret;\n            }\n            const word = model.getWordAtPosition(ret.getStartPosition());\n            if (word) {\n                ret = new Range(ret.startLineNumber, word.startColumn, ret.endLineNumber, word.endColumn);\n            }\n        }\n        else if (rawMarker.endColumn === Number.MAX_VALUE && rawMarker.startColumn === 1 && ret.startLineNumber === ret.endLineNumber) {\n            const minColumn = model.getLineFirstNonWhitespaceColumn(rawMarker.startLineNumber);\n            if (minColumn < ret.endColumn) {\n                ret = new Range(ret.startLineNumber, minColumn, ret.endLineNumber, ret.endColumn);\n                rawMarker.startColumn = minColumn;\n            }\n        }\n        return ret;\n    }\n    _createDecorationOption(marker) {\n        let className;\n        let color = undefined;\n        let zIndex;\n        let inlineClassName = undefined;\n        let minimap;\n        switch (marker.severity) {\n            case MarkerSeverity.Hint:\n                if (this._hasMarkerTag(marker, 2 /* MarkerTag.Deprecated */)) {\n                    className = undefined;\n                }\n                else if (this._hasMarkerTag(marker, 1 /* MarkerTag.Unnecessary */)) {\n                    className = \"squiggly-unnecessary\" /* ClassName.EditorUnnecessaryDecoration */;\n                }\n                else {\n                    className = \"squiggly-hint\" /* ClassName.EditorHintDecoration */;\n                }\n                zIndex = 0;\n                break;\n            case MarkerSeverity.Info:\n                className = \"squiggly-info\" /* ClassName.EditorInfoDecoration */;\n                color = themeColorFromId(overviewRulerInfo);\n                zIndex = 10;\n                minimap = {\n                    color: themeColorFromId(minimapInfo),\n                    position: 1 /* MinimapPosition.Inline */\n                };\n                break;\n            case MarkerSeverity.Warning:\n                className = \"squiggly-warning\" /* ClassName.EditorWarningDecoration */;\n                color = themeColorFromId(overviewRulerWarning);\n                zIndex = 20;\n                minimap = {\n                    color: themeColorFromId(minimapWarning),\n                    position: 1 /* MinimapPosition.Inline */\n                };\n                break;\n            case MarkerSeverity.Error:\n            default:\n                className = \"squiggly-error\" /* ClassName.EditorErrorDecoration */;\n                color = themeColorFromId(overviewRulerError);\n                zIndex = 30;\n                minimap = {\n                    color: themeColorFromId(minimapError),\n                    position: 1 /* MinimapPosition.Inline */\n                };\n                break;\n        }\n        if (marker.tags) {\n            if (marker.tags.indexOf(1 /* MarkerTag.Unnecessary */) !== -1) {\n                inlineClassName = \"squiggly-inline-unnecessary\" /* ClassName.EditorUnnecessaryInlineDecoration */;\n            }\n            if (marker.tags.indexOf(2 /* MarkerTag.Deprecated */) !== -1) {\n                inlineClassName = \"squiggly-inline-deprecated\" /* ClassName.EditorDeprecatedInlineDecoration */;\n            }\n        }\n        return {\n            description: 'marker-decoration',\n            stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n            className,\n            showIfCollapsed: true,\n            overviewRuler: {\n                color,\n                position: OverviewRulerLane.Right\n            },\n            minimap,\n            zIndex,\n            inlineClassName,\n        };\n    }\n    _hasMarkerTag(marker, tag) {\n        if (marker.tags) {\n            return marker.tags.indexOf(tag) >= 0;\n        }\n        return false;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nexport const IModelService = createDecorator('modelService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar ModelService_1;\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport * as platform from '../../../base/common/platform.js';\nimport { TextModel } from '../model/textModel.js';\nimport { EDITOR_MODEL_DEFAULTS } from '../core/textModelDefaults.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../languages/modesRegistry.js';\nimport { ITextResourcePropertiesService } from './textResourceConfiguration.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { IUndoRedoService } from '../../../platform/undoRedo/common/undoRedo.js';\nimport { StringSHA1 } from '../../../base/common/hash.js';\nimport { isEditStackElement } from '../model/editStack.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { equals } from '../../../base/common/objects.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nfunction MODEL_ID(resource) {\n    return resource.toString();\n}\nclass ModelData {\n    constructor(model, onWillDispose, onDidChangeLanguage) {\n        this.model = model;\n        this._modelEventListeners = new DisposableStore();\n        this.model = model;\n        this._modelEventListeners.add(model.onWillDispose(() => onWillDispose(model)));\n        this._modelEventListeners.add(model.onDidChangeLanguage((e) => onDidChangeLanguage(model, e)));\n    }\n    dispose() {\n        this._modelEventListeners.dispose();\n    }\n}\nconst DEFAULT_EOL = (platform.isLinux || platform.isMacintosh) ? 1 /* DefaultEndOfLine.LF */ : 2 /* DefaultEndOfLine.CRLF */;\nclass DisposedModelInfo {\n    constructor(uri, initialUndoRedoSnapshot, time, sharesUndoRedoStack, heapSize, sha1, versionId, alternativeVersionId) {\n        this.uri = uri;\n        this.initialUndoRedoSnapshot = initialUndoRedoSnapshot;\n        this.time = time;\n        this.sharesUndoRedoStack = sharesUndoRedoStack;\n        this.heapSize = heapSize;\n        this.sha1 = sha1;\n        this.versionId = versionId;\n        this.alternativeVersionId = alternativeVersionId;\n    }\n}\nlet ModelService = class ModelService extends Disposable {\n    static { ModelService_1 = this; }\n    static { this.MAX_MEMORY_FOR_CLOSED_FILES_UNDO_STACK = 20 * 1024 * 1024; }\n    constructor(_configurationService, _resourcePropertiesService, _undoRedoService, _instantiationService) {\n        super();\n        this._configurationService = _configurationService;\n        this._resourcePropertiesService = _resourcePropertiesService;\n        this._undoRedoService = _undoRedoService;\n        this._instantiationService = _instantiationService;\n        this._onModelAdded = this._register(new Emitter());\n        this.onModelAdded = this._onModelAdded.event;\n        this._onModelRemoved = this._register(new Emitter());\n        this.onModelRemoved = this._onModelRemoved.event;\n        this._onModelModeChanged = this._register(new Emitter());\n        this.onModelLanguageChanged = this._onModelModeChanged.event;\n        this._modelCreationOptionsByLanguageAndResource = Object.create(null);\n        this._models = {};\n        this._disposedModels = new Map();\n        this._disposedModelsHeapSize = 0;\n        this._register(this._configurationService.onDidChangeConfiguration(e => this._updateModelOptions(e)));\n        this._updateModelOptions(undefined);\n    }\n    static _readModelOptions(config, isForSimpleWidget) {\n        let tabSize = EDITOR_MODEL_DEFAULTS.tabSize;\n        if (config.editor && typeof config.editor.tabSize !== 'undefined') {\n            const parsedTabSize = parseInt(config.editor.tabSize, 10);\n            if (!isNaN(parsedTabSize)) {\n                tabSize = parsedTabSize;\n            }\n            if (tabSize < 1) {\n                tabSize = 1;\n            }\n        }\n        let indentSize = 'tabSize';\n        if (config.editor && typeof config.editor.indentSize !== 'undefined' && config.editor.indentSize !== 'tabSize') {\n            const parsedIndentSize = parseInt(config.editor.indentSize, 10);\n            if (!isNaN(parsedIndentSize)) {\n                indentSize = Math.max(parsedIndentSize, 1);\n            }\n        }\n        let insertSpaces = EDITOR_MODEL_DEFAULTS.insertSpaces;\n        if (config.editor && typeof config.editor.insertSpaces !== 'undefined') {\n            insertSpaces = (config.editor.insertSpaces === 'false' ? false : Boolean(config.editor.insertSpaces));\n        }\n        let newDefaultEOL = DEFAULT_EOL;\n        const eol = config.eol;\n        if (eol === '\\r\\n') {\n            newDefaultEOL = 2 /* DefaultEndOfLine.CRLF */;\n        }\n        else if (eol === '\\n') {\n            newDefaultEOL = 1 /* DefaultEndOfLine.LF */;\n        }\n        let trimAutoWhitespace = EDITOR_MODEL_DEFAULTS.trimAutoWhitespace;\n        if (config.editor && typeof config.editor.trimAutoWhitespace !== 'undefined') {\n            trimAutoWhitespace = (config.editor.trimAutoWhitespace === 'false' ? false : Boolean(config.editor.trimAutoWhitespace));\n        }\n        let detectIndentation = EDITOR_MODEL_DEFAULTS.detectIndentation;\n        if (config.editor && typeof config.editor.detectIndentation !== 'undefined') {\n            detectIndentation = (config.editor.detectIndentation === 'false' ? false : Boolean(config.editor.detectIndentation));\n        }\n        let largeFileOptimizations = EDITOR_MODEL_DEFAULTS.largeFileOptimizations;\n        if (config.editor && typeof config.editor.largeFileOptimizations !== 'undefined') {\n            largeFileOptimizations = (config.editor.largeFileOptimizations === 'false' ? false : Boolean(config.editor.largeFileOptimizations));\n        }\n        let bracketPairColorizationOptions = EDITOR_MODEL_DEFAULTS.bracketPairColorizationOptions;\n        if (config.editor?.bracketPairColorization && typeof config.editor.bracketPairColorization === 'object') {\n            bracketPairColorizationOptions = {\n                enabled: !!config.editor.bracketPairColorization.enabled,\n                independentColorPoolPerBracketType: !!config.editor.bracketPairColorization.independentColorPoolPerBracketType\n            };\n        }\n        return {\n            isForSimpleWidget: isForSimpleWidget,\n            tabSize: tabSize,\n            indentSize: indentSize,\n            insertSpaces: insertSpaces,\n            detectIndentation: detectIndentation,\n            defaultEOL: newDefaultEOL,\n            trimAutoWhitespace: trimAutoWhitespace,\n            largeFileOptimizations: largeFileOptimizations,\n            bracketPairColorizationOptions\n        };\n    }\n    _getEOL(resource, language) {\n        if (resource) {\n            return this._resourcePropertiesService.getEOL(resource, language);\n        }\n        const eol = this._configurationService.getValue('files.eol', { overrideIdentifier: language });\n        if (eol && typeof eol === 'string' && eol !== 'auto') {\n            return eol;\n        }\n        return platform.OS === 3 /* platform.OperatingSystem.Linux */ || platform.OS === 2 /* platform.OperatingSystem.Macintosh */ ? '\\n' : '\\r\\n';\n    }\n    _shouldRestoreUndoStack() {\n        const result = this._configurationService.getValue('files.restoreUndoStack');\n        if (typeof result === 'boolean') {\n            return result;\n        }\n        return true;\n    }\n    getCreationOptions(languageIdOrSelection, resource, isForSimpleWidget) {\n        const language = (typeof languageIdOrSelection === 'string' ? languageIdOrSelection : languageIdOrSelection.languageId);\n        let creationOptions = this._modelCreationOptionsByLanguageAndResource[language + resource];\n        if (!creationOptions) {\n            const editor = this._configurationService.getValue('editor', { overrideIdentifier: language, resource });\n            const eol = this._getEOL(resource, language);\n            creationOptions = ModelService_1._readModelOptions({ editor, eol }, isForSimpleWidget);\n            this._modelCreationOptionsByLanguageAndResource[language + resource] = creationOptions;\n        }\n        return creationOptions;\n    }\n    _updateModelOptions(e) {\n        const oldOptionsByLanguageAndResource = this._modelCreationOptionsByLanguageAndResource;\n        this._modelCreationOptionsByLanguageAndResource = Object.create(null);\n        // Update options on all models\n        const keys = Object.keys(this._models);\n        for (let i = 0, len = keys.length; i < len; i++) {\n            const modelId = keys[i];\n            const modelData = this._models[modelId];\n            const language = modelData.model.getLanguageId();\n            const uri = modelData.model.uri;\n            if (e && !e.affectsConfiguration('editor', { overrideIdentifier: language, resource: uri }) && !e.affectsConfiguration('files.eol', { overrideIdentifier: language, resource: uri })) {\n                continue; // perf: skip if this model is not affected by configuration change\n            }\n            const oldOptions = oldOptionsByLanguageAndResource[language + uri];\n            const newOptions = this.getCreationOptions(language, uri, modelData.model.isForSimpleWidget);\n            ModelService_1._setModelOptionsForModel(modelData.model, newOptions, oldOptions);\n        }\n    }\n    static _setModelOptionsForModel(model, newOptions, currentOptions) {\n        if (currentOptions && currentOptions.defaultEOL !== newOptions.defaultEOL && model.getLineCount() === 1) {\n            model.setEOL(newOptions.defaultEOL === 1 /* DefaultEndOfLine.LF */ ? 0 /* EndOfLineSequence.LF */ : 1 /* EndOfLineSequence.CRLF */);\n        }\n        if (currentOptions\n            && (currentOptions.detectIndentation === newOptions.detectIndentation)\n            && (currentOptions.insertSpaces === newOptions.insertSpaces)\n            && (currentOptions.tabSize === newOptions.tabSize)\n            && (currentOptions.indentSize === newOptions.indentSize)\n            && (currentOptions.trimAutoWhitespace === newOptions.trimAutoWhitespace)\n            && equals(currentOptions.bracketPairColorizationOptions, newOptions.bracketPairColorizationOptions)) {\n            // Same indent opts, no need to touch the model\n            return;\n        }\n        if (newOptions.detectIndentation) {\n            model.detectIndentation(newOptions.insertSpaces, newOptions.tabSize);\n            model.updateOptions({\n                trimAutoWhitespace: newOptions.trimAutoWhitespace,\n                bracketColorizationOptions: newOptions.bracketPairColorizationOptions\n            });\n        }\n        else {\n            model.updateOptions({\n                insertSpaces: newOptions.insertSpaces,\n                tabSize: newOptions.tabSize,\n                indentSize: newOptions.indentSize,\n                trimAutoWhitespace: newOptions.trimAutoWhitespace,\n                bracketColorizationOptions: newOptions.bracketPairColorizationOptions\n            });\n        }\n    }\n    // --- begin IModelService\n    _insertDisposedModel(disposedModelData) {\n        this._disposedModels.set(MODEL_ID(disposedModelData.uri), disposedModelData);\n        this._disposedModelsHeapSize += disposedModelData.heapSize;\n    }\n    _removeDisposedModel(resource) {\n        const disposedModelData = this._disposedModels.get(MODEL_ID(resource));\n        if (disposedModelData) {\n            this._disposedModelsHeapSize -= disposedModelData.heapSize;\n        }\n        this._disposedModels.delete(MODEL_ID(resource));\n        return disposedModelData;\n    }\n    _ensureDisposedModelsHeapSize(maxModelsHeapSize) {\n        if (this._disposedModelsHeapSize > maxModelsHeapSize) {\n            // we must remove some old undo stack elements to free up some memory\n            const disposedModels = [];\n            this._disposedModels.forEach(entry => {\n                if (!entry.sharesUndoRedoStack) {\n                    disposedModels.push(entry);\n                }\n            });\n            disposedModels.sort((a, b) => a.time - b.time);\n            while (disposedModels.length > 0 && this._disposedModelsHeapSize > maxModelsHeapSize) {\n                const disposedModel = disposedModels.shift();\n                this._removeDisposedModel(disposedModel.uri);\n                if (disposedModel.initialUndoRedoSnapshot !== null) {\n                    this._undoRedoService.restoreSnapshot(disposedModel.initialUndoRedoSnapshot);\n                }\n            }\n        }\n    }\n    _createModelData(value, languageIdOrSelection, resource, isForSimpleWidget) {\n        // create & save the model\n        const options = this.getCreationOptions(languageIdOrSelection, resource, isForSimpleWidget);\n        const model = this._instantiationService.createInstance(TextModel, value, languageIdOrSelection, options, resource);\n        if (resource && this._disposedModels.has(MODEL_ID(resource))) {\n            const disposedModelData = this._removeDisposedModel(resource);\n            const elements = this._undoRedoService.getElements(resource);\n            const sha1Computer = this._getSHA1Computer();\n            const sha1IsEqual = (sha1Computer.canComputeSHA1(model)\n                ? sha1Computer.computeSHA1(model) === disposedModelData.sha1\n                : false);\n            if (sha1IsEqual || disposedModelData.sharesUndoRedoStack) {\n                for (const element of elements.past) {\n                    if (isEditStackElement(element) && element.matchesResource(resource)) {\n                        element.setModel(model);\n                    }\n                }\n                for (const element of elements.future) {\n                    if (isEditStackElement(element) && element.matchesResource(resource)) {\n                        element.setModel(model);\n                    }\n                }\n                this._undoRedoService.setElementsValidFlag(resource, true, (element) => (isEditStackElement(element) && element.matchesResource(resource)));\n                if (sha1IsEqual) {\n                    model._overwriteVersionId(disposedModelData.versionId);\n                    model._overwriteAlternativeVersionId(disposedModelData.alternativeVersionId);\n                    model._overwriteInitialUndoRedoSnapshot(disposedModelData.initialUndoRedoSnapshot);\n                }\n            }\n            else {\n                if (disposedModelData.initialUndoRedoSnapshot !== null) {\n                    this._undoRedoService.restoreSnapshot(disposedModelData.initialUndoRedoSnapshot);\n                }\n            }\n        }\n        const modelId = MODEL_ID(model.uri);\n        if (this._models[modelId]) {\n            // There already exists a model with this id => this is a programmer error\n            throw new Error('ModelService: Cannot add model because it already exists!');\n        }\n        const modelData = new ModelData(model, (model) => this._onWillDispose(model), (model, e) => this._onDidChangeLanguage(model, e));\n        this._models[modelId] = modelData;\n        return modelData;\n    }\n    createModel(value, languageSelection, resource, isForSimpleWidget = false) {\n        let modelData;\n        if (languageSelection) {\n            modelData = this._createModelData(value, languageSelection, resource, isForSimpleWidget);\n        }\n        else {\n            modelData = this._createModelData(value, PLAINTEXT_LANGUAGE_ID, resource, isForSimpleWidget);\n        }\n        this._onModelAdded.fire(modelData.model);\n        return modelData.model;\n    }\n    getModels() {\n        const ret = [];\n        const keys = Object.keys(this._models);\n        for (let i = 0, len = keys.length; i < len; i++) {\n            const modelId = keys[i];\n            ret.push(this._models[modelId].model);\n        }\n        return ret;\n    }\n    getModel(resource) {\n        const modelId = MODEL_ID(resource);\n        const modelData = this._models[modelId];\n        if (!modelData) {\n            return null;\n        }\n        return modelData.model;\n    }\n    // --- end IModelService\n    _schemaShouldMaintainUndoRedoElements(resource) {\n        return (resource.scheme === Schemas.file\n            || resource.scheme === Schemas.vscodeRemote\n            || resource.scheme === Schemas.vscodeUserData\n            || resource.scheme === Schemas.vscodeNotebookCell\n            || resource.scheme === 'fake-fs' // for tests\n        );\n    }\n    _onWillDispose(model) {\n        const modelId = MODEL_ID(model.uri);\n        const modelData = this._models[modelId];\n        const sharesUndoRedoStack = (this._undoRedoService.getUriComparisonKey(model.uri) !== model.uri.toString());\n        let maintainUndoRedoStack = false;\n        let heapSize = 0;\n        if (sharesUndoRedoStack || (this._shouldRestoreUndoStack() && this._schemaShouldMaintainUndoRedoElements(model.uri))) {\n            const elements = this._undoRedoService.getElements(model.uri);\n            if (elements.past.length > 0 || elements.future.length > 0) {\n                for (const element of elements.past) {\n                    if (isEditStackElement(element) && element.matchesResource(model.uri)) {\n                        maintainUndoRedoStack = true;\n                        heapSize += element.heapSize(model.uri);\n                        element.setModel(model.uri); // remove reference from text buffer instance\n                    }\n                }\n                for (const element of elements.future) {\n                    if (isEditStackElement(element) && element.matchesResource(model.uri)) {\n                        maintainUndoRedoStack = true;\n                        heapSize += element.heapSize(model.uri);\n                        element.setModel(model.uri); // remove reference from text buffer instance\n                    }\n                }\n            }\n        }\n        const maxMemory = ModelService_1.MAX_MEMORY_FOR_CLOSED_FILES_UNDO_STACK;\n        const sha1Computer = this._getSHA1Computer();\n        if (!maintainUndoRedoStack) {\n            if (!sharesUndoRedoStack) {\n                const initialUndoRedoSnapshot = modelData.model.getInitialUndoRedoSnapshot();\n                if (initialUndoRedoSnapshot !== null) {\n                    this._undoRedoService.restoreSnapshot(initialUndoRedoSnapshot);\n                }\n            }\n        }\n        else if (!sharesUndoRedoStack && (heapSize > maxMemory || !sha1Computer.canComputeSHA1(model))) {\n            // the undo stack for this file would never fit in the configured memory or the file is very large, so don't bother with it.\n            const initialUndoRedoSnapshot = modelData.model.getInitialUndoRedoSnapshot();\n            if (initialUndoRedoSnapshot !== null) {\n                this._undoRedoService.restoreSnapshot(initialUndoRedoSnapshot);\n            }\n        }\n        else {\n            this._ensureDisposedModelsHeapSize(maxMemory - heapSize);\n            // We only invalidate the elements, but they remain in the undo-redo service.\n            this._undoRedoService.setElementsValidFlag(model.uri, false, (element) => (isEditStackElement(element) && element.matchesResource(model.uri)));\n            this._insertDisposedModel(new DisposedModelInfo(model.uri, modelData.model.getInitialUndoRedoSnapshot(), Date.now(), sharesUndoRedoStack, heapSize, sha1Computer.computeSHA1(model), model.getVersionId(), model.getAlternativeVersionId()));\n        }\n        delete this._models[modelId];\n        modelData.dispose();\n        // clean up cache\n        delete this._modelCreationOptionsByLanguageAndResource[model.getLanguageId() + model.uri];\n        this._onModelRemoved.fire(model);\n    }\n    _onDidChangeLanguage(model, e) {\n        const oldLanguageId = e.oldLanguage;\n        const newLanguageId = model.getLanguageId();\n        const oldOptions = this.getCreationOptions(oldLanguageId, model.uri, model.isForSimpleWidget);\n        const newOptions = this.getCreationOptions(newLanguageId, model.uri, model.isForSimpleWidget);\n        ModelService_1._setModelOptionsForModel(model, newOptions, oldOptions);\n        this._onModelModeChanged.fire({ model, oldLanguageId: oldLanguageId });\n    }\n    _getSHA1Computer() {\n        return new DefaultModelSHA1Computer();\n    }\n};\nModelService = ModelService_1 = __decorate([\n    __param(0, IConfigurationService),\n    __param(1, ITextResourcePropertiesService),\n    __param(2, IUndoRedoService),\n    __param(3, IInstantiationService)\n], ModelService);\nexport { ModelService };\nexport class DefaultModelSHA1Computer {\n    static { this.MAX_MODEL_SIZE = 10 * 1024 * 1024; } // takes 200ms to compute a sha1 on a 10MB model on a new machine\n    canComputeSHA1(model) {\n        return (model.getValueLength() <= DefaultModelSHA1Computer.MAX_MODEL_SIZE);\n    }\n    computeSHA1(model) {\n        // compute the sha1\n        const shaComputer = new StringSHA1();\n        const snapshot = model.createSnapshot();\n        let text;\n        while ((text = snapshot.read())) {\n            shaComputer.update(text);\n        }\n        return shaComputer.digest();\n    }\n}\n","import { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nexport const ITextModelService = createDecorator('textModelService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { VSBuffer } from '../../../base/common/buffer.js';\nimport * as platform from '../../../base/common/platform.js';\nfunction reverseEndianness(arr) {\n    for (let i = 0, len = arr.length; i < len; i += 4) {\n        // flip bytes 0<->3 and 1<->2\n        const b0 = arr[i + 0];\n        const b1 = arr[i + 1];\n        const b2 = arr[i + 2];\n        const b3 = arr[i + 3];\n        arr[i + 0] = b3;\n        arr[i + 1] = b2;\n        arr[i + 2] = b1;\n        arr[i + 3] = b0;\n    }\n}\nfunction toLittleEndianBuffer(arr) {\n    const uint8Arr = new Uint8Array(arr.buffer, arr.byteOffset, arr.length * 4);\n    if (!platform.isLittleEndian()) {\n        // the byte order must be changed\n        reverseEndianness(uint8Arr);\n    }\n    return VSBuffer.wrap(uint8Arr);\n}\nexport function encodeSemanticTokensDto(semanticTokens) {\n    const dest = new Uint32Array(encodeSemanticTokensDtoSize(semanticTokens));\n    let offset = 0;\n    dest[offset++] = semanticTokens.id;\n    if (semanticTokens.type === 'full') {\n        dest[offset++] = 1 /* EncodedSemanticTokensType.Full */;\n        dest[offset++] = semanticTokens.data.length;\n        dest.set(semanticTokens.data, offset);\n        offset += semanticTokens.data.length;\n    }\n    else {\n        dest[offset++] = 2 /* EncodedSemanticTokensType.Delta */;\n        dest[offset++] = semanticTokens.deltas.length;\n        for (const delta of semanticTokens.deltas) {\n            dest[offset++] = delta.start;\n            dest[offset++] = delta.deleteCount;\n            if (delta.data) {\n                dest[offset++] = delta.data.length;\n                dest.set(delta.data, offset);\n                offset += delta.data.length;\n            }\n            else {\n                dest[offset++] = 0;\n            }\n        }\n    }\n    return toLittleEndianBuffer(dest);\n}\nfunction encodeSemanticTokensDtoSize(semanticTokens) {\n    let result = 0;\n    result += (+1 // id\n        + 1 // type\n    );\n    if (semanticTokens.type === 'full') {\n        result += (+1 // data length\n            + semanticTokens.data.length);\n    }\n    else {\n        result += (+1 // delta count\n        );\n        result += (+1 // start\n            + 1 // deleteCount\n            + 1 // data length\n        ) * semanticTokens.deltas.length;\n        for (const delta of semanticTokens.deltas) {\n            if (delta.data) {\n                result += delta.data.length;\n            }\n        }\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { TokenMetadata } from '../encodedTokenAttributes.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { ILogService, LogLevel } from '../../../platform/log/common/log.js';\nimport { SparseMultilineTokens } from '../tokens/sparseMultilineTokens.js';\nimport { ILanguageService } from '../languages/language.js';\nconst ENABLE_TRACE = false;\nlet SemanticTokensProviderStyling = class SemanticTokensProviderStyling {\n    constructor(_legend, _themeService, _languageService, _logService) {\n        this._legend = _legend;\n        this._themeService = _themeService;\n        this._languageService = _languageService;\n        this._logService = _logService;\n        this._hasWarnedOverlappingTokens = false;\n        this._hasWarnedInvalidLengthTokens = false;\n        this._hasWarnedInvalidEditStart = false;\n        this._hashTable = new HashTable();\n    }\n    getMetadata(tokenTypeIndex, tokenModifierSet, languageId) {\n        const encodedLanguageId = this._languageService.languageIdCodec.encodeLanguageId(languageId);\n        const entry = this._hashTable.get(tokenTypeIndex, tokenModifierSet, encodedLanguageId);\n        let metadata;\n        if (entry) {\n            metadata = entry.metadata;\n            if (ENABLE_TRACE && this._logService.getLevel() === LogLevel.Trace) {\n                this._logService.trace(`SemanticTokensProviderStyling [CACHED] ${tokenTypeIndex} / ${tokenModifierSet}: foreground ${TokenMetadata.getForeground(metadata)}, fontStyle ${TokenMetadata.getFontStyle(metadata).toString(2)}`);\n            }\n        }\n        else {\n            let tokenType = this._legend.tokenTypes[tokenTypeIndex];\n            const tokenModifiers = [];\n            if (tokenType) {\n                let modifierSet = tokenModifierSet;\n                for (let modifierIndex = 0; modifierSet > 0 && modifierIndex < this._legend.tokenModifiers.length; modifierIndex++) {\n                    if (modifierSet & 1) {\n                        tokenModifiers.push(this._legend.tokenModifiers[modifierIndex]);\n                    }\n                    modifierSet = modifierSet >> 1;\n                }\n                if (ENABLE_TRACE && modifierSet > 0 && this._logService.getLevel() === LogLevel.Trace) {\n                    this._logService.trace(`SemanticTokensProviderStyling: unknown token modifier index: ${tokenModifierSet.toString(2)} for legend: ${JSON.stringify(this._legend.tokenModifiers)}`);\n                    tokenModifiers.push('not-in-legend');\n                }\n                const tokenStyle = this._themeService.getColorTheme().getTokenStyleMetadata(tokenType, tokenModifiers, languageId);\n                if (typeof tokenStyle === 'undefined') {\n                    metadata = 2147483647 /* SemanticTokensProviderStylingConstants.NO_STYLING */;\n                }\n                else {\n                    metadata = 0;\n                    if (typeof tokenStyle.italic !== 'undefined') {\n                        const italicBit = (tokenStyle.italic ? 1 /* FontStyle.Italic */ : 0) << 11 /* MetadataConsts.FONT_STYLE_OFFSET */;\n                        metadata |= italicBit | 1 /* MetadataConsts.SEMANTIC_USE_ITALIC */;\n                    }\n                    if (typeof tokenStyle.bold !== 'undefined') {\n                        const boldBit = (tokenStyle.bold ? 2 /* FontStyle.Bold */ : 0) << 11 /* MetadataConsts.FONT_STYLE_OFFSET */;\n                        metadata |= boldBit | 2 /* MetadataConsts.SEMANTIC_USE_BOLD */;\n                    }\n                    if (typeof tokenStyle.underline !== 'undefined') {\n                        const underlineBit = (tokenStyle.underline ? 4 /* FontStyle.Underline */ : 0) << 11 /* MetadataConsts.FONT_STYLE_OFFSET */;\n                        metadata |= underlineBit | 4 /* MetadataConsts.SEMANTIC_USE_UNDERLINE */;\n                    }\n                    if (typeof tokenStyle.strikethrough !== 'undefined') {\n                        const strikethroughBit = (tokenStyle.strikethrough ? 8 /* FontStyle.Strikethrough */ : 0) << 11 /* MetadataConsts.FONT_STYLE_OFFSET */;\n                        metadata |= strikethroughBit | 8 /* MetadataConsts.SEMANTIC_USE_STRIKETHROUGH */;\n                    }\n                    if (tokenStyle.foreground) {\n                        const foregroundBits = (tokenStyle.foreground) << 15 /* MetadataConsts.FOREGROUND_OFFSET */;\n                        metadata |= foregroundBits | 16 /* MetadataConsts.SEMANTIC_USE_FOREGROUND */;\n                    }\n                    if (metadata === 0) {\n                        // Nothing!\n                        metadata = 2147483647 /* SemanticTokensProviderStylingConstants.NO_STYLING */;\n                    }\n                }\n            }\n            else {\n                if (ENABLE_TRACE && this._logService.getLevel() === LogLevel.Trace) {\n                    this._logService.trace(`SemanticTokensProviderStyling: unknown token type index: ${tokenTypeIndex} for legend: ${JSON.stringify(this._legend.tokenTypes)}`);\n                }\n                metadata = 2147483647 /* SemanticTokensProviderStylingConstants.NO_STYLING */;\n                tokenType = 'not-in-legend';\n            }\n            this._hashTable.add(tokenTypeIndex, tokenModifierSet, encodedLanguageId, metadata);\n            if (ENABLE_TRACE && this._logService.getLevel() === LogLevel.Trace) {\n                this._logService.trace(`SemanticTokensProviderStyling ${tokenTypeIndex} (${tokenType}) / ${tokenModifierSet} (${tokenModifiers.join(' ')}): foreground ${TokenMetadata.getForeground(metadata)}, fontStyle ${TokenMetadata.getFontStyle(metadata).toString(2)}`);\n            }\n        }\n        return metadata;\n    }\n    warnOverlappingSemanticTokens(lineNumber, startColumn) {\n        if (!this._hasWarnedOverlappingTokens) {\n            this._hasWarnedOverlappingTokens = true;\n            this._logService.warn(`Overlapping semantic tokens detected at lineNumber ${lineNumber}, column ${startColumn}`);\n        }\n    }\n    warnInvalidLengthSemanticTokens(lineNumber, startColumn) {\n        if (!this._hasWarnedInvalidLengthTokens) {\n            this._hasWarnedInvalidLengthTokens = true;\n            this._logService.warn(`Semantic token with invalid length detected at lineNumber ${lineNumber}, column ${startColumn}`);\n        }\n    }\n    warnInvalidEditStart(previousResultId, resultId, editIndex, editStart, maxExpectedStart) {\n        if (!this._hasWarnedInvalidEditStart) {\n            this._hasWarnedInvalidEditStart = true;\n            this._logService.warn(`Invalid semantic tokens edit detected (previousResultId: ${previousResultId}, resultId: ${resultId}) at edit #${editIndex}: The provided start offset ${editStart} is outside the previous data (length ${maxExpectedStart}).`);\n        }\n    }\n};\nSemanticTokensProviderStyling = __decorate([\n    __param(1, IThemeService),\n    __param(2, ILanguageService),\n    __param(3, ILogService)\n], SemanticTokensProviderStyling);\nexport { SemanticTokensProviderStyling };\nexport function toMultilineTokens2(tokens, styling, languageId) {\n    const srcData = tokens.data;\n    const tokenCount = (tokens.data.length / 5) | 0;\n    const tokensPerArea = Math.max(Math.ceil(tokenCount / 1024 /* SemanticColoringConstants.DesiredMaxAreas */), 400 /* SemanticColoringConstants.DesiredTokensPerArea */);\n    const result = [];\n    let tokenIndex = 0;\n    let lastLineNumber = 1;\n    let lastStartCharacter = 0;\n    while (tokenIndex < tokenCount) {\n        const tokenStartIndex = tokenIndex;\n        let tokenEndIndex = Math.min(tokenStartIndex + tokensPerArea, tokenCount);\n        // Keep tokens on the same line in the same area...\n        if (tokenEndIndex < tokenCount) {\n            let smallTokenEndIndex = tokenEndIndex;\n            while (smallTokenEndIndex - 1 > tokenStartIndex && srcData[5 * smallTokenEndIndex] === 0) {\n                smallTokenEndIndex--;\n            }\n            if (smallTokenEndIndex - 1 === tokenStartIndex) {\n                // there are so many tokens on this line that our area would be empty, we must now go right\n                let bigTokenEndIndex = tokenEndIndex;\n                while (bigTokenEndIndex + 1 < tokenCount && srcData[5 * bigTokenEndIndex] === 0) {\n                    bigTokenEndIndex++;\n                }\n                tokenEndIndex = bigTokenEndIndex;\n            }\n            else {\n                tokenEndIndex = smallTokenEndIndex;\n            }\n        }\n        let destData = new Uint32Array((tokenEndIndex - tokenStartIndex) * 4);\n        let destOffset = 0;\n        let areaLine = 0;\n        let prevLineNumber = 0;\n        let prevEndCharacter = 0;\n        while (tokenIndex < tokenEndIndex) {\n            const srcOffset = 5 * tokenIndex;\n            const deltaLine = srcData[srcOffset];\n            const deltaCharacter = srcData[srcOffset + 1];\n            // Casting both `lineNumber`, `startCharacter` and `endCharacter` here to uint32 using `|0`\n            // to validate below with the actual values that will be inserted in the Uint32Array result\n            const lineNumber = (lastLineNumber + deltaLine) | 0;\n            const startCharacter = (deltaLine === 0 ? (lastStartCharacter + deltaCharacter) | 0 : deltaCharacter);\n            const length = srcData[srcOffset + 2];\n            const endCharacter = (startCharacter + length) | 0;\n            const tokenTypeIndex = srcData[srcOffset + 3];\n            const tokenModifierSet = srcData[srcOffset + 4];\n            if (endCharacter <= startCharacter) {\n                // this token is invalid (most likely a negative length casted to uint32)\n                styling.warnInvalidLengthSemanticTokens(lineNumber, startCharacter + 1);\n            }\n            else if (prevLineNumber === lineNumber && prevEndCharacter > startCharacter) {\n                // this token overlaps with the previous token\n                styling.warnOverlappingSemanticTokens(lineNumber, startCharacter + 1);\n            }\n            else {\n                const metadata = styling.getMetadata(tokenTypeIndex, tokenModifierSet, languageId);\n                if (metadata !== 2147483647 /* SemanticTokensProviderStylingConstants.NO_STYLING */) {\n                    if (areaLine === 0) {\n                        areaLine = lineNumber;\n                    }\n                    destData[destOffset] = lineNumber - areaLine;\n                    destData[destOffset + 1] = startCharacter;\n                    destData[destOffset + 2] = endCharacter;\n                    destData[destOffset + 3] = metadata;\n                    destOffset += 4;\n                    prevLineNumber = lineNumber;\n                    prevEndCharacter = endCharacter;\n                }\n            }\n            lastLineNumber = lineNumber;\n            lastStartCharacter = startCharacter;\n            tokenIndex++;\n        }\n        if (destOffset !== destData.length) {\n            destData = destData.subarray(0, destOffset);\n        }\n        const tokens = SparseMultilineTokens.create(areaLine, destData);\n        result.push(tokens);\n    }\n    return result;\n}\nclass HashTableEntry {\n    constructor(tokenTypeIndex, tokenModifierSet, languageId, metadata) {\n        this.tokenTypeIndex = tokenTypeIndex;\n        this.tokenModifierSet = tokenModifierSet;\n        this.languageId = languageId;\n        this.metadata = metadata;\n        this.next = null;\n    }\n}\nclass HashTable {\n    static { this._SIZES = [3, 7, 13, 31, 61, 127, 251, 509, 1021, 2039, 4093, 8191, 16381, 32749, 65521, 131071, 262139, 524287, 1048573, 2097143]; }\n    constructor() {\n        this._elementsCount = 0;\n        this._currentLengthIndex = 0;\n        this._currentLength = HashTable._SIZES[this._currentLengthIndex];\n        this._growCount = Math.round(this._currentLengthIndex + 1 < HashTable._SIZES.length ? 2 / 3 * this._currentLength : 0);\n        this._elements = [];\n        HashTable._nullOutEntries(this._elements, this._currentLength);\n    }\n    static _nullOutEntries(entries, length) {\n        for (let i = 0; i < length; i++) {\n            entries[i] = null;\n        }\n    }\n    _hash2(n1, n2) {\n        return (((n1 << 5) - n1) + n2) | 0; // n1 * 31 + n2, keep as int32\n    }\n    _hashFunc(tokenTypeIndex, tokenModifierSet, languageId) {\n        return this._hash2(this._hash2(tokenTypeIndex, tokenModifierSet), languageId) % this._currentLength;\n    }\n    get(tokenTypeIndex, tokenModifierSet, languageId) {\n        const hash = this._hashFunc(tokenTypeIndex, tokenModifierSet, languageId);\n        let p = this._elements[hash];\n        while (p) {\n            if (p.tokenTypeIndex === tokenTypeIndex && p.tokenModifierSet === tokenModifierSet && p.languageId === languageId) {\n                return p;\n            }\n            p = p.next;\n        }\n        return null;\n    }\n    add(tokenTypeIndex, tokenModifierSet, languageId, metadata) {\n        this._elementsCount++;\n        if (this._growCount !== 0 && this._elementsCount >= this._growCount) {\n            // expand!\n            const oldElements = this._elements;\n            this._currentLengthIndex++;\n            this._currentLength = HashTable._SIZES[this._currentLengthIndex];\n            this._growCount = Math.round(this._currentLengthIndex + 1 < HashTable._SIZES.length ? 2 / 3 * this._currentLength : 0);\n            this._elements = [];\n            HashTable._nullOutEntries(this._elements, this._currentLength);\n            for (const first of oldElements) {\n                let p = first;\n                while (p) {\n                    const oldNext = p.next;\n                    p.next = null;\n                    this._add(p);\n                    p = oldNext;\n                }\n            }\n        }\n        this._add(new HashTableEntry(tokenTypeIndex, tokenModifierSet, languageId, metadata));\n    }\n    _add(element) {\n        const hash = this._hashFunc(element.tokenTypeIndex, element.tokenModifierSet, element.languageId);\n        element.next = this._elements[hash];\n        this._elements[hash] = element;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nexport const ISemanticTokensStylingService = createDecorator('semanticTokensStylingService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { ILanguageService } from '../languages/language.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { SemanticTokensProviderStyling } from './semanticTokensProviderStyling.js';\nimport { ISemanticTokensStylingService } from './semanticTokensStyling.js';\nimport { registerSingleton } from '../../../platform/instantiation/common/extensions.js';\nlet SemanticTokensStylingService = class SemanticTokensStylingService extends Disposable {\n    constructor(_themeService, _logService, _languageService) {\n        super();\n        this._themeService = _themeService;\n        this._logService = _logService;\n        this._languageService = _languageService;\n        this._caches = new WeakMap();\n        this._register(this._themeService.onDidColorThemeChange(() => {\n            this._caches = new WeakMap();\n        }));\n    }\n    getStyling(provider) {\n        if (!this._caches.has(provider)) {\n            this._caches.set(provider, new SemanticTokensProviderStyling(provider.getLegend(), this._themeService, this._languageService, this._logService));\n        }\n        return this._caches.get(provider);\n    }\n};\nSemanticTokensStylingService = __decorate([\n    __param(0, IThemeService),\n    __param(1, ILogService),\n    __param(2, ILanguageService)\n], SemanticTokensStylingService);\nexport { SemanticTokensStylingService };\nregisterSingleton(ISemanticTokensStylingService, SemanticTokensStylingService, 1 /* InstantiationType.Delayed */);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { IntervalTimer } from '../../../../base/common/async.js';\nimport { Disposable, DisposableStore, dispose, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Position } from '../../core/position.js';\nimport { Range } from '../../core/range.js';\nimport { ensureValidWordDefinition, getWordAtText } from '../../core/wordHelper.js';\nimport { MirrorTextModel as BaseMirrorModel } from '../../model/mirrorTextModel.js';\n/**\n * Stop syncing a model to the worker if it was not needed for 1 min.\n */\nexport const STOP_SYNC_MODEL_DELTA_TIME_MS = 60 * 1000;\nexport class WorkerTextModelSyncClient extends Disposable {\n    constructor(proxy, modelService, keepIdleModels = false) {\n        super();\n        this._syncedModels = Object.create(null);\n        this._syncedModelsLastUsedTime = Object.create(null);\n        this._proxy = proxy;\n        this._modelService = modelService;\n        if (!keepIdleModels) {\n            const timer = new IntervalTimer();\n            timer.cancelAndSet(() => this._checkStopModelSync(), Math.round(STOP_SYNC_MODEL_DELTA_TIME_MS / 2));\n            this._register(timer);\n        }\n    }\n    dispose() {\n        for (const modelUrl in this._syncedModels) {\n            dispose(this._syncedModels[modelUrl]);\n        }\n        this._syncedModels = Object.create(null);\n        this._syncedModelsLastUsedTime = Object.create(null);\n        super.dispose();\n    }\n    ensureSyncedResources(resources, forceLargeModels = false) {\n        for (const resource of resources) {\n            const resourceStr = resource.toString();\n            if (!this._syncedModels[resourceStr]) {\n                this._beginModelSync(resource, forceLargeModels);\n            }\n            if (this._syncedModels[resourceStr]) {\n                this._syncedModelsLastUsedTime[resourceStr] = (new Date()).getTime();\n            }\n        }\n    }\n    _checkStopModelSync() {\n        const currentTime = (new Date()).getTime();\n        const toRemove = [];\n        for (const modelUrl in this._syncedModelsLastUsedTime) {\n            const elapsedTime = currentTime - this._syncedModelsLastUsedTime[modelUrl];\n            if (elapsedTime > STOP_SYNC_MODEL_DELTA_TIME_MS) {\n                toRemove.push(modelUrl);\n            }\n        }\n        for (const e of toRemove) {\n            this._stopModelSync(e);\n        }\n    }\n    _beginModelSync(resource, forceLargeModels) {\n        const model = this._modelService.getModel(resource);\n        if (!model) {\n            return;\n        }\n        if (!forceLargeModels && model.isTooLargeForSyncing()) {\n            return;\n        }\n        const modelUrl = resource.toString();\n        this._proxy.$acceptNewModel({\n            url: model.uri.toString(),\n            lines: model.getLinesContent(),\n            EOL: model.getEOL(),\n            versionId: model.getVersionId()\n        });\n        const toDispose = new DisposableStore();\n        toDispose.add(model.onDidChangeContent((e) => {\n            this._proxy.$acceptModelChanged(modelUrl.toString(), e);\n        }));\n        toDispose.add(model.onWillDispose(() => {\n            this._stopModelSync(modelUrl);\n        }));\n        toDispose.add(toDisposable(() => {\n            this._proxy.$acceptRemovedModel(modelUrl);\n        }));\n        this._syncedModels[modelUrl] = toDispose;\n    }\n    _stopModelSync(modelUrl) {\n        const toDispose = this._syncedModels[modelUrl];\n        delete this._syncedModels[modelUrl];\n        delete this._syncedModelsLastUsedTime[modelUrl];\n        dispose(toDispose);\n    }\n}\nexport class WorkerTextModelSyncServer {\n    constructor() {\n        this._models = Object.create(null);\n    }\n    getModel(uri) {\n        return this._models[uri];\n    }\n    getModels() {\n        const all = [];\n        Object.keys(this._models).forEach((key) => all.push(this._models[key]));\n        return all;\n    }\n    $acceptNewModel(data) {\n        this._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\n    }\n    $acceptModelChanged(uri, e) {\n        if (!this._models[uri]) {\n            return;\n        }\n        const model = this._models[uri];\n        model.onEvents(e);\n    }\n    $acceptRemovedModel(uri) {\n        if (!this._models[uri]) {\n            return;\n        }\n        delete this._models[uri];\n    }\n}\nexport class MirrorModel extends BaseMirrorModel {\n    get uri() {\n        return this._uri;\n    }\n    get eol() {\n        return this._eol;\n    }\n    getValue() {\n        return this.getText();\n    }\n    findMatches(regex) {\n        const matches = [];\n        for (let i = 0; i < this._lines.length; i++) {\n            const line = this._lines[i];\n            const offsetToAdd = this.offsetAt(new Position(i + 1, 1));\n            const iteratorOverMatches = line.matchAll(regex);\n            for (const match of iteratorOverMatches) {\n                if (match.index || match.index === 0) {\n                    match.index = match.index + offsetToAdd;\n                }\n                matches.push(match);\n            }\n        }\n        return matches;\n    }\n    getLinesContent() {\n        return this._lines.slice(0);\n    }\n    getLineCount() {\n        return this._lines.length;\n    }\n    getLineContent(lineNumber) {\n        return this._lines[lineNumber - 1];\n    }\n    getWordAtPosition(position, wordDefinition) {\n        const wordAtText = getWordAtText(position.column, ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\n        if (wordAtText) {\n            return new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n        }\n        return null;\n    }\n    words(wordDefinition) {\n        const lines = this._lines;\n        const wordenize = this._wordenize.bind(this);\n        let lineNumber = 0;\n        let lineText = '';\n        let wordRangesIdx = 0;\n        let wordRanges = [];\n        return {\n            *[Symbol.iterator]() {\n                while (true) {\n                    if (wordRangesIdx < wordRanges.length) {\n                        const value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n                        wordRangesIdx += 1;\n                        yield value;\n                    }\n                    else {\n                        if (lineNumber < lines.length) {\n                            lineText = lines[lineNumber];\n                            wordRanges = wordenize(lineText, wordDefinition);\n                            wordRangesIdx = 0;\n                            lineNumber += 1;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                }\n            }\n        };\n    }\n    getLineWords(lineNumber, wordDefinition) {\n        const content = this._lines[lineNumber - 1];\n        const ranges = this._wordenize(content, wordDefinition);\n        const words = [];\n        for (const range of ranges) {\n            words.push({\n                word: content.substring(range.start, range.end),\n                startColumn: range.start + 1,\n                endColumn: range.end + 1\n            });\n        }\n        return words;\n    }\n    _wordenize(content, wordDefinition) {\n        const result = [];\n        let match;\n        wordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n        while (match = wordDefinition.exec(content)) {\n            if (match[0].length === 0) {\n                // it did match the empty string\n                break;\n            }\n            result.push({ start: match.index, end: match.index + match[0].length });\n        }\n        return result;\n    }\n    getValueInRange(range) {\n        range = this._validateRange(range);\n        if (range.startLineNumber === range.endLineNumber) {\n            return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n        }\n        const lineEnding = this._eol;\n        const startLineIndex = range.startLineNumber - 1;\n        const endLineIndex = range.endLineNumber - 1;\n        const resultLines = [];\n        resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n        for (let i = startLineIndex + 1; i < endLineIndex; i++) {\n            resultLines.push(this._lines[i]);\n        }\n        resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n        return resultLines.join(lineEnding);\n    }\n    offsetAt(position) {\n        position = this._validatePosition(position);\n        this._ensureLineStarts();\n        return this._lineStarts.getPrefixSum(position.lineNumber - 2) + (position.column - 1);\n    }\n    positionAt(offset) {\n        offset = Math.floor(offset);\n        offset = Math.max(0, offset);\n        this._ensureLineStarts();\n        const out = this._lineStarts.getIndexOf(offset);\n        const lineLength = this._lines[out.index].length;\n        // Ensure we return a valid position\n        return {\n            lineNumber: 1 + out.index,\n            column: 1 + Math.min(out.remainder, lineLength)\n        };\n    }\n    _validateRange(range) {\n        const start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n        const end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n        if (start.lineNumber !== range.startLineNumber\n            || start.column !== range.startColumn\n            || end.lineNumber !== range.endLineNumber\n            || end.column !== range.endColumn) {\n            return {\n                startLineNumber: start.lineNumber,\n                startColumn: start.column,\n                endLineNumber: end.lineNumber,\n                endColumn: end.column\n            };\n        }\n        return range;\n    }\n    _validatePosition(position) {\n        if (!Position.isIPosition(position)) {\n            throw new Error('bad position');\n        }\n        let { lineNumber, column } = position;\n        let hasChanged = false;\n        if (lineNumber < 1) {\n            lineNumber = 1;\n            column = 1;\n            hasChanged = true;\n        }\n        else if (lineNumber > this._lines.length) {\n            lineNumber = this._lines.length;\n            column = this._lines[lineNumber - 1].length + 1;\n            hasChanged = true;\n        }\n        else {\n            const maxCharacter = this._lines[lineNumber - 1].length + 1;\n            if (column < 1) {\n                column = 1;\n                hasChanged = true;\n            }\n            else if (column > maxCharacter) {\n                column = maxCharacter;\n                hasChanged = true;\n            }\n        }\n        if (!hasChanged) {\n            return position;\n        }\n        else {\n            return { lineNumber, column };\n        }\n    }\n}\n","import { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nexport const ITextResourceConfigurationService = createDecorator('textResourceConfigurationService');\nexport const ITextResourcePropertiesService = createDecorator('textResourcePropertiesService');\n","import { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nexport const ITreeSitterParserService = createDecorator('treeSitterParserService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class TreeViewsDnDService {\n    constructor() {\n        this._dragOperations = new Map();\n    }\n    removeDragOperationTransfer(uuid) {\n        if ((uuid && this._dragOperations.has(uuid))) {\n            const operation = this._dragOperations.get(uuid);\n            this._dragOperations.delete(uuid);\n            return operation;\n        }\n        return undefined;\n    }\n}\nexport class DraggedTreeItemsIdentifier {\n    constructor(identifier) {\n        this.identifier = identifier;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { registerSingleton } from '../../../platform/instantiation/common/extensions.js';\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { TreeViewsDnDService } from './treeViewsDnd.js';\nexport const ITreeViewsDnDService = createDecorator('treeViewsDndService');\nregisterSingleton(ITreeViewsDnDService, TreeViewsDnDService, 1 /* InstantiationType.Delayed */);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../core/range.js';\nimport { Searcher } from '../model/textModelSearch.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { assertNever } from '../../../base/common/assert.js';\nimport { DEFAULT_WORD_REGEXP, getWordAtText } from '../core/wordHelper.js';\nexport class UnicodeTextModelHighlighter {\n    static computeUnicodeHighlights(model, options, range) {\n        const startLine = range ? range.startLineNumber : 1;\n        const endLine = range ? range.endLineNumber : model.getLineCount();\n        const codePointHighlighter = new CodePointHighlighter(options);\n        const candidates = codePointHighlighter.getCandidateCodePoints();\n        let regex;\n        if (candidates === 'allNonBasicAscii') {\n            regex = new RegExp('[^\\\\t\\\\n\\\\r\\\\x20-\\\\x7E]', 'g');\n        }\n        else {\n            regex = new RegExp(`${buildRegExpCharClassExpr(Array.from(candidates))}`, 'g');\n        }\n        const searcher = new Searcher(null, regex);\n        const ranges = [];\n        let hasMore = false;\n        let m;\n        let ambiguousCharacterCount = 0;\n        let invisibleCharacterCount = 0;\n        let nonBasicAsciiCharacterCount = 0;\n        forLoop: for (let lineNumber = startLine, lineCount = endLine; lineNumber <= lineCount; lineNumber++) {\n            const lineContent = model.getLineContent(lineNumber);\n            const lineLength = lineContent.length;\n            // Reset regex to search from the beginning\n            searcher.reset(0);\n            do {\n                m = searcher.next(lineContent);\n                if (m) {\n                    let startIndex = m.index;\n                    let endIndex = m.index + m[0].length;\n                    // Extend range to entire code point\n                    if (startIndex > 0) {\n                        const charCodeBefore = lineContent.charCodeAt(startIndex - 1);\n                        if (strings.isHighSurrogate(charCodeBefore)) {\n                            startIndex--;\n                        }\n                    }\n                    if (endIndex + 1 < lineLength) {\n                        const charCodeBefore = lineContent.charCodeAt(endIndex - 1);\n                        if (strings.isHighSurrogate(charCodeBefore)) {\n                            endIndex++;\n                        }\n                    }\n                    const str = lineContent.substring(startIndex, endIndex);\n                    let word = getWordAtText(startIndex + 1, DEFAULT_WORD_REGEXP, lineContent, 0);\n                    if (word && word.endColumn <= startIndex + 1) {\n                        // The word does not include the problematic character, ignore the word\n                        word = null;\n                    }\n                    const highlightReason = codePointHighlighter.shouldHighlightNonBasicASCII(str, word ? word.word : null);\n                    if (highlightReason !== 0 /* SimpleHighlightReason.None */) {\n                        if (highlightReason === 3 /* SimpleHighlightReason.Ambiguous */) {\n                            ambiguousCharacterCount++;\n                        }\n                        else if (highlightReason === 2 /* SimpleHighlightReason.Invisible */) {\n                            invisibleCharacterCount++;\n                        }\n                        else if (highlightReason === 1 /* SimpleHighlightReason.NonBasicASCII */) {\n                            nonBasicAsciiCharacterCount++;\n                        }\n                        else {\n                            assertNever(highlightReason);\n                        }\n                        const MAX_RESULT_LENGTH = 1000;\n                        if (ranges.length >= MAX_RESULT_LENGTH) {\n                            hasMore = true;\n                            break forLoop;\n                        }\n                        ranges.push(new Range(lineNumber, startIndex + 1, lineNumber, endIndex + 1));\n                    }\n                }\n            } while (m);\n        }\n        return {\n            ranges,\n            hasMore,\n            ambiguousCharacterCount,\n            invisibleCharacterCount,\n            nonBasicAsciiCharacterCount\n        };\n    }\n    static computeUnicodeHighlightReason(char, options) {\n        const codePointHighlighter = new CodePointHighlighter(options);\n        const reason = codePointHighlighter.shouldHighlightNonBasicASCII(char, null);\n        switch (reason) {\n            case 0 /* SimpleHighlightReason.None */:\n                return null;\n            case 2 /* SimpleHighlightReason.Invisible */:\n                return { kind: 1 /* UnicodeHighlighterReasonKind.Invisible */ };\n            case 3 /* SimpleHighlightReason.Ambiguous */: {\n                const codePoint = char.codePointAt(0);\n                const primaryConfusable = codePointHighlighter.ambiguousCharacters.getPrimaryConfusable(codePoint);\n                const notAmbiguousInLocales = strings.AmbiguousCharacters.getLocales().filter((l) => !strings.AmbiguousCharacters.getInstance(new Set([...options.allowedLocales, l])).isAmbiguous(codePoint));\n                return { kind: 0 /* UnicodeHighlighterReasonKind.Ambiguous */, confusableWith: String.fromCodePoint(primaryConfusable), notAmbiguousInLocales };\n            }\n            case 1 /* SimpleHighlightReason.NonBasicASCII */:\n                return { kind: 2 /* UnicodeHighlighterReasonKind.NonBasicAscii */ };\n        }\n    }\n}\nfunction buildRegExpCharClassExpr(codePoints, flags) {\n    const src = `[${strings.escapeRegExpCharacters(codePoints.map((i) => String.fromCodePoint(i)).join(''))}]`;\n    return src;\n}\nclass CodePointHighlighter {\n    constructor(options) {\n        this.options = options;\n        this.allowedCodePoints = new Set(options.allowedCodePoints);\n        this.ambiguousCharacters = strings.AmbiguousCharacters.getInstance(new Set(options.allowedLocales));\n    }\n    getCandidateCodePoints() {\n        if (this.options.nonBasicASCII) {\n            return 'allNonBasicAscii';\n        }\n        const set = new Set();\n        if (this.options.invisibleCharacters) {\n            for (const cp of strings.InvisibleCharacters.codePoints) {\n                if (!isAllowedInvisibleCharacter(String.fromCodePoint(cp))) {\n                    set.add(cp);\n                }\n            }\n        }\n        if (this.options.ambiguousCharacters) {\n            for (const cp of this.ambiguousCharacters.getConfusableCodePoints()) {\n                set.add(cp);\n            }\n        }\n        for (const cp of this.allowedCodePoints) {\n            set.delete(cp);\n        }\n        return set;\n    }\n    shouldHighlightNonBasicASCII(character, wordContext) {\n        const codePoint = character.codePointAt(0);\n        if (this.allowedCodePoints.has(codePoint)) {\n            return 0 /* SimpleHighlightReason.None */;\n        }\n        if (this.options.nonBasicASCII) {\n            return 1 /* SimpleHighlightReason.NonBasicASCII */;\n        }\n        let hasBasicASCIICharacters = false;\n        let hasNonConfusableNonBasicAsciiCharacter = false;\n        if (wordContext) {\n            for (const char of wordContext) {\n                const codePoint = char.codePointAt(0);\n                const isBasicASCII = strings.isBasicASCII(char);\n                hasBasicASCIICharacters = hasBasicASCIICharacters || isBasicASCII;\n                if (!isBasicASCII &&\n                    !this.ambiguousCharacters.isAmbiguous(codePoint) &&\n                    !strings.InvisibleCharacters.isInvisibleCharacter(codePoint)) {\n                    hasNonConfusableNonBasicAsciiCharacter = true;\n                }\n            }\n        }\n        if (\n        /* Don't allow mixing weird looking characters with ASCII */ !hasBasicASCIICharacters &&\n            /* Is there an obviously weird looking character? */ hasNonConfusableNonBasicAsciiCharacter) {\n            return 0 /* SimpleHighlightReason.None */;\n        }\n        if (this.options.invisibleCharacters) {\n            // TODO check for emojis\n            if (!isAllowedInvisibleCharacter(character) && strings.InvisibleCharacters.isInvisibleCharacter(codePoint)) {\n                return 2 /* SimpleHighlightReason.Invisible */;\n            }\n        }\n        if (this.options.ambiguousCharacters) {\n            if (this.ambiguousCharacters.isAmbiguous(codePoint)) {\n                return 3 /* SimpleHighlightReason.Ambiguous */;\n            }\n        }\n        return 0 /* SimpleHighlightReason.None */;\n    }\n}\nfunction isAllowedInvisibleCharacter(character) {\n    return character === ' ' || character === '\\n' || character === '\\t';\n}\n","var map = {\n\t\"./editorBaseApi\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/editorBaseApi.js\"\n\t],\n\t\"./editorBaseApi.js\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/editorBaseApi.js\"\n\t],\n\t\"./editorSimpleWorker\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js\"\n\t],\n\t\"./editorSimpleWorker.js\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js\"\n\t],\n\t\"./editorWorker\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/editorWorker.js\",\n\t\t\"main\"\n\t],\n\t\"./editorWorker.js\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/editorWorker.js\",\n\t\t\"main\"\n\t],\n\t\"./editorWorkerHost\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/editorWorkerHost.js\"\n\t],\n\t\"./editorWorkerHost.js\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/editorWorkerHost.js\"\n\t],\n\t\"./findSectionHeaders\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/findSectionHeaders.js\"\n\t],\n\t\"./findSectionHeaders.js\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/findSectionHeaders.js\"\n\t],\n\t\"./getIconClasses\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/getIconClasses.js\",\n\t\t\"main\"\n\t],\n\t\"./getIconClasses.js\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/getIconClasses.js\",\n\t\t\"main\"\n\t],\n\t\"./languageFeatureDebounce\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/languageFeatureDebounce.js\",\n\t\t\"main\"\n\t],\n\t\"./languageFeatureDebounce.js\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/languageFeatureDebounce.js\",\n\t\t\"main\"\n\t],\n\t\"./languageFeatures\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/languageFeatures.js\",\n\t\t\"main\"\n\t],\n\t\"./languageFeatures.js\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/languageFeatures.js\",\n\t\t\"main\"\n\t],\n\t\"./languageFeaturesService\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/languageFeaturesService.js\",\n\t\t\"main\"\n\t],\n\t\"./languageFeaturesService.js\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/languageFeaturesService.js\",\n\t\t\"main\"\n\t],\n\t\"./languageService\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/languageService.js\",\n\t\t\"main\"\n\t],\n\t\"./languageService.js\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/languageService.js\",\n\t\t\"main\"\n\t],\n\t\"./languagesAssociations\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/languagesAssociations.js\",\n\t\t\"main\"\n\t],\n\t\"./languagesAssociations.js\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/languagesAssociations.js\",\n\t\t\"main\"\n\t],\n\t\"./languagesRegistry\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/languagesRegistry.js\",\n\t\t\"main\"\n\t],\n\t\"./languagesRegistry.js\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/languagesRegistry.js\",\n\t\t\"main\"\n\t],\n\t\"./markerDecorations\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/markerDecorations.js\",\n\t\t\"main\"\n\t],\n\t\"./markerDecorations.js\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/markerDecorations.js\",\n\t\t\"main\"\n\t],\n\t\"./markerDecorationsService\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/markerDecorationsService.js\",\n\t\t\"main\"\n\t],\n\t\"./markerDecorationsService.js\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/markerDecorationsService.js\",\n\t\t\"main\"\n\t],\n\t\"./model\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/model.js\",\n\t\t\"main\"\n\t],\n\t\"./model.js\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/model.js\",\n\t\t\"main\"\n\t],\n\t\"./modelService\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/modelService.js\",\n\t\t\"main\"\n\t],\n\t\"./modelService.js\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/modelService.js\",\n\t\t\"main\"\n\t],\n\t\"./resolverService\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/resolverService.js\",\n\t\t\"main\"\n\t],\n\t\"./resolverService.js\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/resolverService.js\",\n\t\t\"main\"\n\t],\n\t\"./semanticTokensDto\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/semanticTokensDto.js\",\n\t\t\"main\"\n\t],\n\t\"./semanticTokensDto.js\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/semanticTokensDto.js\",\n\t\t\"main\"\n\t],\n\t\"./semanticTokensProviderStyling\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/semanticTokensProviderStyling.js\",\n\t\t\"main\"\n\t],\n\t\"./semanticTokensProviderStyling.js\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/semanticTokensProviderStyling.js\",\n\t\t\"main\"\n\t],\n\t\"./semanticTokensStyling\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/semanticTokensStyling.js\",\n\t\t\"main\"\n\t],\n\t\"./semanticTokensStyling.js\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/semanticTokensStyling.js\",\n\t\t\"main\"\n\t],\n\t\"./semanticTokensStylingService\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/semanticTokensStylingService.js\",\n\t\t\"main\"\n\t],\n\t\"./semanticTokensStylingService.js\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/semanticTokensStylingService.js\",\n\t\t\"main\"\n\t],\n\t\"./textModelSync/textModelSync.impl\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/textModelSync/textModelSync.impl.js\"\n\t],\n\t\"./textModelSync/textModelSync.impl.js\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/textModelSync/textModelSync.impl.js\"\n\t],\n\t\"./textModelSync/textModelSync.protocol\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/textModelSync/textModelSync.protocol.js\",\n\t\t\"main\"\n\t],\n\t\"./textModelSync/textModelSync.protocol.js\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/textModelSync/textModelSync.protocol.js\",\n\t\t\"main\"\n\t],\n\t\"./textResourceConfiguration\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/textResourceConfiguration.js\",\n\t\t\"main\"\n\t],\n\t\"./textResourceConfiguration.js\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/textResourceConfiguration.js\",\n\t\t\"main\"\n\t],\n\t\"./treeSitterParserService\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/treeSitterParserService.js\",\n\t\t\"main\"\n\t],\n\t\"./treeSitterParserService.js\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/treeSitterParserService.js\",\n\t\t\"main\"\n\t],\n\t\"./treeViewsDnd\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/treeViewsDnd.js\",\n\t\t\"main\"\n\t],\n\t\"./treeViewsDnd.js\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/treeViewsDnd.js\",\n\t\t\"main\"\n\t],\n\t\"./treeViewsDndService\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/treeViewsDndService.js\",\n\t\t\"main\"\n\t],\n\t\"./treeViewsDndService.js\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/treeViewsDndService.js\",\n\t\t\"main\"\n\t],\n\t\"./unicodeTextModelHighlighter\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/unicodeTextModelHighlighter.js\"\n\t],\n\t\"./unicodeTextModelHighlighter.js\": [\n\t\t\"./node_modules/monaco-editor/esm/vs/editor/common/services/unicodeTextModelHighlighter.js\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = \"./node_modules/monaco-editor/esm/vs/editor/common/services lazy recursive ^.*$\";\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./editorBaseApi\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/editorBaseApi.js\",\n\t\"./editorBaseApi.js\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/editorBaseApi.js\",\n\t\"./editorSimpleWorker\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js\",\n\t\"./editorSimpleWorker.js\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js\",\n\t\"./editorWorker\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/editorWorker.js\",\n\t\"./editorWorker.js\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/editorWorker.js\",\n\t\"./editorWorkerHost\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/editorWorkerHost.js\",\n\t\"./editorWorkerHost.js\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/editorWorkerHost.js\",\n\t\"./findSectionHeaders\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/findSectionHeaders.js\",\n\t\"./findSectionHeaders.js\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/findSectionHeaders.js\",\n\t\"./getIconClasses\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/getIconClasses.js\",\n\t\"./getIconClasses.js\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/getIconClasses.js\",\n\t\"./languageFeatureDebounce\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/languageFeatureDebounce.js\",\n\t\"./languageFeatureDebounce.js\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/languageFeatureDebounce.js\",\n\t\"./languageFeatures\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/languageFeatures.js\",\n\t\"./languageFeatures.js\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/languageFeatures.js\",\n\t\"./languageFeaturesService\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/languageFeaturesService.js\",\n\t\"./languageFeaturesService.js\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/languageFeaturesService.js\",\n\t\"./languageService\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/languageService.js\",\n\t\"./languageService.js\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/languageService.js\",\n\t\"./languagesAssociations\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/languagesAssociations.js\",\n\t\"./languagesAssociations.js\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/languagesAssociations.js\",\n\t\"./languagesRegistry\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/languagesRegistry.js\",\n\t\"./languagesRegistry.js\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/languagesRegistry.js\",\n\t\"./markerDecorations\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/markerDecorations.js\",\n\t\"./markerDecorations.js\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/markerDecorations.js\",\n\t\"./markerDecorationsService\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/markerDecorationsService.js\",\n\t\"./markerDecorationsService.js\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/markerDecorationsService.js\",\n\t\"./model\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/model.js\",\n\t\"./model.js\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/model.js\",\n\t\"./modelService\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/modelService.js\",\n\t\"./modelService.js\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/modelService.js\",\n\t\"./resolverService\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/resolverService.js\",\n\t\"./resolverService.js\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/resolverService.js\",\n\t\"./semanticTokensDto\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/semanticTokensDto.js\",\n\t\"./semanticTokensDto.js\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/semanticTokensDto.js\",\n\t\"./semanticTokensProviderStyling\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/semanticTokensProviderStyling.js\",\n\t\"./semanticTokensProviderStyling.js\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/semanticTokensProviderStyling.js\",\n\t\"./semanticTokensStyling\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/semanticTokensStyling.js\",\n\t\"./semanticTokensStyling.js\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/semanticTokensStyling.js\",\n\t\"./semanticTokensStylingService\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/semanticTokensStylingService.js\",\n\t\"./semanticTokensStylingService.js\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/semanticTokensStylingService.js\",\n\t\"./textModelSync/textModelSync.impl\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/textModelSync/textModelSync.impl.js\",\n\t\"./textModelSync/textModelSync.impl.js\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/textModelSync/textModelSync.impl.js\",\n\t\"./textModelSync/textModelSync.protocol\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/textModelSync/textModelSync.protocol.js\",\n\t\"./textModelSync/textModelSync.protocol.js\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/textModelSync/textModelSync.protocol.js\",\n\t\"./textResourceConfiguration\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/textResourceConfiguration.js\",\n\t\"./textResourceConfiguration.js\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/textResourceConfiguration.js\",\n\t\"./treeSitterParserService\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/treeSitterParserService.js\",\n\t\"./treeSitterParserService.js\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/treeSitterParserService.js\",\n\t\"./treeViewsDnd\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/treeViewsDnd.js\",\n\t\"./treeViewsDnd.js\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/treeViewsDnd.js\",\n\t\"./treeViewsDndService\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/treeViewsDndService.js\",\n\t\"./treeViewsDndService.js\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/treeViewsDndService.js\",\n\t\"./unicodeTextModelHighlighter\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/unicodeTextModelHighlighter.js\",\n\t\"./unicodeTextModelHighlighter.js\": \"./node_modules/monaco-editor/esm/vs/editor/common/services/unicodeTextModelHighlighter.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/monaco-editor/esm/vs/editor/common/services sync recursive ^.*$\";","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// THIS IS A GENERATED FILE. DO NOT EDIT DIRECTLY.\nexport var AccessibilitySupport;\n(function (AccessibilitySupport) {\n    /**\n     * This should be the browser case where it is not known if a screen reader is attached or no.\n     */\n    AccessibilitySupport[AccessibilitySupport[\"Unknown\"] = 0] = \"Unknown\";\n    AccessibilitySupport[AccessibilitySupport[\"Disabled\"] = 1] = \"Disabled\";\n    AccessibilitySupport[AccessibilitySupport[\"Enabled\"] = 2] = \"Enabled\";\n})(AccessibilitySupport || (AccessibilitySupport = {}));\nexport var CodeActionTriggerType;\n(function (CodeActionTriggerType) {\n    CodeActionTriggerType[CodeActionTriggerType[\"Invoke\"] = 1] = \"Invoke\";\n    CodeActionTriggerType[CodeActionTriggerType[\"Auto\"] = 2] = \"Auto\";\n})(CodeActionTriggerType || (CodeActionTriggerType = {}));\nexport var CompletionItemInsertTextRule;\n(function (CompletionItemInsertTextRule) {\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"None\"] = 0] = \"None\";\n    /**\n     * Adjust whitespace/indentation of multiline insert texts to\n     * match the current line indentation.\n     */\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"KeepWhitespace\"] = 1] = \"KeepWhitespace\";\n    /**\n     * `insertText` is a snippet.\n     */\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"InsertAsSnippet\"] = 4] = \"InsertAsSnippet\";\n})(CompletionItemInsertTextRule || (CompletionItemInsertTextRule = {}));\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind[CompletionItemKind[\"Method\"] = 0] = \"Method\";\n    CompletionItemKind[CompletionItemKind[\"Function\"] = 1] = \"Function\";\n    CompletionItemKind[CompletionItemKind[\"Constructor\"] = 2] = \"Constructor\";\n    CompletionItemKind[CompletionItemKind[\"Field\"] = 3] = \"Field\";\n    CompletionItemKind[CompletionItemKind[\"Variable\"] = 4] = \"Variable\";\n    CompletionItemKind[CompletionItemKind[\"Class\"] = 5] = \"Class\";\n    CompletionItemKind[CompletionItemKind[\"Struct\"] = 6] = \"Struct\";\n    CompletionItemKind[CompletionItemKind[\"Interface\"] = 7] = \"Interface\";\n    CompletionItemKind[CompletionItemKind[\"Module\"] = 8] = \"Module\";\n    CompletionItemKind[CompletionItemKind[\"Property\"] = 9] = \"Property\";\n    CompletionItemKind[CompletionItemKind[\"Event\"] = 10] = \"Event\";\n    CompletionItemKind[CompletionItemKind[\"Operator\"] = 11] = \"Operator\";\n    CompletionItemKind[CompletionItemKind[\"Unit\"] = 12] = \"Unit\";\n    CompletionItemKind[CompletionItemKind[\"Value\"] = 13] = \"Value\";\n    CompletionItemKind[CompletionItemKind[\"Constant\"] = 14] = \"Constant\";\n    CompletionItemKind[CompletionItemKind[\"Enum\"] = 15] = \"Enum\";\n    CompletionItemKind[CompletionItemKind[\"EnumMember\"] = 16] = \"EnumMember\";\n    CompletionItemKind[CompletionItemKind[\"Keyword\"] = 17] = \"Keyword\";\n    CompletionItemKind[CompletionItemKind[\"Text\"] = 18] = \"Text\";\n    CompletionItemKind[CompletionItemKind[\"Color\"] = 19] = \"Color\";\n    CompletionItemKind[CompletionItemKind[\"File\"] = 20] = \"File\";\n    CompletionItemKind[CompletionItemKind[\"Reference\"] = 21] = \"Reference\";\n    CompletionItemKind[CompletionItemKind[\"Customcolor\"] = 22] = \"Customcolor\";\n    CompletionItemKind[CompletionItemKind[\"Folder\"] = 23] = \"Folder\";\n    CompletionItemKind[CompletionItemKind[\"TypeParameter\"] = 24] = \"TypeParameter\";\n    CompletionItemKind[CompletionItemKind[\"User\"] = 25] = \"User\";\n    CompletionItemKind[CompletionItemKind[\"Issue\"] = 26] = \"Issue\";\n    CompletionItemKind[CompletionItemKind[\"Snippet\"] = 27] = \"Snippet\";\n})(CompletionItemKind || (CompletionItemKind = {}));\nexport var CompletionItemTag;\n(function (CompletionItemTag) {\n    CompletionItemTag[CompletionItemTag[\"Deprecated\"] = 1] = \"Deprecated\";\n})(CompletionItemTag || (CompletionItemTag = {}));\n/**\n * How a suggest provider was triggered.\n */\nexport var CompletionTriggerKind;\n(function (CompletionTriggerKind) {\n    CompletionTriggerKind[CompletionTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerCharacter\"] = 1] = \"TriggerCharacter\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerForIncompleteCompletions\"] = 2] = \"TriggerForIncompleteCompletions\";\n})(CompletionTriggerKind || (CompletionTriggerKind = {}));\n/**\n * A positioning preference for rendering content widgets.\n */\nexport var ContentWidgetPositionPreference;\n(function (ContentWidgetPositionPreference) {\n    /**\n     * Place the content widget exactly at a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"EXACT\"] = 0] = \"EXACT\";\n    /**\n     * Place the content widget above a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"ABOVE\"] = 1] = \"ABOVE\";\n    /**\n     * Place the content widget below a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"BELOW\"] = 2] = \"BELOW\";\n})(ContentWidgetPositionPreference || (ContentWidgetPositionPreference = {}));\n/**\n * Describes the reason the cursor has changed its position.\n */\nexport var CursorChangeReason;\n(function (CursorChangeReason) {\n    /**\n     * Unknown or not set.\n     */\n    CursorChangeReason[CursorChangeReason[\"NotSet\"] = 0] = \"NotSet\";\n    /**\n     * A `model.setValue()` was called.\n     */\n    CursorChangeReason[CursorChangeReason[\"ContentFlush\"] = 1] = \"ContentFlush\";\n    /**\n     * The `model` has been changed outside of this cursor and the cursor recovers its position from associated markers.\n     */\n    CursorChangeReason[CursorChangeReason[\"RecoverFromMarkers\"] = 2] = \"RecoverFromMarkers\";\n    /**\n     * There was an explicit user gesture.\n     */\n    CursorChangeReason[CursorChangeReason[\"Explicit\"] = 3] = \"Explicit\";\n    /**\n     * There was a Paste.\n     */\n    CursorChangeReason[CursorChangeReason[\"Paste\"] = 4] = \"Paste\";\n    /**\n     * There was an Undo.\n     */\n    CursorChangeReason[CursorChangeReason[\"Undo\"] = 5] = \"Undo\";\n    /**\n     * There was a Redo.\n     */\n    CursorChangeReason[CursorChangeReason[\"Redo\"] = 6] = \"Redo\";\n})(CursorChangeReason || (CursorChangeReason = {}));\n/**\n * The default end of line to use when instantiating models.\n */\nexport var DefaultEndOfLine;\n(function (DefaultEndOfLine) {\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    DefaultEndOfLine[DefaultEndOfLine[\"LF\"] = 1] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    DefaultEndOfLine[DefaultEndOfLine[\"CRLF\"] = 2] = \"CRLF\";\n})(DefaultEndOfLine || (DefaultEndOfLine = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * Configuration options for auto indentation in the editor\n */\nexport var EditorAutoIndentStrategy;\n(function (EditorAutoIndentStrategy) {\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"None\"] = 0] = \"None\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Keep\"] = 1] = \"Keep\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Brackets\"] = 2] = \"Brackets\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Advanced\"] = 3] = \"Advanced\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Full\"] = 4] = \"Full\";\n})(EditorAutoIndentStrategy || (EditorAutoIndentStrategy = {}));\nexport var EditorOption;\n(function (EditorOption) {\n    EditorOption[EditorOption[\"acceptSuggestionOnCommitCharacter\"] = 0] = \"acceptSuggestionOnCommitCharacter\";\n    EditorOption[EditorOption[\"acceptSuggestionOnEnter\"] = 1] = \"acceptSuggestionOnEnter\";\n    EditorOption[EditorOption[\"accessibilitySupport\"] = 2] = \"accessibilitySupport\";\n    EditorOption[EditorOption[\"accessibilityPageSize\"] = 3] = \"accessibilityPageSize\";\n    EditorOption[EditorOption[\"ariaLabel\"] = 4] = \"ariaLabel\";\n    EditorOption[EditorOption[\"ariaRequired\"] = 5] = \"ariaRequired\";\n    EditorOption[EditorOption[\"autoClosingBrackets\"] = 6] = \"autoClosingBrackets\";\n    EditorOption[EditorOption[\"autoClosingComments\"] = 7] = \"autoClosingComments\";\n    EditorOption[EditorOption[\"screenReaderAnnounceInlineSuggestion\"] = 8] = \"screenReaderAnnounceInlineSuggestion\";\n    EditorOption[EditorOption[\"autoClosingDelete\"] = 9] = \"autoClosingDelete\";\n    EditorOption[EditorOption[\"autoClosingOvertype\"] = 10] = \"autoClosingOvertype\";\n    EditorOption[EditorOption[\"autoClosingQuotes\"] = 11] = \"autoClosingQuotes\";\n    EditorOption[EditorOption[\"autoIndent\"] = 12] = \"autoIndent\";\n    EditorOption[EditorOption[\"automaticLayout\"] = 13] = \"automaticLayout\";\n    EditorOption[EditorOption[\"autoSurround\"] = 14] = \"autoSurround\";\n    EditorOption[EditorOption[\"bracketPairColorization\"] = 15] = \"bracketPairColorization\";\n    EditorOption[EditorOption[\"guides\"] = 16] = \"guides\";\n    EditorOption[EditorOption[\"codeLens\"] = 17] = \"codeLens\";\n    EditorOption[EditorOption[\"codeLensFontFamily\"] = 18] = \"codeLensFontFamily\";\n    EditorOption[EditorOption[\"codeLensFontSize\"] = 19] = \"codeLensFontSize\";\n    EditorOption[EditorOption[\"colorDecorators\"] = 20] = \"colorDecorators\";\n    EditorOption[EditorOption[\"colorDecoratorsLimit\"] = 21] = \"colorDecoratorsLimit\";\n    EditorOption[EditorOption[\"columnSelection\"] = 22] = \"columnSelection\";\n    EditorOption[EditorOption[\"comments\"] = 23] = \"comments\";\n    EditorOption[EditorOption[\"contextmenu\"] = 24] = \"contextmenu\";\n    EditorOption[EditorOption[\"copyWithSyntaxHighlighting\"] = 25] = \"copyWithSyntaxHighlighting\";\n    EditorOption[EditorOption[\"cursorBlinking\"] = 26] = \"cursorBlinking\";\n    EditorOption[EditorOption[\"cursorSmoothCaretAnimation\"] = 27] = \"cursorSmoothCaretAnimation\";\n    EditorOption[EditorOption[\"cursorStyle\"] = 28] = \"cursorStyle\";\n    EditorOption[EditorOption[\"cursorSurroundingLines\"] = 29] = \"cursorSurroundingLines\";\n    EditorOption[EditorOption[\"cursorSurroundingLinesStyle\"] = 30] = \"cursorSurroundingLinesStyle\";\n    EditorOption[EditorOption[\"cursorWidth\"] = 31] = \"cursorWidth\";\n    EditorOption[EditorOption[\"disableLayerHinting\"] = 32] = \"disableLayerHinting\";\n    EditorOption[EditorOption[\"disableMonospaceOptimizations\"] = 33] = \"disableMonospaceOptimizations\";\n    EditorOption[EditorOption[\"domReadOnly\"] = 34] = \"domReadOnly\";\n    EditorOption[EditorOption[\"dragAndDrop\"] = 35] = \"dragAndDrop\";\n    EditorOption[EditorOption[\"dropIntoEditor\"] = 36] = \"dropIntoEditor\";\n    EditorOption[EditorOption[\"emptySelectionClipboard\"] = 37] = \"emptySelectionClipboard\";\n    EditorOption[EditorOption[\"experimentalWhitespaceRendering\"] = 38] = \"experimentalWhitespaceRendering\";\n    EditorOption[EditorOption[\"extraEditorClassName\"] = 39] = \"extraEditorClassName\";\n    EditorOption[EditorOption[\"fastScrollSensitivity\"] = 40] = \"fastScrollSensitivity\";\n    EditorOption[EditorOption[\"find\"] = 41] = \"find\";\n    EditorOption[EditorOption[\"fixedOverflowWidgets\"] = 42] = \"fixedOverflowWidgets\";\n    EditorOption[EditorOption[\"folding\"] = 43] = \"folding\";\n    EditorOption[EditorOption[\"foldingStrategy\"] = 44] = \"foldingStrategy\";\n    EditorOption[EditorOption[\"foldingHighlight\"] = 45] = \"foldingHighlight\";\n    EditorOption[EditorOption[\"foldingImportsByDefault\"] = 46] = \"foldingImportsByDefault\";\n    EditorOption[EditorOption[\"foldingMaximumRegions\"] = 47] = \"foldingMaximumRegions\";\n    EditorOption[EditorOption[\"unfoldOnClickAfterEndOfLine\"] = 48] = \"unfoldOnClickAfterEndOfLine\";\n    EditorOption[EditorOption[\"fontFamily\"] = 49] = \"fontFamily\";\n    EditorOption[EditorOption[\"fontInfo\"] = 50] = \"fontInfo\";\n    EditorOption[EditorOption[\"fontLigatures\"] = 51] = \"fontLigatures\";\n    EditorOption[EditorOption[\"fontSize\"] = 52] = \"fontSize\";\n    EditorOption[EditorOption[\"fontWeight\"] = 53] = \"fontWeight\";\n    EditorOption[EditorOption[\"fontVariations\"] = 54] = \"fontVariations\";\n    EditorOption[EditorOption[\"formatOnPaste\"] = 55] = \"formatOnPaste\";\n    EditorOption[EditorOption[\"formatOnType\"] = 56] = \"formatOnType\";\n    EditorOption[EditorOption[\"glyphMargin\"] = 57] = \"glyphMargin\";\n    EditorOption[EditorOption[\"gotoLocation\"] = 58] = \"gotoLocation\";\n    EditorOption[EditorOption[\"hideCursorInOverviewRuler\"] = 59] = \"hideCursorInOverviewRuler\";\n    EditorOption[EditorOption[\"hover\"] = 60] = \"hover\";\n    EditorOption[EditorOption[\"inDiffEditor\"] = 61] = \"inDiffEditor\";\n    EditorOption[EditorOption[\"inlineSuggest\"] = 62] = \"inlineSuggest\";\n    EditorOption[EditorOption[\"inlineEdit\"] = 63] = \"inlineEdit\";\n    EditorOption[EditorOption[\"letterSpacing\"] = 64] = \"letterSpacing\";\n    EditorOption[EditorOption[\"lightbulb\"] = 65] = \"lightbulb\";\n    EditorOption[EditorOption[\"lineDecorationsWidth\"] = 66] = \"lineDecorationsWidth\";\n    EditorOption[EditorOption[\"lineHeight\"] = 67] = \"lineHeight\";\n    EditorOption[EditorOption[\"lineNumbers\"] = 68] = \"lineNumbers\";\n    EditorOption[EditorOption[\"lineNumbersMinChars\"] = 69] = \"lineNumbersMinChars\";\n    EditorOption[EditorOption[\"linkedEditing\"] = 70] = \"linkedEditing\";\n    EditorOption[EditorOption[\"links\"] = 71] = \"links\";\n    EditorOption[EditorOption[\"matchBrackets\"] = 72] = \"matchBrackets\";\n    EditorOption[EditorOption[\"minimap\"] = 73] = \"minimap\";\n    EditorOption[EditorOption[\"mouseStyle\"] = 74] = \"mouseStyle\";\n    EditorOption[EditorOption[\"mouseWheelScrollSensitivity\"] = 75] = \"mouseWheelScrollSensitivity\";\n    EditorOption[EditorOption[\"mouseWheelZoom\"] = 76] = \"mouseWheelZoom\";\n    EditorOption[EditorOption[\"multiCursorMergeOverlapping\"] = 77] = \"multiCursorMergeOverlapping\";\n    EditorOption[EditorOption[\"multiCursorModifier\"] = 78] = \"multiCursorModifier\";\n    EditorOption[EditorOption[\"multiCursorPaste\"] = 79] = \"multiCursorPaste\";\n    EditorOption[EditorOption[\"multiCursorLimit\"] = 80] = \"multiCursorLimit\";\n    EditorOption[EditorOption[\"occurrencesHighlight\"] = 81] = \"occurrencesHighlight\";\n    EditorOption[EditorOption[\"overviewRulerBorder\"] = 82] = \"overviewRulerBorder\";\n    EditorOption[EditorOption[\"overviewRulerLanes\"] = 83] = \"overviewRulerLanes\";\n    EditorOption[EditorOption[\"padding\"] = 84] = \"padding\";\n    EditorOption[EditorOption[\"pasteAs\"] = 85] = \"pasteAs\";\n    EditorOption[EditorOption[\"parameterHints\"] = 86] = \"parameterHints\";\n    EditorOption[EditorOption[\"peekWidgetDefaultFocus\"] = 87] = \"peekWidgetDefaultFocus\";\n    EditorOption[EditorOption[\"placeholder\"] = 88] = \"placeholder\";\n    EditorOption[EditorOption[\"definitionLinkOpensInPeek\"] = 89] = \"definitionLinkOpensInPeek\";\n    EditorOption[EditorOption[\"quickSuggestions\"] = 90] = \"quickSuggestions\";\n    EditorOption[EditorOption[\"quickSuggestionsDelay\"] = 91] = \"quickSuggestionsDelay\";\n    EditorOption[EditorOption[\"readOnly\"] = 92] = \"readOnly\";\n    EditorOption[EditorOption[\"readOnlyMessage\"] = 93] = \"readOnlyMessage\";\n    EditorOption[EditorOption[\"renameOnType\"] = 94] = \"renameOnType\";\n    EditorOption[EditorOption[\"renderControlCharacters\"] = 95] = \"renderControlCharacters\";\n    EditorOption[EditorOption[\"renderFinalNewline\"] = 96] = \"renderFinalNewline\";\n    EditorOption[EditorOption[\"renderLineHighlight\"] = 97] = \"renderLineHighlight\";\n    EditorOption[EditorOption[\"renderLineHighlightOnlyWhenFocus\"] = 98] = \"renderLineHighlightOnlyWhenFocus\";\n    EditorOption[EditorOption[\"renderValidationDecorations\"] = 99] = \"renderValidationDecorations\";\n    EditorOption[EditorOption[\"renderWhitespace\"] = 100] = \"renderWhitespace\";\n    EditorOption[EditorOption[\"revealHorizontalRightPadding\"] = 101] = \"revealHorizontalRightPadding\";\n    EditorOption[EditorOption[\"roundedSelection\"] = 102] = \"roundedSelection\";\n    EditorOption[EditorOption[\"rulers\"] = 103] = \"rulers\";\n    EditorOption[EditorOption[\"scrollbar\"] = 104] = \"scrollbar\";\n    EditorOption[EditorOption[\"scrollBeyondLastColumn\"] = 105] = \"scrollBeyondLastColumn\";\n    EditorOption[EditorOption[\"scrollBeyondLastLine\"] = 106] = \"scrollBeyondLastLine\";\n    EditorOption[EditorOption[\"scrollPredominantAxis\"] = 107] = \"scrollPredominantAxis\";\n    EditorOption[EditorOption[\"selectionClipboard\"] = 108] = \"selectionClipboard\";\n    EditorOption[EditorOption[\"selectionHighlight\"] = 109] = \"selectionHighlight\";\n    EditorOption[EditorOption[\"selectOnLineNumbers\"] = 110] = \"selectOnLineNumbers\";\n    EditorOption[EditorOption[\"showFoldingControls\"] = 111] = \"showFoldingControls\";\n    EditorOption[EditorOption[\"showUnused\"] = 112] = \"showUnused\";\n    EditorOption[EditorOption[\"snippetSuggestions\"] = 113] = \"snippetSuggestions\";\n    EditorOption[EditorOption[\"smartSelect\"] = 114] = \"smartSelect\";\n    EditorOption[EditorOption[\"smoothScrolling\"] = 115] = \"smoothScrolling\";\n    EditorOption[EditorOption[\"stickyScroll\"] = 116] = \"stickyScroll\";\n    EditorOption[EditorOption[\"stickyTabStops\"] = 117] = \"stickyTabStops\";\n    EditorOption[EditorOption[\"stopRenderingLineAfter\"] = 118] = \"stopRenderingLineAfter\";\n    EditorOption[EditorOption[\"suggest\"] = 119] = \"suggest\";\n    EditorOption[EditorOption[\"suggestFontSize\"] = 120] = \"suggestFontSize\";\n    EditorOption[EditorOption[\"suggestLineHeight\"] = 121] = \"suggestLineHeight\";\n    EditorOption[EditorOption[\"suggestOnTriggerCharacters\"] = 122] = \"suggestOnTriggerCharacters\";\n    EditorOption[EditorOption[\"suggestSelection\"] = 123] = \"suggestSelection\";\n    EditorOption[EditorOption[\"tabCompletion\"] = 124] = \"tabCompletion\";\n    EditorOption[EditorOption[\"tabIndex\"] = 125] = \"tabIndex\";\n    EditorOption[EditorOption[\"unicodeHighlighting\"] = 126] = \"unicodeHighlighting\";\n    EditorOption[EditorOption[\"unusualLineTerminators\"] = 127] = \"unusualLineTerminators\";\n    EditorOption[EditorOption[\"useShadowDOM\"] = 128] = \"useShadowDOM\";\n    EditorOption[EditorOption[\"useTabStops\"] = 129] = \"useTabStops\";\n    EditorOption[EditorOption[\"wordBreak\"] = 130] = \"wordBreak\";\n    EditorOption[EditorOption[\"wordSegmenterLocales\"] = 131] = \"wordSegmenterLocales\";\n    EditorOption[EditorOption[\"wordSeparators\"] = 132] = \"wordSeparators\";\n    EditorOption[EditorOption[\"wordWrap\"] = 133] = \"wordWrap\";\n    EditorOption[EditorOption[\"wordWrapBreakAfterCharacters\"] = 134] = \"wordWrapBreakAfterCharacters\";\n    EditorOption[EditorOption[\"wordWrapBreakBeforeCharacters\"] = 135] = \"wordWrapBreakBeforeCharacters\";\n    EditorOption[EditorOption[\"wordWrapColumn\"] = 136] = \"wordWrapColumn\";\n    EditorOption[EditorOption[\"wordWrapOverride1\"] = 137] = \"wordWrapOverride1\";\n    EditorOption[EditorOption[\"wordWrapOverride2\"] = 138] = \"wordWrapOverride2\";\n    EditorOption[EditorOption[\"wrappingIndent\"] = 139] = \"wrappingIndent\";\n    EditorOption[EditorOption[\"wrappingStrategy\"] = 140] = \"wrappingStrategy\";\n    EditorOption[EditorOption[\"showDeprecated\"] = 141] = \"showDeprecated\";\n    EditorOption[EditorOption[\"inlayHints\"] = 142] = \"inlayHints\";\n    EditorOption[EditorOption[\"editorClassName\"] = 143] = \"editorClassName\";\n    EditorOption[EditorOption[\"pixelRatio\"] = 144] = \"pixelRatio\";\n    EditorOption[EditorOption[\"tabFocusMode\"] = 145] = \"tabFocusMode\";\n    EditorOption[EditorOption[\"layoutInfo\"] = 146] = \"layoutInfo\";\n    EditorOption[EditorOption[\"wrappingInfo\"] = 147] = \"wrappingInfo\";\n    EditorOption[EditorOption[\"defaultColorDecorators\"] = 148] = \"defaultColorDecorators\";\n    EditorOption[EditorOption[\"colorDecoratorsActivatedOn\"] = 149] = \"colorDecoratorsActivatedOn\";\n    EditorOption[EditorOption[\"inlineCompletionsAccessibilityVerbose\"] = 150] = \"inlineCompletionsAccessibilityVerbose\";\n})(EditorOption || (EditorOption = {}));\n/**\n * End of line character preference.\n */\nexport var EndOfLinePreference;\n(function (EndOfLinePreference) {\n    /**\n     * Use the end of line character identified in the text buffer.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"TextDefined\"] = 0] = \"TextDefined\";\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"LF\"] = 1] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"CRLF\"] = 2] = \"CRLF\";\n})(EndOfLinePreference || (EndOfLinePreference = {}));\n/**\n * End of line character preference.\n */\nexport var EndOfLineSequence;\n(function (EndOfLineSequence) {\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    EndOfLineSequence[EndOfLineSequence[\"LF\"] = 0] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    EndOfLineSequence[EndOfLineSequence[\"CRLF\"] = 1] = \"CRLF\";\n})(EndOfLineSequence || (EndOfLineSequence = {}));\n/**\n * Vertical Lane in the glyph margin of the editor.\n */\nexport var GlyphMarginLane;\n(function (GlyphMarginLane) {\n    GlyphMarginLane[GlyphMarginLane[\"Left\"] = 1] = \"Left\";\n    GlyphMarginLane[GlyphMarginLane[\"Center\"] = 2] = \"Center\";\n    GlyphMarginLane[GlyphMarginLane[\"Right\"] = 3] = \"Right\";\n})(GlyphMarginLane || (GlyphMarginLane = {}));\nexport var HoverVerbosityAction;\n(function (HoverVerbosityAction) {\n    /**\n     * Increase the verbosity of the hover\n     */\n    HoverVerbosityAction[HoverVerbosityAction[\"Increase\"] = 0] = \"Increase\";\n    /**\n     * Decrease the verbosity of the hover\n     */\n    HoverVerbosityAction[HoverVerbosityAction[\"Decrease\"] = 1] = \"Decrease\";\n})(HoverVerbosityAction || (HoverVerbosityAction = {}));\n/**\n * Describes what to do with the indentation when pressing Enter.\n */\nexport var IndentAction;\n(function (IndentAction) {\n    /**\n     * Insert new line and copy the previous line's indentation.\n     */\n    IndentAction[IndentAction[\"None\"] = 0] = \"None\";\n    /**\n     * Insert new line and indent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\n    /**\n     * Insert two new lines:\n     *  - the first one indented which will hold the cursor\n     *  - the second one at the same indentation level\n     */\n    IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\n    /**\n     * Insert new line and outdent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\n})(IndentAction || (IndentAction = {}));\nexport var InjectedTextCursorStops;\n(function (InjectedTextCursorStops) {\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Both\"] = 0] = \"Both\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Right\"] = 1] = \"Right\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Left\"] = 2] = \"Left\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"None\"] = 3] = \"None\";\n})(InjectedTextCursorStops || (InjectedTextCursorStops = {}));\nexport var InlayHintKind;\n(function (InlayHintKind) {\n    InlayHintKind[InlayHintKind[\"Type\"] = 1] = \"Type\";\n    InlayHintKind[InlayHintKind[\"Parameter\"] = 2] = \"Parameter\";\n})(InlayHintKind || (InlayHintKind = {}));\n/**\n * How an {@link InlineCompletionsProvider inline completion provider} was triggered.\n */\nexport var InlineCompletionTriggerKind;\n(function (InlineCompletionTriggerKind) {\n    /**\n     * Completion was triggered automatically while editing.\n     * It is sufficient to return a single completion item in this case.\n     */\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Automatic\"] = 0] = \"Automatic\";\n    /**\n     * Completion was triggered explicitly by a user gesture.\n     * Return multiple completion items to enable cycling through them.\n     */\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Explicit\"] = 1] = \"Explicit\";\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\nexport var InlineEditTriggerKind;\n(function (InlineEditTriggerKind) {\n    InlineEditTriggerKind[InlineEditTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    InlineEditTriggerKind[InlineEditTriggerKind[\"Automatic\"] = 1] = \"Automatic\";\n})(InlineEditTriggerKind || (InlineEditTriggerKind = {}));\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport var KeyCode;\n(function (KeyCode) {\n    KeyCode[KeyCode[\"DependsOnKbLayout\"] = -1] = \"DependsOnKbLayout\";\n    /**\n     * Placed first to cover the 0 value of the enum.\n     */\n    KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\n    KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\n    KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\n    KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\n    KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\n    KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\n    KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\n    KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\n    KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\n    KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\n    KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\n    KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\n    KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\n    KeyCode[KeyCode[\"End\"] = 13] = \"End\";\n    KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\n    KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\n    KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\n    KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\n    KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\n    KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\n    KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\n    KeyCode[KeyCode[\"Digit0\"] = 21] = \"Digit0\";\n    KeyCode[KeyCode[\"Digit1\"] = 22] = \"Digit1\";\n    KeyCode[KeyCode[\"Digit2\"] = 23] = \"Digit2\";\n    KeyCode[KeyCode[\"Digit3\"] = 24] = \"Digit3\";\n    KeyCode[KeyCode[\"Digit4\"] = 25] = \"Digit4\";\n    KeyCode[KeyCode[\"Digit5\"] = 26] = \"Digit5\";\n    KeyCode[KeyCode[\"Digit6\"] = 27] = \"Digit6\";\n    KeyCode[KeyCode[\"Digit7\"] = 28] = \"Digit7\";\n    KeyCode[KeyCode[\"Digit8\"] = 29] = \"Digit8\";\n    KeyCode[KeyCode[\"Digit9\"] = 30] = \"Digit9\";\n    KeyCode[KeyCode[\"KeyA\"] = 31] = \"KeyA\";\n    KeyCode[KeyCode[\"KeyB\"] = 32] = \"KeyB\";\n    KeyCode[KeyCode[\"KeyC\"] = 33] = \"KeyC\";\n    KeyCode[KeyCode[\"KeyD\"] = 34] = \"KeyD\";\n    KeyCode[KeyCode[\"KeyE\"] = 35] = \"KeyE\";\n    KeyCode[KeyCode[\"KeyF\"] = 36] = \"KeyF\";\n    KeyCode[KeyCode[\"KeyG\"] = 37] = \"KeyG\";\n    KeyCode[KeyCode[\"KeyH\"] = 38] = \"KeyH\";\n    KeyCode[KeyCode[\"KeyI\"] = 39] = \"KeyI\";\n    KeyCode[KeyCode[\"KeyJ\"] = 40] = \"KeyJ\";\n    KeyCode[KeyCode[\"KeyK\"] = 41] = \"KeyK\";\n    KeyCode[KeyCode[\"KeyL\"] = 42] = \"KeyL\";\n    KeyCode[KeyCode[\"KeyM\"] = 43] = \"KeyM\";\n    KeyCode[KeyCode[\"KeyN\"] = 44] = \"KeyN\";\n    KeyCode[KeyCode[\"KeyO\"] = 45] = \"KeyO\";\n    KeyCode[KeyCode[\"KeyP\"] = 46] = \"KeyP\";\n    KeyCode[KeyCode[\"KeyQ\"] = 47] = \"KeyQ\";\n    KeyCode[KeyCode[\"KeyR\"] = 48] = \"KeyR\";\n    KeyCode[KeyCode[\"KeyS\"] = 49] = \"KeyS\";\n    KeyCode[KeyCode[\"KeyT\"] = 50] = \"KeyT\";\n    KeyCode[KeyCode[\"KeyU\"] = 51] = \"KeyU\";\n    KeyCode[KeyCode[\"KeyV\"] = 52] = \"KeyV\";\n    KeyCode[KeyCode[\"KeyW\"] = 53] = \"KeyW\";\n    KeyCode[KeyCode[\"KeyX\"] = 54] = \"KeyX\";\n    KeyCode[KeyCode[\"KeyY\"] = 55] = \"KeyY\";\n    KeyCode[KeyCode[\"KeyZ\"] = 56] = \"KeyZ\";\n    KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\n    KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\n    KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\n    KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\n    KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\n    KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\n    KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\n    KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\n    KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\n    KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\n    KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\n    KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\n    KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\n    KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\n    KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\n    KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\n    KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\n    KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\n    KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\n    KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\n    KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\n    KeyCode[KeyCode[\"F20\"] = 78] = \"F20\";\n    KeyCode[KeyCode[\"F21\"] = 79] = \"F21\";\n    KeyCode[KeyCode[\"F22\"] = 80] = \"F22\";\n    KeyCode[KeyCode[\"F23\"] = 81] = \"F23\";\n    KeyCode[KeyCode[\"F24\"] = 82] = \"F24\";\n    KeyCode[KeyCode[\"NumLock\"] = 83] = \"NumLock\";\n    KeyCode[KeyCode[\"ScrollLock\"] = 84] = \"ScrollLock\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ';:' key\n     */\n    KeyCode[KeyCode[\"Semicolon\"] = 85] = \"Semicolon\";\n    /**\n     * For any country/region, the '+' key\n     * For the US standard keyboard, the '=+' key\n     */\n    KeyCode[KeyCode[\"Equal\"] = 86] = \"Equal\";\n    /**\n     * For any country/region, the ',' key\n     * For the US standard keyboard, the ',<' key\n     */\n    KeyCode[KeyCode[\"Comma\"] = 87] = \"Comma\";\n    /**\n     * For any country/region, the '-' key\n     * For the US standard keyboard, the '-_' key\n     */\n    KeyCode[KeyCode[\"Minus\"] = 88] = \"Minus\";\n    /**\n     * For any country/region, the '.' key\n     * For the US standard keyboard, the '.>' key\n     */\n    KeyCode[KeyCode[\"Period\"] = 89] = \"Period\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '/?' key\n     */\n    KeyCode[KeyCode[\"Slash\"] = 90] = \"Slash\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '`~' key\n     */\n    KeyCode[KeyCode[\"Backquote\"] = 91] = \"Backquote\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '[{' key\n     */\n    KeyCode[KeyCode[\"BracketLeft\"] = 92] = \"BracketLeft\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '\\|' key\n     */\n    KeyCode[KeyCode[\"Backslash\"] = 93] = \"Backslash\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ']}' key\n     */\n    KeyCode[KeyCode[\"BracketRight\"] = 94] = \"BracketRight\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ''\"' key\n     */\n    KeyCode[KeyCode[\"Quote\"] = 95] = \"Quote\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     */\n    KeyCode[KeyCode[\"OEM_8\"] = 96] = \"OEM_8\";\n    /**\n     * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n     */\n    KeyCode[KeyCode[\"IntlBackslash\"] = 97] = \"IntlBackslash\";\n    KeyCode[KeyCode[\"Numpad0\"] = 98] = \"Numpad0\";\n    KeyCode[KeyCode[\"Numpad1\"] = 99] = \"Numpad1\";\n    KeyCode[KeyCode[\"Numpad2\"] = 100] = \"Numpad2\";\n    KeyCode[KeyCode[\"Numpad3\"] = 101] = \"Numpad3\";\n    KeyCode[KeyCode[\"Numpad4\"] = 102] = \"Numpad4\";\n    KeyCode[KeyCode[\"Numpad5\"] = 103] = \"Numpad5\";\n    KeyCode[KeyCode[\"Numpad6\"] = 104] = \"Numpad6\";\n    KeyCode[KeyCode[\"Numpad7\"] = 105] = \"Numpad7\";\n    KeyCode[KeyCode[\"Numpad8\"] = 106] = \"Numpad8\";\n    KeyCode[KeyCode[\"Numpad9\"] = 107] = \"Numpad9\";\n    KeyCode[KeyCode[\"NumpadMultiply\"] = 108] = \"NumpadMultiply\";\n    KeyCode[KeyCode[\"NumpadAdd\"] = 109] = \"NumpadAdd\";\n    KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 110] = \"NUMPAD_SEPARATOR\";\n    KeyCode[KeyCode[\"NumpadSubtract\"] = 111] = \"NumpadSubtract\";\n    KeyCode[KeyCode[\"NumpadDecimal\"] = 112] = \"NumpadDecimal\";\n    KeyCode[KeyCode[\"NumpadDivide\"] = 113] = \"NumpadDivide\";\n    /**\n     * Cover all key codes when IME is processing input.\n     */\n    KeyCode[KeyCode[\"KEY_IN_COMPOSITION\"] = 114] = \"KEY_IN_COMPOSITION\";\n    KeyCode[KeyCode[\"ABNT_C1\"] = 115] = \"ABNT_C1\";\n    KeyCode[KeyCode[\"ABNT_C2\"] = 116] = \"ABNT_C2\";\n    KeyCode[KeyCode[\"AudioVolumeMute\"] = 117] = \"AudioVolumeMute\";\n    KeyCode[KeyCode[\"AudioVolumeUp\"] = 118] = \"AudioVolumeUp\";\n    KeyCode[KeyCode[\"AudioVolumeDown\"] = 119] = \"AudioVolumeDown\";\n    KeyCode[KeyCode[\"BrowserSearch\"] = 120] = \"BrowserSearch\";\n    KeyCode[KeyCode[\"BrowserHome\"] = 121] = \"BrowserHome\";\n    KeyCode[KeyCode[\"BrowserBack\"] = 122] = \"BrowserBack\";\n    KeyCode[KeyCode[\"BrowserForward\"] = 123] = \"BrowserForward\";\n    KeyCode[KeyCode[\"MediaTrackNext\"] = 124] = \"MediaTrackNext\";\n    KeyCode[KeyCode[\"MediaTrackPrevious\"] = 125] = \"MediaTrackPrevious\";\n    KeyCode[KeyCode[\"MediaStop\"] = 126] = \"MediaStop\";\n    KeyCode[KeyCode[\"MediaPlayPause\"] = 127] = \"MediaPlayPause\";\n    KeyCode[KeyCode[\"LaunchMediaPlayer\"] = 128] = \"LaunchMediaPlayer\";\n    KeyCode[KeyCode[\"LaunchMail\"] = 129] = \"LaunchMail\";\n    KeyCode[KeyCode[\"LaunchApp2\"] = 130] = \"LaunchApp2\";\n    /**\n     * VK_CLEAR, 0x0C, CLEAR key\n     */\n    KeyCode[KeyCode[\"Clear\"] = 131] = \"Clear\";\n    /**\n     * Placed last to cover the length of the enum.\n     * Please do not depend on this value!\n     */\n    KeyCode[KeyCode[\"MAX_VALUE\"] = 132] = \"MAX_VALUE\";\n})(KeyCode || (KeyCode = {}));\nexport var MarkerSeverity;\n(function (MarkerSeverity) {\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\n})(MarkerSeverity || (MarkerSeverity = {}));\nexport var MarkerTag;\n(function (MarkerTag) {\n    MarkerTag[MarkerTag[\"Unnecessary\"] = 1] = \"Unnecessary\";\n    MarkerTag[MarkerTag[\"Deprecated\"] = 2] = \"Deprecated\";\n})(MarkerTag || (MarkerTag = {}));\n/**\n * Position in the minimap to render the decoration.\n */\nexport var MinimapPosition;\n(function (MinimapPosition) {\n    MinimapPosition[MinimapPosition[\"Inline\"] = 1] = \"Inline\";\n    MinimapPosition[MinimapPosition[\"Gutter\"] = 2] = \"Gutter\";\n})(MinimapPosition || (MinimapPosition = {}));\n/**\n * Section header style.\n */\nexport var MinimapSectionHeaderStyle;\n(function (MinimapSectionHeaderStyle) {\n    MinimapSectionHeaderStyle[MinimapSectionHeaderStyle[\"Normal\"] = 1] = \"Normal\";\n    MinimapSectionHeaderStyle[MinimapSectionHeaderStyle[\"Underlined\"] = 2] = \"Underlined\";\n})(MinimapSectionHeaderStyle || (MinimapSectionHeaderStyle = {}));\n/**\n * Type of hit element with the mouse in the editor.\n */\nexport var MouseTargetType;\n(function (MouseTargetType) {\n    /**\n     * Mouse is on top of an unknown element.\n     */\n    MouseTargetType[MouseTargetType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * Mouse is on top of the textarea used for input.\n     */\n    MouseTargetType[MouseTargetType[\"TEXTAREA\"] = 1] = \"TEXTAREA\";\n    /**\n     * Mouse is on top of the glyph margin\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_GLYPH_MARGIN\"] = 2] = \"GUTTER_GLYPH_MARGIN\";\n    /**\n     * Mouse is on top of the line numbers\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_NUMBERS\"] = 3] = \"GUTTER_LINE_NUMBERS\";\n    /**\n     * Mouse is on top of the line decorations\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_DECORATIONS\"] = 4] = \"GUTTER_LINE_DECORATIONS\";\n    /**\n     * Mouse is on top of the whitespace left in the gutter by a view zone.\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_VIEW_ZONE\"] = 5] = \"GUTTER_VIEW_ZONE\";\n    /**\n     * Mouse is on top of text in the content.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_TEXT\"] = 6] = \"CONTENT_TEXT\";\n    /**\n     * Mouse is on top of empty space in the content (e.g. after line text or below last line)\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_EMPTY\"] = 7] = \"CONTENT_EMPTY\";\n    /**\n     * Mouse is on top of a view zone in the content.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_VIEW_ZONE\"] = 8] = \"CONTENT_VIEW_ZONE\";\n    /**\n     * Mouse is on top of a content widget.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_WIDGET\"] = 9] = \"CONTENT_WIDGET\";\n    /**\n     * Mouse is on top of the decorations overview ruler.\n     */\n    MouseTargetType[MouseTargetType[\"OVERVIEW_RULER\"] = 10] = \"OVERVIEW_RULER\";\n    /**\n     * Mouse is on top of a scrollbar.\n     */\n    MouseTargetType[MouseTargetType[\"SCROLLBAR\"] = 11] = \"SCROLLBAR\";\n    /**\n     * Mouse is on top of an overlay widget.\n     */\n    MouseTargetType[MouseTargetType[\"OVERLAY_WIDGET\"] = 12] = \"OVERLAY_WIDGET\";\n    /**\n     * Mouse is outside of the editor.\n     */\n    MouseTargetType[MouseTargetType[\"OUTSIDE_EDITOR\"] = 13] = \"OUTSIDE_EDITOR\";\n})(MouseTargetType || (MouseTargetType = {}));\nexport var NewSymbolNameTag;\n(function (NewSymbolNameTag) {\n    NewSymbolNameTag[NewSymbolNameTag[\"AIGenerated\"] = 1] = \"AIGenerated\";\n})(NewSymbolNameTag || (NewSymbolNameTag = {}));\nexport var NewSymbolNameTriggerKind;\n(function (NewSymbolNameTriggerKind) {\n    NewSymbolNameTriggerKind[NewSymbolNameTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    NewSymbolNameTriggerKind[NewSymbolNameTriggerKind[\"Automatic\"] = 1] = \"Automatic\";\n})(NewSymbolNameTriggerKind || (NewSymbolNameTriggerKind = {}));\n/**\n * A positioning preference for rendering overlay widgets.\n */\nexport var OverlayWidgetPositionPreference;\n(function (OverlayWidgetPositionPreference) {\n    /**\n     * Position the overlay widget in the top right corner\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_RIGHT_CORNER\"] = 0] = \"TOP_RIGHT_CORNER\";\n    /**\n     * Position the overlay widget in the bottom right corner\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"BOTTOM_RIGHT_CORNER\"] = 1] = \"BOTTOM_RIGHT_CORNER\";\n    /**\n     * Position the overlay widget in the top center\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\n})(OverlayWidgetPositionPreference || (OverlayWidgetPositionPreference = {}));\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport var OverviewRulerLane;\n(function (OverviewRulerLane) {\n    OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n    OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n    OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n    OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {}));\n/**\n * How a partial acceptance was triggered.\n */\nexport var PartialAcceptTriggerKind;\n(function (PartialAcceptTriggerKind) {\n    PartialAcceptTriggerKind[PartialAcceptTriggerKind[\"Word\"] = 0] = \"Word\";\n    PartialAcceptTriggerKind[PartialAcceptTriggerKind[\"Line\"] = 1] = \"Line\";\n    PartialAcceptTriggerKind[PartialAcceptTriggerKind[\"Suggest\"] = 2] = \"Suggest\";\n})(PartialAcceptTriggerKind || (PartialAcceptTriggerKind = {}));\nexport var PositionAffinity;\n(function (PositionAffinity) {\n    /**\n     * Prefers the left most position.\n    */\n    PositionAffinity[PositionAffinity[\"Left\"] = 0] = \"Left\";\n    /**\n     * Prefers the right most position.\n    */\n    PositionAffinity[PositionAffinity[\"Right\"] = 1] = \"Right\";\n    /**\n     * No preference.\n    */\n    PositionAffinity[PositionAffinity[\"None\"] = 2] = \"None\";\n    /**\n     * If the given position is on injected text, prefers the position left of it.\n    */\n    PositionAffinity[PositionAffinity[\"LeftOfInjectedText\"] = 3] = \"LeftOfInjectedText\";\n    /**\n     * If the given position is on injected text, prefers the position right of it.\n    */\n    PositionAffinity[PositionAffinity[\"RightOfInjectedText\"] = 4] = \"RightOfInjectedText\";\n})(PositionAffinity || (PositionAffinity = {}));\nexport var RenderLineNumbersType;\n(function (RenderLineNumbersType) {\n    RenderLineNumbersType[RenderLineNumbersType[\"Off\"] = 0] = \"Off\";\n    RenderLineNumbersType[RenderLineNumbersType[\"On\"] = 1] = \"On\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Relative\"] = 2] = \"Relative\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Interval\"] = 3] = \"Interval\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Custom\"] = 4] = \"Custom\";\n})(RenderLineNumbersType || (RenderLineNumbersType = {}));\nexport var RenderMinimap;\n(function (RenderMinimap) {\n    RenderMinimap[RenderMinimap[\"None\"] = 0] = \"None\";\n    RenderMinimap[RenderMinimap[\"Text\"] = 1] = \"Text\";\n    RenderMinimap[RenderMinimap[\"Blocks\"] = 2] = \"Blocks\";\n})(RenderMinimap || (RenderMinimap = {}));\nexport var ScrollType;\n(function (ScrollType) {\n    ScrollType[ScrollType[\"Smooth\"] = 0] = \"Smooth\";\n    ScrollType[ScrollType[\"Immediate\"] = 1] = \"Immediate\";\n})(ScrollType || (ScrollType = {}));\nexport var ScrollbarVisibility;\n(function (ScrollbarVisibility) {\n    ScrollbarVisibility[ScrollbarVisibility[\"Auto\"] = 1] = \"Auto\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Visible\"] = 3] = \"Visible\";\n})(ScrollbarVisibility || (ScrollbarVisibility = {}));\n/**\n * The direction of a selection.\n */\nexport var SelectionDirection;\n(function (SelectionDirection) {\n    /**\n     * The selection starts above where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\n    /**\n     * The selection starts below where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\n})(SelectionDirection || (SelectionDirection = {}));\nexport var ShowLightbulbIconMode;\n(function (ShowLightbulbIconMode) {\n    ShowLightbulbIconMode[\"Off\"] = \"off\";\n    ShowLightbulbIconMode[\"OnCode\"] = \"onCode\";\n    ShowLightbulbIconMode[\"On\"] = \"on\";\n})(ShowLightbulbIconMode || (ShowLightbulbIconMode = {}));\nexport var SignatureHelpTriggerKind;\n(function (SignatureHelpTriggerKind) {\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\n})(SignatureHelpTriggerKind || (SignatureHelpTriggerKind = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind[SymbolKind[\"File\"] = 0] = \"File\";\n    SymbolKind[SymbolKind[\"Module\"] = 1] = \"Module\";\n    SymbolKind[SymbolKind[\"Namespace\"] = 2] = \"Namespace\";\n    SymbolKind[SymbolKind[\"Package\"] = 3] = \"Package\";\n    SymbolKind[SymbolKind[\"Class\"] = 4] = \"Class\";\n    SymbolKind[SymbolKind[\"Method\"] = 5] = \"Method\";\n    SymbolKind[SymbolKind[\"Property\"] = 6] = \"Property\";\n    SymbolKind[SymbolKind[\"Field\"] = 7] = \"Field\";\n    SymbolKind[SymbolKind[\"Constructor\"] = 8] = \"Constructor\";\n    SymbolKind[SymbolKind[\"Enum\"] = 9] = \"Enum\";\n    SymbolKind[SymbolKind[\"Interface\"] = 10] = \"Interface\";\n    SymbolKind[SymbolKind[\"Function\"] = 11] = \"Function\";\n    SymbolKind[SymbolKind[\"Variable\"] = 12] = \"Variable\";\n    SymbolKind[SymbolKind[\"Constant\"] = 13] = \"Constant\";\n    SymbolKind[SymbolKind[\"String\"] = 14] = \"String\";\n    SymbolKind[SymbolKind[\"Number\"] = 15] = \"Number\";\n    SymbolKind[SymbolKind[\"Boolean\"] = 16] = \"Boolean\";\n    SymbolKind[SymbolKind[\"Array\"] = 17] = \"Array\";\n    SymbolKind[SymbolKind[\"Object\"] = 18] = \"Object\";\n    SymbolKind[SymbolKind[\"Key\"] = 19] = \"Key\";\n    SymbolKind[SymbolKind[\"Null\"] = 20] = \"Null\";\n    SymbolKind[SymbolKind[\"EnumMember\"] = 21] = \"EnumMember\";\n    SymbolKind[SymbolKind[\"Struct\"] = 22] = \"Struct\";\n    SymbolKind[SymbolKind[\"Event\"] = 23] = \"Event\";\n    SymbolKind[SymbolKind[\"Operator\"] = 24] = \"Operator\";\n    SymbolKind[SymbolKind[\"TypeParameter\"] = 25] = \"TypeParameter\";\n})(SymbolKind || (SymbolKind = {}));\nexport var SymbolTag;\n(function (SymbolTag) {\n    SymbolTag[SymbolTag[\"Deprecated\"] = 1] = \"Deprecated\";\n})(SymbolTag || (SymbolTag = {}));\n/**\n * The kind of animation in which the editor's cursor should be rendered.\n */\nexport var TextEditorCursorBlinkingStyle;\n(function (TextEditorCursorBlinkingStyle) {\n    /**\n     * Hidden\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Hidden\"] = 0] = \"Hidden\";\n    /**\n     * Blinking\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Blink\"] = 1] = \"Blink\";\n    /**\n     * Blinking with smooth fading\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Smooth\"] = 2] = \"Smooth\";\n    /**\n     * Blinking with prolonged filled state and smooth fading\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Phase\"] = 3] = \"Phase\";\n    /**\n     * Expand collapse animation on the y axis\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Expand\"] = 4] = \"Expand\";\n    /**\n     * No-Blinking\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Solid\"] = 5] = \"Solid\";\n})(TextEditorCursorBlinkingStyle || (TextEditorCursorBlinkingStyle = {}));\n/**\n * The style in which the editor's cursor should be rendered.\n */\nexport var TextEditorCursorStyle;\n(function (TextEditorCursorStyle) {\n    /**\n     * As a vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Line\"] = 1] = \"Line\";\n    /**\n     * As a block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Block\"] = 2] = \"Block\";\n    /**\n     * As a horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Underline\"] = 3] = \"Underline\";\n    /**\n     * As a thin vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"LineThin\"] = 4] = \"LineThin\";\n    /**\n     * As an outlined block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"BlockOutline\"] = 5] = \"BlockOutline\";\n    /**\n     * As a thin horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"UnderlineThin\"] = 6] = \"UnderlineThin\";\n})(TextEditorCursorStyle || (TextEditorCursorStyle = {}));\n/**\n * Describes the behavior of decorations when typing/editing near their edges.\n * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`\n */\nexport var TrackedRangeStickiness;\n(function (TrackedRangeStickiness) {\n    TrackedRangeStickiness[TrackedRangeStickiness[\"AlwaysGrowsWhenTypingAtEdges\"] = 0] = \"AlwaysGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"NeverGrowsWhenTypingAtEdges\"] = 1] = \"NeverGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingBefore\"] = 2] = \"GrowsOnlyWhenTypingBefore\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingAfter\"] = 3] = \"GrowsOnlyWhenTypingAfter\";\n})(TrackedRangeStickiness || (TrackedRangeStickiness = {}));\n/**\n * Describes how to indent wrapped lines.\n */\nexport var WrappingIndent;\n(function (WrappingIndent) {\n    /**\n     * No indentation => wrapped lines begin at column 1.\n     */\n    WrappingIndent[WrappingIndent[\"None\"] = 0] = \"None\";\n    /**\n     * Same => wrapped lines get the same indentation as the parent.\n     */\n    WrappingIndent[WrappingIndent[\"Same\"] = 1] = \"Same\";\n    /**\n     * Indent => wrapped lines get +1 indentation toward the parent.\n     */\n    WrappingIndent[WrappingIndent[\"Indent\"] = 2] = \"Indent\";\n    /**\n     * DeepIndent => wrapped lines get +2 indentation toward the parent.\n     */\n    WrappingIndent[WrappingIndent[\"DeepIndent\"] = 3] = \"DeepIndent\";\n})(WrappingIndent || (WrappingIndent = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class BracketInfo {\n    constructor(range, \n    /** 0-based level */\n    nestingLevel, nestingLevelOfEqualBracketType, isInvalid) {\n        this.range = range;\n        this.nestingLevel = nestingLevel;\n        this.nestingLevelOfEqualBracketType = nestingLevelOfEqualBracketType;\n        this.isInvalid = isInvalid;\n    }\n}\nexport class BracketPairInfo {\n    constructor(range, openingBracketRange, closingBracketRange, \n    /** 0-based */\n    nestingLevel, nestingLevelOfEqualBracketType, bracketPairNode) {\n        this.range = range;\n        this.openingBracketRange = openingBracketRange;\n        this.closingBracketRange = closingBracketRange;\n        this.nestingLevel = nestingLevel;\n        this.nestingLevelOfEqualBracketType = nestingLevelOfEqualBracketType;\n        this.bracketPairNode = bracketPairNode;\n    }\n    get openingBracketInfo() {\n        return this.bracketPairNode.openingBracket.bracketInfo;\n    }\n}\nexport class BracketPairWithMinIndentationInfo extends BracketPairInfo {\n    constructor(range, openingBracketRange, closingBracketRange, \n    /**\n     * 0-based\n    */\n    nestingLevel, nestingLevelOfEqualBracketType, bracketPairNode, \n    /**\n     * -1 if not requested, otherwise the size of the minimum indentation in the bracket pair in terms of visible columns.\n    */\n    minVisibleColumnIndentation) {\n        super(range, openingBracketRange, closingBracketRange, nestingLevel, nestingLevelOfEqualBracketType, bracketPairNode);\n        this.minVisibleColumnIndentation = minVisibleColumnIndentation;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * An event describing that a model has been reset to a new value.\n * @internal\n */\nexport class ModelRawFlush {\n    constructor() {\n        this.changeType = 1 /* RawContentChangedType.Flush */;\n    }\n}\n/**\n * Represents text injected on a line\n * @internal\n */\nexport class LineInjectedText {\n    static applyInjectedText(lineText, injectedTexts) {\n        if (!injectedTexts || injectedTexts.length === 0) {\n            return lineText;\n        }\n        let result = '';\n        let lastOriginalOffset = 0;\n        for (const injectedText of injectedTexts) {\n            result += lineText.substring(lastOriginalOffset, injectedText.column - 1);\n            lastOriginalOffset = injectedText.column - 1;\n            result += injectedText.options.content;\n        }\n        result += lineText.substring(lastOriginalOffset);\n        return result;\n    }\n    static fromDecorations(decorations) {\n        const result = [];\n        for (const decoration of decorations) {\n            if (decoration.options.before && decoration.options.before.content.length > 0) {\n                result.push(new LineInjectedText(decoration.ownerId, decoration.range.startLineNumber, decoration.range.startColumn, decoration.options.before, 0));\n            }\n            if (decoration.options.after && decoration.options.after.content.length > 0) {\n                result.push(new LineInjectedText(decoration.ownerId, decoration.range.endLineNumber, decoration.range.endColumn, decoration.options.after, 1));\n            }\n        }\n        result.sort((a, b) => {\n            if (a.lineNumber === b.lineNumber) {\n                if (a.column === b.column) {\n                    return a.order - b.order;\n                }\n                return a.column - b.column;\n            }\n            return a.lineNumber - b.lineNumber;\n        });\n        return result;\n    }\n    constructor(ownerId, lineNumber, column, options, order) {\n        this.ownerId = ownerId;\n        this.lineNumber = lineNumber;\n        this.column = column;\n        this.options = options;\n        this.order = order;\n    }\n}\n/**\n * An event describing that a line has changed in a model.\n * @internal\n */\nexport class ModelRawLineChanged {\n    constructor(lineNumber, detail, injectedText) {\n        this.changeType = 2 /* RawContentChangedType.LineChanged */;\n        this.lineNumber = lineNumber;\n        this.detail = detail;\n        this.injectedText = injectedText;\n    }\n}\n/**\n * An event describing that line(s) have been deleted in a model.\n * @internal\n */\nexport class ModelRawLinesDeleted {\n    constructor(fromLineNumber, toLineNumber) {\n        this.changeType = 3 /* RawContentChangedType.LinesDeleted */;\n        this.fromLineNumber = fromLineNumber;\n        this.toLineNumber = toLineNumber;\n    }\n}\n/**\n * An event describing that line(s) have been inserted in a model.\n * @internal\n */\nexport class ModelRawLinesInserted {\n    constructor(fromLineNumber, toLineNumber, detail, injectedTexts) {\n        this.changeType = 4 /* RawContentChangedType.LinesInserted */;\n        this.injectedTexts = injectedTexts;\n        this.fromLineNumber = fromLineNumber;\n        this.toLineNumber = toLineNumber;\n        this.detail = detail;\n    }\n}\n/**\n * An event describing that a model has had its EOL changed.\n * @internal\n */\nexport class ModelRawEOLChanged {\n    constructor() {\n        this.changeType = 5 /* RawContentChangedType.EOLChanged */;\n    }\n}\n/**\n * An event describing a change in the text of a model.\n * @internal\n */\nexport class ModelRawContentChangedEvent {\n    constructor(changes, versionId, isUndoing, isRedoing) {\n        this.changes = changes;\n        this.versionId = versionId;\n        this.isUndoing = isUndoing;\n        this.isRedoing = isRedoing;\n        this.resultingSelection = null;\n    }\n    containsEvent(type) {\n        for (let i = 0, len = this.changes.length; i < len; i++) {\n            const change = this.changes[i];\n            if (change.changeType === type) {\n                return true;\n            }\n        }\n        return false;\n    }\n    static merge(a, b) {\n        const changes = [].concat(a.changes).concat(b.changes);\n        const versionId = b.versionId;\n        const isUndoing = (a.isUndoing || b.isUndoing);\n        const isRedoing = (a.isRedoing || b.isRedoing);\n        return new ModelRawContentChangedEvent(changes, versionId, isUndoing, isRedoing);\n    }\n}\n/**\n * An event describing a change in injected text.\n * @internal\n */\nexport class ModelInjectedTextChangedEvent {\n    constructor(changes) {\n        this.changes = changes;\n    }\n}\n/**\n * @internal\n */\nexport class InternalModelContentChangeEvent {\n    constructor(rawContentChangedEvent, contentChangedEvent) {\n        this.rawContentChangedEvent = rawContentChangedEvent;\n        this.contentChangedEvent = contentChangedEvent;\n    }\n    merge(other) {\n        const rawContentChangedEvent = ModelRawContentChangedEvent.merge(this.rawContentChangedEvent, other.rawContentChangedEvent);\n        const contentChangedEvent = InternalModelContentChangeEvent._mergeChangeEvents(this.contentChangedEvent, other.contentChangedEvent);\n        return new InternalModelContentChangeEvent(rawContentChangedEvent, contentChangedEvent);\n    }\n    static _mergeChangeEvents(a, b) {\n        const changes = [].concat(a.changes).concat(b.changes);\n        const eol = b.eol;\n        const versionId = b.versionId;\n        const isUndoing = (a.isUndoing || b.isUndoing);\n        const isRedoing = (a.isRedoing || b.isRedoing);\n        const isFlush = (a.isFlush || b.isFlush);\n        const isEolChange = a.isEolChange && b.isEolChange; // both must be true to not confuse listeners who skip such edits\n        return {\n            changes: changes,\n            eol: eol,\n            isEolChange: isEolChange,\n            versionId: versionId,\n            isUndoing: isUndoing,\n            isRedoing: isRedoing,\n            isFlush: isFlush,\n        };\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var HorizontalGuidesState;\n(function (HorizontalGuidesState) {\n    HorizontalGuidesState[HorizontalGuidesState[\"Disabled\"] = 0] = \"Disabled\";\n    HorizontalGuidesState[HorizontalGuidesState[\"EnabledForActive\"] = 1] = \"EnabledForActive\";\n    HorizontalGuidesState[HorizontalGuidesState[\"Enabled\"] = 2] = \"Enabled\";\n})(HorizontalGuidesState || (HorizontalGuidesState = {}));\nexport class IndentGuide {\n    constructor(visibleColumn, column, className, \n    /**\n     * If set, this indent guide is a horizontal guide (no vertical part).\n     * It starts at visibleColumn and continues until endColumn.\n    */\n    horizontalLine, \n    /**\n     * If set (!= -1), only show this guide for wrapped lines that don't contain this model column, but are after it.\n    */\n    forWrappedLinesAfterColumn, forWrappedLinesBeforeOrAtColumn) {\n        this.visibleColumn = visibleColumn;\n        this.column = column;\n        this.className = className;\n        this.horizontalLine = horizontalLine;\n        this.forWrappedLinesAfterColumn = forWrappedLinesAfterColumn;\n        this.forWrappedLinesBeforeOrAtColumn = forWrappedLinesBeforeOrAtColumn;\n        if ((visibleColumn !== -1) === (column !== -1)) {\n            throw new Error();\n        }\n    }\n}\nexport class IndentGuideHorizontalLine {\n    constructor(top, endColumn) {\n        this.top = top;\n        this.endColumn = endColumn;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../base/common/lifecycle.js';\nexport class TokenizationRegistry {\n    constructor() {\n        this._tokenizationSupports = new Map();\n        this._factories = new Map();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._colorMap = null;\n    }\n    handleChange(languageIds) {\n        this._onDidChange.fire({\n            changedLanguages: languageIds,\n            changedColorMap: false\n        });\n    }\n    register(languageId, support) {\n        this._tokenizationSupports.set(languageId, support);\n        this.handleChange([languageId]);\n        return toDisposable(() => {\n            if (this._tokenizationSupports.get(languageId) !== support) {\n                return;\n            }\n            this._tokenizationSupports.delete(languageId);\n            this.handleChange([languageId]);\n        });\n    }\n    get(languageId) {\n        return this._tokenizationSupports.get(languageId) || null;\n    }\n    registerFactory(languageId, factory) {\n        this._factories.get(languageId)?.dispose();\n        const myData = new TokenizationSupportFactoryData(this, languageId, factory);\n        this._factories.set(languageId, myData);\n        return toDisposable(() => {\n            const v = this._factories.get(languageId);\n            if (!v || v !== myData) {\n                return;\n            }\n            this._factories.delete(languageId);\n            v.dispose();\n        });\n    }\n    async getOrCreate(languageId) {\n        // check first if the support is already set\n        const tokenizationSupport = this.get(languageId);\n        if (tokenizationSupport) {\n            return tokenizationSupport;\n        }\n        const factory = this._factories.get(languageId);\n        if (!factory || factory.isResolved) {\n            // no factory or factory.resolve already finished\n            return null;\n        }\n        await factory.resolve();\n        return this.get(languageId);\n    }\n    isResolved(languageId) {\n        const tokenizationSupport = this.get(languageId);\n        if (tokenizationSupport) {\n            return true;\n        }\n        const factory = this._factories.get(languageId);\n        if (!factory || factory.isResolved) {\n            return true;\n        }\n        return false;\n    }\n    setColorMap(colorMap) {\n        this._colorMap = colorMap;\n        this._onDidChange.fire({\n            changedLanguages: Array.from(this._tokenizationSupports.keys()),\n            changedColorMap: true\n        });\n    }\n    getColorMap() {\n        return this._colorMap;\n    }\n    getDefaultBackground() {\n        if (this._colorMap && this._colorMap.length > 2 /* ColorId.DefaultBackground */) {\n            return this._colorMap[2 /* ColorId.DefaultBackground */];\n        }\n        return null;\n    }\n}\nclass TokenizationSupportFactoryData extends Disposable {\n    get isResolved() {\n        return this._isResolved;\n    }\n    constructor(_registry, _languageId, _factory) {\n        super();\n        this._registry = _registry;\n        this._languageId = _languageId;\n        this._factory = _factory;\n        this._isDisposed = false;\n        this._resolvePromise = null;\n        this._isResolved = false;\n    }\n    dispose() {\n        this._isDisposed = true;\n        super.dispose();\n    }\n    async resolve() {\n        if (!this._resolvePromise) {\n            this._resolvePromise = this._create();\n        }\n        return this._resolvePromise;\n    }\n    async _create() {\n        const value = await this._factory.tokenizationSupport;\n        this._isResolved = true;\n        if (value && !this._isDisposed) {\n            this._register(this._registry.register(this._languageId, value));\n        }\n    }\n}\n","/**\n * Represents contiguous tokens over a contiguous range of lines.\n */\nexport class ContiguousMultilineTokens {\n    /**\n     * (Inclusive) start line number for these tokens.\n     */\n    get startLineNumber() {\n        return this._startLineNumber;\n    }\n    /**\n     * (Inclusive) end line number for these tokens.\n     */\n    get endLineNumber() {\n        return this._startLineNumber + this._tokens.length - 1;\n    }\n    constructor(startLineNumber, tokens) {\n        this._startLineNumber = startLineNumber;\n        this._tokens = tokens;\n    }\n    /**\n     * @see {@link _tokens}\n     */\n    getLineTokens(lineNumber) {\n        return this._tokens[lineNumber - this._startLineNumber];\n    }\n    appendLineTokens(lineTokens) {\n        this._tokens.push(lineTokens);\n    }\n}\n","import { ContiguousMultilineTokens } from './contiguousMultilineTokens.js';\nexport class ContiguousMultilineTokensBuilder {\n    constructor() {\n        this._tokens = [];\n    }\n    add(lineNumber, lineTokens) {\n        if (this._tokens.length > 0) {\n            const last = this._tokens[this._tokens.length - 1];\n            if (last.endLineNumber + 1 === lineNumber) {\n                // append\n                last.appendLineTokens(lineTokens);\n                return;\n            }\n        }\n        this._tokens.push(new ContiguousMultilineTokens(lineNumber, [lineTokens]));\n    }\n    finalize() {\n        return this._tokens;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LineTokens } from './lineTokens.js';\nexport const EMPTY_LINE_TOKENS = (new Uint32Array(0)).buffer;\nexport class ContiguousTokensEditing {\n    static deleteBeginning(lineTokens, toChIndex) {\n        if (lineTokens === null || lineTokens === EMPTY_LINE_TOKENS) {\n            return lineTokens;\n        }\n        return ContiguousTokensEditing.delete(lineTokens, 0, toChIndex);\n    }\n    static deleteEnding(lineTokens, fromChIndex) {\n        if (lineTokens === null || lineTokens === EMPTY_LINE_TOKENS) {\n            return lineTokens;\n        }\n        const tokens = toUint32Array(lineTokens);\n        const lineTextLength = tokens[tokens.length - 2];\n        return ContiguousTokensEditing.delete(lineTokens, fromChIndex, lineTextLength);\n    }\n    static delete(lineTokens, fromChIndex, toChIndex) {\n        if (lineTokens === null || lineTokens === EMPTY_LINE_TOKENS || fromChIndex === toChIndex) {\n            return lineTokens;\n        }\n        const tokens = toUint32Array(lineTokens);\n        const tokensCount = (tokens.length >>> 1);\n        // special case: deleting everything\n        if (fromChIndex === 0 && tokens[tokens.length - 2] === toChIndex) {\n            return EMPTY_LINE_TOKENS;\n        }\n        const fromTokenIndex = LineTokens.findIndexInTokensArray(tokens, fromChIndex);\n        const fromTokenStartOffset = (fromTokenIndex > 0 ? tokens[(fromTokenIndex - 1) << 1] : 0);\n        const fromTokenEndOffset = tokens[fromTokenIndex << 1];\n        if (toChIndex < fromTokenEndOffset) {\n            // the delete range is inside a single token\n            const delta = (toChIndex - fromChIndex);\n            for (let i = fromTokenIndex; i < tokensCount; i++) {\n                tokens[i << 1] -= delta;\n            }\n            return lineTokens;\n        }\n        let dest;\n        let lastEnd;\n        if (fromTokenStartOffset !== fromChIndex) {\n            tokens[fromTokenIndex << 1] = fromChIndex;\n            dest = ((fromTokenIndex + 1) << 1);\n            lastEnd = fromChIndex;\n        }\n        else {\n            dest = (fromTokenIndex << 1);\n            lastEnd = fromTokenStartOffset;\n        }\n        const delta = (toChIndex - fromChIndex);\n        for (let tokenIndex = fromTokenIndex + 1; tokenIndex < tokensCount; tokenIndex++) {\n            const tokenEndOffset = tokens[tokenIndex << 1] - delta;\n            if (tokenEndOffset > lastEnd) {\n                tokens[dest++] = tokenEndOffset;\n                tokens[dest++] = tokens[(tokenIndex << 1) + 1];\n                lastEnd = tokenEndOffset;\n            }\n        }\n        if (dest === tokens.length) {\n            // nothing to trim\n            return lineTokens;\n        }\n        const tmp = new Uint32Array(dest);\n        tmp.set(tokens.subarray(0, dest), 0);\n        return tmp.buffer;\n    }\n    static append(lineTokens, _otherTokens) {\n        if (_otherTokens === EMPTY_LINE_TOKENS) {\n            return lineTokens;\n        }\n        if (lineTokens === EMPTY_LINE_TOKENS) {\n            return _otherTokens;\n        }\n        if (lineTokens === null) {\n            return lineTokens;\n        }\n        if (_otherTokens === null) {\n            // cannot determine combined line length...\n            return null;\n        }\n        const myTokens = toUint32Array(lineTokens);\n        const otherTokens = toUint32Array(_otherTokens);\n        const otherTokensCount = (otherTokens.length >>> 1);\n        const result = new Uint32Array(myTokens.length + otherTokens.length);\n        result.set(myTokens, 0);\n        let dest = myTokens.length;\n        const delta = myTokens[myTokens.length - 2];\n        for (let i = 0; i < otherTokensCount; i++) {\n            result[dest++] = otherTokens[(i << 1)] + delta;\n            result[dest++] = otherTokens[(i << 1) + 1];\n        }\n        return result.buffer;\n    }\n    static insert(lineTokens, chIndex, textLength) {\n        if (lineTokens === null || lineTokens === EMPTY_LINE_TOKENS) {\n            // nothing to do\n            return lineTokens;\n        }\n        const tokens = toUint32Array(lineTokens);\n        const tokensCount = (tokens.length >>> 1);\n        let fromTokenIndex = LineTokens.findIndexInTokensArray(tokens, chIndex);\n        if (fromTokenIndex > 0) {\n            const fromTokenStartOffset = tokens[(fromTokenIndex - 1) << 1];\n            if (fromTokenStartOffset === chIndex) {\n                fromTokenIndex--;\n            }\n        }\n        for (let tokenIndex = fromTokenIndex; tokenIndex < tokensCount; tokenIndex++) {\n            tokens[tokenIndex << 1] += textLength;\n        }\n        return lineTokens;\n    }\n}\nexport function toUint32Array(arr) {\n    if (arr instanceof Uint32Array) {\n        return arr;\n    }\n    else {\n        return new Uint32Array(arr);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as arrays from '../../../base/common/arrays.js';\nimport { Position } from '../core/position.js';\nimport { ContiguousTokensEditing, EMPTY_LINE_TOKENS, toUint32Array } from './contiguousTokensEditing.js';\nimport { LineTokens } from './lineTokens.js';\nimport { TokenMetadata } from '../encodedTokenAttributes.js';\n/**\n * Represents contiguous tokens in a text model.\n */\nexport class ContiguousTokensStore {\n    constructor(languageIdCodec) {\n        this._lineTokens = [];\n        this._len = 0;\n        this._languageIdCodec = languageIdCodec;\n    }\n    flush() {\n        this._lineTokens = [];\n        this._len = 0;\n    }\n    get hasTokens() {\n        return this._lineTokens.length > 0;\n    }\n    getTokens(topLevelLanguageId, lineIndex, lineText) {\n        let rawLineTokens = null;\n        if (lineIndex < this._len) {\n            rawLineTokens = this._lineTokens[lineIndex];\n        }\n        if (rawLineTokens !== null && rawLineTokens !== EMPTY_LINE_TOKENS) {\n            return new LineTokens(toUint32Array(rawLineTokens), lineText, this._languageIdCodec);\n        }\n        const lineTokens = new Uint32Array(2);\n        lineTokens[0] = lineText.length;\n        lineTokens[1] = getDefaultMetadata(this._languageIdCodec.encodeLanguageId(topLevelLanguageId));\n        return new LineTokens(lineTokens, lineText, this._languageIdCodec);\n    }\n    static _massageTokens(topLevelLanguageId, lineTextLength, _tokens) {\n        const tokens = _tokens ? toUint32Array(_tokens) : null;\n        if (lineTextLength === 0) {\n            let hasDifferentLanguageId = false;\n            if (tokens && tokens.length > 1) {\n                hasDifferentLanguageId = (TokenMetadata.getLanguageId(tokens[1]) !== topLevelLanguageId);\n            }\n            if (!hasDifferentLanguageId) {\n                return EMPTY_LINE_TOKENS;\n            }\n        }\n        if (!tokens || tokens.length === 0) {\n            const tokens = new Uint32Array(2);\n            tokens[0] = lineTextLength;\n            tokens[1] = getDefaultMetadata(topLevelLanguageId);\n            return tokens.buffer;\n        }\n        // Ensure the last token covers the end of the text\n        tokens[tokens.length - 2] = lineTextLength;\n        if (tokens.byteOffset === 0 && tokens.byteLength === tokens.buffer.byteLength) {\n            // Store directly the ArrayBuffer pointer to save an object\n            return tokens.buffer;\n        }\n        return tokens;\n    }\n    _ensureLine(lineIndex) {\n        while (lineIndex >= this._len) {\n            this._lineTokens[this._len] = null;\n            this._len++;\n        }\n    }\n    _deleteLines(start, deleteCount) {\n        if (deleteCount === 0) {\n            return;\n        }\n        if (start + deleteCount > this._len) {\n            deleteCount = this._len - start;\n        }\n        this._lineTokens.splice(start, deleteCount);\n        this._len -= deleteCount;\n    }\n    _insertLines(insertIndex, insertCount) {\n        if (insertCount === 0) {\n            return;\n        }\n        const lineTokens = [];\n        for (let i = 0; i < insertCount; i++) {\n            lineTokens[i] = null;\n        }\n        this._lineTokens = arrays.arrayInsert(this._lineTokens, insertIndex, lineTokens);\n        this._len += insertCount;\n    }\n    setTokens(topLevelLanguageId, lineIndex, lineTextLength, _tokens, checkEquality) {\n        const tokens = ContiguousTokensStore._massageTokens(this._languageIdCodec.encodeLanguageId(topLevelLanguageId), lineTextLength, _tokens);\n        this._ensureLine(lineIndex);\n        const oldTokens = this._lineTokens[lineIndex];\n        this._lineTokens[lineIndex] = tokens;\n        if (checkEquality) {\n            return !ContiguousTokensStore._equals(oldTokens, tokens);\n        }\n        return false;\n    }\n    static _equals(_a, _b) {\n        if (!_a || !_b) {\n            return !_a && !_b;\n        }\n        const a = toUint32Array(_a);\n        const b = toUint32Array(_b);\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0, len = a.length; i < len; i++) {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    //#region Editing\n    acceptEdit(range, eolCount, firstLineLength) {\n        this._acceptDeleteRange(range);\n        this._acceptInsertText(new Position(range.startLineNumber, range.startColumn), eolCount, firstLineLength);\n    }\n    _acceptDeleteRange(range) {\n        const firstLineIndex = range.startLineNumber - 1;\n        if (firstLineIndex >= this._len) {\n            return;\n        }\n        if (range.startLineNumber === range.endLineNumber) {\n            if (range.startColumn === range.endColumn) {\n                // Nothing to delete\n                return;\n            }\n            this._lineTokens[firstLineIndex] = ContiguousTokensEditing.delete(this._lineTokens[firstLineIndex], range.startColumn - 1, range.endColumn - 1);\n            return;\n        }\n        this._lineTokens[firstLineIndex] = ContiguousTokensEditing.deleteEnding(this._lineTokens[firstLineIndex], range.startColumn - 1);\n        const lastLineIndex = range.endLineNumber - 1;\n        let lastLineTokens = null;\n        if (lastLineIndex < this._len) {\n            lastLineTokens = ContiguousTokensEditing.deleteBeginning(this._lineTokens[lastLineIndex], range.endColumn - 1);\n        }\n        // Take remaining text on last line and append it to remaining text on first line\n        this._lineTokens[firstLineIndex] = ContiguousTokensEditing.append(this._lineTokens[firstLineIndex], lastLineTokens);\n        // Delete middle lines\n        this._deleteLines(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n    }\n    _acceptInsertText(position, eolCount, firstLineLength) {\n        if (eolCount === 0 && firstLineLength === 0) {\n            // Nothing to insert\n            return;\n        }\n        const lineIndex = position.lineNumber - 1;\n        if (lineIndex >= this._len) {\n            return;\n        }\n        if (eolCount === 0) {\n            // Inserting text on one line\n            this._lineTokens[lineIndex] = ContiguousTokensEditing.insert(this._lineTokens[lineIndex], position.column - 1, firstLineLength);\n            return;\n        }\n        this._lineTokens[lineIndex] = ContiguousTokensEditing.deleteEnding(this._lineTokens[lineIndex], position.column - 1);\n        this._lineTokens[lineIndex] = ContiguousTokensEditing.insert(this._lineTokens[lineIndex], position.column - 1, firstLineLength);\n        this._insertLines(position.lineNumber, eolCount);\n    }\n    //#endregion\n    setMultilineTokens(tokens, textModel) {\n        if (tokens.length === 0) {\n            return { changes: [] };\n        }\n        const ranges = [];\n        for (let i = 0, len = tokens.length; i < len; i++) {\n            const element = tokens[i];\n            let minChangedLineNumber = 0;\n            let maxChangedLineNumber = 0;\n            let hasChange = false;\n            for (let lineNumber = element.startLineNumber; lineNumber <= element.endLineNumber; lineNumber++) {\n                if (hasChange) {\n                    this.setTokens(textModel.getLanguageId(), lineNumber - 1, textModel.getLineLength(lineNumber), element.getLineTokens(lineNumber), false);\n                    maxChangedLineNumber = lineNumber;\n                }\n                else {\n                    const lineHasChange = this.setTokens(textModel.getLanguageId(), lineNumber - 1, textModel.getLineLength(lineNumber), element.getLineTokens(lineNumber), true);\n                    if (lineHasChange) {\n                        hasChange = true;\n                        minChangedLineNumber = lineNumber;\n                        maxChangedLineNumber = lineNumber;\n                    }\n                }\n            }\n            if (hasChange) {\n                ranges.push({ fromLineNumber: minChangedLineNumber, toLineNumber: maxChangedLineNumber, });\n            }\n        }\n        return { changes: ranges };\n    }\n}\nfunction getDefaultMetadata(topLevelLanguageId) {\n    return ((topLevelLanguageId << 0 /* MetadataConsts.LANGUAGEID_OFFSET */)\n        | (0 /* StandardTokenType.Other */ << 8 /* MetadataConsts.TOKEN_TYPE_OFFSET */)\n        | (0 /* FontStyle.None */ << 11 /* MetadataConsts.FONT_STYLE_OFFSET */)\n        | (1 /* ColorId.DefaultForeground */ << 15 /* MetadataConsts.FOREGROUND_OFFSET */)\n        | (2 /* ColorId.DefaultBackground */ << 24 /* MetadataConsts.BACKGROUND_OFFSET */)\n        // If there is no grammar, we just take a guess and try to match brackets.\n        | (1024 /* MetadataConsts.BALANCED_BRACKETS_MASK */)) >>> 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { TokenMetadata } from '../encodedTokenAttributes.js';\nexport class LineTokens {\n    static { this.defaultTokenMetadata = ((0 /* FontStyle.None */ << 11 /* MetadataConsts.FONT_STYLE_OFFSET */)\n        | (1 /* ColorId.DefaultForeground */ << 15 /* MetadataConsts.FOREGROUND_OFFSET */)\n        | (2 /* ColorId.DefaultBackground */ << 24 /* MetadataConsts.BACKGROUND_OFFSET */)) >>> 0; }\n    static createEmpty(lineContent, decoder) {\n        const defaultMetadata = LineTokens.defaultTokenMetadata;\n        const tokens = new Uint32Array(2);\n        tokens[0] = lineContent.length;\n        tokens[1] = defaultMetadata;\n        return new LineTokens(tokens, lineContent, decoder);\n    }\n    static createFromTextAndMetadata(data, decoder) {\n        let offset = 0;\n        let fullText = '';\n        const tokens = new Array();\n        for (const { text, metadata } of data) {\n            tokens.push(offset + text.length, metadata);\n            offset += text.length;\n            fullText += text;\n        }\n        return new LineTokens(new Uint32Array(tokens), fullText, decoder);\n    }\n    constructor(tokens, text, decoder) {\n        this._lineTokensBrand = undefined;\n        this._tokens = tokens;\n        this._tokensCount = (this._tokens.length >>> 1);\n        this._text = text;\n        this.languageIdCodec = decoder;\n    }\n    equals(other) {\n        if (other instanceof LineTokens) {\n            return this.slicedEquals(other, 0, this._tokensCount);\n        }\n        return false;\n    }\n    slicedEquals(other, sliceFromTokenIndex, sliceTokenCount) {\n        if (this._text !== other._text) {\n            return false;\n        }\n        if (this._tokensCount !== other._tokensCount) {\n            return false;\n        }\n        const from = (sliceFromTokenIndex << 1);\n        const to = from + (sliceTokenCount << 1);\n        for (let i = from; i < to; i++) {\n            if (this._tokens[i] !== other._tokens[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    getLineContent() {\n        return this._text;\n    }\n    getCount() {\n        return this._tokensCount;\n    }\n    getStartOffset(tokenIndex) {\n        if (tokenIndex > 0) {\n            return this._tokens[(tokenIndex - 1) << 1];\n        }\n        return 0;\n    }\n    getMetadata(tokenIndex) {\n        const metadata = this._tokens[(tokenIndex << 1) + 1];\n        return metadata;\n    }\n    getLanguageId(tokenIndex) {\n        const metadata = this._tokens[(tokenIndex << 1) + 1];\n        const languageId = TokenMetadata.getLanguageId(metadata);\n        return this.languageIdCodec.decodeLanguageId(languageId);\n    }\n    getStandardTokenType(tokenIndex) {\n        const metadata = this._tokens[(tokenIndex << 1) + 1];\n        return TokenMetadata.getTokenType(metadata);\n    }\n    getForeground(tokenIndex) {\n        const metadata = this._tokens[(tokenIndex << 1) + 1];\n        return TokenMetadata.getForeground(metadata);\n    }\n    getClassName(tokenIndex) {\n        const metadata = this._tokens[(tokenIndex << 1) + 1];\n        return TokenMetadata.getClassNameFromMetadata(metadata);\n    }\n    getInlineStyle(tokenIndex, colorMap) {\n        const metadata = this._tokens[(tokenIndex << 1) + 1];\n        return TokenMetadata.getInlineStyleFromMetadata(metadata, colorMap);\n    }\n    getPresentation(tokenIndex) {\n        const metadata = this._tokens[(tokenIndex << 1) + 1];\n        return TokenMetadata.getPresentationFromMetadata(metadata);\n    }\n    getEndOffset(tokenIndex) {\n        return this._tokens[tokenIndex << 1];\n    }\n    /**\n     * Find the token containing offset `offset`.\n     * @param offset The search offset\n     * @return The index of the token containing the offset.\n     */\n    findTokenIndexAtOffset(offset) {\n        return LineTokens.findIndexInTokensArray(this._tokens, offset);\n    }\n    inflate() {\n        return this;\n    }\n    sliceAndInflate(startOffset, endOffset, deltaOffset) {\n        return new SliceLineTokens(this, startOffset, endOffset, deltaOffset);\n    }\n    static convertToEndOffset(tokens, lineTextLength) {\n        const tokenCount = (tokens.length >>> 1);\n        const lastTokenIndex = tokenCount - 1;\n        for (let tokenIndex = 0; tokenIndex < lastTokenIndex; tokenIndex++) {\n            tokens[tokenIndex << 1] = tokens[(tokenIndex + 1) << 1];\n        }\n        tokens[lastTokenIndex << 1] = lineTextLength;\n    }\n    static findIndexInTokensArray(tokens, desiredIndex) {\n        if (tokens.length <= 2) {\n            return 0;\n        }\n        let low = 0;\n        let high = (tokens.length >>> 1) - 1;\n        while (low < high) {\n            const mid = low + Math.floor((high - low) / 2);\n            const endOffset = tokens[(mid << 1)];\n            if (endOffset === desiredIndex) {\n                return mid + 1;\n            }\n            else if (endOffset < desiredIndex) {\n                low = mid + 1;\n            }\n            else if (endOffset > desiredIndex) {\n                high = mid;\n            }\n        }\n        return low;\n    }\n    /**\n     * @pure\n     * @param insertTokens Must be sorted by offset.\n    */\n    withInserted(insertTokens) {\n        if (insertTokens.length === 0) {\n            return this;\n        }\n        let nextOriginalTokenIdx = 0;\n        let nextInsertTokenIdx = 0;\n        let text = '';\n        const newTokens = new Array();\n        let originalEndOffset = 0;\n        while (true) {\n            const nextOriginalTokenEndOffset = nextOriginalTokenIdx < this._tokensCount ? this._tokens[nextOriginalTokenIdx << 1] : -1;\n            const nextInsertToken = nextInsertTokenIdx < insertTokens.length ? insertTokens[nextInsertTokenIdx] : null;\n            if (nextOriginalTokenEndOffset !== -1 && (nextInsertToken === null || nextOriginalTokenEndOffset <= nextInsertToken.offset)) {\n                // original token ends before next insert token\n                text += this._text.substring(originalEndOffset, nextOriginalTokenEndOffset);\n                const metadata = this._tokens[(nextOriginalTokenIdx << 1) + 1];\n                newTokens.push(text.length, metadata);\n                nextOriginalTokenIdx++;\n                originalEndOffset = nextOriginalTokenEndOffset;\n            }\n            else if (nextInsertToken) {\n                if (nextInsertToken.offset > originalEndOffset) {\n                    // insert token is in the middle of the next token.\n                    text += this._text.substring(originalEndOffset, nextInsertToken.offset);\n                    const metadata = this._tokens[(nextOriginalTokenIdx << 1) + 1];\n                    newTokens.push(text.length, metadata);\n                    originalEndOffset = nextInsertToken.offset;\n                }\n                text += nextInsertToken.text;\n                newTokens.push(text.length, nextInsertToken.tokenMetadata);\n                nextInsertTokenIdx++;\n            }\n            else {\n                break;\n            }\n        }\n        return new LineTokens(new Uint32Array(newTokens), text, this.languageIdCodec);\n    }\n    getTokenText(tokenIndex) {\n        const startOffset = this.getStartOffset(tokenIndex);\n        const endOffset = this.getEndOffset(tokenIndex);\n        const text = this._text.substring(startOffset, endOffset);\n        return text;\n    }\n    forEach(callback) {\n        const tokenCount = this.getCount();\n        for (let tokenIndex = 0; tokenIndex < tokenCount; tokenIndex++) {\n            callback(tokenIndex);\n        }\n    }\n}\nclass SliceLineTokens {\n    constructor(source, startOffset, endOffset, deltaOffset) {\n        this._source = source;\n        this._startOffset = startOffset;\n        this._endOffset = endOffset;\n        this._deltaOffset = deltaOffset;\n        this._firstTokenIndex = source.findTokenIndexAtOffset(startOffset);\n        this.languageIdCodec = source.languageIdCodec;\n        this._tokensCount = 0;\n        for (let i = this._firstTokenIndex, len = source.getCount(); i < len; i++) {\n            const tokenStartOffset = source.getStartOffset(i);\n            if (tokenStartOffset >= endOffset) {\n                break;\n            }\n            this._tokensCount++;\n        }\n    }\n    getMetadata(tokenIndex) {\n        return this._source.getMetadata(this._firstTokenIndex + tokenIndex);\n    }\n    getLanguageId(tokenIndex) {\n        return this._source.getLanguageId(this._firstTokenIndex + tokenIndex);\n    }\n    getLineContent() {\n        return this._source.getLineContent().substring(this._startOffset, this._endOffset);\n    }\n    equals(other) {\n        if (other instanceof SliceLineTokens) {\n            return (this._startOffset === other._startOffset\n                && this._endOffset === other._endOffset\n                && this._deltaOffset === other._deltaOffset\n                && this._source.slicedEquals(other._source, this._firstTokenIndex, this._tokensCount));\n        }\n        return false;\n    }\n    getCount() {\n        return this._tokensCount;\n    }\n    getStandardTokenType(tokenIndex) {\n        return this._source.getStandardTokenType(this._firstTokenIndex + tokenIndex);\n    }\n    getForeground(tokenIndex) {\n        return this._source.getForeground(this._firstTokenIndex + tokenIndex);\n    }\n    getEndOffset(tokenIndex) {\n        const tokenEndOffset = this._source.getEndOffset(this._firstTokenIndex + tokenIndex);\n        return Math.min(this._endOffset, tokenEndOffset) - this._startOffset + this._deltaOffset;\n    }\n    getClassName(tokenIndex) {\n        return this._source.getClassName(this._firstTokenIndex + tokenIndex);\n    }\n    getInlineStyle(tokenIndex, colorMap) {\n        return this._source.getInlineStyle(this._firstTokenIndex + tokenIndex, colorMap);\n    }\n    getPresentation(tokenIndex) {\n        return this._source.getPresentation(this._firstTokenIndex + tokenIndex);\n    }\n    findTokenIndexAtOffset(offset) {\n        return this._source.findTokenIndexAtOffset(offset + this._startOffset - this._deltaOffset) - this._firstTokenIndex;\n    }\n    getTokenText(tokenIndex) {\n        const adjustedTokenIndex = this._firstTokenIndex + tokenIndex;\n        const tokenStartOffset = this._source.getStartOffset(adjustedTokenIndex);\n        const tokenEndOffset = this._source.getEndOffset(adjustedTokenIndex);\n        let text = this._source.getTokenText(adjustedTokenIndex);\n        if (tokenStartOffset < this._startOffset) {\n            text = text.substring(this._startOffset - tokenStartOffset);\n        }\n        if (tokenEndOffset > this._endOffset) {\n            text = text.substring(0, text.length - (tokenEndOffset - this._endOffset));\n        }\n        return text;\n    }\n    forEach(callback) {\n        for (let tokenIndex = 0; tokenIndex < this.getCount(); tokenIndex++) {\n            callback(tokenIndex);\n        }\n    }\n}\nexport function getStandardTokenTypeAtPosition(model, position) {\n    const lineNumber = position.lineNumber;\n    if (!model.tokenization.isCheapToTokenize(lineNumber)) {\n        return undefined;\n    }\n    model.tokenization.forceTokenization(lineNumber);\n    const lineTokens = model.tokenization.getLineTokens(lineNumber);\n    const tokenIndex = lineTokens.findTokenIndexAtOffset(position.column - 1);\n    const tokenType = lineTokens.getStandardTokenType(tokenIndex);\n    return tokenType;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { countEOL } from '../core/eolCounter.js';\n/**\n * Represents sparse tokens over a contiguous range of lines.\n */\nexport class SparseMultilineTokens {\n    static create(startLineNumber, tokens) {\n        return new SparseMultilineTokens(startLineNumber, new SparseMultilineTokensStorage(tokens));\n    }\n    /**\n     * (Inclusive) start line number for these tokens.\n     */\n    get startLineNumber() {\n        return this._startLineNumber;\n    }\n    /**\n     * (Inclusive) end line number for these tokens.\n     */\n    get endLineNumber() {\n        return this._endLineNumber;\n    }\n    constructor(startLineNumber, tokens) {\n        this._startLineNumber = startLineNumber;\n        this._tokens = tokens;\n        this._endLineNumber = this._startLineNumber + this._tokens.getMaxDeltaLine();\n    }\n    toString() {\n        return this._tokens.toString(this._startLineNumber);\n    }\n    _updateEndLineNumber() {\n        this._endLineNumber = this._startLineNumber + this._tokens.getMaxDeltaLine();\n    }\n    isEmpty() {\n        return this._tokens.isEmpty();\n    }\n    getLineTokens(lineNumber) {\n        if (this._startLineNumber <= lineNumber && lineNumber <= this._endLineNumber) {\n            return this._tokens.getLineTokens(lineNumber - this._startLineNumber);\n        }\n        return null;\n    }\n    getRange() {\n        const deltaRange = this._tokens.getRange();\n        if (!deltaRange) {\n            return deltaRange;\n        }\n        return new Range(this._startLineNumber + deltaRange.startLineNumber, deltaRange.startColumn, this._startLineNumber + deltaRange.endLineNumber, deltaRange.endColumn);\n    }\n    removeTokens(range) {\n        const startLineIndex = range.startLineNumber - this._startLineNumber;\n        const endLineIndex = range.endLineNumber - this._startLineNumber;\n        this._startLineNumber += this._tokens.removeTokens(startLineIndex, range.startColumn - 1, endLineIndex, range.endColumn - 1);\n        this._updateEndLineNumber();\n    }\n    split(range) {\n        // split tokens to two:\n        // a) all the tokens before `range`\n        // b) all the tokens after `range`\n        const startLineIndex = range.startLineNumber - this._startLineNumber;\n        const endLineIndex = range.endLineNumber - this._startLineNumber;\n        const [a, b, bDeltaLine] = this._tokens.split(startLineIndex, range.startColumn - 1, endLineIndex, range.endColumn - 1);\n        return [new SparseMultilineTokens(this._startLineNumber, a), new SparseMultilineTokens(this._startLineNumber + bDeltaLine, b)];\n    }\n    applyEdit(range, text) {\n        const [eolCount, firstLineLength, lastLineLength] = countEOL(text);\n        this.acceptEdit(range, eolCount, firstLineLength, lastLineLength, text.length > 0 ? text.charCodeAt(0) : 0 /* CharCode.Null */);\n    }\n    acceptEdit(range, eolCount, firstLineLength, lastLineLength, firstCharCode) {\n        this._acceptDeleteRange(range);\n        this._acceptInsertText(new Position(range.startLineNumber, range.startColumn), eolCount, firstLineLength, lastLineLength, firstCharCode);\n        this._updateEndLineNumber();\n    }\n    _acceptDeleteRange(range) {\n        if (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn) {\n            // Nothing to delete\n            return;\n        }\n        const firstLineIndex = range.startLineNumber - this._startLineNumber;\n        const lastLineIndex = range.endLineNumber - this._startLineNumber;\n        if (lastLineIndex < 0) {\n            // this deletion occurs entirely before this block, so we only need to adjust line numbers\n            const deletedLinesCount = lastLineIndex - firstLineIndex;\n            this._startLineNumber -= deletedLinesCount;\n            return;\n        }\n        const tokenMaxDeltaLine = this._tokens.getMaxDeltaLine();\n        if (firstLineIndex >= tokenMaxDeltaLine + 1) {\n            // this deletion occurs entirely after this block, so there is nothing to do\n            return;\n        }\n        if (firstLineIndex < 0 && lastLineIndex >= tokenMaxDeltaLine + 1) {\n            // this deletion completely encompasses this block\n            this._startLineNumber = 0;\n            this._tokens.clear();\n            return;\n        }\n        if (firstLineIndex < 0) {\n            const deletedBefore = -firstLineIndex;\n            this._startLineNumber -= deletedBefore;\n            this._tokens.acceptDeleteRange(range.startColumn - 1, 0, 0, lastLineIndex, range.endColumn - 1);\n        }\n        else {\n            this._tokens.acceptDeleteRange(0, firstLineIndex, range.startColumn - 1, lastLineIndex, range.endColumn - 1);\n        }\n    }\n    _acceptInsertText(position, eolCount, firstLineLength, lastLineLength, firstCharCode) {\n        if (eolCount === 0 && firstLineLength === 0) {\n            // Nothing to insert\n            return;\n        }\n        const lineIndex = position.lineNumber - this._startLineNumber;\n        if (lineIndex < 0) {\n            // this insertion occurs before this block, so we only need to adjust line numbers\n            this._startLineNumber += eolCount;\n            return;\n        }\n        const tokenMaxDeltaLine = this._tokens.getMaxDeltaLine();\n        if (lineIndex >= tokenMaxDeltaLine + 1) {\n            // this insertion occurs after this block, so there is nothing to do\n            return;\n        }\n        this._tokens.acceptInsertText(lineIndex, position.column - 1, eolCount, firstLineLength, lastLineLength, firstCharCode);\n    }\n}\nclass SparseMultilineTokensStorage {\n    constructor(tokens) {\n        this._tokens = tokens;\n        this._tokenCount = tokens.length / 4;\n    }\n    toString(startLineNumber) {\n        const pieces = [];\n        for (let i = 0; i < this._tokenCount; i++) {\n            pieces.push(`(${this._getDeltaLine(i) + startLineNumber},${this._getStartCharacter(i)}-${this._getEndCharacter(i)})`);\n        }\n        return `[${pieces.join(',')}]`;\n    }\n    getMaxDeltaLine() {\n        const tokenCount = this._getTokenCount();\n        if (tokenCount === 0) {\n            return -1;\n        }\n        return this._getDeltaLine(tokenCount - 1);\n    }\n    getRange() {\n        const tokenCount = this._getTokenCount();\n        if (tokenCount === 0) {\n            return null;\n        }\n        const startChar = this._getStartCharacter(0);\n        const maxDeltaLine = this._getDeltaLine(tokenCount - 1);\n        const endChar = this._getEndCharacter(tokenCount - 1);\n        return new Range(0, startChar + 1, maxDeltaLine, endChar + 1);\n    }\n    _getTokenCount() {\n        return this._tokenCount;\n    }\n    _getDeltaLine(tokenIndex) {\n        return this._tokens[4 * tokenIndex];\n    }\n    _getStartCharacter(tokenIndex) {\n        return this._tokens[4 * tokenIndex + 1];\n    }\n    _getEndCharacter(tokenIndex) {\n        return this._tokens[4 * tokenIndex + 2];\n    }\n    isEmpty() {\n        return (this._getTokenCount() === 0);\n    }\n    getLineTokens(deltaLine) {\n        let low = 0;\n        let high = this._getTokenCount() - 1;\n        while (low < high) {\n            const mid = low + Math.floor((high - low) / 2);\n            const midDeltaLine = this._getDeltaLine(mid);\n            if (midDeltaLine < deltaLine) {\n                low = mid + 1;\n            }\n            else if (midDeltaLine > deltaLine) {\n                high = mid - 1;\n            }\n            else {\n                let min = mid;\n                while (min > low && this._getDeltaLine(min - 1) === deltaLine) {\n                    min--;\n                }\n                let max = mid;\n                while (max < high && this._getDeltaLine(max + 1) === deltaLine) {\n                    max++;\n                }\n                return new SparseLineTokens(this._tokens.subarray(4 * min, 4 * max + 4));\n            }\n        }\n        if (this._getDeltaLine(low) === deltaLine) {\n            return new SparseLineTokens(this._tokens.subarray(4 * low, 4 * low + 4));\n        }\n        return null;\n    }\n    clear() {\n        this._tokenCount = 0;\n    }\n    removeTokens(startDeltaLine, startChar, endDeltaLine, endChar) {\n        const tokens = this._tokens;\n        const tokenCount = this._tokenCount;\n        let newTokenCount = 0;\n        let hasDeletedTokens = false;\n        let firstDeltaLine = 0;\n        for (let i = 0; i < tokenCount; i++) {\n            const srcOffset = 4 * i;\n            const tokenDeltaLine = tokens[srcOffset];\n            const tokenStartCharacter = tokens[srcOffset + 1];\n            const tokenEndCharacter = tokens[srcOffset + 2];\n            const tokenMetadata = tokens[srcOffset + 3];\n            if ((tokenDeltaLine > startDeltaLine || (tokenDeltaLine === startDeltaLine && tokenEndCharacter >= startChar))\n                && (tokenDeltaLine < endDeltaLine || (tokenDeltaLine === endDeltaLine && tokenStartCharacter <= endChar))) {\n                hasDeletedTokens = true;\n            }\n            else {\n                if (newTokenCount === 0) {\n                    firstDeltaLine = tokenDeltaLine;\n                }\n                if (hasDeletedTokens) {\n                    // must move the token to the left\n                    const destOffset = 4 * newTokenCount;\n                    tokens[destOffset] = tokenDeltaLine - firstDeltaLine;\n                    tokens[destOffset + 1] = tokenStartCharacter;\n                    tokens[destOffset + 2] = tokenEndCharacter;\n                    tokens[destOffset + 3] = tokenMetadata;\n                }\n                newTokenCount++;\n            }\n        }\n        this._tokenCount = newTokenCount;\n        return firstDeltaLine;\n    }\n    split(startDeltaLine, startChar, endDeltaLine, endChar) {\n        const tokens = this._tokens;\n        const tokenCount = this._tokenCount;\n        const aTokens = [];\n        const bTokens = [];\n        let destTokens = aTokens;\n        let destOffset = 0;\n        let destFirstDeltaLine = 0;\n        for (let i = 0; i < tokenCount; i++) {\n            const srcOffset = 4 * i;\n            const tokenDeltaLine = tokens[srcOffset];\n            const tokenStartCharacter = tokens[srcOffset + 1];\n            const tokenEndCharacter = tokens[srcOffset + 2];\n            const tokenMetadata = tokens[srcOffset + 3];\n            if ((tokenDeltaLine > startDeltaLine || (tokenDeltaLine === startDeltaLine && tokenEndCharacter >= startChar))) {\n                if ((tokenDeltaLine < endDeltaLine || (tokenDeltaLine === endDeltaLine && tokenStartCharacter <= endChar))) {\n                    // this token is touching the range\n                    continue;\n                }\n                else {\n                    // this token is after the range\n                    if (destTokens !== bTokens) {\n                        // this token is the first token after the range\n                        destTokens = bTokens;\n                        destOffset = 0;\n                        destFirstDeltaLine = tokenDeltaLine;\n                    }\n                }\n            }\n            destTokens[destOffset++] = tokenDeltaLine - destFirstDeltaLine;\n            destTokens[destOffset++] = tokenStartCharacter;\n            destTokens[destOffset++] = tokenEndCharacter;\n            destTokens[destOffset++] = tokenMetadata;\n        }\n        return [new SparseMultilineTokensStorage(new Uint32Array(aTokens)), new SparseMultilineTokensStorage(new Uint32Array(bTokens)), destFirstDeltaLine];\n    }\n    acceptDeleteRange(horizontalShiftForFirstLineTokens, startDeltaLine, startCharacter, endDeltaLine, endCharacter) {\n        // This is a bit complex, here are the cases I used to think about this:\n        //\n        // 1. The token starts before the deletion range\n        // 1a. The token is completely before the deletion range\n        //               -----------\n        //                          xxxxxxxxxxx\n        // 1b. The token starts before, the deletion range ends after the token\n        //               -----------\n        //                      xxxxxxxxxxx\n        // 1c. The token starts before, the deletion range ends precisely with the token\n        //               ---------------\n        //                      xxxxxxxx\n        // 1d. The token starts before, the deletion range is inside the token\n        //               ---------------\n        //                    xxxxx\n        //\n        // 2. The token starts at the same position with the deletion range\n        // 2a. The token starts at the same position, and ends inside the deletion range\n        //               -------\n        //               xxxxxxxxxxx\n        // 2b. The token starts at the same position, and ends at the same position as the deletion range\n        //               ----------\n        //               xxxxxxxxxx\n        // 2c. The token starts at the same position, and ends after the deletion range\n        //               -------------\n        //               xxxxxxx\n        //\n        // 3. The token starts inside the deletion range\n        // 3a. The token is inside the deletion range\n        //                -------\n        //             xxxxxxxxxxxxx\n        // 3b. The token starts inside the deletion range, and ends at the same position as the deletion range\n        //                ----------\n        //             xxxxxxxxxxxxx\n        // 3c. The token starts inside the deletion range, and ends after the deletion range\n        //                ------------\n        //             xxxxxxxxxxx\n        //\n        // 4. The token starts after the deletion range\n        //                  -----------\n        //          xxxxxxxx\n        //\n        const tokens = this._tokens;\n        const tokenCount = this._tokenCount;\n        const deletedLineCount = (endDeltaLine - startDeltaLine);\n        let newTokenCount = 0;\n        let hasDeletedTokens = false;\n        for (let i = 0; i < tokenCount; i++) {\n            const srcOffset = 4 * i;\n            let tokenDeltaLine = tokens[srcOffset];\n            let tokenStartCharacter = tokens[srcOffset + 1];\n            let tokenEndCharacter = tokens[srcOffset + 2];\n            const tokenMetadata = tokens[srcOffset + 3];\n            if (tokenDeltaLine < startDeltaLine || (tokenDeltaLine === startDeltaLine && tokenEndCharacter <= startCharacter)) {\n                // 1a. The token is completely before the deletion range\n                // => nothing to do\n                newTokenCount++;\n                continue;\n            }\n            else if (tokenDeltaLine === startDeltaLine && tokenStartCharacter < startCharacter) {\n                // 1b, 1c, 1d\n                // => the token survives, but it needs to shrink\n                if (tokenDeltaLine === endDeltaLine && tokenEndCharacter > endCharacter) {\n                    // 1d. The token starts before, the deletion range is inside the token\n                    // => the token shrinks by the deletion character count\n                    tokenEndCharacter -= (endCharacter - startCharacter);\n                }\n                else {\n                    // 1b. The token starts before, the deletion range ends after the token\n                    // 1c. The token starts before, the deletion range ends precisely with the token\n                    // => the token shrinks its ending to the deletion start\n                    tokenEndCharacter = startCharacter;\n                }\n            }\n            else if (tokenDeltaLine === startDeltaLine && tokenStartCharacter === startCharacter) {\n                // 2a, 2b, 2c\n                if (tokenDeltaLine === endDeltaLine && tokenEndCharacter > endCharacter) {\n                    // 2c. The token starts at the same position, and ends after the deletion range\n                    // => the token shrinks by the deletion character count\n                    tokenEndCharacter -= (endCharacter - startCharacter);\n                }\n                else {\n                    // 2a. The token starts at the same position, and ends inside the deletion range\n                    // 2b. The token starts at the same position, and ends at the same position as the deletion range\n                    // => the token is deleted\n                    hasDeletedTokens = true;\n                    continue;\n                }\n            }\n            else if (tokenDeltaLine < endDeltaLine || (tokenDeltaLine === endDeltaLine && tokenStartCharacter < endCharacter)) {\n                // 3a, 3b, 3c\n                if (tokenDeltaLine === endDeltaLine && tokenEndCharacter > endCharacter) {\n                    // 3c. The token starts inside the deletion range, and ends after the deletion range\n                    // => the token moves to continue right after the deletion\n                    tokenDeltaLine = startDeltaLine;\n                    tokenStartCharacter = startCharacter;\n                    tokenEndCharacter = tokenStartCharacter + (tokenEndCharacter - endCharacter);\n                }\n                else {\n                    // 3a. The token is inside the deletion range\n                    // 3b. The token starts inside the deletion range, and ends at the same position as the deletion range\n                    // => the token is deleted\n                    hasDeletedTokens = true;\n                    continue;\n                }\n            }\n            else if (tokenDeltaLine > endDeltaLine) {\n                // 4. (partial) The token starts after the deletion range, on a line below...\n                if (deletedLineCount === 0 && !hasDeletedTokens) {\n                    // early stop, there is no need to walk all the tokens and do nothing...\n                    newTokenCount = tokenCount;\n                    break;\n                }\n                tokenDeltaLine -= deletedLineCount;\n            }\n            else if (tokenDeltaLine === endDeltaLine && tokenStartCharacter >= endCharacter) {\n                // 4. (continued) The token starts after the deletion range, on the last line where a deletion occurs\n                if (horizontalShiftForFirstLineTokens && tokenDeltaLine === 0) {\n                    tokenStartCharacter += horizontalShiftForFirstLineTokens;\n                    tokenEndCharacter += horizontalShiftForFirstLineTokens;\n                }\n                tokenDeltaLine -= deletedLineCount;\n                tokenStartCharacter -= (endCharacter - startCharacter);\n                tokenEndCharacter -= (endCharacter - startCharacter);\n            }\n            else {\n                throw new Error(`Not possible!`);\n            }\n            const destOffset = 4 * newTokenCount;\n            tokens[destOffset] = tokenDeltaLine;\n            tokens[destOffset + 1] = tokenStartCharacter;\n            tokens[destOffset + 2] = tokenEndCharacter;\n            tokens[destOffset + 3] = tokenMetadata;\n            newTokenCount++;\n        }\n        this._tokenCount = newTokenCount;\n    }\n    acceptInsertText(deltaLine, character, eolCount, firstLineLength, lastLineLength, firstCharCode) {\n        // Here are the cases I used to think about this:\n        //\n        // 1. The token is completely before the insertion point\n        //            -----------   |\n        // 2. The token ends precisely at the insertion point\n        //            -----------|\n        // 3. The token contains the insertion point\n        //            -----|------\n        // 4. The token starts precisely at the insertion point\n        //            |-----------\n        // 5. The token is completely after the insertion point\n        //            |   -----------\n        //\n        const isInsertingPreciselyOneWordCharacter = (eolCount === 0\n            && firstLineLength === 1\n            && ((firstCharCode >= 48 /* CharCode.Digit0 */ && firstCharCode <= 57 /* CharCode.Digit9 */)\n                || (firstCharCode >= 65 /* CharCode.A */ && firstCharCode <= 90 /* CharCode.Z */)\n                || (firstCharCode >= 97 /* CharCode.a */ && firstCharCode <= 122 /* CharCode.z */)));\n        const tokens = this._tokens;\n        const tokenCount = this._tokenCount;\n        for (let i = 0; i < tokenCount; i++) {\n            const offset = 4 * i;\n            let tokenDeltaLine = tokens[offset];\n            let tokenStartCharacter = tokens[offset + 1];\n            let tokenEndCharacter = tokens[offset + 2];\n            if (tokenDeltaLine < deltaLine || (tokenDeltaLine === deltaLine && tokenEndCharacter < character)) {\n                // 1. The token is completely before the insertion point\n                // => nothing to do\n                continue;\n            }\n            else if (tokenDeltaLine === deltaLine && tokenEndCharacter === character) {\n                // 2. The token ends precisely at the insertion point\n                // => expand the end character only if inserting precisely one character that is a word character\n                if (isInsertingPreciselyOneWordCharacter) {\n                    tokenEndCharacter += 1;\n                }\n                else {\n                    continue;\n                }\n            }\n            else if (tokenDeltaLine === deltaLine && tokenStartCharacter < character && character < tokenEndCharacter) {\n                // 3. The token contains the insertion point\n                if (eolCount === 0) {\n                    // => just expand the end character\n                    tokenEndCharacter += firstLineLength;\n                }\n                else {\n                    // => cut off the token\n                    tokenEndCharacter = character;\n                }\n            }\n            else {\n                // 4. or 5.\n                if (tokenDeltaLine === deltaLine && tokenStartCharacter === character) {\n                    // 4. The token starts precisely at the insertion point\n                    // => grow the token (by keeping its start constant) only if inserting precisely one character that is a word character\n                    // => otherwise behave as in case 5.\n                    if (isInsertingPreciselyOneWordCharacter) {\n                        continue;\n                    }\n                }\n                // => the token must move and keep its size constant\n                if (tokenDeltaLine === deltaLine) {\n                    tokenDeltaLine += eolCount;\n                    // this token is on the line where the insertion is taking place\n                    if (eolCount === 0) {\n                        tokenStartCharacter += firstLineLength;\n                        tokenEndCharacter += firstLineLength;\n                    }\n                    else {\n                        const tokenLength = tokenEndCharacter - tokenStartCharacter;\n                        tokenStartCharacter = lastLineLength + (tokenStartCharacter - character);\n                        tokenEndCharacter = tokenStartCharacter + tokenLength;\n                    }\n                }\n                else {\n                    tokenDeltaLine += eolCount;\n                }\n            }\n            tokens[offset] = tokenDeltaLine;\n            tokens[offset + 1] = tokenStartCharacter;\n            tokens[offset + 2] = tokenEndCharacter;\n        }\n    }\n}\nexport class SparseLineTokens {\n    constructor(tokens) {\n        this._tokens = tokens;\n    }\n    getCount() {\n        return this._tokens.length / 4;\n    }\n    getStartCharacter(tokenIndex) {\n        return this._tokens[4 * tokenIndex + 1];\n    }\n    getEndCharacter(tokenIndex) {\n        return this._tokens[4 * tokenIndex + 2];\n    }\n    getMetadata(tokenIndex) {\n        return this._tokens[4 * tokenIndex + 3];\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as arrays from '../../../base/common/arrays.js';\nimport { LineTokens } from './lineTokens.js';\n/**\n * Represents sparse tokens in a text model.\n */\nexport class SparseTokensStore {\n    constructor(languageIdCodec) {\n        this._pieces = [];\n        this._isComplete = false;\n        this._languageIdCodec = languageIdCodec;\n    }\n    flush() {\n        this._pieces = [];\n        this._isComplete = false;\n    }\n    isEmpty() {\n        return (this._pieces.length === 0);\n    }\n    set(pieces, isComplete) {\n        this._pieces = pieces || [];\n        this._isComplete = isComplete;\n    }\n    setPartial(_range, pieces) {\n        // console.log(`setPartial ${_range} ${pieces.map(p => p.toString()).join(', ')}`);\n        let range = _range;\n        if (pieces.length > 0) {\n            const _firstRange = pieces[0].getRange();\n            const _lastRange = pieces[pieces.length - 1].getRange();\n            if (!_firstRange || !_lastRange) {\n                return _range;\n            }\n            range = _range.plusRange(_firstRange).plusRange(_lastRange);\n        }\n        let insertPosition = null;\n        for (let i = 0, len = this._pieces.length; i < len; i++) {\n            const piece = this._pieces[i];\n            if (piece.endLineNumber < range.startLineNumber) {\n                // this piece is before the range\n                continue;\n            }\n            if (piece.startLineNumber > range.endLineNumber) {\n                // this piece is after the range, so mark the spot before this piece\n                // as a good insertion position and stop looping\n                insertPosition = insertPosition || { index: i };\n                break;\n            }\n            // this piece might intersect with the range\n            piece.removeTokens(range);\n            if (piece.isEmpty()) {\n                // remove the piece if it became empty\n                this._pieces.splice(i, 1);\n                i--;\n                len--;\n                continue;\n            }\n            if (piece.endLineNumber < range.startLineNumber) {\n                // after removal, this piece is before the range\n                continue;\n            }\n            if (piece.startLineNumber > range.endLineNumber) {\n                // after removal, this piece is after the range\n                insertPosition = insertPosition || { index: i };\n                continue;\n            }\n            // after removal, this piece contains the range\n            const [a, b] = piece.split(range);\n            if (a.isEmpty()) {\n                // this piece is actually after the range\n                insertPosition = insertPosition || { index: i };\n                continue;\n            }\n            if (b.isEmpty()) {\n                // this piece is actually before the range\n                continue;\n            }\n            this._pieces.splice(i, 1, a, b);\n            i++;\n            len++;\n            insertPosition = insertPosition || { index: i };\n        }\n        insertPosition = insertPosition || { index: this._pieces.length };\n        if (pieces.length > 0) {\n            this._pieces = arrays.arrayInsert(this._pieces, insertPosition.index, pieces);\n        }\n        // console.log(`I HAVE ${this._pieces.length} pieces`);\n        // console.log(`${this._pieces.map(p => p.toString()).join('\\n')}`);\n        return range;\n    }\n    isComplete() {\n        return this._isComplete;\n    }\n    addSparseTokens(lineNumber, aTokens) {\n        if (aTokens.getLineContent().length === 0) {\n            // Don't do anything for empty lines\n            return aTokens;\n        }\n        const pieces = this._pieces;\n        if (pieces.length === 0) {\n            return aTokens;\n        }\n        const pieceIndex = SparseTokensStore._findFirstPieceWithLine(pieces, lineNumber);\n        const bTokens = pieces[pieceIndex].getLineTokens(lineNumber);\n        if (!bTokens) {\n            return aTokens;\n        }\n        const aLen = aTokens.getCount();\n        const bLen = bTokens.getCount();\n        let aIndex = 0;\n        const result = [];\n        let resultLen = 0;\n        let lastEndOffset = 0;\n        const emitToken = (endOffset, metadata) => {\n            if (endOffset === lastEndOffset) {\n                return;\n            }\n            lastEndOffset = endOffset;\n            result[resultLen++] = endOffset;\n            result[resultLen++] = metadata;\n        };\n        for (let bIndex = 0; bIndex < bLen; bIndex++) {\n            const bStartCharacter = bTokens.getStartCharacter(bIndex);\n            const bEndCharacter = bTokens.getEndCharacter(bIndex);\n            const bMetadata = bTokens.getMetadata(bIndex);\n            const bMask = (((bMetadata & 1 /* MetadataConsts.SEMANTIC_USE_ITALIC */) ? 2048 /* MetadataConsts.ITALIC_MASK */ : 0)\n                | ((bMetadata & 2 /* MetadataConsts.SEMANTIC_USE_BOLD */) ? 4096 /* MetadataConsts.BOLD_MASK */ : 0)\n                | ((bMetadata & 4 /* MetadataConsts.SEMANTIC_USE_UNDERLINE */) ? 8192 /* MetadataConsts.UNDERLINE_MASK */ : 0)\n                | ((bMetadata & 8 /* MetadataConsts.SEMANTIC_USE_STRIKETHROUGH */) ? 16384 /* MetadataConsts.STRIKETHROUGH_MASK */ : 0)\n                | ((bMetadata & 16 /* MetadataConsts.SEMANTIC_USE_FOREGROUND */) ? 16744448 /* MetadataConsts.FOREGROUND_MASK */ : 0)\n                | ((bMetadata & 32 /* MetadataConsts.SEMANTIC_USE_BACKGROUND */) ? 4278190080 /* MetadataConsts.BACKGROUND_MASK */ : 0)) >>> 0;\n            const aMask = (~bMask) >>> 0;\n            // push any token from `a` that is before `b`\n            while (aIndex < aLen && aTokens.getEndOffset(aIndex) <= bStartCharacter) {\n                emitToken(aTokens.getEndOffset(aIndex), aTokens.getMetadata(aIndex));\n                aIndex++;\n            }\n            // push the token from `a` if it intersects the token from `b`\n            if (aIndex < aLen && aTokens.getStartOffset(aIndex) < bStartCharacter) {\n                emitToken(bStartCharacter, aTokens.getMetadata(aIndex));\n            }\n            // skip any tokens from `a` that are contained inside `b`\n            while (aIndex < aLen && aTokens.getEndOffset(aIndex) < bEndCharacter) {\n                emitToken(aTokens.getEndOffset(aIndex), (aTokens.getMetadata(aIndex) & aMask) | (bMetadata & bMask));\n                aIndex++;\n            }\n            if (aIndex < aLen) {\n                emitToken(bEndCharacter, (aTokens.getMetadata(aIndex) & aMask) | (bMetadata & bMask));\n                if (aTokens.getEndOffset(aIndex) === bEndCharacter) {\n                    // `a` ends exactly at the same spot as `b`!\n                    aIndex++;\n                }\n            }\n            else {\n                const aMergeIndex = Math.min(Math.max(0, aIndex - 1), aLen - 1);\n                // push the token from `b`\n                emitToken(bEndCharacter, (aTokens.getMetadata(aMergeIndex) & aMask) | (bMetadata & bMask));\n            }\n        }\n        // push the remaining tokens from `a`\n        while (aIndex < aLen) {\n            emitToken(aTokens.getEndOffset(aIndex), aTokens.getMetadata(aIndex));\n            aIndex++;\n        }\n        return new LineTokens(new Uint32Array(result), aTokens.getLineContent(), this._languageIdCodec);\n    }\n    static _findFirstPieceWithLine(pieces, lineNumber) {\n        let low = 0;\n        let high = pieces.length - 1;\n        while (low < high) {\n            let mid = low + Math.floor((high - low) / 2);\n            if (pieces[mid].endLineNumber < lineNumber) {\n                low = mid + 1;\n            }\n            else if (pieces[mid].startLineNumber > lineNumber) {\n                high = mid - 1;\n            }\n            else {\n                while (mid > low && pieces[mid - 1].startLineNumber <= lineNumber && lineNumber <= pieces[mid - 1].endLineNumber) {\n                    mid--;\n                }\n                return mid;\n            }\n        }\n        return low;\n    }\n    acceptEdit(range, eolCount, firstLineLength, lastLineLength, firstCharCode) {\n        for (const piece of this._pieces) {\n            piece.acceptEdit(range, eolCount, firstLineLength, lastLineLength, firstCharCode);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { SimpleWorkerServer } from '../base/common/worker/simpleWorker.js';\nimport { EditorSimpleWorker } from './common/services/editorSimpleWorker.js';\nimport { EditorWorkerHost } from './common/services/editorWorkerHost.js';\nlet initialized = false;\nexport function initialize(foreignModule) {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    const simpleWorker = new SimpleWorkerServer((msg) => {\n        globalThis.postMessage(msg);\n    }, (workerServer) => new EditorSimpleWorker(EditorWorkerHost.getChannel(workerServer), foreignModule));\n    globalThis.onmessage = (e) => {\n        simpleWorker.onmessage(e.data);\n    };\n}\nglobalThis.onmessage = (e) => {\n    // Ignore first message in this case and initialize if not yet initialized\n    if (!initialized) {\n        initialize(null);\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// eslint-disable-next-line local/code-import-patterns\nimport { getNLSLanguage, getNLSMessages } from './nls.messages.js';\n// eslint-disable-next-line local/code-import-patterns\nexport { getNLSLanguage, getNLSMessages } from './nls.messages.js';\nconst isPseudo = getNLSLanguage() === 'pseudo' || (typeof document !== 'undefined' && document.location && document.location.hash.indexOf('pseudo=true') >= 0);\nfunction _format(message, args) {\n    let result;\n    if (args.length === 0) {\n        result = message;\n    }\n    else {\n        result = message.replace(/\\{(\\d+)\\}/g, (match, rest) => {\n            const index = rest[0];\n            const arg = args[index];\n            let result = match;\n            if (typeof arg === 'string') {\n                result = arg;\n            }\n            else if (typeof arg === 'number' || typeof arg === 'boolean' || arg === void 0 || arg === null) {\n                result = String(arg);\n            }\n            return result;\n        });\n    }\n    if (isPseudo) {\n        // FF3B and FF3D is the Unicode zenkaku representation for [ and ]\n        result = '\\uFF3B' + result.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\n    }\n    return result;\n}\n/**\n * @skipMangle\n */\nexport function localize(data /* | number when built */, message /* | null when built */, ...args) {\n    if (typeof data === 'number') {\n        return _format(lookupMessage(data, message), args);\n    }\n    return _format(message, args);\n}\n/**\n * Only used when built: Looks up the message in the global NLS table.\n * This table is being made available as a global through bootstrapping\n * depending on the target context.\n */\nfunction lookupMessage(index, fallback) {\n    const message = getNLSMessages()?.[index];\n    if (typeof message !== 'string') {\n        if (typeof fallback === 'string') {\n            return fallback;\n        }\n        throw new Error(`!!! NLS MISSING: ${index} !!!`);\n    }\n    return message;\n}\n/**\n * @skipMangle\n */\nexport function localize2(data /* | number when built */, originalMessage, ...args) {\n    let message;\n    if (typeof data === 'number') {\n        message = lookupMessage(data, originalMessage);\n    }\n    else {\n        message = originalMessage;\n    }\n    const value = _format(message, args);\n    return {\n        value,\n        original: originalMessage === message ? value : _format(originalMessage, args)\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/*\n * This module exists so that the AMD build of the monaco editor can replace this with an async loader plugin.\n * If you add new functions to this module make sure that they are also provided in the AMD build of the monaco editor.\n */\nexport function getNLSMessages() {\n    return globalThis._VSCODE_NLS_MESSAGES;\n}\nexport function getNLSLanguage() {\n    return globalThis._VSCODE_NLS_LANGUAGE;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IConfigurationService = createDecorator('configurationService');\nexport function toValuesTree(properties, conflictReporter) {\n    const root = Object.create(null);\n    for (const key in properties) {\n        addToValueTree(root, key, properties[key], conflictReporter);\n    }\n    return root;\n}\nexport function addToValueTree(settingsTreeRoot, key, value, conflictReporter) {\n    const segments = key.split('.');\n    const last = segments.pop();\n    let curr = settingsTreeRoot;\n    for (let i = 0; i < segments.length; i++) {\n        const s = segments[i];\n        let obj = curr[s];\n        switch (typeof obj) {\n            case 'undefined':\n                obj = curr[s] = Object.create(null);\n                break;\n            case 'object':\n                if (obj === null) {\n                    conflictReporter(`Ignoring ${key} as ${segments.slice(0, i + 1).join('.')} is null`);\n                    return;\n                }\n                break;\n            default:\n                conflictReporter(`Ignoring ${key} as ${segments.slice(0, i + 1).join('.')} is ${JSON.stringify(obj)}`);\n                return;\n        }\n        curr = obj;\n    }\n    if (typeof curr === 'object' && curr !== null) {\n        try {\n            curr[last] = value; // workaround https://github.com/microsoft/vscode/issues/13606\n        }\n        catch (e) {\n            conflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n        }\n    }\n    else {\n        conflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n    }\n}\nexport function removeFromValueTree(valueTree, key) {\n    const segments = key.split('.');\n    doRemoveFromValueTree(valueTree, segments);\n}\nfunction doRemoveFromValueTree(valueTree, segments) {\n    const first = segments.shift();\n    if (segments.length === 0) {\n        // Reached last segment\n        delete valueTree[first];\n        return;\n    }\n    if (Object.keys(valueTree).indexOf(first) !== -1) {\n        const value = valueTree[first];\n        if (typeof value === 'object' && !Array.isArray(value)) {\n            doRemoveFromValueTree(value, segments);\n            if (Object.keys(value).length === 0) {\n                delete valueTree[first];\n            }\n        }\n    }\n}\n/**\n * A helper function to get the configuration value with a specific settings path (e.g. config.some.setting)\n */\nexport function getConfigurationValue(config, settingPath, defaultValue) {\n    function accessSetting(config, path) {\n        let current = config;\n        for (const component of path) {\n            if (typeof current !== 'object' || current === null) {\n                return undefined;\n            }\n            current = current[component];\n        }\n        return current;\n    }\n    const path = settingPath.split('.');\n    const result = accessSetting(config, path);\n    return typeof result === 'undefined' ? defaultValue : result;\n}\nexport function getLanguageTagSettingPlainKey(settingKey) {\n    return settingKey.replace(/[\\[\\]]/g, '');\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { distinct } from '../../../base/common/arrays.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport * as types from '../../../base/common/types.js';\nimport * as nls from '../../../nls.js';\nimport { getLanguageTagSettingPlainKey } from './configuration.js';\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\nimport { Registry } from '../../registry/common/platform.js';\nexport const Extensions = {\n    Configuration: 'base.contributions.configuration'\n};\nexport const allSettings = { properties: {}, patternProperties: {} };\nexport const applicationSettings = { properties: {}, patternProperties: {} };\nexport const machineSettings = { properties: {}, patternProperties: {} };\nexport const machineOverridableSettings = { properties: {}, patternProperties: {} };\nexport const windowSettings = { properties: {}, patternProperties: {} };\nexport const resourceSettings = { properties: {}, patternProperties: {} };\nexport const resourceLanguageSettingsSchemaId = 'vscode://schemas/settings/resourceLanguage';\nconst contributionRegistry = Registry.as(JSONExtensions.JSONContribution);\nclass ConfigurationRegistry {\n    constructor() {\n        this.registeredConfigurationDefaults = [];\n        this.overrideIdentifiers = new Set();\n        this._onDidSchemaChange = new Emitter();\n        this._onDidUpdateConfiguration = new Emitter();\n        this.configurationDefaultsOverrides = new Map();\n        this.defaultLanguageConfigurationOverridesNode = {\n            id: 'defaultOverrides',\n            title: nls.localize('defaultLanguageConfigurationOverrides.title', \"Default Language Configuration Overrides\"),\n            properties: {}\n        };\n        this.configurationContributors = [this.defaultLanguageConfigurationOverridesNode];\n        this.resourceLanguageSettingsSchema = {\n            properties: {},\n            patternProperties: {},\n            additionalProperties: true,\n            allowTrailingCommas: true,\n            allowComments: true\n        };\n        this.configurationProperties = {};\n        this.policyConfigurations = new Map();\n        this.excludedConfigurationProperties = {};\n        contributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n        this.registerOverridePropertyPatternKey();\n    }\n    registerConfiguration(configuration, validate = true) {\n        this.registerConfigurations([configuration], validate);\n    }\n    registerConfigurations(configurations, validate = true) {\n        const properties = new Set();\n        this.doRegisterConfigurations(configurations, validate, properties);\n        contributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n        this._onDidSchemaChange.fire();\n        this._onDidUpdateConfiguration.fire({ properties });\n    }\n    registerDefaultConfigurations(configurationDefaults) {\n        const properties = new Set();\n        this.doRegisterDefaultConfigurations(configurationDefaults, properties);\n        this._onDidSchemaChange.fire();\n        this._onDidUpdateConfiguration.fire({ properties, defaultsOverrides: true });\n    }\n    doRegisterDefaultConfigurations(configurationDefaults, bucket) {\n        this.registeredConfigurationDefaults.push(...configurationDefaults);\n        const overrideIdentifiers = [];\n        for (const { overrides, source } of configurationDefaults) {\n            for (const key in overrides) {\n                bucket.add(key);\n                const configurationDefaultOverridesForKey = this.configurationDefaultsOverrides.get(key)\n                    ?? this.configurationDefaultsOverrides.set(key, { configurationDefaultOverrides: [] }).get(key);\n                const value = overrides[key];\n                configurationDefaultOverridesForKey.configurationDefaultOverrides.push({ value, source });\n                // Configuration defaults for Override Identifiers\n                if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n                    const newDefaultOverride = this.mergeDefaultConfigurationsForOverrideIdentifier(key, value, source, configurationDefaultOverridesForKey.configurationDefaultOverrideValue);\n                    if (!newDefaultOverride) {\n                        continue;\n                    }\n                    configurationDefaultOverridesForKey.configurationDefaultOverrideValue = newDefaultOverride;\n                    this.updateDefaultOverrideProperty(key, newDefaultOverride, source);\n                    overrideIdentifiers.push(...overrideIdentifiersFromKey(key));\n                }\n                // Configuration defaults for Configuration Properties\n                else {\n                    const newDefaultOverride = this.mergeDefaultConfigurationsForConfigurationProperty(key, value, source, configurationDefaultOverridesForKey.configurationDefaultOverrideValue);\n                    if (!newDefaultOverride) {\n                        continue;\n                    }\n                    configurationDefaultOverridesForKey.configurationDefaultOverrideValue = newDefaultOverride;\n                    const property = this.configurationProperties[key];\n                    if (property) {\n                        this.updatePropertyDefaultValue(key, property);\n                        this.updateSchema(key, property);\n                    }\n                }\n            }\n        }\n        this.doRegisterOverrideIdentifiers(overrideIdentifiers);\n    }\n    updateDefaultOverrideProperty(key, newDefaultOverride, source) {\n        const property = {\n            type: 'object',\n            default: newDefaultOverride.value,\n            description: nls.localize('defaultLanguageConfiguration.description', \"Configure settings to be overridden for the {0} language.\", getLanguageTagSettingPlainKey(key)),\n            $ref: resourceLanguageSettingsSchemaId,\n            defaultDefaultValue: newDefaultOverride.value,\n            source,\n            defaultValueSource: source\n        };\n        this.configurationProperties[key] = property;\n        this.defaultLanguageConfigurationOverridesNode.properties[key] = property;\n    }\n    mergeDefaultConfigurationsForOverrideIdentifier(overrideIdentifier, configurationValueObject, valueSource, existingDefaultOverride) {\n        const defaultValue = existingDefaultOverride?.value || {};\n        const source = existingDefaultOverride?.source ?? new Map();\n        // This should not happen\n        if (!(source instanceof Map)) {\n            console.error('objectConfigurationSources is not a Map');\n            return undefined;\n        }\n        for (const propertyKey of Object.keys(configurationValueObject)) {\n            const propertyDefaultValue = configurationValueObject[propertyKey];\n            const isObjectSetting = types.isObject(propertyDefaultValue) &&\n                (types.isUndefined(defaultValue[propertyKey]) || types.isObject(defaultValue[propertyKey]));\n            // If the default value is an object, merge the objects and store the source of each keys\n            if (isObjectSetting) {\n                defaultValue[propertyKey] = { ...(defaultValue[propertyKey] ?? {}), ...propertyDefaultValue };\n                // Track the source of each value in the object\n                if (valueSource) {\n                    for (const objectKey in propertyDefaultValue) {\n                        source.set(`${propertyKey}.${objectKey}`, valueSource);\n                    }\n                }\n            }\n            // Primitive values are overridden\n            else {\n                defaultValue[propertyKey] = propertyDefaultValue;\n                if (valueSource) {\n                    source.set(propertyKey, valueSource);\n                }\n                else {\n                    source.delete(propertyKey);\n                }\n            }\n        }\n        return { value: defaultValue, source };\n    }\n    mergeDefaultConfigurationsForConfigurationProperty(propertyKey, value, valuesSource, existingDefaultOverride) {\n        const property = this.configurationProperties[propertyKey];\n        const existingDefaultValue = existingDefaultOverride?.value ?? property?.defaultDefaultValue;\n        let source = valuesSource;\n        const isObjectSetting = types.isObject(value) &&\n            (property !== undefined && property.type === 'object' ||\n                property === undefined && (types.isUndefined(existingDefaultValue) || types.isObject(existingDefaultValue)));\n        // If the default value is an object, merge the objects and store the source of each keys\n        if (isObjectSetting) {\n            source = existingDefaultOverride?.source ?? new Map();\n            // This should not happen\n            if (!(source instanceof Map)) {\n                console.error('defaultValueSource is not a Map');\n                return undefined;\n            }\n            for (const objectKey in value) {\n                if (valuesSource) {\n                    source.set(`${propertyKey}.${objectKey}`, valuesSource);\n                }\n            }\n            value = { ...(types.isObject(existingDefaultValue) ? existingDefaultValue : {}), ...value };\n        }\n        return { value, source };\n    }\n    registerOverrideIdentifiers(overrideIdentifiers) {\n        this.doRegisterOverrideIdentifiers(overrideIdentifiers);\n        this._onDidSchemaChange.fire();\n    }\n    doRegisterOverrideIdentifiers(overrideIdentifiers) {\n        for (const overrideIdentifier of overrideIdentifiers) {\n            this.overrideIdentifiers.add(overrideIdentifier);\n        }\n        this.updateOverridePropertyPatternKey();\n    }\n    doRegisterConfigurations(configurations, validate, bucket) {\n        configurations.forEach(configuration => {\n            this.validateAndRegisterProperties(configuration, validate, configuration.extensionInfo, configuration.restrictedProperties, undefined, bucket);\n            this.configurationContributors.push(configuration);\n            this.registerJSONConfiguration(configuration);\n        });\n    }\n    validateAndRegisterProperties(configuration, validate = true, extensionInfo, restrictedProperties, scope = 3 /* ConfigurationScope.WINDOW */, bucket) {\n        scope = types.isUndefinedOrNull(configuration.scope) ? scope : configuration.scope;\n        const properties = configuration.properties;\n        if (properties) {\n            for (const key in properties) {\n                const property = properties[key];\n                if (validate && validateProperty(key, property)) {\n                    delete properties[key];\n                    continue;\n                }\n                property.source = extensionInfo;\n                // update default value\n                property.defaultDefaultValue = properties[key].default;\n                this.updatePropertyDefaultValue(key, property);\n                // update scope\n                if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n                    property.scope = undefined; // No scope for overridable properties `[${identifier}]`\n                }\n                else {\n                    property.scope = types.isUndefinedOrNull(property.scope) ? scope : property.scope;\n                    property.restricted = types.isUndefinedOrNull(property.restricted) ? !!restrictedProperties?.includes(key) : property.restricted;\n                }\n                // Add to properties maps\n                // Property is included by default if 'included' is unspecified\n                if (properties[key].hasOwnProperty('included') && !properties[key].included) {\n                    this.excludedConfigurationProperties[key] = properties[key];\n                    delete properties[key];\n                    continue;\n                }\n                else {\n                    this.configurationProperties[key] = properties[key];\n                    if (properties[key].policy?.name) {\n                        this.policyConfigurations.set(properties[key].policy.name, key);\n                    }\n                }\n                if (!properties[key].deprecationMessage && properties[key].markdownDeprecationMessage) {\n                    // If not set, default deprecationMessage to the markdown source\n                    properties[key].deprecationMessage = properties[key].markdownDeprecationMessage;\n                }\n                bucket.add(key);\n            }\n        }\n        const subNodes = configuration.allOf;\n        if (subNodes) {\n            for (const node of subNodes) {\n                this.validateAndRegisterProperties(node, validate, extensionInfo, restrictedProperties, scope, bucket);\n            }\n        }\n    }\n    getConfigurationProperties() {\n        return this.configurationProperties;\n    }\n    getPolicyConfigurations() {\n        return this.policyConfigurations;\n    }\n    registerJSONConfiguration(configuration) {\n        const register = (configuration) => {\n            const properties = configuration.properties;\n            if (properties) {\n                for (const key in properties) {\n                    this.updateSchema(key, properties[key]);\n                }\n            }\n            const subNodes = configuration.allOf;\n            subNodes?.forEach(register);\n        };\n        register(configuration);\n    }\n    updateSchema(key, property) {\n        allSettings.properties[key] = property;\n        switch (property.scope) {\n            case 1 /* ConfigurationScope.APPLICATION */:\n                applicationSettings.properties[key] = property;\n                break;\n            case 2 /* ConfigurationScope.MACHINE */:\n                machineSettings.properties[key] = property;\n                break;\n            case 6 /* ConfigurationScope.MACHINE_OVERRIDABLE */:\n                machineOverridableSettings.properties[key] = property;\n                break;\n            case 3 /* ConfigurationScope.WINDOW */:\n                windowSettings.properties[key] = property;\n                break;\n            case 4 /* ConfigurationScope.RESOURCE */:\n                resourceSettings.properties[key] = property;\n                break;\n            case 5 /* ConfigurationScope.LANGUAGE_OVERRIDABLE */:\n                resourceSettings.properties[key] = property;\n                this.resourceLanguageSettingsSchema.properties[key] = property;\n                break;\n        }\n    }\n    updateOverridePropertyPatternKey() {\n        for (const overrideIdentifier of this.overrideIdentifiers.values()) {\n            const overrideIdentifierProperty = `[${overrideIdentifier}]`;\n            const resourceLanguagePropertiesSchema = {\n                type: 'object',\n                description: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n                errorMessage: nls.localize('overrideSettings.errorMessage', \"This setting does not support per-language configuration.\"),\n                $ref: resourceLanguageSettingsSchemaId,\n            };\n            this.updatePropertyDefaultValue(overrideIdentifierProperty, resourceLanguagePropertiesSchema);\n            allSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            applicationSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            machineSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            machineOverridableSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            windowSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            resourceSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n        }\n    }\n    registerOverridePropertyPatternKey() {\n        const resourceLanguagePropertiesSchema = {\n            type: 'object',\n            description: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n            errorMessage: nls.localize('overrideSettings.errorMessage', \"This setting does not support per-language configuration.\"),\n            $ref: resourceLanguageSettingsSchemaId,\n        };\n        allSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        applicationSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        machineSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        machineOverridableSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        windowSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        resourceSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        this._onDidSchemaChange.fire();\n    }\n    updatePropertyDefaultValue(key, property) {\n        const configurationdefaultOverride = this.configurationDefaultsOverrides.get(key)?.configurationDefaultOverrideValue;\n        let defaultValue = undefined;\n        let defaultSource = undefined;\n        if (configurationdefaultOverride\n            && (!property.disallowConfigurationDefault || !configurationdefaultOverride.source) // Prevent overriding the default value if the property is disallowed to be overridden by configuration defaults from extensions\n        ) {\n            defaultValue = configurationdefaultOverride.value;\n            defaultSource = configurationdefaultOverride.source;\n        }\n        if (types.isUndefined(defaultValue)) {\n            defaultValue = property.defaultDefaultValue;\n            defaultSource = undefined;\n        }\n        if (types.isUndefined(defaultValue)) {\n            defaultValue = getDefaultValue(property.type);\n        }\n        property.default = defaultValue;\n        property.defaultValueSource = defaultSource;\n    }\n}\nconst OVERRIDE_IDENTIFIER_PATTERN = `\\\\[([^\\\\]]+)\\\\]`;\nconst OVERRIDE_IDENTIFIER_REGEX = new RegExp(OVERRIDE_IDENTIFIER_PATTERN, 'g');\nexport const OVERRIDE_PROPERTY_PATTERN = `^(${OVERRIDE_IDENTIFIER_PATTERN})+$`;\nexport const OVERRIDE_PROPERTY_REGEX = new RegExp(OVERRIDE_PROPERTY_PATTERN);\nexport function overrideIdentifiersFromKey(key) {\n    const identifiers = [];\n    if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n        let matches = OVERRIDE_IDENTIFIER_REGEX.exec(key);\n        while (matches?.length) {\n            const identifier = matches[1].trim();\n            if (identifier) {\n                identifiers.push(identifier);\n            }\n            matches = OVERRIDE_IDENTIFIER_REGEX.exec(key);\n        }\n    }\n    return distinct(identifiers);\n}\nexport function getDefaultValue(type) {\n    const t = Array.isArray(type) ? type[0] : type;\n    switch (t) {\n        case 'boolean':\n            return false;\n        case 'integer':\n        case 'number':\n            return 0;\n        case 'string':\n            return '';\n        case 'array':\n            return [];\n        case 'object':\n            return {};\n        default:\n            return null;\n    }\n}\nconst configurationRegistry = new ConfigurationRegistry();\nRegistry.add(Extensions.Configuration, configurationRegistry);\nexport function validateProperty(property, schema) {\n    if (!property.trim()) {\n        return nls.localize('config.property.empty', \"Cannot register an empty property\");\n    }\n    if (OVERRIDE_PROPERTY_REGEX.test(property)) {\n        return nls.localize('config.property.languageDefault', \"Cannot register '{0}'. This matches property pattern '\\\\\\\\[.*\\\\\\\\]$' for describing language specific editor settings. Use 'configurationDefaults' contribution.\", property);\n    }\n    if (configurationRegistry.getConfigurationProperties()[property] !== undefined) {\n        return nls.localize('config.property.duplicate', \"Cannot register '{0}'. This property is already registered.\", property);\n    }\n    if (schema.policy?.name && configurationRegistry.getPolicyConfigurations().get(schema.policy?.name) !== undefined) {\n        return nls.localize('config.policy.duplicate', \"Cannot register '{0}'. The associated policy {1} is already registered with {2}.\", property, schema.policy?.name, configurationRegistry.getPolicyConfigurations().get(schema.policy?.name));\n    }\n    return null;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isChrome, isEdge, isFirefox, isLinux, isMacintosh, isSafari, isWeb, isWindows } from '../../../base/common/platform.js';\nimport { isFalsyOrWhitespace } from '../../../base/common/strings.js';\nimport { Scanner } from './scanner.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { localize } from '../../../nls.js';\nconst CONSTANT_VALUES = new Map();\nCONSTANT_VALUES.set('false', false);\nCONSTANT_VALUES.set('true', true);\nCONSTANT_VALUES.set('isMac', isMacintosh);\nCONSTANT_VALUES.set('isLinux', isLinux);\nCONSTANT_VALUES.set('isWindows', isWindows);\nCONSTANT_VALUES.set('isWeb', isWeb);\nCONSTANT_VALUES.set('isMacNative', isMacintosh && !isWeb);\nCONSTANT_VALUES.set('isEdge', isEdge);\nCONSTANT_VALUES.set('isFirefox', isFirefox);\nCONSTANT_VALUES.set('isChrome', isChrome);\nCONSTANT_VALUES.set('isSafari', isSafari);\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst defaultConfig = {\n    regexParsingWithErrorRecovery: true\n};\nconst errorEmptyString = localize('contextkey.parser.error.emptyString', \"Empty context key expression\");\nconst hintEmptyString = localize('contextkey.parser.error.emptyString.hint', \"Did you forget to write an expression? You can also put 'false' or 'true' to always evaluate to false or true, respectively.\");\nconst errorNoInAfterNot = localize('contextkey.parser.error.noInAfterNot', \"'in' after 'not'.\");\nconst errorClosingParenthesis = localize('contextkey.parser.error.closingParenthesis', \"closing parenthesis ')'\");\nconst errorUnexpectedToken = localize('contextkey.parser.error.unexpectedToken', \"Unexpected token\");\nconst hintUnexpectedToken = localize('contextkey.parser.error.unexpectedToken.hint', \"Did you forget to put && or || before the token?\");\nconst errorUnexpectedEOF = localize('contextkey.parser.error.unexpectedEOF', \"Unexpected end of expression\");\nconst hintUnexpectedEOF = localize('contextkey.parser.error.unexpectedEOF.hint', \"Did you forget to put a context key?\");\n/**\n * A parser for context key expressions.\n *\n * Example:\n * ```ts\n * const parser = new Parser();\n * const expr = parser.parse('foo == \"bar\" && baz == true');\n *\n * if (expr === undefined) {\n * \t// there were lexing or parsing errors\n * \t// process lexing errors with `parser.lexingErrors`\n *  // process parsing errors with `parser.parsingErrors`\n * } else {\n * \t// expr is a valid expression\n * }\n * ```\n */\nexport class Parser {\n    // Note: this doesn't produce an exact syntax tree but a normalized one\n    // ContextKeyExpression's that we use as AST nodes do not expose constructors that do not normalize\n    static { this._parseError = new Error(); }\n    constructor(_config = defaultConfig) {\n        this._config = _config;\n        // lifetime note: `_scanner` lives as long as the parser does, i.e., is not reset between calls to `parse`\n        this._scanner = new Scanner();\n        // lifetime note: `_tokens`, `_current`, and `_parsingErrors` must be reset between calls to `parse`\n        this._tokens = [];\n        this._current = 0; // invariant: 0 <= this._current < this._tokens.length ; any incrementation of this value must first call `_isAtEnd`\n        this._parsingErrors = [];\n        this._flagsGYRe = /g|y/g;\n    }\n    /**\n     * Parse a context key expression.\n     *\n     * @param input the expression to parse\n     * @returns the parsed expression or `undefined` if there's an error - call `lexingErrors` and `parsingErrors` to see the errors\n     */\n    parse(input) {\n        if (input === '') {\n            this._parsingErrors.push({ message: errorEmptyString, offset: 0, lexeme: '', additionalInfo: hintEmptyString });\n            return undefined;\n        }\n        this._tokens = this._scanner.reset(input).scan();\n        // @ulugbekna: we do not stop parsing if there are lexing errors to be able to reconstruct regexes with unescaped slashes; TODO@ulugbekna: make this respect config option for recovery\n        this._current = 0;\n        this._parsingErrors = [];\n        try {\n            const expr = this._expr();\n            if (!this._isAtEnd()) {\n                const peek = this._peek();\n                const additionalInfo = peek.type === 17 /* TokenType.Str */ ? hintUnexpectedToken : undefined;\n                this._parsingErrors.push({ message: errorUnexpectedToken, offset: peek.offset, lexeme: Scanner.getLexeme(peek), additionalInfo });\n                throw Parser._parseError;\n            }\n            return expr;\n        }\n        catch (e) {\n            if (!(e === Parser._parseError)) {\n                throw e;\n            }\n            return undefined;\n        }\n    }\n    _expr() {\n        return this._or();\n    }\n    _or() {\n        const expr = [this._and()];\n        while (this._matchOne(16 /* TokenType.Or */)) {\n            const right = this._and();\n            expr.push(right);\n        }\n        return expr.length === 1 ? expr[0] : ContextKeyExpr.or(...expr);\n    }\n    _and() {\n        const expr = [this._term()];\n        while (this._matchOne(15 /* TokenType.And */)) {\n            const right = this._term();\n            expr.push(right);\n        }\n        return expr.length === 1 ? expr[0] : ContextKeyExpr.and(...expr);\n    }\n    _term() {\n        if (this._matchOne(2 /* TokenType.Neg */)) {\n            const peek = this._peek();\n            switch (peek.type) {\n                case 11 /* TokenType.True */:\n                    this._advance();\n                    return ContextKeyFalseExpr.INSTANCE;\n                case 12 /* TokenType.False */:\n                    this._advance();\n                    return ContextKeyTrueExpr.INSTANCE;\n                case 0 /* TokenType.LParen */: {\n                    this._advance();\n                    const expr = this._expr();\n                    this._consume(1 /* TokenType.RParen */, errorClosingParenthesis);\n                    return expr?.negate();\n                }\n                case 17 /* TokenType.Str */:\n                    this._advance();\n                    return ContextKeyNotExpr.create(peek.lexeme);\n                default:\n                    throw this._errExpectedButGot(`KEY | true | false | '(' expression ')'`, peek);\n            }\n        }\n        return this._primary();\n    }\n    _primary() {\n        const peek = this._peek();\n        switch (peek.type) {\n            case 11 /* TokenType.True */:\n                this._advance();\n                return ContextKeyExpr.true();\n            case 12 /* TokenType.False */:\n                this._advance();\n                return ContextKeyExpr.false();\n            case 0 /* TokenType.LParen */: {\n                this._advance();\n                const expr = this._expr();\n                this._consume(1 /* TokenType.RParen */, errorClosingParenthesis);\n                return expr;\n            }\n            case 17 /* TokenType.Str */: {\n                // KEY\n                const key = peek.lexeme;\n                this._advance();\n                // =~ regex\n                if (this._matchOne(9 /* TokenType.RegexOp */)) {\n                    // @ulugbekna: we need to reconstruct the regex from the tokens because some extensions use unescaped slashes in regexes\n                    const expr = this._peek();\n                    if (!this._config.regexParsingWithErrorRecovery) {\n                        this._advance();\n                        if (expr.type !== 10 /* TokenType.RegexStr */) {\n                            throw this._errExpectedButGot(`REGEX`, expr);\n                        }\n                        const regexLexeme = expr.lexeme;\n                        const closingSlashIndex = regexLexeme.lastIndexOf('/');\n                        const flags = closingSlashIndex === regexLexeme.length - 1 ? undefined : this._removeFlagsGY(regexLexeme.substring(closingSlashIndex + 1));\n                        let regexp;\n                        try {\n                            regexp = new RegExp(regexLexeme.substring(1, closingSlashIndex), flags);\n                        }\n                        catch (e) {\n                            throw this._errExpectedButGot(`REGEX`, expr);\n                        }\n                        return ContextKeyRegexExpr.create(key, regexp);\n                    }\n                    switch (expr.type) {\n                        case 10 /* TokenType.RegexStr */:\n                        case 19 /* TokenType.Error */: { // also handle an ErrorToken in case of smth such as /(/file)/\n                            const lexemeReconstruction = [expr.lexeme]; // /REGEX/ or /REGEX/FLAGS\n                            this._advance();\n                            let followingToken = this._peek();\n                            let parenBalance = 0;\n                            for (let i = 0; i < expr.lexeme.length; i++) {\n                                if (expr.lexeme.charCodeAt(i) === 40 /* CharCode.OpenParen */) {\n                                    parenBalance++;\n                                }\n                                else if (expr.lexeme.charCodeAt(i) === 41 /* CharCode.CloseParen */) {\n                                    parenBalance--;\n                                }\n                            }\n                            while (!this._isAtEnd() && followingToken.type !== 15 /* TokenType.And */ && followingToken.type !== 16 /* TokenType.Or */) {\n                                switch (followingToken.type) {\n                                    case 0 /* TokenType.LParen */:\n                                        parenBalance++;\n                                        break;\n                                    case 1 /* TokenType.RParen */:\n                                        parenBalance--;\n                                        break;\n                                    case 10 /* TokenType.RegexStr */:\n                                    case 18 /* TokenType.QuotedStr */:\n                                        for (let i = 0; i < followingToken.lexeme.length; i++) {\n                                            if (followingToken.lexeme.charCodeAt(i) === 40 /* CharCode.OpenParen */) {\n                                                parenBalance++;\n                                            }\n                                            else if (expr.lexeme.charCodeAt(i) === 41 /* CharCode.CloseParen */) {\n                                                parenBalance--;\n                                            }\n                                        }\n                                }\n                                if (parenBalance < 0) {\n                                    break;\n                                }\n                                lexemeReconstruction.push(Scanner.getLexeme(followingToken));\n                                this._advance();\n                                followingToken = this._peek();\n                            }\n                            const regexLexeme = lexemeReconstruction.join('');\n                            const closingSlashIndex = regexLexeme.lastIndexOf('/');\n                            const flags = closingSlashIndex === regexLexeme.length - 1 ? undefined : this._removeFlagsGY(regexLexeme.substring(closingSlashIndex + 1));\n                            let regexp;\n                            try {\n                                regexp = new RegExp(regexLexeme.substring(1, closingSlashIndex), flags);\n                            }\n                            catch (e) {\n                                throw this._errExpectedButGot(`REGEX`, expr);\n                            }\n                            return ContextKeyExpr.regex(key, regexp);\n                        }\n                        case 18 /* TokenType.QuotedStr */: {\n                            const serializedValue = expr.lexeme;\n                            this._advance();\n                            // replicate old regex parsing behavior\n                            let regex = null;\n                            if (!isFalsyOrWhitespace(serializedValue)) {\n                                const start = serializedValue.indexOf('/');\n                                const end = serializedValue.lastIndexOf('/');\n                                if (start !== end && start >= 0) {\n                                    const value = serializedValue.slice(start + 1, end);\n                                    const caseIgnoreFlag = serializedValue[end + 1] === 'i' ? 'i' : '';\n                                    try {\n                                        regex = new RegExp(value, caseIgnoreFlag);\n                                    }\n                                    catch (_e) {\n                                        throw this._errExpectedButGot(`REGEX`, expr);\n                                    }\n                                }\n                            }\n                            if (regex === null) {\n                                throw this._errExpectedButGot('REGEX', expr);\n                            }\n                            return ContextKeyRegexExpr.create(key, regex);\n                        }\n                        default:\n                            throw this._errExpectedButGot('REGEX', this._peek());\n                    }\n                }\n                // [ 'not' 'in' value ]\n                if (this._matchOne(14 /* TokenType.Not */)) {\n                    this._consume(13 /* TokenType.In */, errorNoInAfterNot);\n                    const right = this._value();\n                    return ContextKeyExpr.notIn(key, right);\n                }\n                // [ ('==' | '!=' | '<' | '<=' | '>' | '>=' | 'in') value ]\n                const maybeOp = this._peek().type;\n                switch (maybeOp) {\n                    case 3 /* TokenType.Eq */: {\n                        this._advance();\n                        const right = this._value();\n                        if (this._previous().type === 18 /* TokenType.QuotedStr */) { // to preserve old parser behavior: \"foo == 'true'\" is preserved as \"foo == 'true'\", but \"foo == true\" is optimized as \"foo\"\n                            return ContextKeyExpr.equals(key, right);\n                        }\n                        switch (right) {\n                            case 'true':\n                                return ContextKeyExpr.has(key);\n                            case 'false':\n                                return ContextKeyExpr.not(key);\n                            default:\n                                return ContextKeyExpr.equals(key, right);\n                        }\n                    }\n                    case 4 /* TokenType.NotEq */: {\n                        this._advance();\n                        const right = this._value();\n                        if (this._previous().type === 18 /* TokenType.QuotedStr */) { // same as above with \"foo != 'true'\"\n                            return ContextKeyExpr.notEquals(key, right);\n                        }\n                        switch (right) {\n                            case 'true':\n                                return ContextKeyExpr.not(key);\n                            case 'false':\n                                return ContextKeyExpr.has(key);\n                            default:\n                                return ContextKeyExpr.notEquals(key, right);\n                        }\n                    }\n                    // TODO: ContextKeyExpr.smaller(key, right) accepts only `number` as `right` AND during eval of this node, we just eval to `false` if `right` is not a number\n                    // consequently, package.json linter should _warn_ the user if they're passing undesired things to ops\n                    case 5 /* TokenType.Lt */:\n                        this._advance();\n                        return ContextKeySmallerExpr.create(key, this._value());\n                    case 6 /* TokenType.LtEq */:\n                        this._advance();\n                        return ContextKeySmallerEqualsExpr.create(key, this._value());\n                    case 7 /* TokenType.Gt */:\n                        this._advance();\n                        return ContextKeyGreaterExpr.create(key, this._value());\n                    case 8 /* TokenType.GtEq */:\n                        this._advance();\n                        return ContextKeyGreaterEqualsExpr.create(key, this._value());\n                    case 13 /* TokenType.In */:\n                        this._advance();\n                        return ContextKeyExpr.in(key, this._value());\n                    default:\n                        return ContextKeyExpr.has(key);\n                }\n            }\n            case 20 /* TokenType.EOF */:\n                this._parsingErrors.push({ message: errorUnexpectedEOF, offset: peek.offset, lexeme: '', additionalInfo: hintUnexpectedEOF });\n                throw Parser._parseError;\n            default:\n                throw this._errExpectedButGot(`true | false | KEY \\n\\t| KEY '=~' REGEX \\n\\t| KEY ('==' | '!=' | '<' | '<=' | '>' | '>=' | 'in' | 'not' 'in') value`, this._peek());\n        }\n    }\n    _value() {\n        const token = this._peek();\n        switch (token.type) {\n            case 17 /* TokenType.Str */:\n            case 18 /* TokenType.QuotedStr */:\n                this._advance();\n                return token.lexeme;\n            case 11 /* TokenType.True */:\n                this._advance();\n                return 'true';\n            case 12 /* TokenType.False */:\n                this._advance();\n                return 'false';\n            case 13 /* TokenType.In */: // we support `in` as a value, e.g., \"when\": \"languageId == in\" - exists in existing extensions\n                this._advance();\n                return 'in';\n            default:\n                // this allows \"when\": \"foo == \" which's used by existing extensions\n                // we do not call `_advance` on purpose - we don't want to eat unintended tokens\n                return '';\n        }\n    }\n    _removeFlagsGY(flags) {\n        return flags.replaceAll(this._flagsGYRe, '');\n    }\n    // careful: this can throw if current token is the initial one (ie index = 0)\n    _previous() {\n        return this._tokens[this._current - 1];\n    }\n    _matchOne(token) {\n        if (this._check(token)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    }\n    _advance() {\n        if (!this._isAtEnd()) {\n            this._current++;\n        }\n        return this._previous();\n    }\n    _consume(type, message) {\n        if (this._check(type)) {\n            return this._advance();\n        }\n        throw this._errExpectedButGot(message, this._peek());\n    }\n    _errExpectedButGot(expected, got, additionalInfo) {\n        const message = localize('contextkey.parser.error.expectedButGot', \"Expected: {0}\\nReceived: '{1}'.\", expected, Scanner.getLexeme(got));\n        const offset = got.offset;\n        const lexeme = Scanner.getLexeme(got);\n        this._parsingErrors.push({ message, offset, lexeme, additionalInfo });\n        return Parser._parseError;\n    }\n    _check(type) {\n        return this._peek().type === type;\n    }\n    _peek() {\n        return this._tokens[this._current];\n    }\n    _isAtEnd() {\n        return this._peek().type === 20 /* TokenType.EOF */;\n    }\n}\nexport class ContextKeyExpr {\n    static false() {\n        return ContextKeyFalseExpr.INSTANCE;\n    }\n    static true() {\n        return ContextKeyTrueExpr.INSTANCE;\n    }\n    static has(key) {\n        return ContextKeyDefinedExpr.create(key);\n    }\n    static equals(key, value) {\n        return ContextKeyEqualsExpr.create(key, value);\n    }\n    static notEquals(key, value) {\n        return ContextKeyNotEqualsExpr.create(key, value);\n    }\n    static regex(key, value) {\n        return ContextKeyRegexExpr.create(key, value);\n    }\n    static in(key, value) {\n        return ContextKeyInExpr.create(key, value);\n    }\n    static notIn(key, value) {\n        return ContextKeyNotInExpr.create(key, value);\n    }\n    static not(key) {\n        return ContextKeyNotExpr.create(key);\n    }\n    static and(...expr) {\n        return ContextKeyAndExpr.create(expr, null, true);\n    }\n    static or(...expr) {\n        return ContextKeyOrExpr.create(expr, null, true);\n    }\n    static { this._parser = new Parser({ regexParsingWithErrorRecovery: false }); }\n    static deserialize(serialized) {\n        if (serialized === undefined || serialized === null) { // an empty string needs to be handled by the parser to get a corresponding parsing error reported\n            return undefined;\n        }\n        const expr = this._parser.parse(serialized);\n        return expr;\n    }\n}\nexport function expressionsAreEqualWithConstantSubstitution(a, b) {\n    const aExpr = a ? a.substituteConstants() : undefined;\n    const bExpr = b ? b.substituteConstants() : undefined;\n    if (!aExpr && !bExpr) {\n        return true;\n    }\n    if (!aExpr || !bExpr) {\n        return false;\n    }\n    return aExpr.equals(bExpr);\n}\nfunction cmp(a, b) {\n    return a.cmp(b);\n}\nexport class ContextKeyFalseExpr {\n    static { this.INSTANCE = new ContextKeyFalseExpr(); }\n    constructor() {\n        this.type = 0 /* ContextKeyExprType.False */;\n    }\n    cmp(other) {\n        return this.type - other.type;\n    }\n    equals(other) {\n        return (other.type === this.type);\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return false;\n    }\n    serialize() {\n        return 'false';\n    }\n    keys() {\n        return [];\n    }\n    negate() {\n        return ContextKeyTrueExpr.INSTANCE;\n    }\n}\nexport class ContextKeyTrueExpr {\n    static { this.INSTANCE = new ContextKeyTrueExpr(); }\n    constructor() {\n        this.type = 1 /* ContextKeyExprType.True */;\n    }\n    cmp(other) {\n        return this.type - other.type;\n    }\n    equals(other) {\n        return (other.type === this.type);\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return true;\n    }\n    serialize() {\n        return 'true';\n    }\n    keys() {\n        return [];\n    }\n    negate() {\n        return ContextKeyFalseExpr.INSTANCE;\n    }\n}\nexport class ContextKeyDefinedExpr {\n    static create(key, negated = null) {\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            return constantValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n        }\n        return new ContextKeyDefinedExpr(key, negated);\n    }\n    constructor(key, negated) {\n        this.key = key;\n        this.negated = negated;\n        this.type = 2 /* ContextKeyExprType.Defined */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp1(this.key, other.key);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            return constantValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n        }\n        return this;\n    }\n    evaluate(context) {\n        return (!!context.getValue(this.key));\n    }\n    serialize() {\n        return this.key;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotExpr.create(this.key, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyEqualsExpr {\n    static create(key, value, negated = null) {\n        if (typeof value === 'boolean') {\n            return (value ? ContextKeyDefinedExpr.create(key, negated) : ContextKeyNotExpr.create(key, negated));\n        }\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            const trueValue = constantValue ? 'true' : 'false';\n            return (value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n        }\n        return new ContextKeyEqualsExpr(key, value, negated);\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 4 /* ContextKeyExprType.Equals */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            const trueValue = constantValue ? 'true' : 'false';\n            return (this.value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n        }\n        return this;\n    }\n    evaluate(context) {\n        // Intentional ==\n        // eslint-disable-next-line eqeqeq\n        return (context.getValue(this.key) == this.value);\n    }\n    serialize() {\n        return `${this.key} == '${this.value}'`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyInExpr {\n    static create(key, valueKey) {\n        return new ContextKeyInExpr(key, valueKey);\n    }\n    constructor(key, valueKey) {\n        this.key = key;\n        this.valueKey = valueKey;\n        this.type = 10 /* ContextKeyExprType.In */;\n        this.negated = null;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.valueKey, other.key, other.valueKey);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.valueKey === other.valueKey);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        const source = context.getValue(this.valueKey);\n        const item = context.getValue(this.key);\n        if (Array.isArray(source)) {\n            return source.includes(item);\n        }\n        if (typeof item === 'string' && typeof source === 'object' && source !== null) {\n            return hasOwnProperty.call(source, item);\n        }\n        return false;\n    }\n    serialize() {\n        return `${this.key} in '${this.valueKey}'`;\n    }\n    keys() {\n        return [this.key, this.valueKey];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotInExpr.create(this.key, this.valueKey);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyNotInExpr {\n    static create(key, valueKey) {\n        return new ContextKeyNotInExpr(key, valueKey);\n    }\n    constructor(key, valueKey) {\n        this.key = key;\n        this.valueKey = valueKey;\n        this.type = 11 /* ContextKeyExprType.NotIn */;\n        this._negated = ContextKeyInExpr.create(key, valueKey);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return this._negated.cmp(other._negated);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return this._negated.equals(other._negated);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return !this._negated.evaluate(context);\n    }\n    serialize() {\n        return `${this.key} not in '${this.valueKey}'`;\n    }\n    keys() {\n        return this._negated.keys();\n    }\n    negate() {\n        return this._negated;\n    }\n}\nexport class ContextKeyNotEqualsExpr {\n    static create(key, value, negated = null) {\n        if (typeof value === 'boolean') {\n            if (value) {\n                return ContextKeyNotExpr.create(key, negated);\n            }\n            return ContextKeyDefinedExpr.create(key, negated);\n        }\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            const falseValue = constantValue ? 'true' : 'false';\n            return (value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return new ContextKeyNotEqualsExpr(key, value, negated);\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 5 /* ContextKeyExprType.NotEquals */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            const falseValue = constantValue ? 'true' : 'false';\n            return (this.value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return this;\n    }\n    evaluate(context) {\n        // Intentional !=\n        // eslint-disable-next-line eqeqeq\n        return (context.getValue(this.key) != this.value);\n    }\n    serialize() {\n        return `${this.key} != '${this.value}'`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyNotExpr {\n    static create(key, negated = null) {\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            return (constantValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return new ContextKeyNotExpr(key, negated);\n    }\n    constructor(key, negated) {\n        this.key = key;\n        this.negated = negated;\n        this.type = 3 /* ContextKeyExprType.Not */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp1(this.key, other.key);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            return (constantValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return this;\n    }\n    evaluate(context) {\n        return (!context.getValue(this.key));\n    }\n    serialize() {\n        return `!${this.key}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyDefinedExpr.create(this.key, this);\n        }\n        return this.negated;\n    }\n}\nfunction withFloatOrStr(value, callback) {\n    if (typeof value === 'string') {\n        const n = parseFloat(value);\n        if (!isNaN(n)) {\n            value = n;\n        }\n    }\n    if (typeof value === 'string' || typeof value === 'number') {\n        return callback(value);\n    }\n    return ContextKeyFalseExpr.INSTANCE;\n}\nexport class ContextKeyGreaterExpr {\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeyGreaterExpr(key, value, negated));\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 12 /* ContextKeyExprType.Greater */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) > this.value);\n    }\n    serialize() {\n        return `${this.key} > ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeySmallerEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyGreaterEqualsExpr {\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeyGreaterEqualsExpr(key, value, negated));\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 13 /* ContextKeyExprType.GreaterEquals */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) >= this.value);\n    }\n    serialize() {\n        return `${this.key} >= ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeySmallerExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeySmallerExpr {\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeySmallerExpr(key, value, negated));\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 14 /* ContextKeyExprType.Smaller */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) < this.value);\n    }\n    serialize() {\n        return `${this.key} < ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyGreaterEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeySmallerEqualsExpr {\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeySmallerEqualsExpr(key, value, negated));\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 15 /* ContextKeyExprType.SmallerEquals */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) <= this.value);\n    }\n    serialize() {\n        return `${this.key} <= ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyGreaterExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyRegexExpr {\n    static create(key, regexp) {\n        return new ContextKeyRegexExpr(key, regexp);\n    }\n    constructor(key, regexp) {\n        this.key = key;\n        this.regexp = regexp;\n        this.type = 7 /* ContextKeyExprType.Regex */;\n        this.negated = null;\n        //\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        if (this.key < other.key) {\n            return -1;\n        }\n        if (this.key > other.key) {\n            return 1;\n        }\n        const thisSource = this.regexp ? this.regexp.source : '';\n        const otherSource = other.regexp ? other.regexp.source : '';\n        if (thisSource < otherSource) {\n            return -1;\n        }\n        if (thisSource > otherSource) {\n            return 1;\n        }\n        return 0;\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            const thisSource = this.regexp ? this.regexp.source : '';\n            const otherSource = other.regexp ? other.regexp.source : '';\n            return (this.key === other.key && thisSource === otherSource);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        const value = context.getValue(this.key);\n        return this.regexp ? this.regexp.test(value) : false;\n    }\n    serialize() {\n        const value = this.regexp\n            ? `/${this.regexp.source}/${this.regexp.flags}`\n            : '/invalid/';\n        return `${this.key} =~ ${value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotRegexExpr.create(this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyNotRegexExpr {\n    static create(actual) {\n        return new ContextKeyNotRegexExpr(actual);\n    }\n    constructor(_actual) {\n        this._actual = _actual;\n        this.type = 8 /* ContextKeyExprType.NotRegex */;\n        //\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return this._actual.cmp(other._actual);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return this._actual.equals(other._actual);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return !this._actual.evaluate(context);\n    }\n    serialize() {\n        return `!(${this._actual.serialize()})`;\n    }\n    keys() {\n        return this._actual.keys();\n    }\n    negate() {\n        return this._actual;\n    }\n}\n/**\n * @returns the same instance if nothing changed.\n */\nfunction eliminateConstantsInArray(arr) {\n    // Allocate array only if there is a difference\n    let newArr = null;\n    for (let i = 0, len = arr.length; i < len; i++) {\n        const newExpr = arr[i].substituteConstants();\n        if (arr[i] !== newExpr) {\n            // something has changed!\n            // allocate array on first difference\n            if (newArr === null) {\n                newArr = [];\n                for (let j = 0; j < i; j++) {\n                    newArr[j] = arr[j];\n                }\n            }\n        }\n        if (newArr !== null) {\n            newArr[i] = newExpr;\n        }\n    }\n    if (newArr === null) {\n        return arr;\n    }\n    return newArr;\n}\nexport class ContextKeyAndExpr {\n    static create(_expr, negated, extraRedundantCheck) {\n        return ContextKeyAndExpr._normalizeArr(_expr, negated, extraRedundantCheck);\n    }\n    constructor(expr, negated) {\n        this.expr = expr;\n        this.negated = negated;\n        this.type = 6 /* ContextKeyExprType.And */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        if (this.expr.length < other.expr.length) {\n            return -1;\n        }\n        if (this.expr.length > other.expr.length) {\n            return 1;\n        }\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            const r = cmp(this.expr[i], other.expr[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return 0;\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            if (this.expr.length !== other.expr.length) {\n                return false;\n            }\n            for (let i = 0, len = this.expr.length; i < len; i++) {\n                if (!this.expr[i].equals(other.expr[i])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    substituteConstants() {\n        const exprArr = eliminateConstantsInArray(this.expr);\n        if (exprArr === this.expr) {\n            // no change\n            return this;\n        }\n        return ContextKeyAndExpr.create(exprArr, this.negated, false);\n    }\n    evaluate(context) {\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            if (!this.expr[i].evaluate(context)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static _normalizeArr(arr, negated, extraRedundantCheck) {\n        const expr = [];\n        let hasTrue = false;\n        for (const e of arr) {\n            if (!e) {\n                continue;\n            }\n            if (e.type === 1 /* ContextKeyExprType.True */) {\n                // anything && true ==> anything\n                hasTrue = true;\n                continue;\n            }\n            if (e.type === 0 /* ContextKeyExprType.False */) {\n                // anything && false ==> false\n                return ContextKeyFalseExpr.INSTANCE;\n            }\n            if (e.type === 6 /* ContextKeyExprType.And */) {\n                expr.push(...e.expr);\n                continue;\n            }\n            expr.push(e);\n        }\n        if (expr.length === 0 && hasTrue) {\n            return ContextKeyTrueExpr.INSTANCE;\n        }\n        if (expr.length === 0) {\n            return undefined;\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        expr.sort(cmp);\n        // eliminate duplicate terms\n        for (let i = 1; i < expr.length; i++) {\n            if (expr[i - 1].equals(expr[i])) {\n                expr.splice(i, 1);\n                i--;\n            }\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // We must distribute any OR expression because we don't support parens\n        // OR extensions will be at the end (due to sorting rules)\n        while (expr.length > 1) {\n            const lastElement = expr[expr.length - 1];\n            if (lastElement.type !== 9 /* ContextKeyExprType.Or */) {\n                break;\n            }\n            // pop the last element\n            expr.pop();\n            // pop the second to last element\n            const secondToLastElement = expr.pop();\n            const isFinished = (expr.length === 0);\n            // distribute `lastElement` over `secondToLastElement`\n            const resultElement = ContextKeyOrExpr.create(lastElement.expr.map(el => ContextKeyAndExpr.create([el, secondToLastElement], null, extraRedundantCheck)), null, isFinished);\n            if (resultElement) {\n                expr.push(resultElement);\n                expr.sort(cmp);\n            }\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // resolve false AND expressions\n        if (extraRedundantCheck) {\n            for (let i = 0; i < expr.length; i++) {\n                for (let j = i + 1; j < expr.length; j++) {\n                    if (expr[i].negate().equals(expr[j])) {\n                        // A && !A case\n                        return ContextKeyFalseExpr.INSTANCE;\n                    }\n                }\n            }\n            if (expr.length === 1) {\n                return expr[0];\n            }\n        }\n        return new ContextKeyAndExpr(expr, negated);\n    }\n    serialize() {\n        return this.expr.map(e => e.serialize()).join(' && ');\n    }\n    keys() {\n        const result = [];\n        for (const expr of this.expr) {\n            result.push(...expr.keys());\n        }\n        return result;\n    }\n    negate() {\n        if (!this.negated) {\n            const result = [];\n            for (const expr of this.expr) {\n                result.push(expr.negate());\n            }\n            this.negated = ContextKeyOrExpr.create(result, this, true);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyOrExpr {\n    static create(_expr, negated, extraRedundantCheck) {\n        return ContextKeyOrExpr._normalizeArr(_expr, negated, extraRedundantCheck);\n    }\n    constructor(expr, negated) {\n        this.expr = expr;\n        this.negated = negated;\n        this.type = 9 /* ContextKeyExprType.Or */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        if (this.expr.length < other.expr.length) {\n            return -1;\n        }\n        if (this.expr.length > other.expr.length) {\n            return 1;\n        }\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            const r = cmp(this.expr[i], other.expr[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return 0;\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            if (this.expr.length !== other.expr.length) {\n                return false;\n            }\n            for (let i = 0, len = this.expr.length; i < len; i++) {\n                if (!this.expr[i].equals(other.expr[i])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    substituteConstants() {\n        const exprArr = eliminateConstantsInArray(this.expr);\n        if (exprArr === this.expr) {\n            // no change\n            return this;\n        }\n        return ContextKeyOrExpr.create(exprArr, this.negated, false);\n    }\n    evaluate(context) {\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            if (this.expr[i].evaluate(context)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    static _normalizeArr(arr, negated, extraRedundantCheck) {\n        let expr = [];\n        let hasFalse = false;\n        if (arr) {\n            for (let i = 0, len = arr.length; i < len; i++) {\n                const e = arr[i];\n                if (!e) {\n                    continue;\n                }\n                if (e.type === 0 /* ContextKeyExprType.False */) {\n                    // anything || false ==> anything\n                    hasFalse = true;\n                    continue;\n                }\n                if (e.type === 1 /* ContextKeyExprType.True */) {\n                    // anything || true ==> true\n                    return ContextKeyTrueExpr.INSTANCE;\n                }\n                if (e.type === 9 /* ContextKeyExprType.Or */) {\n                    expr = expr.concat(e.expr);\n                    continue;\n                }\n                expr.push(e);\n            }\n            if (expr.length === 0 && hasFalse) {\n                return ContextKeyFalseExpr.INSTANCE;\n            }\n            expr.sort(cmp);\n        }\n        if (expr.length === 0) {\n            return undefined;\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // eliminate duplicate terms\n        for (let i = 1; i < expr.length; i++) {\n            if (expr[i - 1].equals(expr[i])) {\n                expr.splice(i, 1);\n                i--;\n            }\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // resolve true OR expressions\n        if (extraRedundantCheck) {\n            for (let i = 0; i < expr.length; i++) {\n                for (let j = i + 1; j < expr.length; j++) {\n                    if (expr[i].negate().equals(expr[j])) {\n                        // A || !A case\n                        return ContextKeyTrueExpr.INSTANCE;\n                    }\n                }\n            }\n            if (expr.length === 1) {\n                return expr[0];\n            }\n        }\n        return new ContextKeyOrExpr(expr, negated);\n    }\n    serialize() {\n        return this.expr.map(e => e.serialize()).join(' || ');\n    }\n    keys() {\n        const result = [];\n        for (const expr of this.expr) {\n            result.push(...expr.keys());\n        }\n        return result;\n    }\n    negate() {\n        if (!this.negated) {\n            const result = [];\n            for (const expr of this.expr) {\n                result.push(expr.negate());\n            }\n            // We don't support parens, so here we distribute the AND over the OR terminals\n            // We always take the first 2 AND pairs and distribute them\n            while (result.length > 1) {\n                const LEFT = result.shift();\n                const RIGHT = result.shift();\n                const all = [];\n                for (const left of getTerminals(LEFT)) {\n                    for (const right of getTerminals(RIGHT)) {\n                        all.push(ContextKeyAndExpr.create([left, right], null, false));\n                    }\n                }\n                result.unshift(ContextKeyOrExpr.create(all, null, false));\n            }\n            this.negated = ContextKeyOrExpr.create(result, this, true);\n        }\n        return this.negated;\n    }\n}\nexport class RawContextKey extends ContextKeyDefinedExpr {\n    static { this._info = []; }\n    static all() {\n        return RawContextKey._info.values();\n    }\n    constructor(key, defaultValue, metaOrHide) {\n        super(key, null);\n        this._defaultValue = defaultValue;\n        // collect all context keys into a central place\n        if (typeof metaOrHide === 'object') {\n            RawContextKey._info.push({ ...metaOrHide, key });\n        }\n        else if (metaOrHide !== true) {\n            RawContextKey._info.push({ key, description: metaOrHide, type: defaultValue !== null && defaultValue !== undefined ? typeof defaultValue : undefined });\n        }\n    }\n    bindTo(target) {\n        return target.createKey(this.key, this._defaultValue);\n    }\n    getValue(target) {\n        return target.getContextKeyValue(this.key);\n    }\n    toNegated() {\n        return this.negate();\n    }\n    isEqualTo(value) {\n        return ContextKeyEqualsExpr.create(this.key, value);\n    }\n}\nexport const IContextKeyService = createDecorator('contextKeyService');\nfunction cmp1(key1, key2) {\n    if (key1 < key2) {\n        return -1;\n    }\n    if (key1 > key2) {\n        return 1;\n    }\n    return 0;\n}\nfunction cmp2(key1, value1, key2, value2) {\n    if (key1 < key2) {\n        return -1;\n    }\n    if (key1 > key2) {\n        return 1;\n    }\n    if (value1 < value2) {\n        return -1;\n    }\n    if (value1 > value2) {\n        return 1;\n    }\n    return 0;\n}\n/**\n * Returns true if it is provable `p` implies `q`.\n */\nexport function implies(p, q) {\n    if (p.type === 0 /* ContextKeyExprType.False */ || q.type === 1 /* ContextKeyExprType.True */) {\n        // false implies anything\n        // anything implies true\n        return true;\n    }\n    if (p.type === 9 /* ContextKeyExprType.Or */) {\n        if (q.type === 9 /* ContextKeyExprType.Or */) {\n            // `a || b || c` can only imply something like `a || b || c || d`\n            return allElementsIncluded(p.expr, q.expr);\n        }\n        return false;\n    }\n    if (q.type === 9 /* ContextKeyExprType.Or */) {\n        for (const element of q.expr) {\n            if (implies(p, element)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (p.type === 6 /* ContextKeyExprType.And */) {\n        if (q.type === 6 /* ContextKeyExprType.And */) {\n            // `a && b && c` implies `a && c`\n            return allElementsIncluded(q.expr, p.expr);\n        }\n        for (const element of p.expr) {\n            if (implies(element, q)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    return p.equals(q);\n}\n/**\n * Returns true if all elements in `p` are also present in `q`.\n * The two arrays are assumed to be sorted\n */\nfunction allElementsIncluded(p, q) {\n    let pIndex = 0;\n    let qIndex = 0;\n    while (pIndex < p.length && qIndex < q.length) {\n        const cmp = p[pIndex].cmp(q[qIndex]);\n        if (cmp < 0) {\n            // an element from `p` is missing from `q`\n            return false;\n        }\n        else if (cmp === 0) {\n            pIndex++;\n            qIndex++;\n        }\n        else {\n            qIndex++;\n        }\n    }\n    return (pIndex === p.length);\n}\nfunction getTerminals(node) {\n    if (node.type === 9 /* ContextKeyExprType.Or */) {\n        return node.expr;\n    }\n    return [node];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { illegalState } from '../../../base/common/errors.js';\nimport { localize } from '../../../nls.js';\nfunction hintDidYouMean(...meant) {\n    switch (meant.length) {\n        case 1:\n            return localize('contextkey.scanner.hint.didYouMean1', \"Did you mean {0}?\", meant[0]);\n        case 2:\n            return localize('contextkey.scanner.hint.didYouMean2', \"Did you mean {0} or {1}?\", meant[0], meant[1]);\n        case 3:\n            return localize('contextkey.scanner.hint.didYouMean3', \"Did you mean {0}, {1} or {2}?\", meant[0], meant[1], meant[2]);\n        default: // we just don't expect that many\n            return undefined;\n    }\n}\nconst hintDidYouForgetToOpenOrCloseQuote = localize('contextkey.scanner.hint.didYouForgetToOpenOrCloseQuote', \"Did you forget to open or close the quote?\");\nconst hintDidYouForgetToEscapeSlash = localize('contextkey.scanner.hint.didYouForgetToEscapeSlash', \"Did you forget to escape the '/' (slash) character? Put two backslashes before it to escape, e.g., '\\\\\\\\/\\'.\");\n/**\n * A simple scanner for context keys.\n *\n * Example:\n *\n * ```ts\n * const scanner = new Scanner().reset('resourceFileName =~ /docker/ && !config.docker.enabled');\n * const tokens = [...scanner];\n * if (scanner.errorTokens.length > 0) {\n *     scanner.errorTokens.forEach(err => console.error(`Unexpected token at ${err.offset}: ${err.lexeme}\\nHint: ${err.additional}`));\n * } else {\n *     // process tokens\n * }\n * ```\n */\nexport class Scanner {\n    constructor() {\n        this._input = '';\n        this._start = 0;\n        this._current = 0;\n        this._tokens = [];\n        this._errors = [];\n        // u - unicode, y - sticky // TODO@ulugbekna: we accept double quotes as part of the string rather than as a delimiter (to preserve old parser's behavior)\n        this.stringRe = /[a-zA-Z0-9_<>\\-\\./\\\\:\\*\\?\\+\\[\\]\\^,#@;\"%\\$\\p{L}-]+/uy;\n    }\n    static getLexeme(token) {\n        switch (token.type) {\n            case 0 /* TokenType.LParen */:\n                return '(';\n            case 1 /* TokenType.RParen */:\n                return ')';\n            case 2 /* TokenType.Neg */:\n                return '!';\n            case 3 /* TokenType.Eq */:\n                return token.isTripleEq ? '===' : '==';\n            case 4 /* TokenType.NotEq */:\n                return token.isTripleEq ? '!==' : '!=';\n            case 5 /* TokenType.Lt */:\n                return '<';\n            case 6 /* TokenType.LtEq */:\n                return '<=';\n            case 7 /* TokenType.Gt */:\n                return '>=';\n            case 8 /* TokenType.GtEq */:\n                return '>=';\n            case 9 /* TokenType.RegexOp */:\n                return '=~';\n            case 10 /* TokenType.RegexStr */:\n                return token.lexeme;\n            case 11 /* TokenType.True */:\n                return 'true';\n            case 12 /* TokenType.False */:\n                return 'false';\n            case 13 /* TokenType.In */:\n                return 'in';\n            case 14 /* TokenType.Not */:\n                return 'not';\n            case 15 /* TokenType.And */:\n                return '&&';\n            case 16 /* TokenType.Or */:\n                return '||';\n            case 17 /* TokenType.Str */:\n                return token.lexeme;\n            case 18 /* TokenType.QuotedStr */:\n                return token.lexeme;\n            case 19 /* TokenType.Error */:\n                return token.lexeme;\n            case 20 /* TokenType.EOF */:\n                return 'EOF';\n            default:\n                throw illegalState(`unhandled token type: ${JSON.stringify(token)}; have you forgotten to add a case?`);\n        }\n    }\n    static { this._regexFlags = new Set(['i', 'g', 's', 'm', 'y', 'u'].map(ch => ch.charCodeAt(0))); }\n    static { this._keywords = new Map([\n        ['not', 14 /* TokenType.Not */],\n        ['in', 13 /* TokenType.In */],\n        ['false', 12 /* TokenType.False */],\n        ['true', 11 /* TokenType.True */],\n    ]); }\n    reset(value) {\n        this._input = value;\n        this._start = 0;\n        this._current = 0;\n        this._tokens = [];\n        this._errors = [];\n        return this;\n    }\n    scan() {\n        while (!this._isAtEnd()) {\n            this._start = this._current;\n            const ch = this._advance();\n            switch (ch) {\n                case 40 /* CharCode.OpenParen */:\n                    this._addToken(0 /* TokenType.LParen */);\n                    break;\n                case 41 /* CharCode.CloseParen */:\n                    this._addToken(1 /* TokenType.RParen */);\n                    break;\n                case 33 /* CharCode.ExclamationMark */:\n                    if (this._match(61 /* CharCode.Equals */)) {\n                        const isTripleEq = this._match(61 /* CharCode.Equals */); // eat last `=` if `!==`\n                        this._tokens.push({ type: 4 /* TokenType.NotEq */, offset: this._start, isTripleEq });\n                    }\n                    else {\n                        this._addToken(2 /* TokenType.Neg */);\n                    }\n                    break;\n                case 39 /* CharCode.SingleQuote */:\n                    this._quotedString();\n                    break;\n                case 47 /* CharCode.Slash */:\n                    this._regex();\n                    break;\n                case 61 /* CharCode.Equals */:\n                    if (this._match(61 /* CharCode.Equals */)) { // support `==`\n                        const isTripleEq = this._match(61 /* CharCode.Equals */); // eat last `=` if `===`\n                        this._tokens.push({ type: 3 /* TokenType.Eq */, offset: this._start, isTripleEq });\n                    }\n                    else if (this._match(126 /* CharCode.Tilde */)) {\n                        this._addToken(9 /* TokenType.RegexOp */);\n                    }\n                    else {\n                        this._error(hintDidYouMean('==', '=~'));\n                    }\n                    break;\n                case 60 /* CharCode.LessThan */:\n                    this._addToken(this._match(61 /* CharCode.Equals */) ? 6 /* TokenType.LtEq */ : 5 /* TokenType.Lt */);\n                    break;\n                case 62 /* CharCode.GreaterThan */:\n                    this._addToken(this._match(61 /* CharCode.Equals */) ? 8 /* TokenType.GtEq */ : 7 /* TokenType.Gt */);\n                    break;\n                case 38 /* CharCode.Ampersand */:\n                    if (this._match(38 /* CharCode.Ampersand */)) {\n                        this._addToken(15 /* TokenType.And */);\n                    }\n                    else {\n                        this._error(hintDidYouMean('&&'));\n                    }\n                    break;\n                case 124 /* CharCode.Pipe */:\n                    if (this._match(124 /* CharCode.Pipe */)) {\n                        this._addToken(16 /* TokenType.Or */);\n                    }\n                    else {\n                        this._error(hintDidYouMean('||'));\n                    }\n                    break;\n                // TODO@ulugbekna: 1) rewrite using a regex 2) reconsider what characters are considered whitespace, including unicode, nbsp, etc.\n                case 32 /* CharCode.Space */:\n                case 13 /* CharCode.CarriageReturn */:\n                case 9 /* CharCode.Tab */:\n                case 10 /* CharCode.LineFeed */:\n                case 160 /* CharCode.NoBreakSpace */: // &nbsp\n                    break;\n                default:\n                    this._string();\n            }\n        }\n        this._start = this._current;\n        this._addToken(20 /* TokenType.EOF */);\n        return Array.from(this._tokens);\n    }\n    _match(expected) {\n        if (this._isAtEnd()) {\n            return false;\n        }\n        if (this._input.charCodeAt(this._current) !== expected) {\n            return false;\n        }\n        this._current++;\n        return true;\n    }\n    _advance() {\n        return this._input.charCodeAt(this._current++);\n    }\n    _peek() {\n        return this._isAtEnd() ? 0 /* CharCode.Null */ : this._input.charCodeAt(this._current);\n    }\n    _addToken(type) {\n        this._tokens.push({ type, offset: this._start });\n    }\n    _error(additional) {\n        const offset = this._start;\n        const lexeme = this._input.substring(this._start, this._current);\n        const errToken = { type: 19 /* TokenType.Error */, offset: this._start, lexeme };\n        this._errors.push({ offset, lexeme, additionalInfo: additional });\n        this._tokens.push(errToken);\n    }\n    _string() {\n        this.stringRe.lastIndex = this._start;\n        const match = this.stringRe.exec(this._input);\n        if (match) {\n            this._current = this._start + match[0].length;\n            const lexeme = this._input.substring(this._start, this._current);\n            const keyword = Scanner._keywords.get(lexeme);\n            if (keyword) {\n                this._addToken(keyword);\n            }\n            else {\n                this._tokens.push({ type: 17 /* TokenType.Str */, lexeme, offset: this._start });\n            }\n        }\n    }\n    // captures the lexeme without the leading and trailing '\n    _quotedString() {\n        while (this._peek() !== 39 /* CharCode.SingleQuote */ && !this._isAtEnd()) { // TODO@ulugbekna: add support for escaping ' ?\n            this._advance();\n        }\n        if (this._isAtEnd()) {\n            this._error(hintDidYouForgetToOpenOrCloseQuote);\n            return;\n        }\n        // consume the closing '\n        this._advance();\n        this._tokens.push({ type: 18 /* TokenType.QuotedStr */, lexeme: this._input.substring(this._start + 1, this._current - 1), offset: this._start + 1 });\n    }\n    /*\n     * Lexing a regex expression: /.../[igsmyu]*\n     * Based on https://github.com/microsoft/TypeScript/blob/9247ef115e617805983740ba795d7a8164babf89/src/compiler/scanner.ts#L2129-L2181\n     *\n     * Note that we want slashes within a regex to be escaped, e.g., /file:\\\\/\\\\/\\\\// should match `file:///`\n     */\n    _regex() {\n        let p = this._current;\n        let inEscape = false;\n        let inCharacterClass = false;\n        while (true) {\n            if (p >= this._input.length) {\n                this._current = p;\n                this._error(hintDidYouForgetToEscapeSlash);\n                return;\n            }\n            const ch = this._input.charCodeAt(p);\n            if (inEscape) { // parsing an escape character\n                inEscape = false;\n            }\n            else if (ch === 47 /* CharCode.Slash */ && !inCharacterClass) { // end of regex\n                p++;\n                break;\n            }\n            else if (ch === 91 /* CharCode.OpenSquareBracket */) {\n                inCharacterClass = true;\n            }\n            else if (ch === 92 /* CharCode.Backslash */) {\n                inEscape = true;\n            }\n            else if (ch === 93 /* CharCode.CloseSquareBracket */) {\n                inCharacterClass = false;\n            }\n            p++;\n        }\n        // Consume flags // TODO@ulugbekna: use regex instead\n        while (p < this._input.length && Scanner._regexFlags.has(this._input.charCodeAt(p))) {\n            p++;\n        }\n        this._current = p;\n        const lexeme = this._input.substring(this._start, this._current);\n        this._tokens.push({ type: 10 /* TokenType.RegexStr */, lexeme, offset: this._start });\n    }\n    _isAtEnd() {\n        return this._current >= this._input.length;\n    }\n}\n","import { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IEnvironmentService = createDecorator('environmentService');\n","//#endregion\n//#region Utilities\nexport var FileKind;\n(function (FileKind) {\n    FileKind[FileKind[\"FILE\"] = 0] = \"FILE\";\n    FileKind[FileKind[\"FOLDER\"] = 1] = \"FOLDER\";\n    FileKind[FileKind[\"ROOT_FOLDER\"] = 2] = \"ROOT_FOLDER\";\n})(FileKind || (FileKind = {}));\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class SyncDescriptor {\n    constructor(ctor, staticArguments = [], supportsDelayedInstantiation = false) {\n        this.ctor = ctor;\n        this.staticArguments = staticArguments;\n        this.supportsDelayedInstantiation = supportsDelayedInstantiation;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { SyncDescriptor } from './descriptors.js';\nconst _registry = [];\nexport function registerSingleton(id, ctorOrDescriptor, supportsDelayedInstantiation) {\n    if (!(ctorOrDescriptor instanceof SyncDescriptor)) {\n        ctorOrDescriptor = new SyncDescriptor(ctorOrDescriptor, [], Boolean(supportsDelayedInstantiation));\n    }\n    _registry.push([id, ctorOrDescriptor]);\n}\nexport function getSingletonServiceDescriptors() {\n    return _registry;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// ------ internal util\nexport var _util;\n(function (_util) {\n    _util.serviceIds = new Map();\n    _util.DI_TARGET = '$di$target';\n    _util.DI_DEPENDENCIES = '$di$dependencies';\n    function getServiceDependencies(ctor) {\n        return ctor[_util.DI_DEPENDENCIES] || [];\n    }\n    _util.getServiceDependencies = getServiceDependencies;\n})(_util || (_util = {}));\nexport const IInstantiationService = createDecorator('instantiationService');\nfunction storeServiceDependency(id, target, index) {\n    if (target[_util.DI_TARGET] === target) {\n        target[_util.DI_DEPENDENCIES].push({ id, index });\n    }\n    else {\n        target[_util.DI_DEPENDENCIES] = [{ id, index }];\n        target[_util.DI_TARGET] = target;\n    }\n}\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator(serviceId) {\n    if (_util.serviceIds.has(serviceId)) {\n        return _util.serviceIds.get(serviceId);\n    }\n    const id = function (target, key, index) {\n        if (arguments.length !== 3) {\n            throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n        }\n        storeServiceDependency(id, target, index);\n    };\n    id.toString = () => serviceId;\n    _util.serviceIds.set(serviceId, id);\n    return id;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nimport * as platform from '../../registry/common/platform.js';\nexport const Extensions = {\n    JSONContribution: 'base.contributions.json'\n};\nfunction normalizeId(id) {\n    if (id.length > 0 && id.charAt(id.length - 1) === '#') {\n        return id.substring(0, id.length - 1);\n    }\n    return id;\n}\nclass JSONContributionRegistry {\n    constructor() {\n        this._onDidChangeSchema = new Emitter();\n        this.schemasById = {};\n    }\n    registerSchema(uri, unresolvedSchemaContent) {\n        this.schemasById[normalizeId(uri)] = unresolvedSchemaContent;\n        this._onDidChangeSchema.fire(uri);\n    }\n    notifySchemaChanged(uri) {\n        this._onDidChangeSchema.fire(uri);\n    }\n}\nconst jsonContributionRegistry = new JSONContributionRegistry();\nplatform.Registry.add(Extensions.JSONContribution, jsonContributionRegistry);\n","import { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { RawContextKey } from '../../contextkey/common/contextkey.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const ILogService = createDecorator('logService');\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Off\"] = 0] = \"Off\";\n    LogLevel[LogLevel[\"Trace\"] = 1] = \"Trace\";\n    LogLevel[LogLevel[\"Debug\"] = 2] = \"Debug\";\n    LogLevel[LogLevel[\"Info\"] = 3] = \"Info\";\n    LogLevel[LogLevel[\"Warning\"] = 4] = \"Warning\";\n    LogLevel[LogLevel[\"Error\"] = 5] = \"Error\";\n})(LogLevel || (LogLevel = {}));\nexport const DEFAULT_LOG_LEVEL = LogLevel.Info;\nexport class AbstractLogger extends Disposable {\n    constructor() {\n        super(...arguments);\n        this.level = DEFAULT_LOG_LEVEL;\n        this._onDidChangeLogLevel = this._register(new Emitter());\n        this.onDidChangeLogLevel = this._onDidChangeLogLevel.event;\n    }\n    setLevel(level) {\n        if (this.level !== level) {\n            this.level = level;\n            this._onDidChangeLogLevel.fire(this.level);\n        }\n    }\n    getLevel() {\n        return this.level;\n    }\n    checkLogLevel(level) {\n        return this.level !== LogLevel.Off && this.level <= level;\n    }\n}\nexport class ConsoleLogger extends AbstractLogger {\n    constructor(logLevel = DEFAULT_LOG_LEVEL, useColors = true) {\n        super();\n        this.useColors = useColors;\n        this.setLevel(logLevel);\n    }\n    trace(message, ...args) {\n        if (this.checkLogLevel(LogLevel.Trace)) {\n            if (this.useColors) {\n                console.log('%cTRACE', 'color: #888', message, ...args);\n            }\n            else {\n                console.log(message, ...args);\n            }\n        }\n    }\n    debug(message, ...args) {\n        if (this.checkLogLevel(LogLevel.Debug)) {\n            if (this.useColors) {\n                console.log('%cDEBUG', 'background: #eee; color: #888', message, ...args);\n            }\n            else {\n                console.log(message, ...args);\n            }\n        }\n    }\n    info(message, ...args) {\n        if (this.checkLogLevel(LogLevel.Info)) {\n            if (this.useColors) {\n                console.log('%c INFO', 'color: #33f', message, ...args);\n            }\n            else {\n                console.log(message, ...args);\n            }\n        }\n    }\n    warn(message, ...args) {\n        if (this.checkLogLevel(LogLevel.Warning)) {\n            if (this.useColors) {\n                console.log('%c WARN', 'color: #993', message, ...args);\n            }\n            else {\n                console.log(message, ...args);\n            }\n        }\n    }\n    error(message, ...args) {\n        if (this.checkLogLevel(LogLevel.Error)) {\n            if (this.useColors) {\n                console.log('%c  ERR', 'color: #f33', message, ...args);\n            }\n            else {\n                console.error(message, ...args);\n            }\n        }\n    }\n}\nexport class MultiplexLogger extends AbstractLogger {\n    constructor(loggers) {\n        super();\n        this.loggers = loggers;\n        if (loggers.length) {\n            this.setLevel(loggers[0].getLevel());\n        }\n    }\n    setLevel(level) {\n        for (const logger of this.loggers) {\n            logger.setLevel(level);\n        }\n        super.setLevel(level);\n    }\n    trace(message, ...args) {\n        for (const logger of this.loggers) {\n            logger.trace(message, ...args);\n        }\n    }\n    debug(message, ...args) {\n        for (const logger of this.loggers) {\n            logger.debug(message, ...args);\n        }\n    }\n    info(message, ...args) {\n        for (const logger of this.loggers) {\n            logger.info(message, ...args);\n        }\n    }\n    warn(message, ...args) {\n        for (const logger of this.loggers) {\n            logger.warn(message, ...args);\n        }\n    }\n    error(message, ...args) {\n        for (const logger of this.loggers) {\n            logger.error(message, ...args);\n        }\n    }\n    dispose() {\n        for (const logger of this.loggers) {\n            logger.dispose();\n        }\n        super.dispose();\n    }\n}\nexport function LogLevelToString(logLevel) {\n    switch (logLevel) {\n        case LogLevel.Trace: return 'trace';\n        case LogLevel.Debug: return 'debug';\n        case LogLevel.Info: return 'info';\n        case LogLevel.Warning: return 'warn';\n        case LogLevel.Error: return 'error';\n        case LogLevel.Off: return 'off';\n    }\n}\n// Contexts\nexport const CONTEXT_LOG_LEVEL = new RawContextKey('logLevel', LogLevelToString(LogLevel.Info));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport Severity from '../../../base/common/severity.js';\nimport { localize } from '../../../nls.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport var MarkerSeverity;\n(function (MarkerSeverity) {\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\n})(MarkerSeverity || (MarkerSeverity = {}));\n(function (MarkerSeverity) {\n    function compare(a, b) {\n        return b - a;\n    }\n    MarkerSeverity.compare = compare;\n    const _displayStrings = Object.create(null);\n    _displayStrings[MarkerSeverity.Error] = localize('sev.error', \"Error\");\n    _displayStrings[MarkerSeverity.Warning] = localize('sev.warning', \"Warning\");\n    _displayStrings[MarkerSeverity.Info] = localize('sev.info', \"Info\");\n    function toString(a) {\n        return _displayStrings[a] || '';\n    }\n    MarkerSeverity.toString = toString;\n    function fromSeverity(severity) {\n        switch (severity) {\n            case Severity.Error: return MarkerSeverity.Error;\n            case Severity.Warning: return MarkerSeverity.Warning;\n            case Severity.Info: return MarkerSeverity.Info;\n            case Severity.Ignore: return MarkerSeverity.Hint;\n        }\n    }\n    MarkerSeverity.fromSeverity = fromSeverity;\n    function toSeverity(severity) {\n        switch (severity) {\n            case MarkerSeverity.Error: return Severity.Error;\n            case MarkerSeverity.Warning: return Severity.Warning;\n            case MarkerSeverity.Info: return Severity.Info;\n            case MarkerSeverity.Hint: return Severity.Ignore;\n        }\n    }\n    MarkerSeverity.toSeverity = toSeverity;\n})(MarkerSeverity || (MarkerSeverity = {}));\nexport var IMarkerData;\n(function (IMarkerData) {\n    const emptyString = '';\n    function makeKey(markerData) {\n        return makeKeyOptionalMessage(markerData, true);\n    }\n    IMarkerData.makeKey = makeKey;\n    function makeKeyOptionalMessage(markerData, useMessage) {\n        const result = [emptyString];\n        if (markerData.source) {\n            result.push(markerData.source.replace('¦', '\\\\¦'));\n        }\n        else {\n            result.push(emptyString);\n        }\n        if (markerData.code) {\n            if (typeof markerData.code === 'string') {\n                result.push(markerData.code.replace('¦', '\\\\¦'));\n            }\n            else {\n                result.push(markerData.code.value.replace('¦', '\\\\¦'));\n            }\n        }\n        else {\n            result.push(emptyString);\n        }\n        if (markerData.severity !== undefined && markerData.severity !== null) {\n            result.push(MarkerSeverity.toString(markerData.severity));\n        }\n        else {\n            result.push(emptyString);\n        }\n        // Modifed to not include the message as part of the marker key to work around\n        // https://github.com/microsoft/vscode/issues/77475\n        if (markerData.message && useMessage) {\n            result.push(markerData.message.replace('¦', '\\\\¦'));\n        }\n        else {\n            result.push(emptyString);\n        }\n        if (markerData.startLineNumber !== undefined && markerData.startLineNumber !== null) {\n            result.push(markerData.startLineNumber.toString());\n        }\n        else {\n            result.push(emptyString);\n        }\n        if (markerData.startColumn !== undefined && markerData.startColumn !== null) {\n            result.push(markerData.startColumn.toString());\n        }\n        else {\n            result.push(emptyString);\n        }\n        if (markerData.endLineNumber !== undefined && markerData.endLineNumber !== null) {\n            result.push(markerData.endLineNumber.toString());\n        }\n        else {\n            result.push(emptyString);\n        }\n        if (markerData.endColumn !== undefined && markerData.endColumn !== null) {\n            result.push(markerData.endColumn.toString());\n        }\n        else {\n            result.push(emptyString);\n        }\n        result.push(emptyString);\n        return result.join('¦');\n    }\n    IMarkerData.makeKeyOptionalMessage = makeKeyOptionalMessage;\n})(IMarkerData || (IMarkerData = {}));\nexport const IMarkerService = createDecorator('markerService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Assert from '../../../base/common/assert.js';\nimport * as Types from '../../../base/common/types.js';\nclass RegistryImpl {\n    constructor() {\n        this.data = new Map();\n    }\n    add(id, data) {\n        Assert.ok(Types.isString(id));\n        Assert.ok(Types.isObject(data));\n        Assert.ok(!this.data.has(id), 'There is already an extension with this id');\n        this.data.set(id, data);\n    }\n    as(id) {\n        return this.data.get(id) || null;\n    }\n}\nexport const Registry = new RegistryImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { assertNever } from '../../../base/common/assert.js';\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Color } from '../../../base/common/color.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\nimport * as platform from '../../registry/common/platform.js';\nimport * as nls from '../../../nls.js';\n/**\n * Returns the css variable name for the given color identifier. Dots (`.`) are replaced with hyphens (`-`) and\n * everything is prefixed with `--vscode-`.\n *\n * @sample `editorSuggestWidget.background` is `--vscode-editorSuggestWidget-background`.\n */\nexport function asCssVariableName(colorIdent) {\n    return `--vscode-${colorIdent.replace(/\\./g, '-')}`;\n}\nexport function asCssVariable(color) {\n    return `var(${asCssVariableName(color)})`;\n}\nexport function asCssVariableWithDefault(color, defaultCssValue) {\n    return `var(${asCssVariableName(color)}, ${defaultCssValue})`;\n}\nexport function isColorDefaults(value) {\n    return value !== null && typeof value === 'object' && 'light' in value && 'dark' in value;\n}\n// color registry\nexport const Extensions = {\n    ColorContribution: 'base.contributions.colors'\n};\nexport const DEFAULT_COLOR_CONFIG_VALUE = 'default';\nclass ColorRegistry {\n    constructor() {\n        this._onDidChangeSchema = new Emitter();\n        this.onDidChangeSchema = this._onDidChangeSchema.event;\n        this.colorSchema = { type: 'object', properties: {} };\n        this.colorReferenceSchema = { type: 'string', enum: [], enumDescriptions: [] };\n        this.colorsById = {};\n    }\n    registerColor(id, defaults, description, needsTransparency = false, deprecationMessage) {\n        const colorContribution = { id, description, defaults, needsTransparency, deprecationMessage };\n        this.colorsById[id] = colorContribution;\n        const propertySchema = { type: 'string', format: 'color-hex', defaultSnippets: [{ body: '${1:#ff0000}' }] };\n        if (deprecationMessage) {\n            propertySchema.deprecationMessage = deprecationMessage;\n        }\n        if (needsTransparency) {\n            propertySchema.pattern = '^#(?:(?<rgba>[0-9a-fA-f]{3}[0-9a-eA-E])|(?:[0-9a-fA-F]{6}(?:(?![fF]{2})(?:[0-9a-fA-F]{2}))))?$';\n            propertySchema.patternErrorMessage = nls.localize('transparecyRequired', 'This color must be transparent or it will obscure content');\n        }\n        this.colorSchema.properties[id] = {\n            description,\n            oneOf: [\n                propertySchema,\n                { type: 'string', const: DEFAULT_COLOR_CONFIG_VALUE, description: nls.localize('useDefault', 'Use the default color.') }\n            ]\n        };\n        this.colorReferenceSchema.enum.push(id);\n        this.colorReferenceSchema.enumDescriptions.push(description);\n        this._onDidChangeSchema.fire();\n        return id;\n    }\n    getColors() {\n        return Object.keys(this.colorsById).map(id => this.colorsById[id]);\n    }\n    resolveDefaultColor(id, theme) {\n        const colorDesc = this.colorsById[id];\n        if (colorDesc?.defaults) {\n            const colorValue = isColorDefaults(colorDesc.defaults) ? colorDesc.defaults[theme.type] : colorDesc.defaults;\n            return resolveColorValue(colorValue, theme);\n        }\n        return undefined;\n    }\n    getColorSchema() {\n        return this.colorSchema;\n    }\n    toString() {\n        const sorter = (a, b) => {\n            const cat1 = a.indexOf('.') === -1 ? 0 : 1;\n            const cat2 = b.indexOf('.') === -1 ? 0 : 1;\n            if (cat1 !== cat2) {\n                return cat1 - cat2;\n            }\n            return a.localeCompare(b);\n        };\n        return Object.keys(this.colorsById).sort(sorter).map(k => `- \\`${k}\\`: ${this.colorsById[k].description}`).join('\\n');\n    }\n}\nconst colorRegistry = new ColorRegistry();\nplatform.Registry.add(Extensions.ColorContribution, colorRegistry);\nexport function registerColor(id, defaults, description, needsTransparency, deprecationMessage) {\n    return colorRegistry.registerColor(id, defaults, description, needsTransparency, deprecationMessage);\n}\n// ----- color functions\nexport function executeTransform(transform, theme) {\n    switch (transform.op) {\n        case 0 /* ColorTransformType.Darken */:\n            return resolveColorValue(transform.value, theme)?.darken(transform.factor);\n        case 1 /* ColorTransformType.Lighten */:\n            return resolveColorValue(transform.value, theme)?.lighten(transform.factor);\n        case 2 /* ColorTransformType.Transparent */:\n            return resolveColorValue(transform.value, theme)?.transparent(transform.factor);\n        case 3 /* ColorTransformType.Opaque */: {\n            const backgroundColor = resolveColorValue(transform.background, theme);\n            if (!backgroundColor) {\n                return resolveColorValue(transform.value, theme);\n            }\n            return resolveColorValue(transform.value, theme)?.makeOpaque(backgroundColor);\n        }\n        case 4 /* ColorTransformType.OneOf */:\n            for (const candidate of transform.values) {\n                const color = resolveColorValue(candidate, theme);\n                if (color) {\n                    return color;\n                }\n            }\n            return undefined;\n        case 6 /* ColorTransformType.IfDefinedThenElse */:\n            return resolveColorValue(theme.defines(transform.if) ? transform.then : transform.else, theme);\n        case 5 /* ColorTransformType.LessProminent */: {\n            const from = resolveColorValue(transform.value, theme);\n            if (!from) {\n                return undefined;\n            }\n            const backgroundColor = resolveColorValue(transform.background, theme);\n            if (!backgroundColor) {\n                return from.transparent(transform.factor * transform.transparency);\n            }\n            return from.isDarkerThan(backgroundColor)\n                ? Color.getLighterColor(from, backgroundColor, transform.factor).transparent(transform.transparency)\n                : Color.getDarkerColor(from, backgroundColor, transform.factor).transparent(transform.transparency);\n        }\n        default:\n            throw assertNever(transform);\n    }\n}\nexport function darken(colorValue, factor) {\n    return { op: 0 /* ColorTransformType.Darken */, value: colorValue, factor };\n}\nexport function lighten(colorValue, factor) {\n    return { op: 1 /* ColorTransformType.Lighten */, value: colorValue, factor };\n}\nexport function transparent(colorValue, factor) {\n    return { op: 2 /* ColorTransformType.Transparent */, value: colorValue, factor };\n}\nexport function oneOf(...colorValues) {\n    return { op: 4 /* ColorTransformType.OneOf */, values: colorValues };\n}\nexport function ifDefinedThenElse(ifArg, thenArg, elseArg) {\n    return { op: 6 /* ColorTransformType.IfDefinedThenElse */, if: ifArg, then: thenArg, else: elseArg };\n}\nexport function lessProminent(colorValue, backgroundColorValue, factor, transparency) {\n    return { op: 5 /* ColorTransformType.LessProminent */, value: colorValue, background: backgroundColorValue, factor, transparency };\n}\n// ----- implementation\n/**\n * @param colorValue Resolve a color value in the context of a theme\n */\nexport function resolveColorValue(colorValue, theme) {\n    if (colorValue === null) {\n        return undefined;\n    }\n    else if (typeof colorValue === 'string') {\n        if (colorValue[0] === '#') {\n            return Color.fromHex(colorValue);\n        }\n        return theme.getColor(colorValue);\n    }\n    else if (colorValue instanceof Color) {\n        return colorValue;\n    }\n    else if (typeof colorValue === 'object') {\n        return executeTransform(colorValue, theme);\n    }\n    return undefined;\n}\nexport const workbenchColorsSchemaId = 'vscode://schemas/workbench-colors';\nconst schemaRegistry = platform.Registry.as(JSONExtensions.JSONContribution);\nschemaRegistry.registerSchema(workbenchColorsSchemaId, colorRegistry.getColorSchema());\nconst delayer = new RunOnceScheduler(() => schemaRegistry.notifySchemaChanged(workbenchColorsSchemaId), 200);\ncolorRegistry.onDidChangeSchema(() => {\n    if (!delayer.isScheduled()) {\n        delayer.schedule();\n    }\n});\n// setTimeout(_ => console.log(colorRegistry.toString()), 5000);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { Color } from '../../../../base/common/color.js';\nimport { registerColor, transparent } from '../colorUtils.js';\nexport const foreground = registerColor('foreground', { dark: '#CCCCCC', light: '#616161', hcDark: '#FFFFFF', hcLight: '#292929' }, nls.localize('foreground', \"Overall foreground color. This color is only used if not overridden by a component.\"));\nexport const disabledForeground = registerColor('disabledForeground', { dark: '#CCCCCC80', light: '#61616180', hcDark: '#A5A5A5', hcLight: '#7F7F7F' }, nls.localize('disabledForeground', \"Overall foreground for disabled elements. This color is only used if not overridden by a component.\"));\nexport const errorForeground = registerColor('errorForeground', { dark: '#F48771', light: '#A1260D', hcDark: '#F48771', hcLight: '#B5200D' }, nls.localize('errorForeground', \"Overall foreground color for error messages. This color is only used if not overridden by a component.\"));\nexport const descriptionForeground = registerColor('descriptionForeground', { light: '#717171', dark: transparent(foreground, 0.7), hcDark: transparent(foreground, 0.7), hcLight: transparent(foreground, 0.7) }, nls.localize('descriptionForeground', \"Foreground color for description text providing additional information, for example for a label.\"));\nexport const iconForeground = registerColor('icon.foreground', { dark: '#C5C5C5', light: '#424242', hcDark: '#FFFFFF', hcLight: '#292929' }, nls.localize('iconForeground', \"The default color for icons in the workbench.\"));\nexport const focusBorder = registerColor('focusBorder', { dark: '#007FD4', light: '#0090F1', hcDark: '#F38518', hcLight: '#006BBD' }, nls.localize('focusBorder', \"Overall border color for focused elements. This color is only used if not overridden by a component.\"));\nexport const contrastBorder = registerColor('contrastBorder', { light: null, dark: null, hcDark: '#6FC3DF', hcLight: '#0F4A85' }, nls.localize('contrastBorder', \"An extra border around elements to separate them from others for greater contrast.\"));\nexport const activeContrastBorder = registerColor('contrastActiveBorder', { light: null, dark: null, hcDark: focusBorder, hcLight: focusBorder }, nls.localize('activeContrastBorder', \"An extra border around active elements to separate them from others for greater contrast.\"));\nexport const selectionBackground = registerColor('selection.background', null, nls.localize('selectionBackground', \"The background color of text selections in the workbench (e.g. for input fields or text areas). Note that this does not apply to selections within the editor.\"));\n// ------ text link\nexport const textLinkForeground = registerColor('textLink.foreground', { light: '#006AB1', dark: '#3794FF', hcDark: '#21A6FF', hcLight: '#0F4A85' }, nls.localize('textLinkForeground', \"Foreground color for links in text.\"));\nexport const textLinkActiveForeground = registerColor('textLink.activeForeground', { light: '#006AB1', dark: '#3794FF', hcDark: '#21A6FF', hcLight: '#0F4A85' }, nls.localize('textLinkActiveForeground', \"Foreground color for links in text when clicked on and on mouse hover.\"));\nexport const textSeparatorForeground = registerColor('textSeparator.foreground', { light: '#0000002e', dark: '#ffffff2e', hcDark: Color.black, hcLight: '#292929' }, nls.localize('textSeparatorForeground', \"Color for text separators.\"));\n// ------ text preformat\nexport const textPreformatForeground = registerColor('textPreformat.foreground', { light: '#A31515', dark: '#D7BA7D', hcDark: '#000000', hcLight: '#FFFFFF' }, nls.localize('textPreformatForeground', \"Foreground color for preformatted text segments.\"));\nexport const textPreformatBackground = registerColor('textPreformat.background', { light: '#0000001A', dark: '#FFFFFF1A', hcDark: '#FFFFFF', hcLight: '#09345f' }, nls.localize('textPreformatBackground', \"Background color for preformatted text segments.\"));\n// ------ text block quote\nexport const textBlockQuoteBackground = registerColor('textBlockQuote.background', { light: '#f2f2f2', dark: '#222222', hcDark: null, hcLight: '#F2F2F2' }, nls.localize('textBlockQuoteBackground', \"Background color for block quotes in text.\"));\nexport const textBlockQuoteBorder = registerColor('textBlockQuote.border', { light: '#007acc80', dark: '#007acc80', hcDark: Color.white, hcLight: '#292929' }, nls.localize('textBlockQuoteBorder', \"Border color for block quotes in text.\"));\n// ------ text code block\nexport const textCodeBlockBackground = registerColor('textCodeBlock.background', { light: '#dcdcdc66', dark: '#0a0a0a66', hcDark: Color.black, hcLight: '#F2F2F2' }, nls.localize('textCodeBlockBackground', \"Background color for code blocks in text.\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\nimport { registerColor, transparent } from '../colorUtils.js';\nimport { foreground } from './baseColors.js';\nimport { editorErrorForeground, editorInfoForeground, editorWarningForeground } from './editorColors.js';\nimport { minimapFindMatch } from './minimapColors.js';\nexport const chartsForeground = registerColor('charts.foreground', foreground, nls.localize('chartsForeground', \"The foreground color used in charts.\"));\nexport const chartsLines = registerColor('charts.lines', transparent(foreground, .5), nls.localize('chartsLines', \"The color used for horizontal lines in charts.\"));\nexport const chartsRed = registerColor('charts.red', editorErrorForeground, nls.localize('chartsRed', \"The red color used in chart visualizations.\"));\nexport const chartsBlue = registerColor('charts.blue', editorInfoForeground, nls.localize('chartsBlue', \"The blue color used in chart visualizations.\"));\nexport const chartsYellow = registerColor('charts.yellow', editorWarningForeground, nls.localize('chartsYellow', \"The yellow color used in chart visualizations.\"));\nexport const chartsOrange = registerColor('charts.orange', minimapFindMatch, nls.localize('chartsOrange', \"The orange color used in chart visualizations.\"));\nexport const chartsGreen = registerColor('charts.green', { dark: '#89D185', light: '#388A34', hcDark: '#89D185', hcLight: '#374e06' }, nls.localize('chartsGreen', \"The green color used in chart visualizations.\"));\nexport const chartsPurple = registerColor('charts.purple', { dark: '#B180D7', light: '#652D90', hcDark: '#B180D7', hcLight: '#652D90' }, nls.localize('chartsPurple', \"The purple color used in chart visualizations.\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { Color, RGBA } from '../../../../base/common/color.js';\nimport { registerColor, transparent, lessProminent, darken, lighten } from '../colorUtils.js';\n// Import the colors we need\nimport { foreground, contrastBorder, activeContrastBorder } from './baseColors.js';\nimport { scrollbarShadow, badgeBackground } from './miscColors.js';\n// ----- editor\nexport const editorBackground = registerColor('editor.background', { light: '#ffffff', dark: '#1E1E1E', hcDark: Color.black, hcLight: Color.white }, nls.localize('editorBackground', \"Editor background color.\"));\nexport const editorForeground = registerColor('editor.foreground', { light: '#333333', dark: '#BBBBBB', hcDark: Color.white, hcLight: foreground }, nls.localize('editorForeground', \"Editor default foreground color.\"));\nexport const editorStickyScrollBackground = registerColor('editorStickyScroll.background', editorBackground, nls.localize('editorStickyScrollBackground', \"Background color of sticky scroll in the editor\"));\nexport const editorStickyScrollHoverBackground = registerColor('editorStickyScrollHover.background', { dark: '#2A2D2E', light: '#F0F0F0', hcDark: null, hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('editorStickyScrollHoverBackground', \"Background color of sticky scroll on hover in the editor\"));\nexport const editorStickyScrollBorder = registerColor('editorStickyScroll.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('editorStickyScrollBorder', \"Border color of sticky scroll in the editor\"));\nexport const editorStickyScrollShadow = registerColor('editorStickyScroll.shadow', scrollbarShadow, nls.localize('editorStickyScrollShadow', \" Shadow color of sticky scroll in the editor\"));\nexport const editorWidgetBackground = registerColor('editorWidget.background', { dark: '#252526', light: '#F3F3F3', hcDark: '#0C141F', hcLight: Color.white }, nls.localize('editorWidgetBackground', 'Background color of editor widgets, such as find/replace.'));\nexport const editorWidgetForeground = registerColor('editorWidget.foreground', foreground, nls.localize('editorWidgetForeground', 'Foreground color of editor widgets, such as find/replace.'));\nexport const editorWidgetBorder = registerColor('editorWidget.border', { dark: '#454545', light: '#C8C8C8', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('editorWidgetBorder', 'Border color of editor widgets. The color is only used if the widget chooses to have a border and if the color is not overridden by a widget.'));\nexport const editorWidgetResizeBorder = registerColor('editorWidget.resizeBorder', null, nls.localize('editorWidgetResizeBorder', \"Border color of the resize bar of editor widgets. The color is only used if the widget chooses to have a resize border and if the color is not overridden by a widget.\"));\nexport const editorErrorBackground = registerColor('editorError.background', null, nls.localize('editorError.background', 'Background color of error text in the editor. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorErrorForeground = registerColor('editorError.foreground', { dark: '#F14C4C', light: '#E51400', hcDark: '#F48771', hcLight: '#B5200D' }, nls.localize('editorError.foreground', 'Foreground color of error squigglies in the editor.'));\nexport const editorErrorBorder = registerColor('editorError.border', { dark: null, light: null, hcDark: Color.fromHex('#E47777').transparent(0.8), hcLight: '#B5200D' }, nls.localize('errorBorder', 'If set, color of double underlines for errors in the editor.'));\nexport const editorWarningBackground = registerColor('editorWarning.background', null, nls.localize('editorWarning.background', 'Background color of warning text in the editor. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorWarningForeground = registerColor('editorWarning.foreground', { dark: '#CCA700', light: '#BF8803', hcDark: '#FFD370', hcLight: '#895503' }, nls.localize('editorWarning.foreground', 'Foreground color of warning squigglies in the editor.'));\nexport const editorWarningBorder = registerColor('editorWarning.border', { dark: null, light: null, hcDark: Color.fromHex('#FFCC00').transparent(0.8), hcLight: Color.fromHex('#FFCC00').transparent(0.8) }, nls.localize('warningBorder', 'If set, color of double underlines for warnings in the editor.'));\nexport const editorInfoBackground = registerColor('editorInfo.background', null, nls.localize('editorInfo.background', 'Background color of info text in the editor. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorInfoForeground = registerColor('editorInfo.foreground', { dark: '#3794FF', light: '#1a85ff', hcDark: '#3794FF', hcLight: '#1a85ff' }, nls.localize('editorInfo.foreground', 'Foreground color of info squigglies in the editor.'));\nexport const editorInfoBorder = registerColor('editorInfo.border', { dark: null, light: null, hcDark: Color.fromHex('#3794FF').transparent(0.8), hcLight: '#292929' }, nls.localize('infoBorder', 'If set, color of double underlines for infos in the editor.'));\nexport const editorHintForeground = registerColor('editorHint.foreground', { dark: Color.fromHex('#eeeeee').transparent(0.7), light: '#6c6c6c', hcDark: null, hcLight: null }, nls.localize('editorHint.foreground', 'Foreground color of hint squigglies in the editor.'));\nexport const editorHintBorder = registerColor('editorHint.border', { dark: null, light: null, hcDark: Color.fromHex('#eeeeee').transparent(0.8), hcLight: '#292929' }, nls.localize('hintBorder', 'If set, color of double underlines for hints in the editor.'));\nexport const editorActiveLinkForeground = registerColor('editorLink.activeForeground', { dark: '#4E94CE', light: Color.blue, hcDark: Color.cyan, hcLight: '#292929' }, nls.localize('activeLinkForeground', 'Color of active links.'));\n// ----- editor selection\nexport const editorSelectionBackground = registerColor('editor.selectionBackground', { light: '#ADD6FF', dark: '#264F78', hcDark: '#f3f518', hcLight: '#0F4A85' }, nls.localize('editorSelectionBackground', \"Color of the editor selection.\"));\nexport const editorSelectionForeground = registerColor('editor.selectionForeground', { light: null, dark: null, hcDark: '#000000', hcLight: Color.white }, nls.localize('editorSelectionForeground', \"Color of the selected text for high contrast.\"));\nexport const editorInactiveSelection = registerColor('editor.inactiveSelectionBackground', { light: transparent(editorSelectionBackground, 0.5), dark: transparent(editorSelectionBackground, 0.5), hcDark: transparent(editorSelectionBackground, 0.7), hcLight: transparent(editorSelectionBackground, 0.5) }, nls.localize('editorInactiveSelection', \"Color of the selection in an inactive editor. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport const editorSelectionHighlight = registerColor('editor.selectionHighlightBackground', { light: lessProminent(editorSelectionBackground, editorBackground, 0.3, 0.6), dark: lessProminent(editorSelectionBackground, editorBackground, 0.3, 0.6), hcDark: null, hcLight: null }, nls.localize('editorSelectionHighlight', 'Color for regions with the same content as the selection. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorSelectionHighlightBorder = registerColor('editor.selectionHighlightBorder', { light: null, dark: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('editorSelectionHighlightBorder', \"Border color for regions with the same content as the selection.\"));\n// ----- editor find\nexport const editorFindMatch = registerColor('editor.findMatchBackground', { light: '#A8AC94', dark: '#515C6A', hcDark: null, hcLight: null }, nls.localize('editorFindMatch', \"Color of the current search match.\"));\nexport const editorFindMatchForeground = registerColor('editor.findMatchForeground', null, nls.localize('editorFindMatchForeground', \"Text color of the current search match.\"));\nexport const editorFindMatchHighlight = registerColor('editor.findMatchHighlightBackground', { light: '#EA5C0055', dark: '#EA5C0055', hcDark: null, hcLight: null }, nls.localize('findMatchHighlight', \"Color of the other search matches. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport const editorFindMatchHighlightForeground = registerColor('editor.findMatchHighlightForeground', null, nls.localize('findMatchHighlightForeground', \"Foreground color of the other search matches.\"), true);\nexport const editorFindRangeHighlight = registerColor('editor.findRangeHighlightBackground', { dark: '#3a3d4166', light: '#b4b4b44d', hcDark: null, hcLight: null }, nls.localize('findRangeHighlight', \"Color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport const editorFindMatchBorder = registerColor('editor.findMatchBorder', { light: null, dark: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('editorFindMatchBorder', \"Border color of the current search match.\"));\nexport const editorFindMatchHighlightBorder = registerColor('editor.findMatchHighlightBorder', { light: null, dark: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('findMatchHighlightBorder', \"Border color of the other search matches.\"));\nexport const editorFindRangeHighlightBorder = registerColor('editor.findRangeHighlightBorder', { dark: null, light: null, hcDark: transparent(activeContrastBorder, 0.4), hcLight: transparent(activeContrastBorder, 0.4) }, nls.localize('findRangeHighlightBorder', \"Border color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.\"), true);\n// ----- editor hover\nexport const editorHoverHighlight = registerColor('editor.hoverHighlightBackground', { light: '#ADD6FF26', dark: '#264f7840', hcDark: '#ADD6FF26', hcLight: null }, nls.localize('hoverHighlight', 'Highlight below the word for which a hover is shown. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorHoverBackground = registerColor('editorHoverWidget.background', editorWidgetBackground, nls.localize('hoverBackground', 'Background color of the editor hover.'));\nexport const editorHoverForeground = registerColor('editorHoverWidget.foreground', editorWidgetForeground, nls.localize('hoverForeground', 'Foreground color of the editor hover.'));\nexport const editorHoverBorder = registerColor('editorHoverWidget.border', editorWidgetBorder, nls.localize('hoverBorder', 'Border color of the editor hover.'));\nexport const editorHoverStatusBarBackground = registerColor('editorHoverWidget.statusBarBackground', { dark: lighten(editorHoverBackground, 0.2), light: darken(editorHoverBackground, 0.05), hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('statusBarBackground', \"Background color of the editor hover status bar.\"));\n// ----- editor inlay hint\nexport const editorInlayHintForeground = registerColor('editorInlayHint.foreground', { dark: '#969696', light: '#969696', hcDark: Color.white, hcLight: Color.black }, nls.localize('editorInlayHintForeground', 'Foreground color of inline hints'));\nexport const editorInlayHintBackground = registerColor('editorInlayHint.background', { dark: transparent(badgeBackground, .10), light: transparent(badgeBackground, .10), hcDark: transparent(Color.white, .10), hcLight: transparent(badgeBackground, .10) }, nls.localize('editorInlayHintBackground', 'Background color of inline hints'));\nexport const editorInlayHintTypeForeground = registerColor('editorInlayHint.typeForeground', editorInlayHintForeground, nls.localize('editorInlayHintForegroundTypes', 'Foreground color of inline hints for types'));\nexport const editorInlayHintTypeBackground = registerColor('editorInlayHint.typeBackground', editorInlayHintBackground, nls.localize('editorInlayHintBackgroundTypes', 'Background color of inline hints for types'));\nexport const editorInlayHintParameterForeground = registerColor('editorInlayHint.parameterForeground', editorInlayHintForeground, nls.localize('editorInlayHintForegroundParameter', 'Foreground color of inline hints for parameters'));\nexport const editorInlayHintParameterBackground = registerColor('editorInlayHint.parameterBackground', editorInlayHintBackground, nls.localize('editorInlayHintBackgroundParameter', 'Background color of inline hints for parameters'));\n// ----- editor lightbulb\nexport const editorLightBulbForeground = registerColor('editorLightBulb.foreground', { dark: '#FFCC00', light: '#DDB100', hcDark: '#FFCC00', hcLight: '#007ACC' }, nls.localize('editorLightBulbForeground', \"The color used for the lightbulb actions icon.\"));\nexport const editorLightBulbAutoFixForeground = registerColor('editorLightBulbAutoFix.foreground', { dark: '#75BEFF', light: '#007ACC', hcDark: '#75BEFF', hcLight: '#007ACC' }, nls.localize('editorLightBulbAutoFixForeground', \"The color used for the lightbulb auto fix actions icon.\"));\nexport const editorLightBulbAiForeground = registerColor('editorLightBulbAi.foreground', editorLightBulbForeground, nls.localize('editorLightBulbAiForeground', \"The color used for the lightbulb AI icon.\"));\n// ----- editor snippet\nexport const snippetTabstopHighlightBackground = registerColor('editor.snippetTabstopHighlightBackground', { dark: new Color(new RGBA(124, 124, 124, 0.3)), light: new Color(new RGBA(10, 50, 100, 0.2)), hcDark: new Color(new RGBA(124, 124, 124, 0.3)), hcLight: new Color(new RGBA(10, 50, 100, 0.2)) }, nls.localize('snippetTabstopHighlightBackground', \"Highlight background color of a snippet tabstop.\"));\nexport const snippetTabstopHighlightBorder = registerColor('editor.snippetTabstopHighlightBorder', null, nls.localize('snippetTabstopHighlightBorder', \"Highlight border color of a snippet tabstop.\"));\nexport const snippetFinalTabstopHighlightBackground = registerColor('editor.snippetFinalTabstopHighlightBackground', null, nls.localize('snippetFinalTabstopHighlightBackground', \"Highlight background color of the final tabstop of a snippet.\"));\nexport const snippetFinalTabstopHighlightBorder = registerColor('editor.snippetFinalTabstopHighlightBorder', { dark: '#525252', light: new Color(new RGBA(10, 50, 100, 0.5)), hcDark: '#525252', hcLight: '#292929' }, nls.localize('snippetFinalTabstopHighlightBorder', \"Highlight border color of the final tabstop of a snippet.\"));\n// ----- diff editor\nexport const defaultInsertColor = new Color(new RGBA(155, 185, 85, .2));\nexport const defaultRemoveColor = new Color(new RGBA(255, 0, 0, .2));\nexport const diffInserted = registerColor('diffEditor.insertedTextBackground', { dark: '#9ccc2c33', light: '#9ccc2c40', hcDark: null, hcLight: null }, nls.localize('diffEditorInserted', 'Background color for text that got inserted. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffRemoved = registerColor('diffEditor.removedTextBackground', { dark: '#ff000033', light: '#ff000033', hcDark: null, hcLight: null }, nls.localize('diffEditorRemoved', 'Background color for text that got removed. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffInsertedLine = registerColor('diffEditor.insertedLineBackground', { dark: defaultInsertColor, light: defaultInsertColor, hcDark: null, hcLight: null }, nls.localize('diffEditorInsertedLines', 'Background color for lines that got inserted. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffRemovedLine = registerColor('diffEditor.removedLineBackground', { dark: defaultRemoveColor, light: defaultRemoveColor, hcDark: null, hcLight: null }, nls.localize('diffEditorRemovedLines', 'Background color for lines that got removed. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffInsertedLineGutter = registerColor('diffEditorGutter.insertedLineBackground', null, nls.localize('diffEditorInsertedLineGutter', 'Background color for the margin where lines got inserted.'));\nexport const diffRemovedLineGutter = registerColor('diffEditorGutter.removedLineBackground', null, nls.localize('diffEditorRemovedLineGutter', 'Background color for the margin where lines got removed.'));\nexport const diffOverviewRulerInserted = registerColor('diffEditorOverview.insertedForeground', null, nls.localize('diffEditorOverviewInserted', 'Diff overview ruler foreground for inserted content.'));\nexport const diffOverviewRulerRemoved = registerColor('diffEditorOverview.removedForeground', null, nls.localize('diffEditorOverviewRemoved', 'Diff overview ruler foreground for removed content.'));\nexport const diffInsertedOutline = registerColor('diffEditor.insertedTextBorder', { dark: null, light: null, hcDark: '#33ff2eff', hcLight: '#374E06' }, nls.localize('diffEditorInsertedOutline', 'Outline color for the text that got inserted.'));\nexport const diffRemovedOutline = registerColor('diffEditor.removedTextBorder', { dark: null, light: null, hcDark: '#FF008F', hcLight: '#AD0707' }, nls.localize('diffEditorRemovedOutline', 'Outline color for text that got removed.'));\nexport const diffBorder = registerColor('diffEditor.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('diffEditorBorder', 'Border color between the two text editors.'));\nexport const diffDiagonalFill = registerColor('diffEditor.diagonalFill', { dark: '#cccccc33', light: '#22222233', hcDark: null, hcLight: null }, nls.localize('diffDiagonalFill', \"Color of the diff editor's diagonal fill. The diagonal fill is used in side-by-side diff views.\"));\nexport const diffUnchangedRegionBackground = registerColor('diffEditor.unchangedRegionBackground', 'sideBar.background', nls.localize('diffEditor.unchangedRegionBackground', \"The background color of unchanged blocks in the diff editor.\"));\nexport const diffUnchangedRegionForeground = registerColor('diffEditor.unchangedRegionForeground', 'foreground', nls.localize('diffEditor.unchangedRegionForeground', \"The foreground color of unchanged blocks in the diff editor.\"));\nexport const diffUnchangedTextBackground = registerColor('diffEditor.unchangedCodeBackground', { dark: '#74747429', light: '#b8b8b829', hcDark: null, hcLight: null }, nls.localize('diffEditor.unchangedCodeBackground', \"The background color of unchanged code in the diff editor.\"));\n// ----- widget\nexport const widgetShadow = registerColor('widget.shadow', { dark: transparent(Color.black, .36), light: transparent(Color.black, .16), hcDark: null, hcLight: null }, nls.localize('widgetShadow', 'Shadow color of widgets such as find/replace inside the editor.'));\nexport const widgetBorder = registerColor('widget.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('widgetBorder', 'Border color of widgets such as find/replace inside the editor.'));\n// ----- toolbar\nexport const toolbarHoverBackground = registerColor('toolbar.hoverBackground', { dark: '#5a5d5e50', light: '#b8b8b850', hcDark: null, hcLight: null }, nls.localize('toolbarHoverBackground', \"Toolbar background when hovering over actions using the mouse\"));\nexport const toolbarHoverOutline = registerColor('toolbar.hoverOutline', { dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('toolbarHoverOutline', \"Toolbar outline when hovering over actions using the mouse\"));\nexport const toolbarActiveBackground = registerColor('toolbar.activeBackground', { dark: lighten(toolbarHoverBackground, 0.1), light: darken(toolbarHoverBackground, 0.1), hcDark: null, hcLight: null }, nls.localize('toolbarActiveBackground', \"Toolbar background when holding the mouse over actions\"));\n// ----- breadcumbs\nexport const breadcrumbsForeground = registerColor('breadcrumb.foreground', transparent(foreground, 0.8), nls.localize('breadcrumbsFocusForeground', \"Color of focused breadcrumb items.\"));\nexport const breadcrumbsBackground = registerColor('breadcrumb.background', editorBackground, nls.localize('breadcrumbsBackground', \"Background color of breadcrumb items.\"));\nexport const breadcrumbsFocusForeground = registerColor('breadcrumb.focusForeground', { light: darken(foreground, 0.2), dark: lighten(foreground, 0.1), hcDark: lighten(foreground, 0.1), hcLight: lighten(foreground, 0.1) }, nls.localize('breadcrumbsFocusForeground', \"Color of focused breadcrumb items.\"));\nexport const breadcrumbsActiveSelectionForeground = registerColor('breadcrumb.activeSelectionForeground', { light: darken(foreground, 0.2), dark: lighten(foreground, 0.1), hcDark: lighten(foreground, 0.1), hcLight: lighten(foreground, 0.1) }, nls.localize('breadcrumbsSelectedForeground', \"Color of selected breadcrumb items.\"));\nexport const breadcrumbsPickerBackground = registerColor('breadcrumbPicker.background', editorWidgetBackground, nls.localize('breadcrumbsSelectedBackground', \"Background color of breadcrumb item picker.\"));\n// ----- merge\nconst headerTransparency = 0.5;\nconst currentBaseColor = Color.fromHex('#40C8AE').transparent(headerTransparency);\nconst incomingBaseColor = Color.fromHex('#40A6FF').transparent(headerTransparency);\nconst commonBaseColor = Color.fromHex('#606060').transparent(0.4);\nconst contentTransparency = 0.4;\nconst rulerTransparency = 1;\nexport const mergeCurrentHeaderBackground = registerColor('merge.currentHeaderBackground', { dark: currentBaseColor, light: currentBaseColor, hcDark: null, hcLight: null }, nls.localize('mergeCurrentHeaderBackground', 'Current header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeCurrentContentBackground = registerColor('merge.currentContentBackground', transparent(mergeCurrentHeaderBackground, contentTransparency), nls.localize('mergeCurrentContentBackground', 'Current content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeIncomingHeaderBackground = registerColor('merge.incomingHeaderBackground', { dark: incomingBaseColor, light: incomingBaseColor, hcDark: null, hcLight: null }, nls.localize('mergeIncomingHeaderBackground', 'Incoming header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeIncomingContentBackground = registerColor('merge.incomingContentBackground', transparent(mergeIncomingHeaderBackground, contentTransparency), nls.localize('mergeIncomingContentBackground', 'Incoming content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeCommonHeaderBackground = registerColor('merge.commonHeaderBackground', { dark: commonBaseColor, light: commonBaseColor, hcDark: null, hcLight: null }, nls.localize('mergeCommonHeaderBackground', 'Common ancestor header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeCommonContentBackground = registerColor('merge.commonContentBackground', transparent(mergeCommonHeaderBackground, contentTransparency), nls.localize('mergeCommonContentBackground', 'Common ancestor content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeBorder = registerColor('merge.border', { dark: null, light: null, hcDark: '#C3DF6F', hcLight: '#007ACC' }, nls.localize('mergeBorder', 'Border color on headers and the splitter in inline merge-conflicts.'));\nexport const overviewRulerCurrentContentForeground = registerColor('editorOverviewRuler.currentContentForeground', { dark: transparent(mergeCurrentHeaderBackground, rulerTransparency), light: transparent(mergeCurrentHeaderBackground, rulerTransparency), hcDark: mergeBorder, hcLight: mergeBorder }, nls.localize('overviewRulerCurrentContentForeground', 'Current overview ruler foreground for inline merge-conflicts.'));\nexport const overviewRulerIncomingContentForeground = registerColor('editorOverviewRuler.incomingContentForeground', { dark: transparent(mergeIncomingHeaderBackground, rulerTransparency), light: transparent(mergeIncomingHeaderBackground, rulerTransparency), hcDark: mergeBorder, hcLight: mergeBorder }, nls.localize('overviewRulerIncomingContentForeground', 'Incoming overview ruler foreground for inline merge-conflicts.'));\nexport const overviewRulerCommonContentForeground = registerColor('editorOverviewRuler.commonContentForeground', { dark: transparent(mergeCommonHeaderBackground, rulerTransparency), light: transparent(mergeCommonHeaderBackground, rulerTransparency), hcDark: mergeBorder, hcLight: mergeBorder }, nls.localize('overviewRulerCommonContentForeground', 'Common ancestor overview ruler foreground for inline merge-conflicts.'));\nexport const overviewRulerFindMatchForeground = registerColor('editorOverviewRuler.findMatchForeground', { dark: '#d186167e', light: '#d186167e', hcDark: '#AB5A00', hcLight: '#AB5A00' }, nls.localize('overviewRulerFindMatchForeground', 'Overview ruler marker color for find matches. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const overviewRulerSelectionHighlightForeground = registerColor('editorOverviewRuler.selectionHighlightForeground', '#A0A0A0CC', nls.localize('overviewRulerSelectionHighlightForeground', 'Overview ruler marker color for selection highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\n// ----- problems\nexport const problemsErrorIconForeground = registerColor('problemsErrorIcon.foreground', editorErrorForeground, nls.localize('problemsErrorIconForeground', \"The color used for the problems error icon.\"));\nexport const problemsWarningIconForeground = registerColor('problemsWarningIcon.foreground', editorWarningForeground, nls.localize('problemsWarningIconForeground', \"The color used for the problems warning icon.\"));\nexport const problemsInfoIconForeground = registerColor('problemsInfoIcon.foreground', editorInfoForeground, nls.localize('problemsInfoIconForeground', \"The color used for the problems info icon.\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { Color, RGBA } from '../../../../base/common/color.js';\nimport { registerColor, transparent, lighten, darken } from '../colorUtils.js';\n// Import the colors we need\nimport { foreground, contrastBorder, focusBorder, iconForeground } from './baseColors.js';\nimport { editorWidgetBackground } from './editorColors.js';\n// ----- input\nexport const inputBackground = registerColor('input.background', { dark: '#3C3C3C', light: Color.white, hcDark: Color.black, hcLight: Color.white }, nls.localize('inputBoxBackground', \"Input box background.\"));\nexport const inputForeground = registerColor('input.foreground', foreground, nls.localize('inputBoxForeground', \"Input box foreground.\"));\nexport const inputBorder = registerColor('input.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputBoxBorder', \"Input box border.\"));\nexport const inputActiveOptionBorder = registerColor('inputOption.activeBorder', { dark: '#007ACC', light: '#007ACC', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputBoxActiveOptionBorder', \"Border color of activated options in input fields.\"));\nexport const inputActiveOptionHoverBackground = registerColor('inputOption.hoverBackground', { dark: '#5a5d5e80', light: '#b8b8b850', hcDark: null, hcLight: null }, nls.localize('inputOption.hoverBackground', \"Background color of activated options in input fields.\"));\nexport const inputActiveOptionBackground = registerColor('inputOption.activeBackground', { dark: transparent(focusBorder, 0.4), light: transparent(focusBorder, 0.2), hcDark: Color.transparent, hcLight: Color.transparent }, nls.localize('inputOption.activeBackground', \"Background hover color of options in input fields.\"));\nexport const inputActiveOptionForeground = registerColor('inputOption.activeForeground', { dark: Color.white, light: Color.black, hcDark: foreground, hcLight: foreground }, nls.localize('inputOption.activeForeground', \"Foreground color of activated options in input fields.\"));\nexport const inputPlaceholderForeground = registerColor('input.placeholderForeground', { light: transparent(foreground, 0.5), dark: transparent(foreground, 0.5), hcDark: transparent(foreground, 0.7), hcLight: transparent(foreground, 0.7) }, nls.localize('inputPlaceholderForeground', \"Input box foreground color for placeholder text.\"));\n// ----- input validation\nexport const inputValidationInfoBackground = registerColor('inputValidation.infoBackground', { dark: '#063B49', light: '#D6ECF2', hcDark: Color.black, hcLight: Color.white }, nls.localize('inputValidationInfoBackground', \"Input validation background color for information severity.\"));\nexport const inputValidationInfoForeground = registerColor('inputValidation.infoForeground', { dark: null, light: null, hcDark: null, hcLight: foreground }, nls.localize('inputValidationInfoForeground', \"Input validation foreground color for information severity.\"));\nexport const inputValidationInfoBorder = registerColor('inputValidation.infoBorder', { dark: '#007acc', light: '#007acc', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputValidationInfoBorder', \"Input validation border color for information severity.\"));\nexport const inputValidationWarningBackground = registerColor('inputValidation.warningBackground', { dark: '#352A05', light: '#F6F5D2', hcDark: Color.black, hcLight: Color.white }, nls.localize('inputValidationWarningBackground', \"Input validation background color for warning severity.\"));\nexport const inputValidationWarningForeground = registerColor('inputValidation.warningForeground', { dark: null, light: null, hcDark: null, hcLight: foreground }, nls.localize('inputValidationWarningForeground', \"Input validation foreground color for warning severity.\"));\nexport const inputValidationWarningBorder = registerColor('inputValidation.warningBorder', { dark: '#B89500', light: '#B89500', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputValidationWarningBorder', \"Input validation border color for warning severity.\"));\nexport const inputValidationErrorBackground = registerColor('inputValidation.errorBackground', { dark: '#5A1D1D', light: '#F2DEDE', hcDark: Color.black, hcLight: Color.white }, nls.localize('inputValidationErrorBackground', \"Input validation background color for error severity.\"));\nexport const inputValidationErrorForeground = registerColor('inputValidation.errorForeground', { dark: null, light: null, hcDark: null, hcLight: foreground }, nls.localize('inputValidationErrorForeground', \"Input validation foreground color for error severity.\"));\nexport const inputValidationErrorBorder = registerColor('inputValidation.errorBorder', { dark: '#BE1100', light: '#BE1100', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputValidationErrorBorder', \"Input validation border color for error severity.\"));\n// ----- select\nexport const selectBackground = registerColor('dropdown.background', { dark: '#3C3C3C', light: Color.white, hcDark: Color.black, hcLight: Color.white }, nls.localize('dropdownBackground', \"Dropdown background.\"));\nexport const selectListBackground = registerColor('dropdown.listBackground', { dark: null, light: null, hcDark: Color.black, hcLight: Color.white }, nls.localize('dropdownListBackground', \"Dropdown list background.\"));\nexport const selectForeground = registerColor('dropdown.foreground', { dark: '#F0F0F0', light: foreground, hcDark: Color.white, hcLight: foreground }, nls.localize('dropdownForeground', \"Dropdown foreground.\"));\nexport const selectBorder = registerColor('dropdown.border', { dark: selectBackground, light: '#CECECE', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('dropdownBorder', \"Dropdown border.\"));\n// ------ button\nexport const buttonForeground = registerColor('button.foreground', Color.white, nls.localize('buttonForeground', \"Button foreground color.\"));\nexport const buttonSeparator = registerColor('button.separator', transparent(buttonForeground, .4), nls.localize('buttonSeparator', \"Button separator color.\"));\nexport const buttonBackground = registerColor('button.background', { dark: '#0E639C', light: '#007ACC', hcDark: null, hcLight: '#0F4A85' }, nls.localize('buttonBackground', \"Button background color.\"));\nexport const buttonHoverBackground = registerColor('button.hoverBackground', { dark: lighten(buttonBackground, 0.2), light: darken(buttonBackground, 0.2), hcDark: buttonBackground, hcLight: buttonBackground }, nls.localize('buttonHoverBackground', \"Button background color when hovering.\"));\nexport const buttonBorder = registerColor('button.border', contrastBorder, nls.localize('buttonBorder', \"Button border color.\"));\nexport const buttonSecondaryForeground = registerColor('button.secondaryForeground', { dark: Color.white, light: Color.white, hcDark: Color.white, hcLight: foreground }, nls.localize('buttonSecondaryForeground', \"Secondary button foreground color.\"));\nexport const buttonSecondaryBackground = registerColor('button.secondaryBackground', { dark: '#3A3D41', light: '#5F6A79', hcDark: null, hcLight: Color.white }, nls.localize('buttonSecondaryBackground', \"Secondary button background color.\"));\nexport const buttonSecondaryHoverBackground = registerColor('button.secondaryHoverBackground', { dark: lighten(buttonSecondaryBackground, 0.2), light: darken(buttonSecondaryBackground, 0.2), hcDark: null, hcLight: null }, nls.localize('buttonSecondaryHoverBackground', \"Secondary button background color when hovering.\"));\n// ------ radio\nexport const radioActiveForeground = registerColor('radio.activeForeground', inputActiveOptionForeground, nls.localize('radioActiveForeground', \"Foreground color of active radio option.\"));\nexport const radioActiveBackground = registerColor('radio.activeBackground', inputActiveOptionBackground, nls.localize('radioBackground', \"Background color of active radio option.\"));\nexport const radioActiveBorder = registerColor('radio.activeBorder', inputActiveOptionBorder, nls.localize('radioActiveBorder', \"Border color of the active radio option.\"));\nexport const radioInactiveForeground = registerColor('radio.inactiveForeground', null, nls.localize('radioInactiveForeground', \"Foreground color of inactive radio option.\"));\nexport const radioInactiveBackground = registerColor('radio.inactiveBackground', null, nls.localize('radioInactiveBackground', \"Background color of inactive radio option.\"));\nexport const radioInactiveBorder = registerColor('radio.inactiveBorder', { light: transparent(radioActiveForeground, .2), dark: transparent(radioActiveForeground, .2), hcDark: transparent(radioActiveForeground, .4), hcLight: transparent(radioActiveForeground, .2) }, nls.localize('radioInactiveBorder', \"Border color of the inactive radio option.\"));\nexport const radioInactiveHoverBackground = registerColor('radio.inactiveHoverBackground', inputActiveOptionHoverBackground, nls.localize('radioHoverBackground', \"Background color of inactive active radio option when hovering.\"));\n// ------ checkbox\nexport const checkboxBackground = registerColor('checkbox.background', selectBackground, nls.localize('checkbox.background', \"Background color of checkbox widget.\"));\nexport const checkboxSelectBackground = registerColor('checkbox.selectBackground', editorWidgetBackground, nls.localize('checkbox.select.background', \"Background color of checkbox widget when the element it's in is selected.\"));\nexport const checkboxForeground = registerColor('checkbox.foreground', selectForeground, nls.localize('checkbox.foreground', \"Foreground color of checkbox widget.\"));\nexport const checkboxBorder = registerColor('checkbox.border', selectBorder, nls.localize('checkbox.border', \"Border color of checkbox widget.\"));\nexport const checkboxSelectBorder = registerColor('checkbox.selectBorder', iconForeground, nls.localize('checkbox.select.border', \"Border color of checkbox widget when the element it's in is selected.\"));\n// ------ keybinding label\nexport const keybindingLabelBackground = registerColor('keybindingLabel.background', { dark: new Color(new RGBA(128, 128, 128, 0.17)), light: new Color(new RGBA(221, 221, 221, 0.4)), hcDark: Color.transparent, hcLight: Color.transparent }, nls.localize('keybindingLabelBackground', \"Keybinding label background color. The keybinding label is used to represent a keyboard shortcut.\"));\nexport const keybindingLabelForeground = registerColor('keybindingLabel.foreground', { dark: Color.fromHex('#CCCCCC'), light: Color.fromHex('#555555'), hcDark: Color.white, hcLight: foreground }, nls.localize('keybindingLabelForeground', \"Keybinding label foreground color. The keybinding label is used to represent a keyboard shortcut.\"));\nexport const keybindingLabelBorder = registerColor('keybindingLabel.border', { dark: new Color(new RGBA(51, 51, 51, 0.6)), light: new Color(new RGBA(204, 204, 204, 0.4)), hcDark: new Color(new RGBA(111, 195, 223)), hcLight: contrastBorder }, nls.localize('keybindingLabelBorder', \"Keybinding label border color. The keybinding label is used to represent a keyboard shortcut.\"));\nexport const keybindingLabelBottomBorder = registerColor('keybindingLabel.bottomBorder', { dark: new Color(new RGBA(68, 68, 68, 0.6)), light: new Color(new RGBA(187, 187, 187, 0.4)), hcDark: new Color(new RGBA(111, 195, 223)), hcLight: foreground }, nls.localize('keybindingLabelBottomBorder', \"Keybinding label border bottom color. The keybinding label is used to represent a keyboard shortcut.\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { Color } from '../../../../base/common/color.js';\nimport { registerColor, darken, lighten, transparent, ifDefinedThenElse } from '../colorUtils.js';\n// Import the colors we need\nimport { foreground, contrastBorder, activeContrastBorder, focusBorder, iconForeground } from './baseColors.js';\nimport { editorWidgetBackground, editorFindMatchHighlightBorder, editorFindMatchHighlight, widgetShadow, editorWidgetForeground } from './editorColors.js';\nexport const listFocusBackground = registerColor('list.focusBackground', null, nls.localize('listFocusBackground', \"List/Tree background color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listFocusForeground = registerColor('list.focusForeground', null, nls.localize('listFocusForeground', \"List/Tree foreground color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listFocusOutline = registerColor('list.focusOutline', { dark: focusBorder, light: focusBorder, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('listFocusOutline', \"List/Tree outline color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listFocusAndSelectionOutline = registerColor('list.focusAndSelectionOutline', null, nls.localize('listFocusAndSelectionOutline', \"List/Tree outline color for the focused item when the list/tree is active and selected. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listActiveSelectionBackground = registerColor('list.activeSelectionBackground', { dark: '#04395E', light: '#0060C0', hcDark: null, hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('listActiveSelectionBackground', \"List/Tree background color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listActiveSelectionForeground = registerColor('list.activeSelectionForeground', { dark: Color.white, light: Color.white, hcDark: null, hcLight: null }, nls.localize('listActiveSelectionForeground', \"List/Tree foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listActiveSelectionIconForeground = registerColor('list.activeSelectionIconForeground', null, nls.localize('listActiveSelectionIconForeground', \"List/Tree icon foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveSelectionBackground = registerColor('list.inactiveSelectionBackground', { dark: '#37373D', light: '#E4E6F1', hcDark: null, hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('listInactiveSelectionBackground', \"List/Tree background color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveSelectionForeground = registerColor('list.inactiveSelectionForeground', null, nls.localize('listInactiveSelectionForeground', \"List/Tree foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveSelectionIconForeground = registerColor('list.inactiveSelectionIconForeground', null, nls.localize('listInactiveSelectionIconForeground', \"List/Tree icon foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveFocusBackground = registerColor('list.inactiveFocusBackground', null, nls.localize('listInactiveFocusBackground', \"List/Tree background color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveFocusOutline = registerColor('list.inactiveFocusOutline', null, nls.localize('listInactiveFocusOutline', \"List/Tree outline color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listHoverBackground = registerColor('list.hoverBackground', { dark: '#2A2D2E', light: '#F0F0F0', hcDark: Color.white.transparent(0.1), hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('listHoverBackground', \"List/Tree background when hovering over items using the mouse.\"));\nexport const listHoverForeground = registerColor('list.hoverForeground', null, nls.localize('listHoverForeground', \"List/Tree foreground when hovering over items using the mouse.\"));\nexport const listDropOverBackground = registerColor('list.dropBackground', { dark: '#062F4A', light: '#D6EBFF', hcDark: null, hcLight: null }, nls.localize('listDropBackground', \"List/Tree drag and drop background when moving items over other items when using the mouse.\"));\nexport const listDropBetweenBackground = registerColor('list.dropBetweenBackground', { dark: iconForeground, light: iconForeground, hcDark: null, hcLight: null }, nls.localize('listDropBetweenBackground', \"List/Tree drag and drop border color when moving items between items when using the mouse.\"));\nexport const listHighlightForeground = registerColor('list.highlightForeground', { dark: '#2AAAFF', light: '#0066BF', hcDark: focusBorder, hcLight: focusBorder }, nls.localize('highlight', 'List/Tree foreground color of the match highlights when searching inside the list/tree.'));\nexport const listFocusHighlightForeground = registerColor('list.focusHighlightForeground', { dark: listHighlightForeground, light: ifDefinedThenElse(listActiveSelectionBackground, listHighlightForeground, '#BBE7FF'), hcDark: listHighlightForeground, hcLight: listHighlightForeground }, nls.localize('listFocusHighlightForeground', 'List/Tree foreground color of the match highlights on actively focused items when searching inside the list/tree.'));\nexport const listInvalidItemForeground = registerColor('list.invalidItemForeground', { dark: '#B89500', light: '#B89500', hcDark: '#B89500', hcLight: '#B5200D' }, nls.localize('invalidItemForeground', 'List/Tree foreground color for invalid items, for example an unresolved root in explorer.'));\nexport const listErrorForeground = registerColor('list.errorForeground', { dark: '#F88070', light: '#B01011', hcDark: null, hcLight: null }, nls.localize('listErrorForeground', 'Foreground color of list items containing errors.'));\nexport const listWarningForeground = registerColor('list.warningForeground', { dark: '#CCA700', light: '#855F00', hcDark: null, hcLight: null }, nls.localize('listWarningForeground', 'Foreground color of list items containing warnings.'));\nexport const listFilterWidgetBackground = registerColor('listFilterWidget.background', { light: darken(editorWidgetBackground, 0), dark: lighten(editorWidgetBackground, 0), hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('listFilterWidgetBackground', 'Background color of the type filter widget in lists and trees.'));\nexport const listFilterWidgetOutline = registerColor('listFilterWidget.outline', { dark: Color.transparent, light: Color.transparent, hcDark: '#f38518', hcLight: '#007ACC' }, nls.localize('listFilterWidgetOutline', 'Outline color of the type filter widget in lists and trees.'));\nexport const listFilterWidgetNoMatchesOutline = registerColor('listFilterWidget.noMatchesOutline', { dark: '#BE1100', light: '#BE1100', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('listFilterWidgetNoMatchesOutline', 'Outline color of the type filter widget in lists and trees, when there are no matches.'));\nexport const listFilterWidgetShadow = registerColor('listFilterWidget.shadow', widgetShadow, nls.localize('listFilterWidgetShadow', 'Shadow color of the type filter widget in lists and trees.'));\nexport const listFilterMatchHighlight = registerColor('list.filterMatchBackground', { dark: editorFindMatchHighlight, light: editorFindMatchHighlight, hcDark: null, hcLight: null }, nls.localize('listFilterMatchHighlight', 'Background color of the filtered match.'));\nexport const listFilterMatchHighlightBorder = registerColor('list.filterMatchBorder', { dark: editorFindMatchHighlightBorder, light: editorFindMatchHighlightBorder, hcDark: contrastBorder, hcLight: activeContrastBorder }, nls.localize('listFilterMatchHighlightBorder', 'Border color of the filtered match.'));\nexport const listDeemphasizedForeground = registerColor('list.deemphasizedForeground', { dark: '#8C8C8C', light: '#8E8E90', hcDark: '#A7A8A9', hcLight: '#666666' }, nls.localize('listDeemphasizedForeground', \"List/Tree foreground color for items that are deemphasized.\"));\n// ------ tree\nexport const treeIndentGuidesStroke = registerColor('tree.indentGuidesStroke', { dark: '#585858', light: '#a9a9a9', hcDark: '#a9a9a9', hcLight: '#a5a5a5' }, nls.localize('treeIndentGuidesStroke', \"Tree stroke color for the indentation guides.\"));\nexport const treeInactiveIndentGuidesStroke = registerColor('tree.inactiveIndentGuidesStroke', transparent(treeIndentGuidesStroke, 0.4), nls.localize('treeInactiveIndentGuidesStroke', \"Tree stroke color for the indentation guides that are not active.\"));\n// ------ table\nexport const tableColumnsBorder = registerColor('tree.tableColumnsBorder', { dark: '#CCCCCC20', light: '#61616120', hcDark: null, hcLight: null }, nls.localize('tableColumnsBorder', \"Table border color between columns.\"));\nexport const tableOddRowsBackgroundColor = registerColor('tree.tableOddRowsBackground', { dark: transparent(foreground, 0.04), light: transparent(foreground, 0.04), hcDark: null, hcLight: null }, nls.localize('tableOddRowsBackgroundColor', \"Background color for odd table rows.\"));\n// ------ action list\nexport const editorActionListBackground = registerColor('editorActionList.background', editorWidgetBackground, nls.localize('editorActionListBackground', \"Action List background color.\"));\nexport const editorActionListForeground = registerColor('editorActionList.foreground', editorWidgetForeground, nls.localize('editorActionListForeground', \"Action List foreground color.\"));\nexport const editorActionListFocusForeground = registerColor('editorActionList.focusForeground', listActiveSelectionForeground, nls.localize('editorActionListFocusForeground', \"Action List foreground color for the focused item.\"));\nexport const editorActionListFocusBackground = registerColor('editorActionList.focusBackground', listActiveSelectionBackground, nls.localize('editorActionListFocusBackground', \"Action List background color for the focused item.\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { registerColor } from '../colorUtils.js';\n// Import the colors we need\nimport { contrastBorder, activeContrastBorder } from './baseColors.js';\nimport { selectForeground, selectBackground } from './inputColors.js';\nimport { listActiveSelectionBackground, listActiveSelectionForeground } from './listColors.js';\nexport const menuBorder = registerColor('menu.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('menuBorder', \"Border color of menus.\"));\nexport const menuForeground = registerColor('menu.foreground', selectForeground, nls.localize('menuForeground', \"Foreground color of menu items.\"));\nexport const menuBackground = registerColor('menu.background', selectBackground, nls.localize('menuBackground', \"Background color of menu items.\"));\nexport const menuSelectionForeground = registerColor('menu.selectionForeground', listActiveSelectionForeground, nls.localize('menuSelectionForeground', \"Foreground color of the selected menu item in menus.\"));\nexport const menuSelectionBackground = registerColor('menu.selectionBackground', listActiveSelectionBackground, nls.localize('menuSelectionBackground', \"Background color of the selected menu item in menus.\"));\nexport const menuSelectionBorder = registerColor('menu.selectionBorder', { dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('menuSelectionBorder', \"Border color of the selected menu item in menus.\"));\nexport const menuSeparatorBackground = registerColor('menu.separatorBackground', { dark: '#606060', light: '#D4D4D4', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('menuSeparatorBackground', \"Color of a separator menu item in menus.\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { Color, RGBA } from '../../../../base/common/color.js';\nimport { registerColor, transparent } from '../colorUtils.js';\n// Import the colors we need\nimport { editorInfoForeground, editorWarningForeground, editorWarningBorder, editorInfoBorder } from './editorColors.js';\nimport { scrollbarSliderBackground, scrollbarSliderHoverBackground, scrollbarSliderActiveBackground } from './miscColors.js';\nexport const minimapFindMatch = registerColor('minimap.findMatchHighlight', { light: '#d18616', dark: '#d18616', hcDark: '#AB5A00', hcLight: '#0F4A85' }, nls.localize('minimapFindMatchHighlight', 'Minimap marker color for find matches.'), true);\nexport const minimapSelectionOccurrenceHighlight = registerColor('minimap.selectionOccurrenceHighlight', { light: '#c9c9c9', dark: '#676767', hcDark: '#ffffff', hcLight: '#0F4A85' }, nls.localize('minimapSelectionOccurrenceHighlight', 'Minimap marker color for repeating editor selections.'), true);\nexport const minimapSelection = registerColor('minimap.selectionHighlight', { light: '#ADD6FF', dark: '#264F78', hcDark: '#ffffff', hcLight: '#0F4A85' }, nls.localize('minimapSelectionHighlight', 'Minimap marker color for the editor selection.'), true);\nexport const minimapInfo = registerColor('minimap.infoHighlight', { dark: editorInfoForeground, light: editorInfoForeground, hcDark: editorInfoBorder, hcLight: editorInfoBorder }, nls.localize('minimapInfo', 'Minimap marker color for infos.'));\nexport const minimapWarning = registerColor('minimap.warningHighlight', { dark: editorWarningForeground, light: editorWarningForeground, hcDark: editorWarningBorder, hcLight: editorWarningBorder }, nls.localize('overviewRuleWarning', 'Minimap marker color for warnings.'));\nexport const minimapError = registerColor('minimap.errorHighlight', { dark: new Color(new RGBA(255, 18, 18, 0.7)), light: new Color(new RGBA(255, 18, 18, 0.7)), hcDark: new Color(new RGBA(255, 50, 50, 1)), hcLight: '#B5200D' }, nls.localize('minimapError', 'Minimap marker color for errors.'));\nexport const minimapBackground = registerColor('minimap.background', null, nls.localize('minimapBackground', \"Minimap background color.\"));\nexport const minimapForegroundOpacity = registerColor('minimap.foregroundOpacity', Color.fromHex('#000f'), nls.localize('minimapForegroundOpacity', 'Opacity of foreground elements rendered in the minimap. For example, \"#000000c0\" will render the elements with 75% opacity.'));\nexport const minimapSliderBackground = registerColor('minimapSlider.background', transparent(scrollbarSliderBackground, 0.5), nls.localize('minimapSliderBackground', \"Minimap slider background color.\"));\nexport const minimapSliderHoverBackground = registerColor('minimapSlider.hoverBackground', transparent(scrollbarSliderHoverBackground, 0.5), nls.localize('minimapSliderHoverBackground', \"Minimap slider background color when hovering.\"));\nexport const minimapSliderActiveBackground = registerColor('minimapSlider.activeBackground', transparent(scrollbarSliderActiveBackground, 0.5), nls.localize('minimapSliderActiveBackground', \"Minimap slider background color when clicked on.\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { Color } from '../../../../base/common/color.js';\nimport { registerColor, transparent } from '../colorUtils.js';\n// Import the colors we need\nimport { contrastBorder, focusBorder } from './baseColors.js';\n// ----- sash\nexport const sashHoverBorder = registerColor('sash.hoverBorder', focusBorder, nls.localize('sashActiveBorder', \"Border color of active sashes.\"));\n// ----- badge\nexport const badgeBackground = registerColor('badge.background', { dark: '#4D4D4D', light: '#C4C4C4', hcDark: Color.black, hcLight: '#0F4A85' }, nls.localize('badgeBackground', \"Badge background color. Badges are small information labels, e.g. for search results count.\"));\nexport const badgeForeground = registerColor('badge.foreground', { dark: Color.white, light: '#333', hcDark: Color.white, hcLight: Color.white }, nls.localize('badgeForeground', \"Badge foreground color. Badges are small information labels, e.g. for search results count.\"));\n// ----- scrollbar\nexport const scrollbarShadow = registerColor('scrollbar.shadow', { dark: '#000000', light: '#DDDDDD', hcDark: null, hcLight: null }, nls.localize('scrollbarShadow', \"Scrollbar shadow to indicate that the view is scrolled.\"));\nexport const scrollbarSliderBackground = registerColor('scrollbarSlider.background', { dark: Color.fromHex('#797979').transparent(0.4), light: Color.fromHex('#646464').transparent(0.4), hcDark: transparent(contrastBorder, 0.6), hcLight: transparent(contrastBorder, 0.4) }, nls.localize('scrollbarSliderBackground', \"Scrollbar slider background color.\"));\nexport const scrollbarSliderHoverBackground = registerColor('scrollbarSlider.hoverBackground', { dark: Color.fromHex('#646464').transparent(0.7), light: Color.fromHex('#646464').transparent(0.7), hcDark: transparent(contrastBorder, 0.8), hcLight: transparent(contrastBorder, 0.8) }, nls.localize('scrollbarSliderHoverBackground', \"Scrollbar slider background color when hovering.\"));\nexport const scrollbarSliderActiveBackground = registerColor('scrollbarSlider.activeBackground', { dark: Color.fromHex('#BFBFBF').transparent(0.4), light: Color.fromHex('#000000').transparent(0.6), hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('scrollbarSliderActiveBackground', \"Scrollbar slider background color when clicked on.\"));\n// ----- progress bar\nexport const progressBarBackground = registerColor('progressBar.background', { dark: Color.fromHex('#0E70C0'), light: Color.fromHex('#0E70C0'), hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('progressBarBackground', \"Background color of the progress bar that can show for long running operations.\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { Color, RGBA } from '../../../../base/common/color.js';\nimport { registerColor, oneOf } from '../colorUtils.js';\n// Import the colors we need\nimport { editorWidgetBackground, editorWidgetForeground } from './editorColors.js';\nimport { listActiveSelectionBackground, listActiveSelectionForeground, listActiveSelectionIconForeground } from './listColors.js';\nexport const quickInputBackground = registerColor('quickInput.background', editorWidgetBackground, nls.localize('pickerBackground', \"Quick picker background color. The quick picker widget is the container for pickers like the command palette.\"));\nexport const quickInputForeground = registerColor('quickInput.foreground', editorWidgetForeground, nls.localize('pickerForeground', \"Quick picker foreground color. The quick picker widget is the container for pickers like the command palette.\"));\nexport const quickInputTitleBackground = registerColor('quickInputTitle.background', { dark: new Color(new RGBA(255, 255, 255, 0.105)), light: new Color(new RGBA(0, 0, 0, 0.06)), hcDark: '#000000', hcLight: Color.white }, nls.localize('pickerTitleBackground', \"Quick picker title background color. The quick picker widget is the container for pickers like the command palette.\"));\nexport const pickerGroupForeground = registerColor('pickerGroup.foreground', { dark: '#3794FF', light: '#0066BF', hcDark: Color.white, hcLight: '#0F4A85' }, nls.localize('pickerGroupForeground', \"Quick picker color for grouping labels.\"));\nexport const pickerGroupBorder = registerColor('pickerGroup.border', { dark: '#3F3F46', light: '#CCCEDB', hcDark: Color.white, hcLight: '#0F4A85' }, nls.localize('pickerGroupBorder', \"Quick picker color for grouping borders.\"));\nexport const _deprecatedQuickInputListFocusBackground = registerColor('quickInput.list.focusBackground', null, '', undefined, nls.localize('quickInput.list.focusBackground deprecation', \"Please use quickInputList.focusBackground instead\"));\nexport const quickInputListFocusForeground = registerColor('quickInputList.focusForeground', listActiveSelectionForeground, nls.localize('quickInput.listFocusForeground', \"Quick picker foreground color for the focused item.\"));\nexport const quickInputListFocusIconForeground = registerColor('quickInputList.focusIconForeground', listActiveSelectionIconForeground, nls.localize('quickInput.listFocusIconForeground', \"Quick picker icon foreground color for the focused item.\"));\nexport const quickInputListFocusBackground = registerColor('quickInputList.focusBackground', { dark: oneOf(_deprecatedQuickInputListFocusBackground, listActiveSelectionBackground), light: oneOf(_deprecatedQuickInputListFocusBackground, listActiveSelectionBackground), hcDark: null, hcLight: null }, nls.localize('quickInput.listFocusBackground', \"Quick picker background color for the focused item.\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { registerColor, transparent } from '../colorUtils.js';\n// Import the colors we need\nimport { foreground } from './baseColors.js';\nimport { editorFindMatchHighlight, editorFindMatchHighlightBorder } from './editorColors.js';\nexport const searchResultsInfoForeground = registerColor('search.resultsInfoForeground', { light: foreground, dark: transparent(foreground, 0.65), hcDark: foreground, hcLight: foreground }, nls.localize('search.resultsInfoForeground', \"Color of the text in the search viewlet's completion message.\"));\n// ----- search editor (Distinct from normal editor find match to allow for better differentiation)\nexport const searchEditorFindMatch = registerColor('searchEditor.findMatchBackground', { light: transparent(editorFindMatchHighlight, 0.66), dark: transparent(editorFindMatchHighlight, 0.66), hcDark: editorFindMatchHighlight, hcLight: editorFindMatchHighlight }, nls.localize('searchEditor.queryMatch', \"Color of the Search Editor query matches.\"));\nexport const searchEditorFindMatchBorder = registerColor('searchEditor.findMatchBorder', { light: transparent(editorFindMatchHighlightBorder, 0.66), dark: transparent(editorFindMatchHighlightBorder, 0.66), hcDark: editorFindMatchHighlightBorder, hcLight: editorFindMatchHighlightBorder }, nls.localize('searchEditor.editorFindMatchBorder', \"Border color of the Search Editor query matches.\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Color scheme used by the OS and by color themes.\n */\nexport var ColorScheme;\n(function (ColorScheme) {\n    ColorScheme[\"DARK\"] = \"dark\";\n    ColorScheme[\"LIGHT\"] = \"light\";\n    ColorScheme[\"HIGH_CONTRAST_DARK\"] = \"hcDark\";\n    ColorScheme[\"HIGH_CONTRAST_LIGHT\"] = \"hcLight\";\n})(ColorScheme || (ColorScheme = {}));\nexport function isHighContrast(scheme) {\n    return scheme === ColorScheme.HIGH_CONTRAST_DARK || scheme === ColorScheme.HIGH_CONTRAST_LIGHT;\n}\nexport function isDark(scheme) {\n    return scheme === ColorScheme.DARK || scheme === ColorScheme.HIGH_CONTRAST_DARK;\n}\n","import { Emitter } from '../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport * as platform from '../../registry/common/platform.js';\nimport { ColorScheme } from './theme.js';\nexport const IThemeService = createDecorator('themeService');\nexport function themeColorFromId(id) {\n    return { id };\n}\nexport function getThemeTypeSelector(type) {\n    switch (type) {\n        case ColorScheme.DARK: return 'vs-dark';\n        case ColorScheme.HIGH_CONTRAST_DARK: return 'hc-black';\n        case ColorScheme.HIGH_CONTRAST_LIGHT: return 'hc-light';\n        default: return 'vs';\n    }\n}\n// static theming participant\nexport const Extensions = {\n    ThemingContribution: 'base.contributions.theming'\n};\nclass ThemingRegistry {\n    constructor() {\n        this.themingParticipants = [];\n        this.themingParticipants = [];\n        this.onThemingParticipantAddedEmitter = new Emitter();\n    }\n    onColorThemeChange(participant) {\n        this.themingParticipants.push(participant);\n        this.onThemingParticipantAddedEmitter.fire(participant);\n        return toDisposable(() => {\n            const idx = this.themingParticipants.indexOf(participant);\n            this.themingParticipants.splice(idx, 1);\n        });\n    }\n    getThemingParticipants() {\n        return this.themingParticipants;\n    }\n}\nconst themingRegistry = new ThemingRegistry();\nplatform.Registry.add(Extensions.ThemingContribution, themingRegistry);\nexport function registerThemingParticipant(participant) {\n    return themingRegistry.onColorThemeChange(participant);\n}\n/**\n * Utility base class for all themable components.\n */\nexport class Themable extends Disposable {\n    constructor(themeService) {\n        super();\n        this.themeService = themeService;\n        this.theme = themeService.getColorTheme();\n        // Hook up to theme changes\n        this._register(this.themeService.onDidColorThemeChange(theme => this.onThemeChange(theme)));\n    }\n    onThemeChange(theme) {\n        this.theme = theme;\n        this.updateStyles();\n    }\n    updateStyles() {\n        // Subclasses to override\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IUndoRedoService = createDecorator('undoRedoService');\nexport class ResourceEditStackSnapshot {\n    constructor(resource, elements) {\n        this.resource = resource;\n        this.elements = elements;\n    }\n}\nexport class UndoRedoGroup {\n    static { this._ID = 0; }\n    constructor() {\n        this.id = UndoRedoGroup._ID++;\n        this.order = 1;\n    }\n    nextOrder() {\n        if (this.id === 0) {\n            return 0;\n        }\n        return this.order++;\n    }\n    static { this.None = new UndoRedoGroup(); }\n}\nexport class UndoRedoSource {\n    static { this._ID = 0; }\n    constructor() {\n        this.id = UndoRedoSource._ID++;\n        this.order = 1;\n    }\n    nextOrder() {\n        if (this.id === 0) {\n            return 0;\n        }\n        return this.order++;\n    }\n    static { this.None = new UndoRedoSource(); }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","// The chunk loading function for additional chunks\n// Since all referenced chunks are already included\n// in this file, this function is empty here.\n__webpack_require__.e = () => (Promise.resolve());","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.2(404545bded1df6ffa41ea0af4e8ddb219018c6c1)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/language/json/json.worker.ts\nimport * as worker from \"../../editor/editor.worker.js\";\n\n// node_modules/jsonc-parser/lib/esm/impl/scanner.js\nfunction createScanner(text, ignoreTrivia = false) {\n  const len = text.length;\n  let pos = 0, value = \"\", tokenOffset = 0, token = 16, lineNumber = 0, lineStartOffset = 0, tokenLineStartOffset = 0, prevTokenLineStartOffset = 0, scanError = 0;\n  function scanHexDigits(count, exact) {\n    let digits = 0;\n    let value2 = 0;\n    while (digits < count || !exact) {\n      let ch = text.charCodeAt(pos);\n      if (ch >= 48 && ch <= 57) {\n        value2 = value2 * 16 + ch - 48;\n      } else if (ch >= 65 && ch <= 70) {\n        value2 = value2 * 16 + ch - 65 + 10;\n      } else if (ch >= 97 && ch <= 102) {\n        value2 = value2 * 16 + ch - 97 + 10;\n      } else {\n        break;\n      }\n      pos++;\n      digits++;\n    }\n    if (digits < count) {\n      value2 = -1;\n    }\n    return value2;\n  }\n  function setPosition(newPosition) {\n    pos = newPosition;\n    value = \"\";\n    tokenOffset = 0;\n    token = 16;\n    scanError = 0;\n  }\n  function scanNumber() {\n    let start = pos;\n    if (text.charCodeAt(pos) === 48) {\n      pos++;\n    } else {\n      pos++;\n      while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n        pos++;\n      }\n    }\n    if (pos < text.length && text.charCodeAt(pos) === 46) {\n      pos++;\n      if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n        pos++;\n        while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n          pos++;\n        }\n      } else {\n        scanError = 3;\n        return text.substring(start, pos);\n      }\n    }\n    let end = pos;\n    if (pos < text.length && (text.charCodeAt(pos) === 69 || text.charCodeAt(pos) === 101)) {\n      pos++;\n      if (pos < text.length && text.charCodeAt(pos) === 43 || text.charCodeAt(pos) === 45) {\n        pos++;\n      }\n      if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n        pos++;\n        while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n          pos++;\n        }\n        end = pos;\n      } else {\n        scanError = 3;\n      }\n    }\n    return text.substring(start, end);\n  }\n  function scanString() {\n    let result = \"\", start = pos;\n    while (true) {\n      if (pos >= len) {\n        result += text.substring(start, pos);\n        scanError = 2;\n        break;\n      }\n      const ch = text.charCodeAt(pos);\n      if (ch === 34) {\n        result += text.substring(start, pos);\n        pos++;\n        break;\n      }\n      if (ch === 92) {\n        result += text.substring(start, pos);\n        pos++;\n        if (pos >= len) {\n          scanError = 2;\n          break;\n        }\n        const ch2 = text.charCodeAt(pos++);\n        switch (ch2) {\n          case 34:\n            result += '\"';\n            break;\n          case 92:\n            result += \"\\\\\";\n            break;\n          case 47:\n            result += \"/\";\n            break;\n          case 98:\n            result += \"\\b\";\n            break;\n          case 102:\n            result += \"\\f\";\n            break;\n          case 110:\n            result += \"\\n\";\n            break;\n          case 114:\n            result += \"\\r\";\n            break;\n          case 116:\n            result += \"\t\";\n            break;\n          case 117:\n            const ch3 = scanHexDigits(4, true);\n            if (ch3 >= 0) {\n              result += String.fromCharCode(ch3);\n            } else {\n              scanError = 4;\n            }\n            break;\n          default:\n            scanError = 5;\n        }\n        start = pos;\n        continue;\n      }\n      if (ch >= 0 && ch <= 31) {\n        if (isLineBreak(ch)) {\n          result += text.substring(start, pos);\n          scanError = 2;\n          break;\n        } else {\n          scanError = 6;\n        }\n      }\n      pos++;\n    }\n    return result;\n  }\n  function scanNext() {\n    value = \"\";\n    scanError = 0;\n    tokenOffset = pos;\n    lineStartOffset = lineNumber;\n    prevTokenLineStartOffset = tokenLineStartOffset;\n    if (pos >= len) {\n      tokenOffset = len;\n      return token = 17;\n    }\n    let code = text.charCodeAt(pos);\n    if (isWhiteSpace(code)) {\n      do {\n        pos++;\n        value += String.fromCharCode(code);\n        code = text.charCodeAt(pos);\n      } while (isWhiteSpace(code));\n      return token = 15;\n    }\n    if (isLineBreak(code)) {\n      pos++;\n      value += String.fromCharCode(code);\n      if (code === 13 && text.charCodeAt(pos) === 10) {\n        pos++;\n        value += \"\\n\";\n      }\n      lineNumber++;\n      tokenLineStartOffset = pos;\n      return token = 14;\n    }\n    switch (code) {\n      case 123:\n        pos++;\n        return token = 1;\n      case 125:\n        pos++;\n        return token = 2;\n      case 91:\n        pos++;\n        return token = 3;\n      case 93:\n        pos++;\n        return token = 4;\n      case 58:\n        pos++;\n        return token = 6;\n      case 44:\n        pos++;\n        return token = 5;\n      case 34:\n        pos++;\n        value = scanString();\n        return token = 10;\n      case 47:\n        const start = pos - 1;\n        if (text.charCodeAt(pos + 1) === 47) {\n          pos += 2;\n          while (pos < len) {\n            if (isLineBreak(text.charCodeAt(pos))) {\n              break;\n            }\n            pos++;\n          }\n          value = text.substring(start, pos);\n          return token = 12;\n        }\n        if (text.charCodeAt(pos + 1) === 42) {\n          pos += 2;\n          const safeLength = len - 1;\n          let commentClosed = false;\n          while (pos < safeLength) {\n            const ch = text.charCodeAt(pos);\n            if (ch === 42 && text.charCodeAt(pos + 1) === 47) {\n              pos += 2;\n              commentClosed = true;\n              break;\n            }\n            pos++;\n            if (isLineBreak(ch)) {\n              if (ch === 13 && text.charCodeAt(pos) === 10) {\n                pos++;\n              }\n              lineNumber++;\n              tokenLineStartOffset = pos;\n            }\n          }\n          if (!commentClosed) {\n            pos++;\n            scanError = 1;\n          }\n          value = text.substring(start, pos);\n          return token = 13;\n        }\n        value += String.fromCharCode(code);\n        pos++;\n        return token = 16;\n      case 45:\n        value += String.fromCharCode(code);\n        pos++;\n        if (pos === len || !isDigit(text.charCodeAt(pos))) {\n          return token = 16;\n        }\n      case 48:\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        value += scanNumber();\n        return token = 11;\n      default:\n        while (pos < len && isUnknownContentCharacter(code)) {\n          pos++;\n          code = text.charCodeAt(pos);\n        }\n        if (tokenOffset !== pos) {\n          value = text.substring(tokenOffset, pos);\n          switch (value) {\n            case \"true\":\n              return token = 8;\n            case \"false\":\n              return token = 9;\n            case \"null\":\n              return token = 7;\n          }\n          return token = 16;\n        }\n        value += String.fromCharCode(code);\n        pos++;\n        return token = 16;\n    }\n  }\n  function isUnknownContentCharacter(code) {\n    if (isWhiteSpace(code) || isLineBreak(code)) {\n      return false;\n    }\n    switch (code) {\n      case 125:\n      case 93:\n      case 123:\n      case 91:\n      case 34:\n      case 58:\n      case 44:\n      case 47:\n        return false;\n    }\n    return true;\n  }\n  function scanNextNonTrivia() {\n    let result;\n    do {\n      result = scanNext();\n    } while (result >= 12 && result <= 15);\n    return result;\n  }\n  return {\n    setPosition,\n    getPosition: () => pos,\n    scan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n    getToken: () => token,\n    getTokenValue: () => value,\n    getTokenOffset: () => tokenOffset,\n    getTokenLength: () => pos - tokenOffset,\n    getTokenStartLine: () => lineStartOffset,\n    getTokenStartCharacter: () => tokenOffset - prevTokenLineStartOffset,\n    getTokenError: () => scanError\n  };\n}\nfunction isWhiteSpace(ch) {\n  return ch === 32 || ch === 9;\n}\nfunction isLineBreak(ch) {\n  return ch === 10 || ch === 13;\n}\nfunction isDigit(ch) {\n  return ch >= 48 && ch <= 57;\n}\nvar CharacterCodes;\n(function(CharacterCodes2) {\n  CharacterCodes2[CharacterCodes2[\"lineFeed\"] = 10] = \"lineFeed\";\n  CharacterCodes2[CharacterCodes2[\"carriageReturn\"] = 13] = \"carriageReturn\";\n  CharacterCodes2[CharacterCodes2[\"space\"] = 32] = \"space\";\n  CharacterCodes2[CharacterCodes2[\"_0\"] = 48] = \"_0\";\n  CharacterCodes2[CharacterCodes2[\"_1\"] = 49] = \"_1\";\n  CharacterCodes2[CharacterCodes2[\"_2\"] = 50] = \"_2\";\n  CharacterCodes2[CharacterCodes2[\"_3\"] = 51] = \"_3\";\n  CharacterCodes2[CharacterCodes2[\"_4\"] = 52] = \"_4\";\n  CharacterCodes2[CharacterCodes2[\"_5\"] = 53] = \"_5\";\n  CharacterCodes2[CharacterCodes2[\"_6\"] = 54] = \"_6\";\n  CharacterCodes2[CharacterCodes2[\"_7\"] = 55] = \"_7\";\n  CharacterCodes2[CharacterCodes2[\"_8\"] = 56] = \"_8\";\n  CharacterCodes2[CharacterCodes2[\"_9\"] = 57] = \"_9\";\n  CharacterCodes2[CharacterCodes2[\"a\"] = 97] = \"a\";\n  CharacterCodes2[CharacterCodes2[\"b\"] = 98] = \"b\";\n  CharacterCodes2[CharacterCodes2[\"c\"] = 99] = \"c\";\n  CharacterCodes2[CharacterCodes2[\"d\"] = 100] = \"d\";\n  CharacterCodes2[CharacterCodes2[\"e\"] = 101] = \"e\";\n  CharacterCodes2[CharacterCodes2[\"f\"] = 102] = \"f\";\n  CharacterCodes2[CharacterCodes2[\"g\"] = 103] = \"g\";\n  CharacterCodes2[CharacterCodes2[\"h\"] = 104] = \"h\";\n  CharacterCodes2[CharacterCodes2[\"i\"] = 105] = \"i\";\n  CharacterCodes2[CharacterCodes2[\"j\"] = 106] = \"j\";\n  CharacterCodes2[CharacterCodes2[\"k\"] = 107] = \"k\";\n  CharacterCodes2[CharacterCodes2[\"l\"] = 108] = \"l\";\n  CharacterCodes2[CharacterCodes2[\"m\"] = 109] = \"m\";\n  CharacterCodes2[CharacterCodes2[\"n\"] = 110] = \"n\";\n  CharacterCodes2[CharacterCodes2[\"o\"] = 111] = \"o\";\n  CharacterCodes2[CharacterCodes2[\"p\"] = 112] = \"p\";\n  CharacterCodes2[CharacterCodes2[\"q\"] = 113] = \"q\";\n  CharacterCodes2[CharacterCodes2[\"r\"] = 114] = \"r\";\n  CharacterCodes2[CharacterCodes2[\"s\"] = 115] = \"s\";\n  CharacterCodes2[CharacterCodes2[\"t\"] = 116] = \"t\";\n  CharacterCodes2[CharacterCodes2[\"u\"] = 117] = \"u\";\n  CharacterCodes2[CharacterCodes2[\"v\"] = 118] = \"v\";\n  CharacterCodes2[CharacterCodes2[\"w\"] = 119] = \"w\";\n  CharacterCodes2[CharacterCodes2[\"x\"] = 120] = \"x\";\n  CharacterCodes2[CharacterCodes2[\"y\"] = 121] = \"y\";\n  CharacterCodes2[CharacterCodes2[\"z\"] = 122] = \"z\";\n  CharacterCodes2[CharacterCodes2[\"A\"] = 65] = \"A\";\n  CharacterCodes2[CharacterCodes2[\"B\"] = 66] = \"B\";\n  CharacterCodes2[CharacterCodes2[\"C\"] = 67] = \"C\";\n  CharacterCodes2[CharacterCodes2[\"D\"] = 68] = \"D\";\n  CharacterCodes2[CharacterCodes2[\"E\"] = 69] = \"E\";\n  CharacterCodes2[CharacterCodes2[\"F\"] = 70] = \"F\";\n  CharacterCodes2[CharacterCodes2[\"G\"] = 71] = \"G\";\n  CharacterCodes2[CharacterCodes2[\"H\"] = 72] = \"H\";\n  CharacterCodes2[CharacterCodes2[\"I\"] = 73] = \"I\";\n  CharacterCodes2[CharacterCodes2[\"J\"] = 74] = \"J\";\n  CharacterCodes2[CharacterCodes2[\"K\"] = 75] = \"K\";\n  CharacterCodes2[CharacterCodes2[\"L\"] = 76] = \"L\";\n  CharacterCodes2[CharacterCodes2[\"M\"] = 77] = \"M\";\n  CharacterCodes2[CharacterCodes2[\"N\"] = 78] = \"N\";\n  CharacterCodes2[CharacterCodes2[\"O\"] = 79] = \"O\";\n  CharacterCodes2[CharacterCodes2[\"P\"] = 80] = \"P\";\n  CharacterCodes2[CharacterCodes2[\"Q\"] = 81] = \"Q\";\n  CharacterCodes2[CharacterCodes2[\"R\"] = 82] = \"R\";\n  CharacterCodes2[CharacterCodes2[\"S\"] = 83] = \"S\";\n  CharacterCodes2[CharacterCodes2[\"T\"] = 84] = \"T\";\n  CharacterCodes2[CharacterCodes2[\"U\"] = 85] = \"U\";\n  CharacterCodes2[CharacterCodes2[\"V\"] = 86] = \"V\";\n  CharacterCodes2[CharacterCodes2[\"W\"] = 87] = \"W\";\n  CharacterCodes2[CharacterCodes2[\"X\"] = 88] = \"X\";\n  CharacterCodes2[CharacterCodes2[\"Y\"] = 89] = \"Y\";\n  CharacterCodes2[CharacterCodes2[\"Z\"] = 90] = \"Z\";\n  CharacterCodes2[CharacterCodes2[\"asterisk\"] = 42] = \"asterisk\";\n  CharacterCodes2[CharacterCodes2[\"backslash\"] = 92] = \"backslash\";\n  CharacterCodes2[CharacterCodes2[\"closeBrace\"] = 125] = \"closeBrace\";\n  CharacterCodes2[CharacterCodes2[\"closeBracket\"] = 93] = \"closeBracket\";\n  CharacterCodes2[CharacterCodes2[\"colon\"] = 58] = \"colon\";\n  CharacterCodes2[CharacterCodes2[\"comma\"] = 44] = \"comma\";\n  CharacterCodes2[CharacterCodes2[\"dot\"] = 46] = \"dot\";\n  CharacterCodes2[CharacterCodes2[\"doubleQuote\"] = 34] = \"doubleQuote\";\n  CharacterCodes2[CharacterCodes2[\"minus\"] = 45] = \"minus\";\n  CharacterCodes2[CharacterCodes2[\"openBrace\"] = 123] = \"openBrace\";\n  CharacterCodes2[CharacterCodes2[\"openBracket\"] = 91] = \"openBracket\";\n  CharacterCodes2[CharacterCodes2[\"plus\"] = 43] = \"plus\";\n  CharacterCodes2[CharacterCodes2[\"slash\"] = 47] = \"slash\";\n  CharacterCodes2[CharacterCodes2[\"formFeed\"] = 12] = \"formFeed\";\n  CharacterCodes2[CharacterCodes2[\"tab\"] = 9] = \"tab\";\n})(CharacterCodes || (CharacterCodes = {}));\n\n// node_modules/jsonc-parser/lib/esm/impl/string-intern.js\nvar cachedSpaces = new Array(20).fill(0).map((_, index) => {\n  return \" \".repeat(index);\n});\nvar maxCachedValues = 200;\nvar cachedBreakLinesWithSpaces = {\n  \" \": {\n    \"\\n\": new Array(maxCachedValues).fill(0).map((_, index) => {\n      return \"\\n\" + \" \".repeat(index);\n    }),\n    \"\\r\": new Array(maxCachedValues).fill(0).map((_, index) => {\n      return \"\\r\" + \" \".repeat(index);\n    }),\n    \"\\r\\n\": new Array(maxCachedValues).fill(0).map((_, index) => {\n      return \"\\r\\n\" + \" \".repeat(index);\n    })\n  },\n  \"\t\": {\n    \"\\n\": new Array(maxCachedValues).fill(0).map((_, index) => {\n      return \"\\n\" + \"\t\".repeat(index);\n    }),\n    \"\\r\": new Array(maxCachedValues).fill(0).map((_, index) => {\n      return \"\\r\" + \"\t\".repeat(index);\n    }),\n    \"\\r\\n\": new Array(maxCachedValues).fill(0).map((_, index) => {\n      return \"\\r\\n\" + \"\t\".repeat(index);\n    })\n  }\n};\nvar supportedEols = [\"\\n\", \"\\r\", \"\\r\\n\"];\n\n// node_modules/jsonc-parser/lib/esm/impl/format.js\nfunction format(documentText, range, options) {\n  let initialIndentLevel;\n  let formatText;\n  let formatTextStart;\n  let rangeStart;\n  let rangeEnd;\n  if (range) {\n    rangeStart = range.offset;\n    rangeEnd = rangeStart + range.length;\n    formatTextStart = rangeStart;\n    while (formatTextStart > 0 && !isEOL(documentText, formatTextStart - 1)) {\n      formatTextStart--;\n    }\n    let endOffset = rangeEnd;\n    while (endOffset < documentText.length && !isEOL(documentText, endOffset)) {\n      endOffset++;\n    }\n    formatText = documentText.substring(formatTextStart, endOffset);\n    initialIndentLevel = computeIndentLevel(formatText, options);\n  } else {\n    formatText = documentText;\n    initialIndentLevel = 0;\n    formatTextStart = 0;\n    rangeStart = 0;\n    rangeEnd = documentText.length;\n  }\n  const eol = getEOL(options, documentText);\n  const eolFastPathSupported = supportedEols.includes(eol);\n  let numberLineBreaks = 0;\n  let indentLevel = 0;\n  let indentValue;\n  if (options.insertSpaces) {\n    indentValue = cachedSpaces[options.tabSize || 4] ?? repeat(cachedSpaces[1], options.tabSize || 4);\n  } else {\n    indentValue = \"\t\";\n  }\n  const indentType = indentValue === \"\t\" ? \"\t\" : \" \";\n  let scanner = createScanner(formatText, false);\n  let hasError = false;\n  function newLinesAndIndent() {\n    if (numberLineBreaks > 1) {\n      return repeat(eol, numberLineBreaks) + repeat(indentValue, initialIndentLevel + indentLevel);\n    }\n    const amountOfSpaces = indentValue.length * (initialIndentLevel + indentLevel);\n    if (!eolFastPathSupported || amountOfSpaces > cachedBreakLinesWithSpaces[indentType][eol].length) {\n      return eol + repeat(indentValue, initialIndentLevel + indentLevel);\n    }\n    if (amountOfSpaces <= 0) {\n      return eol;\n    }\n    return cachedBreakLinesWithSpaces[indentType][eol][amountOfSpaces];\n  }\n  function scanNext() {\n    let token = scanner.scan();\n    numberLineBreaks = 0;\n    while (token === 15 || token === 14) {\n      if (token === 14 && options.keepLines) {\n        numberLineBreaks += 1;\n      } else if (token === 14) {\n        numberLineBreaks = 1;\n      }\n      token = scanner.scan();\n    }\n    hasError = token === 16 || scanner.getTokenError() !== 0;\n    return token;\n  }\n  const editOperations = [];\n  function addEdit(text, startOffset, endOffset) {\n    if (!hasError && (!range || startOffset < rangeEnd && endOffset > rangeStart) && documentText.substring(startOffset, endOffset) !== text) {\n      editOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\n    }\n  }\n  let firstToken = scanNext();\n  if (options.keepLines && numberLineBreaks > 0) {\n    addEdit(repeat(eol, numberLineBreaks), 0, 0);\n  }\n  if (firstToken !== 17) {\n    let firstTokenStart = scanner.getTokenOffset() + formatTextStart;\n    let initialIndent = indentValue.length * initialIndentLevel < 20 && options.insertSpaces ? cachedSpaces[indentValue.length * initialIndentLevel] : repeat(indentValue, initialIndentLevel);\n    addEdit(initialIndent, formatTextStart, firstTokenStart);\n  }\n  while (firstToken !== 17) {\n    let firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n    let secondToken = scanNext();\n    let replaceContent = \"\";\n    let needsLineBreak = false;\n    while (numberLineBreaks === 0 && (secondToken === 12 || secondToken === 13)) {\n      let commentTokenStart = scanner.getTokenOffset() + formatTextStart;\n      addEdit(cachedSpaces[1], firstTokenEnd, commentTokenStart);\n      firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n      needsLineBreak = secondToken === 12;\n      replaceContent = needsLineBreak ? newLinesAndIndent() : \"\";\n      secondToken = scanNext();\n    }\n    if (secondToken === 2) {\n      if (firstToken !== 1) {\n        indentLevel--;\n      }\n      ;\n      if (options.keepLines && numberLineBreaks > 0 || !options.keepLines && firstToken !== 1) {\n        replaceContent = newLinesAndIndent();\n      } else if (options.keepLines) {\n        replaceContent = cachedSpaces[1];\n      }\n    } else if (secondToken === 4) {\n      if (firstToken !== 3) {\n        indentLevel--;\n      }\n      ;\n      if (options.keepLines && numberLineBreaks > 0 || !options.keepLines && firstToken !== 3) {\n        replaceContent = newLinesAndIndent();\n      } else if (options.keepLines) {\n        replaceContent = cachedSpaces[1];\n      }\n    } else {\n      switch (firstToken) {\n        case 3:\n        case 1:\n          indentLevel++;\n          if (options.keepLines && numberLineBreaks > 0 || !options.keepLines) {\n            replaceContent = newLinesAndIndent();\n          } else {\n            replaceContent = cachedSpaces[1];\n          }\n          break;\n        case 5:\n          if (options.keepLines && numberLineBreaks > 0 || !options.keepLines) {\n            replaceContent = newLinesAndIndent();\n          } else {\n            replaceContent = cachedSpaces[1];\n          }\n          break;\n        case 12:\n          replaceContent = newLinesAndIndent();\n          break;\n        case 13:\n          if (numberLineBreaks > 0) {\n            replaceContent = newLinesAndIndent();\n          } else if (!needsLineBreak) {\n            replaceContent = cachedSpaces[1];\n          }\n          break;\n        case 6:\n          if (options.keepLines && numberLineBreaks > 0) {\n            replaceContent = newLinesAndIndent();\n          } else if (!needsLineBreak) {\n            replaceContent = cachedSpaces[1];\n          }\n          break;\n        case 10:\n          if (options.keepLines && numberLineBreaks > 0) {\n            replaceContent = newLinesAndIndent();\n          } else if (secondToken === 6 && !needsLineBreak) {\n            replaceContent = \"\";\n          }\n          break;\n        case 7:\n        case 8:\n        case 9:\n        case 11:\n        case 2:\n        case 4:\n          if (options.keepLines && numberLineBreaks > 0) {\n            replaceContent = newLinesAndIndent();\n          } else {\n            if ((secondToken === 12 || secondToken === 13) && !needsLineBreak) {\n              replaceContent = cachedSpaces[1];\n            } else if (secondToken !== 5 && secondToken !== 17) {\n              hasError = true;\n            }\n          }\n          break;\n        case 16:\n          hasError = true;\n          break;\n      }\n      if (numberLineBreaks > 0 && (secondToken === 12 || secondToken === 13)) {\n        replaceContent = newLinesAndIndent();\n      }\n    }\n    if (secondToken === 17) {\n      if (options.keepLines && numberLineBreaks > 0) {\n        replaceContent = newLinesAndIndent();\n      } else {\n        replaceContent = options.insertFinalNewline ? eol : \"\";\n      }\n    }\n    const secondTokenStart = scanner.getTokenOffset() + formatTextStart;\n    addEdit(replaceContent, firstTokenEnd, secondTokenStart);\n    firstToken = secondToken;\n  }\n  return editOperations;\n}\nfunction repeat(s, count) {\n  let result = \"\";\n  for (let i = 0; i < count; i++) {\n    result += s;\n  }\n  return result;\n}\nfunction computeIndentLevel(content, options) {\n  let i = 0;\n  let nChars = 0;\n  const tabSize = options.tabSize || 4;\n  while (i < content.length) {\n    let ch = content.charAt(i);\n    if (ch === cachedSpaces[1]) {\n      nChars++;\n    } else if (ch === \"\t\") {\n      nChars += tabSize;\n    } else {\n      break;\n    }\n    i++;\n  }\n  return Math.floor(nChars / tabSize);\n}\nfunction getEOL(options, text) {\n  for (let i = 0; i < text.length; i++) {\n    const ch = text.charAt(i);\n    if (ch === \"\\r\") {\n      if (i + 1 < text.length && text.charAt(i + 1) === \"\\n\") {\n        return \"\\r\\n\";\n      }\n      return \"\\r\";\n    } else if (ch === \"\\n\") {\n      return \"\\n\";\n    }\n  }\n  return options && options.eol || \"\\n\";\n}\nfunction isEOL(text, offset) {\n  return \"\\r\\n\".indexOf(text.charAt(offset)) !== -1;\n}\n\n// node_modules/jsonc-parser/lib/esm/impl/parser.js\nvar ParseOptions;\n(function(ParseOptions2) {\n  ParseOptions2.DEFAULT = {\n    allowTrailingComma: false\n  };\n})(ParseOptions || (ParseOptions = {}));\nfunction parse(text, errors = [], options = ParseOptions.DEFAULT) {\n  let currentProperty = null;\n  let currentParent = [];\n  const previousParents = [];\n  function onValue(value) {\n    if (Array.isArray(currentParent)) {\n      currentParent.push(value);\n    } else if (currentProperty !== null) {\n      currentParent[currentProperty] = value;\n    }\n  }\n  const visitor = {\n    onObjectBegin: () => {\n      const object = {};\n      onValue(object);\n      previousParents.push(currentParent);\n      currentParent = object;\n      currentProperty = null;\n    },\n    onObjectProperty: (name) => {\n      currentProperty = name;\n    },\n    onObjectEnd: () => {\n      currentParent = previousParents.pop();\n    },\n    onArrayBegin: () => {\n      const array = [];\n      onValue(array);\n      previousParents.push(currentParent);\n      currentParent = array;\n      currentProperty = null;\n    },\n    onArrayEnd: () => {\n      currentParent = previousParents.pop();\n    },\n    onLiteralValue: onValue,\n    onError: (error, offset, length) => {\n      errors.push({ error, offset, length });\n    }\n  };\n  visit(text, visitor, options);\n  return currentParent[0];\n}\nfunction getNodePath(node) {\n  if (!node.parent || !node.parent.children) {\n    return [];\n  }\n  const path = getNodePath(node.parent);\n  if (node.parent.type === \"property\") {\n    const key = node.parent.children[0].value;\n    path.push(key);\n  } else if (node.parent.type === \"array\") {\n    const index = node.parent.children.indexOf(node);\n    if (index !== -1) {\n      path.push(index);\n    }\n  }\n  return path;\n}\nfunction getNodeValue(node) {\n  switch (node.type) {\n    case \"array\":\n      return node.children.map(getNodeValue);\n    case \"object\":\n      const obj = /* @__PURE__ */ Object.create(null);\n      for (let prop of node.children) {\n        const valueNode = prop.children[1];\n        if (valueNode) {\n          obj[prop.children[0].value] = getNodeValue(valueNode);\n        }\n      }\n      return obj;\n    case \"null\":\n    case \"string\":\n    case \"number\":\n    case \"boolean\":\n      return node.value;\n    default:\n      return void 0;\n  }\n}\nfunction contains(node, offset, includeRightBound = false) {\n  return offset >= node.offset && offset < node.offset + node.length || includeRightBound && offset === node.offset + node.length;\n}\nfunction findNodeAtOffset(node, offset, includeRightBound = false) {\n  if (contains(node, offset, includeRightBound)) {\n    const children = node.children;\n    if (Array.isArray(children)) {\n      for (let i = 0; i < children.length && children[i].offset <= offset; i++) {\n        const item = findNodeAtOffset(children[i], offset, includeRightBound);\n        if (item) {\n          return item;\n        }\n      }\n    }\n    return node;\n  }\n  return void 0;\n}\nfunction visit(text, visitor, options = ParseOptions.DEFAULT) {\n  const _scanner = createScanner(text, false);\n  const _jsonPath = [];\n  function toNoArgVisit(visitFunction) {\n    return visitFunction ? () => visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter()) : () => true;\n  }\n  function toNoArgVisitWithPath(visitFunction) {\n    return visitFunction ? () => visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter(), () => _jsonPath.slice()) : () => true;\n  }\n  function toOneArgVisit(visitFunction) {\n    return visitFunction ? (arg) => visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter()) : () => true;\n  }\n  function toOneArgVisitWithPath(visitFunction) {\n    return visitFunction ? (arg) => visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter(), () => _jsonPath.slice()) : () => true;\n  }\n  const onObjectBegin = toNoArgVisitWithPath(visitor.onObjectBegin), onObjectProperty = toOneArgVisitWithPath(visitor.onObjectProperty), onObjectEnd = toNoArgVisit(visitor.onObjectEnd), onArrayBegin = toNoArgVisitWithPath(visitor.onArrayBegin), onArrayEnd = toNoArgVisit(visitor.onArrayEnd), onLiteralValue = toOneArgVisitWithPath(visitor.onLiteralValue), onSeparator = toOneArgVisit(visitor.onSeparator), onComment = toNoArgVisit(visitor.onComment), onError = toOneArgVisit(visitor.onError);\n  const disallowComments = options && options.disallowComments;\n  const allowTrailingComma = options && options.allowTrailingComma;\n  function scanNext() {\n    while (true) {\n      const token = _scanner.scan();\n      switch (_scanner.getTokenError()) {\n        case 4:\n          handleError(\n            14\n            /* ParseErrorCode.InvalidUnicode */\n          );\n          break;\n        case 5:\n          handleError(\n            15\n            /* ParseErrorCode.InvalidEscapeCharacter */\n          );\n          break;\n        case 3:\n          handleError(\n            13\n            /* ParseErrorCode.UnexpectedEndOfNumber */\n          );\n          break;\n        case 1:\n          if (!disallowComments) {\n            handleError(\n              11\n              /* ParseErrorCode.UnexpectedEndOfComment */\n            );\n          }\n          break;\n        case 2:\n          handleError(\n            12\n            /* ParseErrorCode.UnexpectedEndOfString */\n          );\n          break;\n        case 6:\n          handleError(\n            16\n            /* ParseErrorCode.InvalidCharacter */\n          );\n          break;\n      }\n      switch (token) {\n        case 12:\n        case 13:\n          if (disallowComments) {\n            handleError(\n              10\n              /* ParseErrorCode.InvalidCommentToken */\n            );\n          } else {\n            onComment();\n          }\n          break;\n        case 16:\n          handleError(\n            1\n            /* ParseErrorCode.InvalidSymbol */\n          );\n          break;\n        case 15:\n        case 14:\n          break;\n        default:\n          return token;\n      }\n    }\n  }\n  function handleError(error, skipUntilAfter = [], skipUntil = []) {\n    onError(error);\n    if (skipUntilAfter.length + skipUntil.length > 0) {\n      let token = _scanner.getToken();\n      while (token !== 17) {\n        if (skipUntilAfter.indexOf(token) !== -1) {\n          scanNext();\n          break;\n        } else if (skipUntil.indexOf(token) !== -1) {\n          break;\n        }\n        token = scanNext();\n      }\n    }\n  }\n  function parseString(isValue) {\n    const value = _scanner.getTokenValue();\n    if (isValue) {\n      onLiteralValue(value);\n    } else {\n      onObjectProperty(value);\n      _jsonPath.push(value);\n    }\n    scanNext();\n    return true;\n  }\n  function parseLiteral() {\n    switch (_scanner.getToken()) {\n      case 11:\n        const tokenValue = _scanner.getTokenValue();\n        let value = Number(tokenValue);\n        if (isNaN(value)) {\n          handleError(\n            2\n            /* ParseErrorCode.InvalidNumberFormat */\n          );\n          value = 0;\n        }\n        onLiteralValue(value);\n        break;\n      case 7:\n        onLiteralValue(null);\n        break;\n      case 8:\n        onLiteralValue(true);\n        break;\n      case 9:\n        onLiteralValue(false);\n        break;\n      default:\n        return false;\n    }\n    scanNext();\n    return true;\n  }\n  function parseProperty() {\n    if (_scanner.getToken() !== 10) {\n      handleError(3, [], [\n        2,\n        5\n        /* SyntaxKind.CommaToken */\n      ]);\n      return false;\n    }\n    parseString(false);\n    if (_scanner.getToken() === 6) {\n      onSeparator(\":\");\n      scanNext();\n      if (!parseValue()) {\n        handleError(4, [], [\n          2,\n          5\n          /* SyntaxKind.CommaToken */\n        ]);\n      }\n    } else {\n      handleError(5, [], [\n        2,\n        5\n        /* SyntaxKind.CommaToken */\n      ]);\n    }\n    _jsonPath.pop();\n    return true;\n  }\n  function parseObject() {\n    onObjectBegin();\n    scanNext();\n    let needsComma = false;\n    while (_scanner.getToken() !== 2 && _scanner.getToken() !== 17) {\n      if (_scanner.getToken() === 5) {\n        if (!needsComma) {\n          handleError(4, [], []);\n        }\n        onSeparator(\",\");\n        scanNext();\n        if (_scanner.getToken() === 2 && allowTrailingComma) {\n          break;\n        }\n      } else if (needsComma) {\n        handleError(6, [], []);\n      }\n      if (!parseProperty()) {\n        handleError(4, [], [\n          2,\n          5\n          /* SyntaxKind.CommaToken */\n        ]);\n      }\n      needsComma = true;\n    }\n    onObjectEnd();\n    if (_scanner.getToken() !== 2) {\n      handleError(7, [\n        2\n        /* SyntaxKind.CloseBraceToken */\n      ], []);\n    } else {\n      scanNext();\n    }\n    return true;\n  }\n  function parseArray() {\n    onArrayBegin();\n    scanNext();\n    let isFirstElement = true;\n    let needsComma = false;\n    while (_scanner.getToken() !== 4 && _scanner.getToken() !== 17) {\n      if (_scanner.getToken() === 5) {\n        if (!needsComma) {\n          handleError(4, [], []);\n        }\n        onSeparator(\",\");\n        scanNext();\n        if (_scanner.getToken() === 4 && allowTrailingComma) {\n          break;\n        }\n      } else if (needsComma) {\n        handleError(6, [], []);\n      }\n      if (isFirstElement) {\n        _jsonPath.push(0);\n        isFirstElement = false;\n      } else {\n        _jsonPath[_jsonPath.length - 1]++;\n      }\n      if (!parseValue()) {\n        handleError(4, [], [\n          4,\n          5\n          /* SyntaxKind.CommaToken */\n        ]);\n      }\n      needsComma = true;\n    }\n    onArrayEnd();\n    if (!isFirstElement) {\n      _jsonPath.pop();\n    }\n    if (_scanner.getToken() !== 4) {\n      handleError(8, [\n        4\n        /* SyntaxKind.CloseBracketToken */\n      ], []);\n    } else {\n      scanNext();\n    }\n    return true;\n  }\n  function parseValue() {\n    switch (_scanner.getToken()) {\n      case 3:\n        return parseArray();\n      case 1:\n        return parseObject();\n      case 10:\n        return parseString(true);\n      default:\n        return parseLiteral();\n    }\n  }\n  scanNext();\n  if (_scanner.getToken() === 17) {\n    if (options.allowEmptyContent) {\n      return true;\n    }\n    handleError(4, [], []);\n    return false;\n  }\n  if (!parseValue()) {\n    handleError(4, [], []);\n    return false;\n  }\n  if (_scanner.getToken() !== 17) {\n    handleError(9, [], []);\n  }\n  return true;\n}\n\n// node_modules/jsonc-parser/lib/esm/main.js\nvar createScanner2 = createScanner;\nvar ScanError;\n(function(ScanError2) {\n  ScanError2[ScanError2[\"None\"] = 0] = \"None\";\n  ScanError2[ScanError2[\"UnexpectedEndOfComment\"] = 1] = \"UnexpectedEndOfComment\";\n  ScanError2[ScanError2[\"UnexpectedEndOfString\"] = 2] = \"UnexpectedEndOfString\";\n  ScanError2[ScanError2[\"UnexpectedEndOfNumber\"] = 3] = \"UnexpectedEndOfNumber\";\n  ScanError2[ScanError2[\"InvalidUnicode\"] = 4] = \"InvalidUnicode\";\n  ScanError2[ScanError2[\"InvalidEscapeCharacter\"] = 5] = \"InvalidEscapeCharacter\";\n  ScanError2[ScanError2[\"InvalidCharacter\"] = 6] = \"InvalidCharacter\";\n})(ScanError || (ScanError = {}));\nvar SyntaxKind;\n(function(SyntaxKind2) {\n  SyntaxKind2[SyntaxKind2[\"OpenBraceToken\"] = 1] = \"OpenBraceToken\";\n  SyntaxKind2[SyntaxKind2[\"CloseBraceToken\"] = 2] = \"CloseBraceToken\";\n  SyntaxKind2[SyntaxKind2[\"OpenBracketToken\"] = 3] = \"OpenBracketToken\";\n  SyntaxKind2[SyntaxKind2[\"CloseBracketToken\"] = 4] = \"CloseBracketToken\";\n  SyntaxKind2[SyntaxKind2[\"CommaToken\"] = 5] = \"CommaToken\";\n  SyntaxKind2[SyntaxKind2[\"ColonToken\"] = 6] = \"ColonToken\";\n  SyntaxKind2[SyntaxKind2[\"NullKeyword\"] = 7] = \"NullKeyword\";\n  SyntaxKind2[SyntaxKind2[\"TrueKeyword\"] = 8] = \"TrueKeyword\";\n  SyntaxKind2[SyntaxKind2[\"FalseKeyword\"] = 9] = \"FalseKeyword\";\n  SyntaxKind2[SyntaxKind2[\"StringLiteral\"] = 10] = \"StringLiteral\";\n  SyntaxKind2[SyntaxKind2[\"NumericLiteral\"] = 11] = \"NumericLiteral\";\n  SyntaxKind2[SyntaxKind2[\"LineCommentTrivia\"] = 12] = \"LineCommentTrivia\";\n  SyntaxKind2[SyntaxKind2[\"BlockCommentTrivia\"] = 13] = \"BlockCommentTrivia\";\n  SyntaxKind2[SyntaxKind2[\"LineBreakTrivia\"] = 14] = \"LineBreakTrivia\";\n  SyntaxKind2[SyntaxKind2[\"Trivia\"] = 15] = \"Trivia\";\n  SyntaxKind2[SyntaxKind2[\"Unknown\"] = 16] = \"Unknown\";\n  SyntaxKind2[SyntaxKind2[\"EOF\"] = 17] = \"EOF\";\n})(SyntaxKind || (SyntaxKind = {}));\nvar parse2 = parse;\nvar findNodeAtOffset2 = findNodeAtOffset;\nvar getNodePath2 = getNodePath;\nvar getNodeValue2 = getNodeValue;\nvar ParseErrorCode;\n(function(ParseErrorCode2) {\n  ParseErrorCode2[ParseErrorCode2[\"InvalidSymbol\"] = 1] = \"InvalidSymbol\";\n  ParseErrorCode2[ParseErrorCode2[\"InvalidNumberFormat\"] = 2] = \"InvalidNumberFormat\";\n  ParseErrorCode2[ParseErrorCode2[\"PropertyNameExpected\"] = 3] = \"PropertyNameExpected\";\n  ParseErrorCode2[ParseErrorCode2[\"ValueExpected\"] = 4] = \"ValueExpected\";\n  ParseErrorCode2[ParseErrorCode2[\"ColonExpected\"] = 5] = \"ColonExpected\";\n  ParseErrorCode2[ParseErrorCode2[\"CommaExpected\"] = 6] = \"CommaExpected\";\n  ParseErrorCode2[ParseErrorCode2[\"CloseBraceExpected\"] = 7] = \"CloseBraceExpected\";\n  ParseErrorCode2[ParseErrorCode2[\"CloseBracketExpected\"] = 8] = \"CloseBracketExpected\";\n  ParseErrorCode2[ParseErrorCode2[\"EndOfFileExpected\"] = 9] = \"EndOfFileExpected\";\n  ParseErrorCode2[ParseErrorCode2[\"InvalidCommentToken\"] = 10] = \"InvalidCommentToken\";\n  ParseErrorCode2[ParseErrorCode2[\"UnexpectedEndOfComment\"] = 11] = \"UnexpectedEndOfComment\";\n  ParseErrorCode2[ParseErrorCode2[\"UnexpectedEndOfString\"] = 12] = \"UnexpectedEndOfString\";\n  ParseErrorCode2[ParseErrorCode2[\"UnexpectedEndOfNumber\"] = 13] = \"UnexpectedEndOfNumber\";\n  ParseErrorCode2[ParseErrorCode2[\"InvalidUnicode\"] = 14] = \"InvalidUnicode\";\n  ParseErrorCode2[ParseErrorCode2[\"InvalidEscapeCharacter\"] = 15] = \"InvalidEscapeCharacter\";\n  ParseErrorCode2[ParseErrorCode2[\"InvalidCharacter\"] = 16] = \"InvalidCharacter\";\n})(ParseErrorCode || (ParseErrorCode = {}));\nfunction format2(documentText, range, options) {\n  return format(documentText, range, options);\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/utils/objects.js\nfunction equals(one, other) {\n  if (one === other) {\n    return true;\n  }\n  if (one === null || one === void 0 || other === null || other === void 0) {\n    return false;\n  }\n  if (typeof one !== typeof other) {\n    return false;\n  }\n  if (typeof one !== \"object\") {\n    return false;\n  }\n  if (Array.isArray(one) !== Array.isArray(other)) {\n    return false;\n  }\n  let i, key;\n  if (Array.isArray(one)) {\n    if (one.length !== other.length) {\n      return false;\n    }\n    for (i = 0; i < one.length; i++) {\n      if (!equals(one[i], other[i])) {\n        return false;\n      }\n    }\n  } else {\n    const oneKeys = [];\n    for (key in one) {\n      oneKeys.push(key);\n    }\n    oneKeys.sort();\n    const otherKeys = [];\n    for (key in other) {\n      otherKeys.push(key);\n    }\n    otherKeys.sort();\n    if (!equals(oneKeys, otherKeys)) {\n      return false;\n    }\n    for (i = 0; i < oneKeys.length; i++) {\n      if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\nfunction isNumber(val) {\n  return typeof val === \"number\";\n}\nfunction isDefined(val) {\n  return typeof val !== \"undefined\";\n}\nfunction isBoolean(val) {\n  return typeof val === \"boolean\";\n}\nfunction isString(val) {\n  return typeof val === \"string\";\n}\nfunction isObject(val) {\n  return typeof val === \"object\" && val !== null && !Array.isArray(val);\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/utils/strings.js\nfunction startsWith(haystack, needle) {\n  if (haystack.length < needle.length) {\n    return false;\n  }\n  for (let i = 0; i < needle.length; i++) {\n    if (haystack[i] !== needle[i]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction endsWith(haystack, needle) {\n  const diff = haystack.length - needle.length;\n  if (diff > 0) {\n    return haystack.lastIndexOf(needle) === diff;\n  } else if (diff === 0) {\n    return haystack === needle;\n  } else {\n    return false;\n  }\n}\nfunction extendedRegExp(pattern) {\n  let flags = \"\";\n  if (startsWith(pattern, \"(?i)\")) {\n    pattern = pattern.substring(4);\n    flags = \"i\";\n  }\n  try {\n    return new RegExp(pattern, flags + \"u\");\n  } catch (e) {\n    try {\n      return new RegExp(pattern, flags);\n    } catch (e2) {\n      return void 0;\n    }\n  }\n}\nfunction stringLength(str) {\n  let count = 0;\n  for (let i = 0; i < str.length; i++) {\n    count++;\n    const code = str.charCodeAt(i);\n    if (55296 <= code && code <= 56319) {\n      i++;\n    }\n  }\n  return count;\n}\n\n// node_modules/vscode-languageserver-types/lib/esm/main.js\nvar DocumentUri;\n(function(DocumentUri2) {\n  function is(value) {\n    return typeof value === \"string\";\n  }\n  DocumentUri2.is = is;\n})(DocumentUri || (DocumentUri = {}));\nvar URI;\n(function(URI3) {\n  function is(value) {\n    return typeof value === \"string\";\n  }\n  URI3.is = is;\n})(URI || (URI = {}));\nvar integer;\n(function(integer2) {\n  integer2.MIN_VALUE = -2147483648;\n  integer2.MAX_VALUE = 2147483647;\n  function is(value) {\n    return typeof value === \"number\" && integer2.MIN_VALUE <= value && value <= integer2.MAX_VALUE;\n  }\n  integer2.is = is;\n})(integer || (integer = {}));\nvar uinteger;\n(function(uinteger2) {\n  uinteger2.MIN_VALUE = 0;\n  uinteger2.MAX_VALUE = 2147483647;\n  function is(value) {\n    return typeof value === \"number\" && uinteger2.MIN_VALUE <= value && value <= uinteger2.MAX_VALUE;\n  }\n  uinteger2.is = is;\n})(uinteger || (uinteger = {}));\nvar Position;\n(function(Position2) {\n  function create(line, character) {\n    if (line === Number.MAX_VALUE) {\n      line = uinteger.MAX_VALUE;\n    }\n    if (character === Number.MAX_VALUE) {\n      character = uinteger.MAX_VALUE;\n    }\n    return { line, character };\n  }\n  Position2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.objectLiteral(candidate) && Is.uinteger(candidate.line) && Is.uinteger(candidate.character);\n  }\n  Position2.is = is;\n})(Position || (Position = {}));\nvar Range;\n(function(Range2) {\n  function create(one, two, three, four) {\n    if (Is.uinteger(one) && Is.uinteger(two) && Is.uinteger(three) && Is.uinteger(four)) {\n      return { start: Position.create(one, two), end: Position.create(three, four) };\n    } else if (Position.is(one) && Position.is(two)) {\n      return { start: one, end: two };\n    } else {\n      throw new Error(`Range#create called with invalid arguments[${one}, ${two}, ${three}, ${four}]`);\n    }\n  }\n  Range2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n  }\n  Range2.is = is;\n})(Range || (Range = {}));\nvar Location;\n(function(Location2) {\n  function create(uri, range) {\n    return { uri, range };\n  }\n  Location2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.objectLiteral(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n  }\n  Location2.is = is;\n})(Location || (Location = {}));\nvar LocationLink;\n(function(LocationLink2) {\n  function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\n    return { targetUri, targetRange, targetSelectionRange, originSelectionRange };\n  }\n  LocationLink2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.objectLiteral(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri) && Range.is(candidate.targetSelectionRange) && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\n  }\n  LocationLink2.is = is;\n})(LocationLink || (LocationLink = {}));\nvar Color;\n(function(Color2) {\n  function create(red, green, blue, alpha) {\n    return {\n      red,\n      green,\n      blue,\n      alpha\n    };\n  }\n  Color2.create = create;\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && Is.numberRange(candidate.red, 0, 1) && Is.numberRange(candidate.green, 0, 1) && Is.numberRange(candidate.blue, 0, 1) && Is.numberRange(candidate.alpha, 0, 1);\n  }\n  Color2.is = is;\n})(Color || (Color = {}));\nvar ColorInformation;\n(function(ColorInformation2) {\n  function create(range, color) {\n    return {\n      range,\n      color\n    };\n  }\n  ColorInformation2.create = create;\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && Range.is(candidate.range) && Color.is(candidate.color);\n  }\n  ColorInformation2.is = is;\n})(ColorInformation || (ColorInformation = {}));\nvar ColorPresentation;\n(function(ColorPresentation2) {\n  function create(label, textEdit, additionalTextEdits) {\n    return {\n      label,\n      textEdit,\n      additionalTextEdits\n    };\n  }\n  ColorPresentation2.create = create;\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && Is.string(candidate.label) && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate)) && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n  }\n  ColorPresentation2.is = is;\n})(ColorPresentation || (ColorPresentation = {}));\nvar FoldingRangeKind;\n(function(FoldingRangeKind2) {\n  FoldingRangeKind2.Comment = \"comment\";\n  FoldingRangeKind2.Imports = \"imports\";\n  FoldingRangeKind2.Region = \"region\";\n})(FoldingRangeKind || (FoldingRangeKind = {}));\nvar FoldingRange;\n(function(FoldingRange2) {\n  function create(startLine, endLine, startCharacter, endCharacter, kind, collapsedText) {\n    const result = {\n      startLine,\n      endLine\n    };\n    if (Is.defined(startCharacter)) {\n      result.startCharacter = startCharacter;\n    }\n    if (Is.defined(endCharacter)) {\n      result.endCharacter = endCharacter;\n    }\n    if (Is.defined(kind)) {\n      result.kind = kind;\n    }\n    if (Is.defined(collapsedText)) {\n      result.collapsedText = collapsedText;\n    }\n    return result;\n  }\n  FoldingRange2.create = create;\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && Is.uinteger(candidate.startLine) && Is.uinteger(candidate.startLine) && (Is.undefined(candidate.startCharacter) || Is.uinteger(candidate.startCharacter)) && (Is.undefined(candidate.endCharacter) || Is.uinteger(candidate.endCharacter)) && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n  }\n  FoldingRange2.is = is;\n})(FoldingRange || (FoldingRange = {}));\nvar DiagnosticRelatedInformation;\n(function(DiagnosticRelatedInformation2) {\n  function create(location, message) {\n    return {\n      location,\n      message\n    };\n  }\n  DiagnosticRelatedInformation2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n  }\n  DiagnosticRelatedInformation2.is = is;\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\nvar DiagnosticSeverity;\n(function(DiagnosticSeverity2) {\n  DiagnosticSeverity2.Error = 1;\n  DiagnosticSeverity2.Warning = 2;\n  DiagnosticSeverity2.Information = 3;\n  DiagnosticSeverity2.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\nvar DiagnosticTag;\n(function(DiagnosticTag2) {\n  DiagnosticTag2.Unnecessary = 1;\n  DiagnosticTag2.Deprecated = 2;\n})(DiagnosticTag || (DiagnosticTag = {}));\nvar CodeDescription;\n(function(CodeDescription2) {\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && Is.string(candidate.href);\n  }\n  CodeDescription2.is = is;\n})(CodeDescription || (CodeDescription = {}));\nvar Diagnostic;\n(function(Diagnostic2) {\n  function create(range, message, severity, code, source, relatedInformation) {\n    let result = { range, message };\n    if (Is.defined(severity)) {\n      result.severity = severity;\n    }\n    if (Is.defined(code)) {\n      result.code = code;\n    }\n    if (Is.defined(source)) {\n      result.source = source;\n    }\n    if (Is.defined(relatedInformation)) {\n      result.relatedInformation = relatedInformation;\n    }\n    return result;\n  }\n  Diagnostic2.create = create;\n  function is(value) {\n    var _a;\n    let candidate = value;\n    return Is.defined(candidate) && Range.is(candidate.range) && Is.string(candidate.message) && (Is.number(candidate.severity) || Is.undefined(candidate.severity)) && (Is.integer(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code)) && (Is.undefined(candidate.codeDescription) || Is.string((_a = candidate.codeDescription) === null || _a === void 0 ? void 0 : _a.href)) && (Is.string(candidate.source) || Is.undefined(candidate.source)) && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n  }\n  Diagnostic2.is = is;\n})(Diagnostic || (Diagnostic = {}));\nvar Command;\n(function(Command2) {\n  function create(title, command, ...args) {\n    let result = { title, command };\n    if (Is.defined(args) && args.length > 0) {\n      result.arguments = args;\n    }\n    return result;\n  }\n  Command2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n  }\n  Command2.is = is;\n})(Command || (Command = {}));\nvar TextEdit;\n(function(TextEdit2) {\n  function replace(range, newText) {\n    return { range, newText };\n  }\n  TextEdit2.replace = replace;\n  function insert(position, newText) {\n    return { range: { start: position, end: position }, newText };\n  }\n  TextEdit2.insert = insert;\n  function del(range) {\n    return { range, newText: \"\" };\n  }\n  TextEdit2.del = del;\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && Is.string(candidate.newText) && Range.is(candidate.range);\n  }\n  TextEdit2.is = is;\n})(TextEdit || (TextEdit = {}));\nvar ChangeAnnotation;\n(function(ChangeAnnotation2) {\n  function create(label, needsConfirmation, description) {\n    const result = { label };\n    if (needsConfirmation !== void 0) {\n      result.needsConfirmation = needsConfirmation;\n    }\n    if (description !== void 0) {\n      result.description = description;\n    }\n    return result;\n  }\n  ChangeAnnotation2.create = create;\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && Is.string(candidate.label) && (Is.boolean(candidate.needsConfirmation) || candidate.needsConfirmation === void 0) && (Is.string(candidate.description) || candidate.description === void 0);\n  }\n  ChangeAnnotation2.is = is;\n})(ChangeAnnotation || (ChangeAnnotation = {}));\nvar ChangeAnnotationIdentifier;\n(function(ChangeAnnotationIdentifier2) {\n  function is(value) {\n    const candidate = value;\n    return Is.string(candidate);\n  }\n  ChangeAnnotationIdentifier2.is = is;\n})(ChangeAnnotationIdentifier || (ChangeAnnotationIdentifier = {}));\nvar AnnotatedTextEdit;\n(function(AnnotatedTextEdit2) {\n  function replace(range, newText, annotation) {\n    return { range, newText, annotationId: annotation };\n  }\n  AnnotatedTextEdit2.replace = replace;\n  function insert(position, newText, annotation) {\n    return { range: { start: position, end: position }, newText, annotationId: annotation };\n  }\n  AnnotatedTextEdit2.insert = insert;\n  function del(range, annotation) {\n    return { range, newText: \"\", annotationId: annotation };\n  }\n  AnnotatedTextEdit2.del = del;\n  function is(value) {\n    const candidate = value;\n    return TextEdit.is(candidate) && (ChangeAnnotation.is(candidate.annotationId) || ChangeAnnotationIdentifier.is(candidate.annotationId));\n  }\n  AnnotatedTextEdit2.is = is;\n})(AnnotatedTextEdit || (AnnotatedTextEdit = {}));\nvar TextDocumentEdit;\n(function(TextDocumentEdit2) {\n  function create(textDocument, edits) {\n    return { textDocument, edits };\n  }\n  TextDocumentEdit2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && OptionalVersionedTextDocumentIdentifier.is(candidate.textDocument) && Array.isArray(candidate.edits);\n  }\n  TextDocumentEdit2.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nvar CreateFile;\n(function(CreateFile2) {\n  function create(uri, options, annotation) {\n    let result = {\n      kind: \"create\",\n      uri\n    };\n    if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\n      result.options = options;\n    }\n    if (annotation !== void 0) {\n      result.annotationId = annotation;\n    }\n    return result;\n  }\n  CreateFile2.create = create;\n  function is(value) {\n    let candidate = value;\n    return candidate && candidate.kind === \"create\" && Is.string(candidate.uri) && (candidate.options === void 0 || (candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))) && (candidate.annotationId === void 0 || ChangeAnnotationIdentifier.is(candidate.annotationId));\n  }\n  CreateFile2.is = is;\n})(CreateFile || (CreateFile = {}));\nvar RenameFile;\n(function(RenameFile2) {\n  function create(oldUri, newUri, options, annotation) {\n    let result = {\n      kind: \"rename\",\n      oldUri,\n      newUri\n    };\n    if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\n      result.options = options;\n    }\n    if (annotation !== void 0) {\n      result.annotationId = annotation;\n    }\n    return result;\n  }\n  RenameFile2.create = create;\n  function is(value) {\n    let candidate = value;\n    return candidate && candidate.kind === \"rename\" && Is.string(candidate.oldUri) && Is.string(candidate.newUri) && (candidate.options === void 0 || (candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))) && (candidate.annotationId === void 0 || ChangeAnnotationIdentifier.is(candidate.annotationId));\n  }\n  RenameFile2.is = is;\n})(RenameFile || (RenameFile = {}));\nvar DeleteFile;\n(function(DeleteFile2) {\n  function create(uri, options, annotation) {\n    let result = {\n      kind: \"delete\",\n      uri\n    };\n    if (options !== void 0 && (options.recursive !== void 0 || options.ignoreIfNotExists !== void 0)) {\n      result.options = options;\n    }\n    if (annotation !== void 0) {\n      result.annotationId = annotation;\n    }\n    return result;\n  }\n  DeleteFile2.create = create;\n  function is(value) {\n    let candidate = value;\n    return candidate && candidate.kind === \"delete\" && Is.string(candidate.uri) && (candidate.options === void 0 || (candidate.options.recursive === void 0 || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === void 0 || Is.boolean(candidate.options.ignoreIfNotExists))) && (candidate.annotationId === void 0 || ChangeAnnotationIdentifier.is(candidate.annotationId));\n  }\n  DeleteFile2.is = is;\n})(DeleteFile || (DeleteFile = {}));\nvar WorkspaceEdit;\n(function(WorkspaceEdit2) {\n  function is(value) {\n    let candidate = value;\n    return candidate && (candidate.changes !== void 0 || candidate.documentChanges !== void 0) && (candidate.documentChanges === void 0 || candidate.documentChanges.every((change) => {\n      if (Is.string(change.kind)) {\n        return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\n      } else {\n        return TextDocumentEdit.is(change);\n      }\n    }));\n  }\n  WorkspaceEdit2.is = is;\n})(WorkspaceEdit || (WorkspaceEdit = {}));\nvar TextDocumentIdentifier;\n(function(TextDocumentIdentifier2) {\n  function create(uri) {\n    return { uri };\n  }\n  TextDocumentIdentifier2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri);\n  }\n  TextDocumentIdentifier2.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\nvar VersionedTextDocumentIdentifier;\n(function(VersionedTextDocumentIdentifier2) {\n  function create(uri, version) {\n    return { uri, version };\n  }\n  VersionedTextDocumentIdentifier2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri) && Is.integer(candidate.version);\n  }\n  VersionedTextDocumentIdentifier2.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\nvar OptionalVersionedTextDocumentIdentifier;\n(function(OptionalVersionedTextDocumentIdentifier2) {\n  function create(uri, version) {\n    return { uri, version };\n  }\n  OptionalVersionedTextDocumentIdentifier2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.integer(candidate.version));\n  }\n  OptionalVersionedTextDocumentIdentifier2.is = is;\n})(OptionalVersionedTextDocumentIdentifier || (OptionalVersionedTextDocumentIdentifier = {}));\nvar TextDocumentItem;\n(function(TextDocumentItem2) {\n  function create(uri, languageId, version, text) {\n    return { uri, languageId, version, text };\n  }\n  TextDocumentItem2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.integer(candidate.version) && Is.string(candidate.text);\n  }\n  TextDocumentItem2.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\nvar MarkupKind;\n(function(MarkupKind2) {\n  MarkupKind2.PlainText = \"plaintext\";\n  MarkupKind2.Markdown = \"markdown\";\n  function is(value) {\n    const candidate = value;\n    return candidate === MarkupKind2.PlainText || candidate === MarkupKind2.Markdown;\n  }\n  MarkupKind2.is = is;\n})(MarkupKind || (MarkupKind = {}));\nvar MarkupContent;\n(function(MarkupContent2) {\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n  }\n  MarkupContent2.is = is;\n})(MarkupContent || (MarkupContent = {}));\nvar CompletionItemKind;\n(function(CompletionItemKind2) {\n  CompletionItemKind2.Text = 1;\n  CompletionItemKind2.Method = 2;\n  CompletionItemKind2.Function = 3;\n  CompletionItemKind2.Constructor = 4;\n  CompletionItemKind2.Field = 5;\n  CompletionItemKind2.Variable = 6;\n  CompletionItemKind2.Class = 7;\n  CompletionItemKind2.Interface = 8;\n  CompletionItemKind2.Module = 9;\n  CompletionItemKind2.Property = 10;\n  CompletionItemKind2.Unit = 11;\n  CompletionItemKind2.Value = 12;\n  CompletionItemKind2.Enum = 13;\n  CompletionItemKind2.Keyword = 14;\n  CompletionItemKind2.Snippet = 15;\n  CompletionItemKind2.Color = 16;\n  CompletionItemKind2.File = 17;\n  CompletionItemKind2.Reference = 18;\n  CompletionItemKind2.Folder = 19;\n  CompletionItemKind2.EnumMember = 20;\n  CompletionItemKind2.Constant = 21;\n  CompletionItemKind2.Struct = 22;\n  CompletionItemKind2.Event = 23;\n  CompletionItemKind2.Operator = 24;\n  CompletionItemKind2.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\nvar InsertTextFormat;\n(function(InsertTextFormat2) {\n  InsertTextFormat2.PlainText = 1;\n  InsertTextFormat2.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\nvar CompletionItemTag;\n(function(CompletionItemTag2) {\n  CompletionItemTag2.Deprecated = 1;\n})(CompletionItemTag || (CompletionItemTag = {}));\nvar InsertReplaceEdit;\n(function(InsertReplaceEdit2) {\n  function create(newText, insert, replace) {\n    return { newText, insert, replace };\n  }\n  InsertReplaceEdit2.create = create;\n  function is(value) {\n    const candidate = value;\n    return candidate && Is.string(candidate.newText) && Range.is(candidate.insert) && Range.is(candidate.replace);\n  }\n  InsertReplaceEdit2.is = is;\n})(InsertReplaceEdit || (InsertReplaceEdit = {}));\nvar InsertTextMode;\n(function(InsertTextMode2) {\n  InsertTextMode2.asIs = 1;\n  InsertTextMode2.adjustIndentation = 2;\n})(InsertTextMode || (InsertTextMode = {}));\nvar CompletionItemLabelDetails;\n(function(CompletionItemLabelDetails2) {\n  function is(value) {\n    const candidate = value;\n    return candidate && (Is.string(candidate.detail) || candidate.detail === void 0) && (Is.string(candidate.description) || candidate.description === void 0);\n  }\n  CompletionItemLabelDetails2.is = is;\n})(CompletionItemLabelDetails || (CompletionItemLabelDetails = {}));\nvar CompletionItem;\n(function(CompletionItem2) {\n  function create(label) {\n    return { label };\n  }\n  CompletionItem2.create = create;\n})(CompletionItem || (CompletionItem = {}));\nvar CompletionList;\n(function(CompletionList2) {\n  function create(items, isIncomplete) {\n    return { items: items ? items : [], isIncomplete: !!isIncomplete };\n  }\n  CompletionList2.create = create;\n})(CompletionList || (CompletionList = {}));\nvar MarkedString;\n(function(MarkedString2) {\n  function fromPlainText(plainText) {\n    return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\");\n  }\n  MarkedString2.fromPlainText = fromPlainText;\n  function is(value) {\n    const candidate = value;\n    return Is.string(candidate) || Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value);\n  }\n  MarkedString2.is = is;\n})(MarkedString || (MarkedString = {}));\nvar Hover;\n(function(Hover2) {\n  function is(value) {\n    let candidate = value;\n    return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) || MarkedString.is(candidate.contents) || Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\n  }\n  Hover2.is = is;\n})(Hover || (Hover = {}));\nvar ParameterInformation;\n(function(ParameterInformation2) {\n  function create(label, documentation) {\n    return documentation ? { label, documentation } : { label };\n  }\n  ParameterInformation2.create = create;\n})(ParameterInformation || (ParameterInformation = {}));\nvar SignatureInformation;\n(function(SignatureInformation2) {\n  function create(label, documentation, ...parameters) {\n    let result = { label };\n    if (Is.defined(documentation)) {\n      result.documentation = documentation;\n    }\n    if (Is.defined(parameters)) {\n      result.parameters = parameters;\n    } else {\n      result.parameters = [];\n    }\n    return result;\n  }\n  SignatureInformation2.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\nvar DocumentHighlightKind;\n(function(DocumentHighlightKind2) {\n  DocumentHighlightKind2.Text = 1;\n  DocumentHighlightKind2.Read = 2;\n  DocumentHighlightKind2.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\nvar DocumentHighlight;\n(function(DocumentHighlight2) {\n  function create(range, kind) {\n    let result = { range };\n    if (Is.number(kind)) {\n      result.kind = kind;\n    }\n    return result;\n  }\n  DocumentHighlight2.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\nvar SymbolKind;\n(function(SymbolKind2) {\n  SymbolKind2.File = 1;\n  SymbolKind2.Module = 2;\n  SymbolKind2.Namespace = 3;\n  SymbolKind2.Package = 4;\n  SymbolKind2.Class = 5;\n  SymbolKind2.Method = 6;\n  SymbolKind2.Property = 7;\n  SymbolKind2.Field = 8;\n  SymbolKind2.Constructor = 9;\n  SymbolKind2.Enum = 10;\n  SymbolKind2.Interface = 11;\n  SymbolKind2.Function = 12;\n  SymbolKind2.Variable = 13;\n  SymbolKind2.Constant = 14;\n  SymbolKind2.String = 15;\n  SymbolKind2.Number = 16;\n  SymbolKind2.Boolean = 17;\n  SymbolKind2.Array = 18;\n  SymbolKind2.Object = 19;\n  SymbolKind2.Key = 20;\n  SymbolKind2.Null = 21;\n  SymbolKind2.EnumMember = 22;\n  SymbolKind2.Struct = 23;\n  SymbolKind2.Event = 24;\n  SymbolKind2.Operator = 25;\n  SymbolKind2.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\nvar SymbolTag;\n(function(SymbolTag2) {\n  SymbolTag2.Deprecated = 1;\n})(SymbolTag || (SymbolTag = {}));\nvar SymbolInformation;\n(function(SymbolInformation2) {\n  function create(name, kind, range, uri, containerName) {\n    let result = {\n      name,\n      kind,\n      location: { uri, range }\n    };\n    if (containerName) {\n      result.containerName = containerName;\n    }\n    return result;\n  }\n  SymbolInformation2.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\nvar WorkspaceSymbol;\n(function(WorkspaceSymbol2) {\n  function create(name, kind, uri, range) {\n    return range !== void 0 ? { name, kind, location: { uri, range } } : { name, kind, location: { uri } };\n  }\n  WorkspaceSymbol2.create = create;\n})(WorkspaceSymbol || (WorkspaceSymbol = {}));\nvar DocumentSymbol;\n(function(DocumentSymbol2) {\n  function create(name, detail, kind, range, selectionRange, children) {\n    let result = {\n      name,\n      detail,\n      kind,\n      range,\n      selectionRange\n    };\n    if (children !== void 0) {\n      result.children = children;\n    }\n    return result;\n  }\n  DocumentSymbol2.create = create;\n  function is(value) {\n    let candidate = value;\n    return candidate && Is.string(candidate.name) && Is.number(candidate.kind) && Range.is(candidate.range) && Range.is(candidate.selectionRange) && (candidate.detail === void 0 || Is.string(candidate.detail)) && (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) && (candidate.children === void 0 || Array.isArray(candidate.children)) && (candidate.tags === void 0 || Array.isArray(candidate.tags));\n  }\n  DocumentSymbol2.is = is;\n})(DocumentSymbol || (DocumentSymbol = {}));\nvar CodeActionKind;\n(function(CodeActionKind2) {\n  CodeActionKind2.Empty = \"\";\n  CodeActionKind2.QuickFix = \"quickfix\";\n  CodeActionKind2.Refactor = \"refactor\";\n  CodeActionKind2.RefactorExtract = \"refactor.extract\";\n  CodeActionKind2.RefactorInline = \"refactor.inline\";\n  CodeActionKind2.RefactorRewrite = \"refactor.rewrite\";\n  CodeActionKind2.Source = \"source\";\n  CodeActionKind2.SourceOrganizeImports = \"source.organizeImports\";\n  CodeActionKind2.SourceFixAll = \"source.fixAll\";\n})(CodeActionKind || (CodeActionKind = {}));\nvar CodeActionTriggerKind;\n(function(CodeActionTriggerKind2) {\n  CodeActionTriggerKind2.Invoked = 1;\n  CodeActionTriggerKind2.Automatic = 2;\n})(CodeActionTriggerKind || (CodeActionTriggerKind = {}));\nvar CodeActionContext;\n(function(CodeActionContext2) {\n  function create(diagnostics, only, triggerKind) {\n    let result = { diagnostics };\n    if (only !== void 0 && only !== null) {\n      result.only = only;\n    }\n    if (triggerKind !== void 0 && triggerKind !== null) {\n      result.triggerKind = triggerKind;\n    }\n    return result;\n  }\n  CodeActionContext2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string)) && (candidate.triggerKind === void 0 || candidate.triggerKind === CodeActionTriggerKind.Invoked || candidate.triggerKind === CodeActionTriggerKind.Automatic);\n  }\n  CodeActionContext2.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\nvar CodeAction;\n(function(CodeAction2) {\n  function create(title, kindOrCommandOrEdit, kind) {\n    let result = { title };\n    let checkKind = true;\n    if (typeof kindOrCommandOrEdit === \"string\") {\n      checkKind = false;\n      result.kind = kindOrCommandOrEdit;\n    } else if (Command.is(kindOrCommandOrEdit)) {\n      result.command = kindOrCommandOrEdit;\n    } else {\n      result.edit = kindOrCommandOrEdit;\n    }\n    if (checkKind && kind !== void 0) {\n      result.kind = kind;\n    }\n    return result;\n  }\n  CodeAction2.create = create;\n  function is(value) {\n    let candidate = value;\n    return candidate && Is.string(candidate.title) && (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) && (candidate.kind === void 0 || Is.string(candidate.kind)) && (candidate.edit !== void 0 || candidate.command !== void 0) && (candidate.command === void 0 || Command.is(candidate.command)) && (candidate.isPreferred === void 0 || Is.boolean(candidate.isPreferred)) && (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\n  }\n  CodeAction2.is = is;\n})(CodeAction || (CodeAction = {}));\nvar CodeLens;\n(function(CodeLens2) {\n  function create(range, data) {\n    let result = { range };\n    if (Is.defined(data)) {\n      result.data = data;\n    }\n    return result;\n  }\n  CodeLens2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n  }\n  CodeLens2.is = is;\n})(CodeLens || (CodeLens = {}));\nvar FormattingOptions;\n(function(FormattingOptions2) {\n  function create(tabSize, insertSpaces) {\n    return { tabSize, insertSpaces };\n  }\n  FormattingOptions2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Is.uinteger(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n  }\n  FormattingOptions2.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\nvar DocumentLink;\n(function(DocumentLink2) {\n  function create(range, target, data) {\n    return { range, target, data };\n  }\n  DocumentLink2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n  }\n  DocumentLink2.is = is;\n})(DocumentLink || (DocumentLink = {}));\nvar SelectionRange;\n(function(SelectionRange2) {\n  function create(range, parent) {\n    return { range, parent };\n  }\n  SelectionRange2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.objectLiteral(candidate) && Range.is(candidate.range) && (candidate.parent === void 0 || SelectionRange2.is(candidate.parent));\n  }\n  SelectionRange2.is = is;\n})(SelectionRange || (SelectionRange = {}));\nvar SemanticTokenTypes;\n(function(SemanticTokenTypes2) {\n  SemanticTokenTypes2[\"namespace\"] = \"namespace\";\n  SemanticTokenTypes2[\"type\"] = \"type\";\n  SemanticTokenTypes2[\"class\"] = \"class\";\n  SemanticTokenTypes2[\"enum\"] = \"enum\";\n  SemanticTokenTypes2[\"interface\"] = \"interface\";\n  SemanticTokenTypes2[\"struct\"] = \"struct\";\n  SemanticTokenTypes2[\"typeParameter\"] = \"typeParameter\";\n  SemanticTokenTypes2[\"parameter\"] = \"parameter\";\n  SemanticTokenTypes2[\"variable\"] = \"variable\";\n  SemanticTokenTypes2[\"property\"] = \"property\";\n  SemanticTokenTypes2[\"enumMember\"] = \"enumMember\";\n  SemanticTokenTypes2[\"event\"] = \"event\";\n  SemanticTokenTypes2[\"function\"] = \"function\";\n  SemanticTokenTypes2[\"method\"] = \"method\";\n  SemanticTokenTypes2[\"macro\"] = \"macro\";\n  SemanticTokenTypes2[\"keyword\"] = \"keyword\";\n  SemanticTokenTypes2[\"modifier\"] = \"modifier\";\n  SemanticTokenTypes2[\"comment\"] = \"comment\";\n  SemanticTokenTypes2[\"string\"] = \"string\";\n  SemanticTokenTypes2[\"number\"] = \"number\";\n  SemanticTokenTypes2[\"regexp\"] = \"regexp\";\n  SemanticTokenTypes2[\"operator\"] = \"operator\";\n  SemanticTokenTypes2[\"decorator\"] = \"decorator\";\n})(SemanticTokenTypes || (SemanticTokenTypes = {}));\nvar SemanticTokenModifiers;\n(function(SemanticTokenModifiers2) {\n  SemanticTokenModifiers2[\"declaration\"] = \"declaration\";\n  SemanticTokenModifiers2[\"definition\"] = \"definition\";\n  SemanticTokenModifiers2[\"readonly\"] = \"readonly\";\n  SemanticTokenModifiers2[\"static\"] = \"static\";\n  SemanticTokenModifiers2[\"deprecated\"] = \"deprecated\";\n  SemanticTokenModifiers2[\"abstract\"] = \"abstract\";\n  SemanticTokenModifiers2[\"async\"] = \"async\";\n  SemanticTokenModifiers2[\"modification\"] = \"modification\";\n  SemanticTokenModifiers2[\"documentation\"] = \"documentation\";\n  SemanticTokenModifiers2[\"defaultLibrary\"] = \"defaultLibrary\";\n})(SemanticTokenModifiers || (SemanticTokenModifiers = {}));\nvar SemanticTokens;\n(function(SemanticTokens2) {\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && (candidate.resultId === void 0 || typeof candidate.resultId === \"string\") && Array.isArray(candidate.data) && (candidate.data.length === 0 || typeof candidate.data[0] === \"number\");\n  }\n  SemanticTokens2.is = is;\n})(SemanticTokens || (SemanticTokens = {}));\nvar InlineValueText;\n(function(InlineValueText2) {\n  function create(range, text) {\n    return { range, text };\n  }\n  InlineValueText2.create = create;\n  function is(value) {\n    const candidate = value;\n    return candidate !== void 0 && candidate !== null && Range.is(candidate.range) && Is.string(candidate.text);\n  }\n  InlineValueText2.is = is;\n})(InlineValueText || (InlineValueText = {}));\nvar InlineValueVariableLookup;\n(function(InlineValueVariableLookup2) {\n  function create(range, variableName, caseSensitiveLookup) {\n    return { range, variableName, caseSensitiveLookup };\n  }\n  InlineValueVariableLookup2.create = create;\n  function is(value) {\n    const candidate = value;\n    return candidate !== void 0 && candidate !== null && Range.is(candidate.range) && Is.boolean(candidate.caseSensitiveLookup) && (Is.string(candidate.variableName) || candidate.variableName === void 0);\n  }\n  InlineValueVariableLookup2.is = is;\n})(InlineValueVariableLookup || (InlineValueVariableLookup = {}));\nvar InlineValueEvaluatableExpression;\n(function(InlineValueEvaluatableExpression2) {\n  function create(range, expression) {\n    return { range, expression };\n  }\n  InlineValueEvaluatableExpression2.create = create;\n  function is(value) {\n    const candidate = value;\n    return candidate !== void 0 && candidate !== null && Range.is(candidate.range) && (Is.string(candidate.expression) || candidate.expression === void 0);\n  }\n  InlineValueEvaluatableExpression2.is = is;\n})(InlineValueEvaluatableExpression || (InlineValueEvaluatableExpression = {}));\nvar InlineValueContext;\n(function(InlineValueContext2) {\n  function create(frameId, stoppedLocation) {\n    return { frameId, stoppedLocation };\n  }\n  InlineValueContext2.create = create;\n  function is(value) {\n    const candidate = value;\n    return Is.defined(candidate) && Range.is(value.stoppedLocation);\n  }\n  InlineValueContext2.is = is;\n})(InlineValueContext || (InlineValueContext = {}));\nvar InlayHintKind;\n(function(InlayHintKind2) {\n  InlayHintKind2.Type = 1;\n  InlayHintKind2.Parameter = 2;\n  function is(value) {\n    return value === 1 || value === 2;\n  }\n  InlayHintKind2.is = is;\n})(InlayHintKind || (InlayHintKind = {}));\nvar InlayHintLabelPart;\n(function(InlayHintLabelPart2) {\n  function create(value) {\n    return { value };\n  }\n  InlayHintLabelPart2.create = create;\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && (candidate.tooltip === void 0 || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip)) && (candidate.location === void 0 || Location.is(candidate.location)) && (candidate.command === void 0 || Command.is(candidate.command));\n  }\n  InlayHintLabelPart2.is = is;\n})(InlayHintLabelPart || (InlayHintLabelPart = {}));\nvar InlayHint;\n(function(InlayHint2) {\n  function create(position, label, kind) {\n    const result = { position, label };\n    if (kind !== void 0) {\n      result.kind = kind;\n    }\n    return result;\n  }\n  InlayHint2.create = create;\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && Position.is(candidate.position) && (Is.string(candidate.label) || Is.typedArray(candidate.label, InlayHintLabelPart.is)) && (candidate.kind === void 0 || InlayHintKind.is(candidate.kind)) && candidate.textEdits === void 0 || Is.typedArray(candidate.textEdits, TextEdit.is) && (candidate.tooltip === void 0 || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip)) && (candidate.paddingLeft === void 0 || Is.boolean(candidate.paddingLeft)) && (candidate.paddingRight === void 0 || Is.boolean(candidate.paddingRight));\n  }\n  InlayHint2.is = is;\n})(InlayHint || (InlayHint = {}));\nvar StringValue;\n(function(StringValue2) {\n  function createSnippet(value) {\n    return { kind: \"snippet\", value };\n  }\n  StringValue2.createSnippet = createSnippet;\n})(StringValue || (StringValue = {}));\nvar InlineCompletionItem;\n(function(InlineCompletionItem2) {\n  function create(insertText, filterText, range, command) {\n    return { insertText, filterText, range, command };\n  }\n  InlineCompletionItem2.create = create;\n})(InlineCompletionItem || (InlineCompletionItem = {}));\nvar InlineCompletionList;\n(function(InlineCompletionList2) {\n  function create(items) {\n    return { items };\n  }\n  InlineCompletionList2.create = create;\n})(InlineCompletionList || (InlineCompletionList = {}));\nvar InlineCompletionTriggerKind;\n(function(InlineCompletionTriggerKind2) {\n  InlineCompletionTriggerKind2.Invoked = 0;\n  InlineCompletionTriggerKind2.Automatic = 1;\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\nvar SelectedCompletionInfo;\n(function(SelectedCompletionInfo2) {\n  function create(range, text) {\n    return { range, text };\n  }\n  SelectedCompletionInfo2.create = create;\n})(SelectedCompletionInfo || (SelectedCompletionInfo = {}));\nvar InlineCompletionContext;\n(function(InlineCompletionContext2) {\n  function create(triggerKind, selectedCompletionInfo) {\n    return { triggerKind, selectedCompletionInfo };\n  }\n  InlineCompletionContext2.create = create;\n})(InlineCompletionContext || (InlineCompletionContext = {}));\nvar WorkspaceFolder;\n(function(WorkspaceFolder2) {\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && URI.is(candidate.uri) && Is.string(candidate.name);\n  }\n  WorkspaceFolder2.is = is;\n})(WorkspaceFolder || (WorkspaceFolder = {}));\nvar TextDocument;\n(function(TextDocument3) {\n  function create(uri, languageId, version, content) {\n    return new FullTextDocument(uri, languageId, version, content);\n  }\n  TextDocument3.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.uinteger(candidate.lineCount) && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n  }\n  TextDocument3.is = is;\n  function applyEdits(document, edits) {\n    let text = document.getText();\n    let sortedEdits = mergeSort2(edits, (a2, b) => {\n      let diff = a2.range.start.line - b.range.start.line;\n      if (diff === 0) {\n        return a2.range.start.character - b.range.start.character;\n      }\n      return diff;\n    });\n    let lastModifiedOffset = text.length;\n    for (let i = sortedEdits.length - 1; i >= 0; i--) {\n      let e = sortedEdits[i];\n      let startOffset = document.offsetAt(e.range.start);\n      let endOffset = document.offsetAt(e.range.end);\n      if (endOffset <= lastModifiedOffset) {\n        text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n      } else {\n        throw new Error(\"Overlapping edit\");\n      }\n      lastModifiedOffset = startOffset;\n    }\n    return text;\n  }\n  TextDocument3.applyEdits = applyEdits;\n  function mergeSort2(data, compare) {\n    if (data.length <= 1) {\n      return data;\n    }\n    const p = data.length / 2 | 0;\n    const left = data.slice(0, p);\n    const right = data.slice(p);\n    mergeSort2(left, compare);\n    mergeSort2(right, compare);\n    let leftIdx = 0;\n    let rightIdx = 0;\n    let i = 0;\n    while (leftIdx < left.length && rightIdx < right.length) {\n      let ret = compare(left[leftIdx], right[rightIdx]);\n      if (ret <= 0) {\n        data[i++] = left[leftIdx++];\n      } else {\n        data[i++] = right[rightIdx++];\n      }\n    }\n    while (leftIdx < left.length) {\n      data[i++] = left[leftIdx++];\n    }\n    while (rightIdx < right.length) {\n      data[i++] = right[rightIdx++];\n    }\n    return data;\n  }\n})(TextDocument || (TextDocument = {}));\nvar FullTextDocument = class {\n  constructor(uri, languageId, version, content) {\n    this._uri = uri;\n    this._languageId = languageId;\n    this._version = version;\n    this._content = content;\n    this._lineOffsets = void 0;\n  }\n  get uri() {\n    return this._uri;\n  }\n  get languageId() {\n    return this._languageId;\n  }\n  get version() {\n    return this._version;\n  }\n  getText(range) {\n    if (range) {\n      let start = this.offsetAt(range.start);\n      let end = this.offsetAt(range.end);\n      return this._content.substring(start, end);\n    }\n    return this._content;\n  }\n  update(event, version) {\n    this._content = event.text;\n    this._version = version;\n    this._lineOffsets = void 0;\n  }\n  getLineOffsets() {\n    if (this._lineOffsets === void 0) {\n      let lineOffsets = [];\n      let text = this._content;\n      let isLineStart = true;\n      for (let i = 0; i < text.length; i++) {\n        if (isLineStart) {\n          lineOffsets.push(i);\n          isLineStart = false;\n        }\n        let ch = text.charAt(i);\n        isLineStart = ch === \"\\r\" || ch === \"\\n\";\n        if (ch === \"\\r\" && i + 1 < text.length && text.charAt(i + 1) === \"\\n\") {\n          i++;\n        }\n      }\n      if (isLineStart && text.length > 0) {\n        lineOffsets.push(text.length);\n      }\n      this._lineOffsets = lineOffsets;\n    }\n    return this._lineOffsets;\n  }\n  positionAt(offset) {\n    offset = Math.max(Math.min(offset, this._content.length), 0);\n    let lineOffsets = this.getLineOffsets();\n    let low = 0, high = lineOffsets.length;\n    if (high === 0) {\n      return Position.create(0, offset);\n    }\n    while (low < high) {\n      let mid = Math.floor((low + high) / 2);\n      if (lineOffsets[mid] > offset) {\n        high = mid;\n      } else {\n        low = mid + 1;\n      }\n    }\n    let line = low - 1;\n    return Position.create(line, offset - lineOffsets[line]);\n  }\n  offsetAt(position) {\n    let lineOffsets = this.getLineOffsets();\n    if (position.line >= lineOffsets.length) {\n      return this._content.length;\n    } else if (position.line < 0) {\n      return 0;\n    }\n    let lineOffset = lineOffsets[position.line];\n    let nextLineOffset = position.line + 1 < lineOffsets.length ? lineOffsets[position.line + 1] : this._content.length;\n    return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n  }\n  get lineCount() {\n    return this.getLineOffsets().length;\n  }\n};\nvar Is;\n(function(Is2) {\n  const toString = Object.prototype.toString;\n  function defined(value) {\n    return typeof value !== \"undefined\";\n  }\n  Is2.defined = defined;\n  function undefined2(value) {\n    return typeof value === \"undefined\";\n  }\n  Is2.undefined = undefined2;\n  function boolean(value) {\n    return value === true || value === false;\n  }\n  Is2.boolean = boolean;\n  function string(value) {\n    return toString.call(value) === \"[object String]\";\n  }\n  Is2.string = string;\n  function number(value) {\n    return toString.call(value) === \"[object Number]\";\n  }\n  Is2.number = number;\n  function numberRange(value, min, max) {\n    return toString.call(value) === \"[object Number]\" && min <= value && value <= max;\n  }\n  Is2.numberRange = numberRange;\n  function integer2(value) {\n    return toString.call(value) === \"[object Number]\" && -2147483648 <= value && value <= 2147483647;\n  }\n  Is2.integer = integer2;\n  function uinteger2(value) {\n    return toString.call(value) === \"[object Number]\" && 0 <= value && value <= 2147483647;\n  }\n  Is2.uinteger = uinteger2;\n  function func(value) {\n    return toString.call(value) === \"[object Function]\";\n  }\n  Is2.func = func;\n  function objectLiteral(value) {\n    return value !== null && typeof value === \"object\";\n  }\n  Is2.objectLiteral = objectLiteral;\n  function typedArray(value, check) {\n    return Array.isArray(value) && value.every(check);\n  }\n  Is2.typedArray = typedArray;\n})(Is || (Is = {}));\n\n// node_modules/vscode-languageserver-textdocument/lib/esm/main.js\nvar FullTextDocument2 = class _FullTextDocument {\n  constructor(uri, languageId, version, content) {\n    this._uri = uri;\n    this._languageId = languageId;\n    this._version = version;\n    this._content = content;\n    this._lineOffsets = void 0;\n  }\n  get uri() {\n    return this._uri;\n  }\n  get languageId() {\n    return this._languageId;\n  }\n  get version() {\n    return this._version;\n  }\n  getText(range) {\n    if (range) {\n      const start = this.offsetAt(range.start);\n      const end = this.offsetAt(range.end);\n      return this._content.substring(start, end);\n    }\n    return this._content;\n  }\n  update(changes, version) {\n    for (let change of changes) {\n      if (_FullTextDocument.isIncremental(change)) {\n        const range = getWellformedRange(change.range);\n        const startOffset = this.offsetAt(range.start);\n        const endOffset = this.offsetAt(range.end);\n        this._content = this._content.substring(0, startOffset) + change.text + this._content.substring(endOffset, this._content.length);\n        const startLine = Math.max(range.start.line, 0);\n        const endLine = Math.max(range.end.line, 0);\n        let lineOffsets = this._lineOffsets;\n        const addedLineOffsets = computeLineOffsets(change.text, false, startOffset);\n        if (endLine - startLine === addedLineOffsets.length) {\n          for (let i = 0, len = addedLineOffsets.length; i < len; i++) {\n            lineOffsets[i + startLine + 1] = addedLineOffsets[i];\n          }\n        } else {\n          if (addedLineOffsets.length < 1e4) {\n            lineOffsets.splice(startLine + 1, endLine - startLine, ...addedLineOffsets);\n          } else {\n            this._lineOffsets = lineOffsets = lineOffsets.slice(0, startLine + 1).concat(addedLineOffsets, lineOffsets.slice(endLine + 1));\n          }\n        }\n        const diff = change.text.length - (endOffset - startOffset);\n        if (diff !== 0) {\n          for (let i = startLine + 1 + addedLineOffsets.length, len = lineOffsets.length; i < len; i++) {\n            lineOffsets[i] = lineOffsets[i] + diff;\n          }\n        }\n      } else if (_FullTextDocument.isFull(change)) {\n        this._content = change.text;\n        this._lineOffsets = void 0;\n      } else {\n        throw new Error(\"Unknown change event received\");\n      }\n    }\n    this._version = version;\n  }\n  getLineOffsets() {\n    if (this._lineOffsets === void 0) {\n      this._lineOffsets = computeLineOffsets(this._content, true);\n    }\n    return this._lineOffsets;\n  }\n  positionAt(offset) {\n    offset = Math.max(Math.min(offset, this._content.length), 0);\n    let lineOffsets = this.getLineOffsets();\n    let low = 0, high = lineOffsets.length;\n    if (high === 0) {\n      return { line: 0, character: offset };\n    }\n    while (low < high) {\n      let mid = Math.floor((low + high) / 2);\n      if (lineOffsets[mid] > offset) {\n        high = mid;\n      } else {\n        low = mid + 1;\n      }\n    }\n    let line = low - 1;\n    return { line, character: offset - lineOffsets[line] };\n  }\n  offsetAt(position) {\n    let lineOffsets = this.getLineOffsets();\n    if (position.line >= lineOffsets.length) {\n      return this._content.length;\n    } else if (position.line < 0) {\n      return 0;\n    }\n    let lineOffset = lineOffsets[position.line];\n    let nextLineOffset = position.line + 1 < lineOffsets.length ? lineOffsets[position.line + 1] : this._content.length;\n    return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n  }\n  get lineCount() {\n    return this.getLineOffsets().length;\n  }\n  static isIncremental(event) {\n    let candidate = event;\n    return candidate !== void 0 && candidate !== null && typeof candidate.text === \"string\" && candidate.range !== void 0 && (candidate.rangeLength === void 0 || typeof candidate.rangeLength === \"number\");\n  }\n  static isFull(event) {\n    let candidate = event;\n    return candidate !== void 0 && candidate !== null && typeof candidate.text === \"string\" && candidate.range === void 0 && candidate.rangeLength === void 0;\n  }\n};\nvar TextDocument2;\n(function(TextDocument3) {\n  function create(uri, languageId, version, content) {\n    return new FullTextDocument2(uri, languageId, version, content);\n  }\n  TextDocument3.create = create;\n  function update(document, changes, version) {\n    if (document instanceof FullTextDocument2) {\n      document.update(changes, version);\n      return document;\n    } else {\n      throw new Error(\"TextDocument.update: document must be created by TextDocument.create\");\n    }\n  }\n  TextDocument3.update = update;\n  function applyEdits(document, edits) {\n    let text = document.getText();\n    let sortedEdits = mergeSort(edits.map(getWellformedEdit), (a2, b) => {\n      let diff = a2.range.start.line - b.range.start.line;\n      if (diff === 0) {\n        return a2.range.start.character - b.range.start.character;\n      }\n      return diff;\n    });\n    let lastModifiedOffset = 0;\n    const spans = [];\n    for (const e of sortedEdits) {\n      let startOffset = document.offsetAt(e.range.start);\n      if (startOffset < lastModifiedOffset) {\n        throw new Error(\"Overlapping edit\");\n      } else if (startOffset > lastModifiedOffset) {\n        spans.push(text.substring(lastModifiedOffset, startOffset));\n      }\n      if (e.newText.length) {\n        spans.push(e.newText);\n      }\n      lastModifiedOffset = document.offsetAt(e.range.end);\n    }\n    spans.push(text.substr(lastModifiedOffset));\n    return spans.join(\"\");\n  }\n  TextDocument3.applyEdits = applyEdits;\n})(TextDocument2 || (TextDocument2 = {}));\nfunction mergeSort(data, compare) {\n  if (data.length <= 1) {\n    return data;\n  }\n  const p = data.length / 2 | 0;\n  const left = data.slice(0, p);\n  const right = data.slice(p);\n  mergeSort(left, compare);\n  mergeSort(right, compare);\n  let leftIdx = 0;\n  let rightIdx = 0;\n  let i = 0;\n  while (leftIdx < left.length && rightIdx < right.length) {\n    let ret = compare(left[leftIdx], right[rightIdx]);\n    if (ret <= 0) {\n      data[i++] = left[leftIdx++];\n    } else {\n      data[i++] = right[rightIdx++];\n    }\n  }\n  while (leftIdx < left.length) {\n    data[i++] = left[leftIdx++];\n  }\n  while (rightIdx < right.length) {\n    data[i++] = right[rightIdx++];\n  }\n  return data;\n}\nfunction computeLineOffsets(text, isAtLineStart, textOffset = 0) {\n  const result = isAtLineStart ? [textOffset] : [];\n  for (let i = 0; i < text.length; i++) {\n    let ch = text.charCodeAt(i);\n    if (ch === 13 || ch === 10) {\n      if (ch === 13 && i + 1 < text.length && text.charCodeAt(i + 1) === 10) {\n        i++;\n      }\n      result.push(textOffset + i + 1);\n    }\n  }\n  return result;\n}\nfunction getWellformedRange(range) {\n  const start = range.start;\n  const end = range.end;\n  if (start.line > end.line || start.line === end.line && start.character > end.character) {\n    return { start: end, end: start };\n  }\n  return range;\n}\nfunction getWellformedEdit(textEdit) {\n  const range = getWellformedRange(textEdit.range);\n  if (range !== textEdit.range) {\n    return { newText: textEdit.newText, range };\n  }\n  return textEdit;\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/jsonLanguageTypes.js\nvar ErrorCode;\n(function(ErrorCode2) {\n  ErrorCode2[ErrorCode2[\"Undefined\"] = 0] = \"Undefined\";\n  ErrorCode2[ErrorCode2[\"EnumValueMismatch\"] = 1] = \"EnumValueMismatch\";\n  ErrorCode2[ErrorCode2[\"Deprecated\"] = 2] = \"Deprecated\";\n  ErrorCode2[ErrorCode2[\"UnexpectedEndOfComment\"] = 257] = \"UnexpectedEndOfComment\";\n  ErrorCode2[ErrorCode2[\"UnexpectedEndOfString\"] = 258] = \"UnexpectedEndOfString\";\n  ErrorCode2[ErrorCode2[\"UnexpectedEndOfNumber\"] = 259] = \"UnexpectedEndOfNumber\";\n  ErrorCode2[ErrorCode2[\"InvalidUnicode\"] = 260] = \"InvalidUnicode\";\n  ErrorCode2[ErrorCode2[\"InvalidEscapeCharacter\"] = 261] = \"InvalidEscapeCharacter\";\n  ErrorCode2[ErrorCode2[\"InvalidCharacter\"] = 262] = \"InvalidCharacter\";\n  ErrorCode2[ErrorCode2[\"PropertyExpected\"] = 513] = \"PropertyExpected\";\n  ErrorCode2[ErrorCode2[\"CommaExpected\"] = 514] = \"CommaExpected\";\n  ErrorCode2[ErrorCode2[\"ColonExpected\"] = 515] = \"ColonExpected\";\n  ErrorCode2[ErrorCode2[\"ValueExpected\"] = 516] = \"ValueExpected\";\n  ErrorCode2[ErrorCode2[\"CommaOrCloseBacketExpected\"] = 517] = \"CommaOrCloseBacketExpected\";\n  ErrorCode2[ErrorCode2[\"CommaOrCloseBraceExpected\"] = 518] = \"CommaOrCloseBraceExpected\";\n  ErrorCode2[ErrorCode2[\"TrailingComma\"] = 519] = \"TrailingComma\";\n  ErrorCode2[ErrorCode2[\"DuplicateKey\"] = 520] = \"DuplicateKey\";\n  ErrorCode2[ErrorCode2[\"CommentNotPermitted\"] = 521] = \"CommentNotPermitted\";\n  ErrorCode2[ErrorCode2[\"PropertyKeysMustBeDoublequoted\"] = 528] = \"PropertyKeysMustBeDoublequoted\";\n  ErrorCode2[ErrorCode2[\"SchemaResolveError\"] = 768] = \"SchemaResolveError\";\n  ErrorCode2[ErrorCode2[\"SchemaUnsupportedFeature\"] = 769] = \"SchemaUnsupportedFeature\";\n})(ErrorCode || (ErrorCode = {}));\nvar SchemaDraft;\n(function(SchemaDraft2) {\n  SchemaDraft2[SchemaDraft2[\"v3\"] = 3] = \"v3\";\n  SchemaDraft2[SchemaDraft2[\"v4\"] = 4] = \"v4\";\n  SchemaDraft2[SchemaDraft2[\"v6\"] = 6] = \"v6\";\n  SchemaDraft2[SchemaDraft2[\"v7\"] = 7] = \"v7\";\n  SchemaDraft2[SchemaDraft2[\"v2019_09\"] = 19] = \"v2019_09\";\n  SchemaDraft2[SchemaDraft2[\"v2020_12\"] = 20] = \"v2020_12\";\n})(SchemaDraft || (SchemaDraft = {}));\nvar ClientCapabilities;\n(function(ClientCapabilities2) {\n  ClientCapabilities2.LATEST = {\n    textDocument: {\n      completion: {\n        completionItem: {\n          documentationFormat: [MarkupKind.Markdown, MarkupKind.PlainText],\n          commitCharactersSupport: true,\n          labelDetailsSupport: true\n        }\n      }\n    }\n  };\n})(ClientCapabilities || (ClientCapabilities = {}));\n\n// node_modules/@vscode/l10n/dist/browser.js\nvar bundle;\nfunction t(...args) {\n  const firstArg = args[0];\n  let key;\n  let message;\n  let formatArgs;\n  if (typeof firstArg === \"string\") {\n    key = firstArg;\n    message = firstArg;\n    args.splice(0, 1);\n    formatArgs = !args || typeof args[0] !== \"object\" ? args : args[0];\n  } else if (firstArg instanceof Array) {\n    const replacements = args.slice(1);\n    if (firstArg.length !== replacements.length + 1) {\n      throw new Error(\"expected a string as the first argument to l10n.t\");\n    }\n    let str = firstArg[0];\n    for (let i = 1; i < firstArg.length; i++) {\n      str += `{${i - 1}}` + firstArg[i];\n    }\n    return t(str, ...replacements);\n  } else {\n    message = firstArg.message;\n    key = message;\n    if (firstArg.comment && firstArg.comment.length > 0) {\n      key += `/${Array.isArray(firstArg.comment) ? firstArg.comment.join(\"\") : firstArg.comment}`;\n    }\n    formatArgs = firstArg.args ?? {};\n  }\n  const messageFromBundle = bundle?.[key];\n  if (!messageFromBundle) {\n    return format3(message, formatArgs);\n  }\n  if (typeof messageFromBundle === \"string\") {\n    return format3(messageFromBundle, formatArgs);\n  }\n  if (messageFromBundle.comment) {\n    return format3(messageFromBundle.message, formatArgs);\n  }\n  return format3(message, formatArgs);\n}\nvar _format2Regexp = /{([^}]+)}/g;\nfunction format3(template, values) {\n  if (Object.keys(values).length === 0) {\n    return template;\n  }\n  return template.replace(_format2Regexp, (match, group) => values[group] ?? match);\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/parser/jsonParser.js\nvar formats = {\n  \"color-hex\": { errorMessage: t(\"Invalid color format. Use #RGB, #RGBA, #RRGGBB or #RRGGBBAA.\"), pattern: /^#([0-9A-Fa-f]{3,4}|([0-9A-Fa-f]{2}){3,4})$/ },\n  \"date-time\": { errorMessage: t(\"String is not a RFC3339 date-time.\"), pattern: /^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)([01][0-9]|2[0-3]):([0-5][0-9]))$/i },\n  \"date\": { errorMessage: t(\"String is not a RFC3339 date.\"), pattern: /^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$/i },\n  \"time\": { errorMessage: t(\"String is not a RFC3339 time.\"), pattern: /^([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)([01][0-9]|2[0-3]):([0-5][0-9]))$/i },\n  \"email\": { errorMessage: t(\"String is not an e-mail address.\"), pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,}))$/ },\n  \"hostname\": { errorMessage: t(\"String is not a hostname.\"), pattern: /^(?=.{1,253}\\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\\.?$/i },\n  \"ipv4\": { errorMessage: t(\"String is not an IPv4 address.\"), pattern: /^(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)$/ },\n  \"ipv6\": { errorMessage: t(\"String is not an IPv6 address.\"), pattern: /^((([0-9a-f]{1,4}:){7}([0-9a-f]{1,4}|:))|(([0-9a-f]{1,4}:){6}(:[0-9a-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){5}(((:[0-9a-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){4}(((:[0-9a-f]{1,4}){1,3})|((:[0-9a-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){3}(((:[0-9a-f]{1,4}){1,4})|((:[0-9a-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){2}(((:[0-9a-f]{1,4}){1,5})|((:[0-9a-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){1}(((:[0-9a-f]{1,4}){1,6})|((:[0-9a-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9a-f]{1,4}){1,7})|((:[0-9a-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))$/i }\n};\nvar ASTNodeImpl = class {\n  constructor(parent, offset, length = 0) {\n    this.offset = offset;\n    this.length = length;\n    this.parent = parent;\n  }\n  get children() {\n    return [];\n  }\n  toString() {\n    return \"type: \" + this.type + \" (\" + this.offset + \"/\" + this.length + \")\" + (this.parent ? \" parent: {\" + this.parent.toString() + \"}\" : \"\");\n  }\n};\nvar NullASTNodeImpl = class extends ASTNodeImpl {\n  constructor(parent, offset) {\n    super(parent, offset);\n    this.type = \"null\";\n    this.value = null;\n  }\n};\nvar BooleanASTNodeImpl = class extends ASTNodeImpl {\n  constructor(parent, boolValue, offset) {\n    super(parent, offset);\n    this.type = \"boolean\";\n    this.value = boolValue;\n  }\n};\nvar ArrayASTNodeImpl = class extends ASTNodeImpl {\n  constructor(parent, offset) {\n    super(parent, offset);\n    this.type = \"array\";\n    this.items = [];\n  }\n  get children() {\n    return this.items;\n  }\n};\nvar NumberASTNodeImpl = class extends ASTNodeImpl {\n  constructor(parent, offset) {\n    super(parent, offset);\n    this.type = \"number\";\n    this.isInteger = true;\n    this.value = Number.NaN;\n  }\n};\nvar StringASTNodeImpl = class extends ASTNodeImpl {\n  constructor(parent, offset, length) {\n    super(parent, offset, length);\n    this.type = \"string\";\n    this.value = \"\";\n  }\n};\nvar PropertyASTNodeImpl = class extends ASTNodeImpl {\n  constructor(parent, offset, keyNode) {\n    super(parent, offset);\n    this.type = \"property\";\n    this.colonOffset = -1;\n    this.keyNode = keyNode;\n  }\n  get children() {\n    return this.valueNode ? [this.keyNode, this.valueNode] : [this.keyNode];\n  }\n};\nvar ObjectASTNodeImpl = class extends ASTNodeImpl {\n  constructor(parent, offset) {\n    super(parent, offset);\n    this.type = \"object\";\n    this.properties = [];\n  }\n  get children() {\n    return this.properties;\n  }\n};\nfunction asSchema(schema) {\n  if (isBoolean(schema)) {\n    return schema ? {} : { \"not\": {} };\n  }\n  return schema;\n}\nvar EnumMatch;\n(function(EnumMatch2) {\n  EnumMatch2[EnumMatch2[\"Key\"] = 0] = \"Key\";\n  EnumMatch2[EnumMatch2[\"Enum\"] = 1] = \"Enum\";\n})(EnumMatch || (EnumMatch = {}));\nvar schemaDraftFromId = {\n  \"http://json-schema.org/draft-03/schema#\": SchemaDraft.v3,\n  \"http://json-schema.org/draft-04/schema#\": SchemaDraft.v4,\n  \"http://json-schema.org/draft-06/schema#\": SchemaDraft.v6,\n  \"http://json-schema.org/draft-07/schema#\": SchemaDraft.v7,\n  \"https://json-schema.org/draft/2019-09/schema\": SchemaDraft.v2019_09,\n  \"https://json-schema.org/draft/2020-12/schema\": SchemaDraft.v2020_12\n};\nvar EvaluationContext = class {\n  constructor(schemaDraft) {\n    this.schemaDraft = schemaDraft;\n  }\n};\nvar SchemaCollector = class _SchemaCollector {\n  constructor(focusOffset = -1, exclude) {\n    this.focusOffset = focusOffset;\n    this.exclude = exclude;\n    this.schemas = [];\n  }\n  add(schema) {\n    this.schemas.push(schema);\n  }\n  merge(other) {\n    Array.prototype.push.apply(this.schemas, other.schemas);\n  }\n  include(node) {\n    return (this.focusOffset === -1 || contains2(node, this.focusOffset)) && node !== this.exclude;\n  }\n  newSub() {\n    return new _SchemaCollector(-1, this.exclude);\n  }\n};\nvar NoOpSchemaCollector = class {\n  constructor() {\n  }\n  get schemas() {\n    return [];\n  }\n  add(_schema) {\n  }\n  merge(_other) {\n  }\n  include(_node) {\n    return true;\n  }\n  newSub() {\n    return this;\n  }\n};\nNoOpSchemaCollector.instance = new NoOpSchemaCollector();\nvar ValidationResult = class {\n  constructor() {\n    this.problems = [];\n    this.propertiesMatches = 0;\n    this.processedProperties = /* @__PURE__ */ new Set();\n    this.propertiesValueMatches = 0;\n    this.primaryValueMatches = 0;\n    this.enumValueMatch = false;\n    this.enumValues = void 0;\n  }\n  hasProblems() {\n    return !!this.problems.length;\n  }\n  merge(validationResult) {\n    this.problems = this.problems.concat(validationResult.problems);\n    this.propertiesMatches += validationResult.propertiesMatches;\n    this.propertiesValueMatches += validationResult.propertiesValueMatches;\n    this.mergeProcessedProperties(validationResult);\n  }\n  mergeEnumValues(validationResult) {\n    if (!this.enumValueMatch && !validationResult.enumValueMatch && this.enumValues && validationResult.enumValues) {\n      this.enumValues = this.enumValues.concat(validationResult.enumValues);\n      for (const error of this.problems) {\n        if (error.code === ErrorCode.EnumValueMismatch) {\n          error.message = t(\"Value is not accepted. Valid values: {0}.\", this.enumValues.map((v) => JSON.stringify(v)).join(\", \"));\n        }\n      }\n    }\n  }\n  mergePropertyMatch(propertyValidationResult) {\n    this.problems = this.problems.concat(propertyValidationResult.problems);\n    this.propertiesMatches++;\n    if (propertyValidationResult.enumValueMatch || !propertyValidationResult.hasProblems() && propertyValidationResult.propertiesMatches) {\n      this.propertiesValueMatches++;\n    }\n    if (propertyValidationResult.enumValueMatch && propertyValidationResult.enumValues && propertyValidationResult.enumValues.length === 1) {\n      this.primaryValueMatches++;\n    }\n  }\n  mergeProcessedProperties(validationResult) {\n    validationResult.processedProperties.forEach((p) => this.processedProperties.add(p));\n  }\n  compare(other) {\n    const hasProblems = this.hasProblems();\n    if (hasProblems !== other.hasProblems()) {\n      return hasProblems ? -1 : 1;\n    }\n    if (this.enumValueMatch !== other.enumValueMatch) {\n      return other.enumValueMatch ? -1 : 1;\n    }\n    if (this.primaryValueMatches !== other.primaryValueMatches) {\n      return this.primaryValueMatches - other.primaryValueMatches;\n    }\n    if (this.propertiesValueMatches !== other.propertiesValueMatches) {\n      return this.propertiesValueMatches - other.propertiesValueMatches;\n    }\n    return this.propertiesMatches - other.propertiesMatches;\n  }\n};\nfunction newJSONDocument(root, diagnostics = []) {\n  return new JSONDocument(root, diagnostics, []);\n}\nfunction getNodeValue3(node) {\n  return getNodeValue2(node);\n}\nfunction getNodePath3(node) {\n  return getNodePath2(node);\n}\nfunction contains2(node, offset, includeRightBound = false) {\n  return offset >= node.offset && offset < node.offset + node.length || includeRightBound && offset === node.offset + node.length;\n}\nvar JSONDocument = class {\n  constructor(root, syntaxErrors = [], comments = []) {\n    this.root = root;\n    this.syntaxErrors = syntaxErrors;\n    this.comments = comments;\n  }\n  getNodeFromOffset(offset, includeRightBound = false) {\n    if (this.root) {\n      return findNodeAtOffset2(this.root, offset, includeRightBound);\n    }\n    return void 0;\n  }\n  visit(visitor) {\n    if (this.root) {\n      const doVisit = (node) => {\n        let ctn = visitor(node);\n        const children = node.children;\n        if (Array.isArray(children)) {\n          for (let i = 0; i < children.length && ctn; i++) {\n            ctn = doVisit(children[i]);\n          }\n        }\n        return ctn;\n      };\n      doVisit(this.root);\n    }\n  }\n  validate(textDocument, schema, severity = DiagnosticSeverity.Warning, schemaDraft) {\n    if (this.root && schema) {\n      const validationResult = new ValidationResult();\n      validate(this.root, schema, validationResult, NoOpSchemaCollector.instance, new EvaluationContext(schemaDraft ?? getSchemaDraft(schema)));\n      return validationResult.problems.map((p) => {\n        const range = Range.create(textDocument.positionAt(p.location.offset), textDocument.positionAt(p.location.offset + p.location.length));\n        return Diagnostic.create(range, p.message, p.severity ?? severity, p.code);\n      });\n    }\n    return void 0;\n  }\n  getMatchingSchemas(schema, focusOffset = -1, exclude) {\n    if (this.root && schema) {\n      const matchingSchemas = new SchemaCollector(focusOffset, exclude);\n      const schemaDraft = getSchemaDraft(schema);\n      const context = new EvaluationContext(schemaDraft);\n      validate(this.root, schema, new ValidationResult(), matchingSchemas, context);\n      return matchingSchemas.schemas;\n    }\n    return [];\n  }\n};\nfunction getSchemaDraft(schema, fallBack = SchemaDraft.v2020_12) {\n  let schemaId = schema.$schema;\n  if (schemaId) {\n    return schemaDraftFromId[schemaId] ?? fallBack;\n  }\n  return fallBack;\n}\nfunction validate(n, schema, validationResult, matchingSchemas, context) {\n  if (!n || !matchingSchemas.include(n)) {\n    return;\n  }\n  if (n.type === \"property\") {\n    return validate(n.valueNode, schema, validationResult, matchingSchemas, context);\n  }\n  const node = n;\n  _validateNode();\n  switch (node.type) {\n    case \"object\":\n      _validateObjectNode(node);\n      break;\n    case \"array\":\n      _validateArrayNode(node);\n      break;\n    case \"string\":\n      _validateStringNode(node);\n      break;\n    case \"number\":\n      _validateNumberNode(node);\n      break;\n  }\n  matchingSchemas.add({ node, schema });\n  function _validateNode() {\n    function matchesType(type) {\n      return node.type === type || type === \"integer\" && node.type === \"number\" && node.isInteger;\n    }\n    if (Array.isArray(schema.type)) {\n      if (!schema.type.some(matchesType)) {\n        validationResult.problems.push({\n          location: { offset: node.offset, length: node.length },\n          message: schema.errorMessage || t(\"Incorrect type. Expected one of {0}.\", schema.type.join(\", \"))\n        });\n      }\n    } else if (schema.type) {\n      if (!matchesType(schema.type)) {\n        validationResult.problems.push({\n          location: { offset: node.offset, length: node.length },\n          message: schema.errorMessage || t('Incorrect type. Expected \"{0}\".', schema.type)\n        });\n      }\n    }\n    if (Array.isArray(schema.allOf)) {\n      for (const subSchemaRef of schema.allOf) {\n        const subValidationResult = new ValidationResult();\n        const subMatchingSchemas = matchingSchemas.newSub();\n        validate(node, asSchema(subSchemaRef), subValidationResult, subMatchingSchemas, context);\n        validationResult.merge(subValidationResult);\n        matchingSchemas.merge(subMatchingSchemas);\n      }\n    }\n    const notSchema = asSchema(schema.not);\n    if (notSchema) {\n      const subValidationResult = new ValidationResult();\n      const subMatchingSchemas = matchingSchemas.newSub();\n      validate(node, notSchema, subValidationResult, subMatchingSchemas, context);\n      if (!subValidationResult.hasProblems()) {\n        validationResult.problems.push({\n          location: { offset: node.offset, length: node.length },\n          message: schema.errorMessage || t(\"Matches a schema that is not allowed.\")\n        });\n      }\n      for (const ms of subMatchingSchemas.schemas) {\n        ms.inverted = !ms.inverted;\n        matchingSchemas.add(ms);\n      }\n    }\n    const testAlternatives = (alternatives, maxOneMatch) => {\n      const matches = [];\n      let bestMatch = void 0;\n      for (const subSchemaRef of alternatives) {\n        const subSchema = asSchema(subSchemaRef);\n        const subValidationResult = new ValidationResult();\n        const subMatchingSchemas = matchingSchemas.newSub();\n        validate(node, subSchema, subValidationResult, subMatchingSchemas, context);\n        if (!subValidationResult.hasProblems()) {\n          matches.push(subSchema);\n        }\n        if (!bestMatch) {\n          bestMatch = { schema: subSchema, validationResult: subValidationResult, matchingSchemas: subMatchingSchemas };\n        } else {\n          if (!maxOneMatch && !subValidationResult.hasProblems() && !bestMatch.validationResult.hasProblems()) {\n            bestMatch.matchingSchemas.merge(subMatchingSchemas);\n            bestMatch.validationResult.propertiesMatches += subValidationResult.propertiesMatches;\n            bestMatch.validationResult.propertiesValueMatches += subValidationResult.propertiesValueMatches;\n            bestMatch.validationResult.mergeProcessedProperties(subValidationResult);\n          } else {\n            const compareResult = subValidationResult.compare(bestMatch.validationResult);\n            if (compareResult > 0) {\n              bestMatch = { schema: subSchema, validationResult: subValidationResult, matchingSchemas: subMatchingSchemas };\n            } else if (compareResult === 0) {\n              bestMatch.matchingSchemas.merge(subMatchingSchemas);\n              bestMatch.validationResult.mergeEnumValues(subValidationResult);\n            }\n          }\n        }\n      }\n      if (matches.length > 1 && maxOneMatch) {\n        validationResult.problems.push({\n          location: { offset: node.offset, length: 1 },\n          message: t(\"Matches multiple schemas when only one must validate.\")\n        });\n      }\n      if (bestMatch) {\n        validationResult.merge(bestMatch.validationResult);\n        matchingSchemas.merge(bestMatch.matchingSchemas);\n      }\n      return matches.length;\n    };\n    if (Array.isArray(schema.anyOf)) {\n      testAlternatives(schema.anyOf, false);\n    }\n    if (Array.isArray(schema.oneOf)) {\n      testAlternatives(schema.oneOf, true);\n    }\n    const testBranch = (schema2) => {\n      const subValidationResult = new ValidationResult();\n      const subMatchingSchemas = matchingSchemas.newSub();\n      validate(node, asSchema(schema2), subValidationResult, subMatchingSchemas, context);\n      validationResult.merge(subValidationResult);\n      matchingSchemas.merge(subMatchingSchemas);\n    };\n    const testCondition = (ifSchema2, thenSchema, elseSchema) => {\n      const subSchema = asSchema(ifSchema2);\n      const subValidationResult = new ValidationResult();\n      const subMatchingSchemas = matchingSchemas.newSub();\n      validate(node, subSchema, subValidationResult, subMatchingSchemas, context);\n      matchingSchemas.merge(subMatchingSchemas);\n      validationResult.mergeProcessedProperties(subValidationResult);\n      if (!subValidationResult.hasProblems()) {\n        if (thenSchema) {\n          testBranch(thenSchema);\n        }\n      } else if (elseSchema) {\n        testBranch(elseSchema);\n      }\n    };\n    const ifSchema = asSchema(schema.if);\n    if (ifSchema) {\n      testCondition(ifSchema, asSchema(schema.then), asSchema(schema.else));\n    }\n    if (Array.isArray(schema.enum)) {\n      const val = getNodeValue3(node);\n      let enumValueMatch = false;\n      for (const e of schema.enum) {\n        if (equals(val, e)) {\n          enumValueMatch = true;\n          break;\n        }\n      }\n      validationResult.enumValues = schema.enum;\n      validationResult.enumValueMatch = enumValueMatch;\n      if (!enumValueMatch) {\n        validationResult.problems.push({\n          location: { offset: node.offset, length: node.length },\n          code: ErrorCode.EnumValueMismatch,\n          message: schema.errorMessage || t(\"Value is not accepted. Valid values: {0}.\", schema.enum.map((v) => JSON.stringify(v)).join(\", \"))\n        });\n      }\n    }\n    if (isDefined(schema.const)) {\n      const val = getNodeValue3(node);\n      if (!equals(val, schema.const)) {\n        validationResult.problems.push({\n          location: { offset: node.offset, length: node.length },\n          code: ErrorCode.EnumValueMismatch,\n          message: schema.errorMessage || t(\"Value must be {0}.\", JSON.stringify(schema.const))\n        });\n        validationResult.enumValueMatch = false;\n      } else {\n        validationResult.enumValueMatch = true;\n      }\n      validationResult.enumValues = [schema.const];\n    }\n    let deprecationMessage = schema.deprecationMessage;\n    if (deprecationMessage || schema.deprecated) {\n      deprecationMessage = deprecationMessage || t(\"Value is deprecated\");\n      let targetNode = node.parent?.type === \"property\" ? node.parent : node;\n      validationResult.problems.push({\n        location: { offset: targetNode.offset, length: targetNode.length },\n        severity: DiagnosticSeverity.Warning,\n        message: deprecationMessage,\n        code: ErrorCode.Deprecated\n      });\n    }\n  }\n  function _validateNumberNode(node2) {\n    const val = node2.value;\n    function normalizeFloats(float) {\n      const parts = /^(-?\\d+)(?:\\.(\\d+))?(?:e([-+]\\d+))?$/.exec(float.toString());\n      return parts && {\n        value: Number(parts[1] + (parts[2] || \"\")),\n        multiplier: (parts[2]?.length || 0) - (parseInt(parts[3]) || 0)\n      };\n    }\n    ;\n    if (isNumber(schema.multipleOf)) {\n      let remainder = -1;\n      if (Number.isInteger(schema.multipleOf)) {\n        remainder = val % schema.multipleOf;\n      } else {\n        let normMultipleOf = normalizeFloats(schema.multipleOf);\n        let normValue = normalizeFloats(val);\n        if (normMultipleOf && normValue) {\n          const multiplier = 10 ** Math.abs(normValue.multiplier - normMultipleOf.multiplier);\n          if (normValue.multiplier < normMultipleOf.multiplier) {\n            normValue.value *= multiplier;\n          } else {\n            normMultipleOf.value *= multiplier;\n          }\n          remainder = normValue.value % normMultipleOf.value;\n        }\n      }\n      if (remainder !== 0) {\n        validationResult.problems.push({\n          location: { offset: node2.offset, length: node2.length },\n          message: t(\"Value is not divisible by {0}.\", schema.multipleOf)\n        });\n      }\n    }\n    function getExclusiveLimit(limit, exclusive) {\n      if (isNumber(exclusive)) {\n        return exclusive;\n      }\n      if (isBoolean(exclusive) && exclusive) {\n        return limit;\n      }\n      return void 0;\n    }\n    function getLimit(limit, exclusive) {\n      if (!isBoolean(exclusive) || !exclusive) {\n        return limit;\n      }\n      return void 0;\n    }\n    const exclusiveMinimum = getExclusiveLimit(schema.minimum, schema.exclusiveMinimum);\n    if (isNumber(exclusiveMinimum) && val <= exclusiveMinimum) {\n      validationResult.problems.push({\n        location: { offset: node2.offset, length: node2.length },\n        message: t(\"Value is below the exclusive minimum of {0}.\", exclusiveMinimum)\n      });\n    }\n    const exclusiveMaximum = getExclusiveLimit(schema.maximum, schema.exclusiveMaximum);\n    if (isNumber(exclusiveMaximum) && val >= exclusiveMaximum) {\n      validationResult.problems.push({\n        location: { offset: node2.offset, length: node2.length },\n        message: t(\"Value is above the exclusive maximum of {0}.\", exclusiveMaximum)\n      });\n    }\n    const minimum = getLimit(schema.minimum, schema.exclusiveMinimum);\n    if (isNumber(minimum) && val < minimum) {\n      validationResult.problems.push({\n        location: { offset: node2.offset, length: node2.length },\n        message: t(\"Value is below the minimum of {0}.\", minimum)\n      });\n    }\n    const maximum = getLimit(schema.maximum, schema.exclusiveMaximum);\n    if (isNumber(maximum) && val > maximum) {\n      validationResult.problems.push({\n        location: { offset: node2.offset, length: node2.length },\n        message: t(\"Value is above the maximum of {0}.\", maximum)\n      });\n    }\n  }\n  function _validateStringNode(node2) {\n    if (isNumber(schema.minLength) && stringLength(node2.value) < schema.minLength) {\n      validationResult.problems.push({\n        location: { offset: node2.offset, length: node2.length },\n        message: t(\"String is shorter than the minimum length of {0}.\", schema.minLength)\n      });\n    }\n    if (isNumber(schema.maxLength) && stringLength(node2.value) > schema.maxLength) {\n      validationResult.problems.push({\n        location: { offset: node2.offset, length: node2.length },\n        message: t(\"String is longer than the maximum length of {0}.\", schema.maxLength)\n      });\n    }\n    if (isString(schema.pattern)) {\n      const regex = extendedRegExp(schema.pattern);\n      if (!regex?.test(node2.value)) {\n        validationResult.problems.push({\n          location: { offset: node2.offset, length: node2.length },\n          message: schema.patternErrorMessage || schema.errorMessage || t('String does not match the pattern of \"{0}\".', schema.pattern)\n        });\n      }\n    }\n    if (schema.format) {\n      switch (schema.format) {\n        case \"uri\":\n        case \"uri-reference\":\n          {\n            let errorMessage;\n            if (!node2.value) {\n              errorMessage = t(\"URI expected.\");\n            } else {\n              const match = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/.exec(node2.value);\n              if (!match) {\n                errorMessage = t(\"URI is expected.\");\n              } else if (!match[2] && schema.format === \"uri\") {\n                errorMessage = t(\"URI with a scheme is expected.\");\n              }\n            }\n            if (errorMessage) {\n              validationResult.problems.push({\n                location: { offset: node2.offset, length: node2.length },\n                message: schema.patternErrorMessage || schema.errorMessage || t(\"String is not a URI: {0}\", errorMessage)\n              });\n            }\n          }\n          break;\n        case \"color-hex\":\n        case \"date-time\":\n        case \"date\":\n        case \"time\":\n        case \"email\":\n        case \"hostname\":\n        case \"ipv4\":\n        case \"ipv6\":\n          const format5 = formats[schema.format];\n          if (!node2.value || !format5.pattern.exec(node2.value)) {\n            validationResult.problems.push({\n              location: { offset: node2.offset, length: node2.length },\n              message: schema.patternErrorMessage || schema.errorMessage || format5.errorMessage\n            });\n          }\n        default:\n      }\n    }\n  }\n  function _validateArrayNode(node2) {\n    let prefixItemsSchemas;\n    let additionalItemSchema;\n    if (context.schemaDraft >= SchemaDraft.v2020_12) {\n      prefixItemsSchemas = schema.prefixItems;\n      additionalItemSchema = !Array.isArray(schema.items) ? schema.items : void 0;\n    } else {\n      prefixItemsSchemas = Array.isArray(schema.items) ? schema.items : void 0;\n      additionalItemSchema = !Array.isArray(schema.items) ? schema.items : schema.additionalItems;\n    }\n    let index = 0;\n    if (prefixItemsSchemas !== void 0) {\n      const max = Math.min(prefixItemsSchemas.length, node2.items.length);\n      for (; index < max; index++) {\n        const subSchemaRef = prefixItemsSchemas[index];\n        const subSchema = asSchema(subSchemaRef);\n        const itemValidationResult = new ValidationResult();\n        const item = node2.items[index];\n        if (item) {\n          validate(item, subSchema, itemValidationResult, matchingSchemas, context);\n          validationResult.mergePropertyMatch(itemValidationResult);\n        }\n        validationResult.processedProperties.add(String(index));\n      }\n    }\n    if (additionalItemSchema !== void 0 && index < node2.items.length) {\n      if (typeof additionalItemSchema === \"boolean\") {\n        if (additionalItemSchema === false) {\n          validationResult.problems.push({\n            location: { offset: node2.offset, length: node2.length },\n            message: t(\"Array has too many items according to schema. Expected {0} or fewer.\", index)\n          });\n        }\n        for (; index < node2.items.length; index++) {\n          validationResult.processedProperties.add(String(index));\n          validationResult.propertiesValueMatches++;\n        }\n      } else {\n        for (; index < node2.items.length; index++) {\n          const itemValidationResult = new ValidationResult();\n          validate(node2.items[index], additionalItemSchema, itemValidationResult, matchingSchemas, context);\n          validationResult.mergePropertyMatch(itemValidationResult);\n          validationResult.processedProperties.add(String(index));\n        }\n      }\n    }\n    const containsSchema = asSchema(schema.contains);\n    if (containsSchema) {\n      let containsCount = 0;\n      for (let index2 = 0; index2 < node2.items.length; index2++) {\n        const item = node2.items[index2];\n        const itemValidationResult = new ValidationResult();\n        validate(item, containsSchema, itemValidationResult, NoOpSchemaCollector.instance, context);\n        if (!itemValidationResult.hasProblems()) {\n          containsCount++;\n          if (context.schemaDraft >= SchemaDraft.v2020_12) {\n            validationResult.processedProperties.add(String(index2));\n          }\n        }\n      }\n      if (containsCount === 0 && !isNumber(schema.minContains)) {\n        validationResult.problems.push({\n          location: { offset: node2.offset, length: node2.length },\n          message: schema.errorMessage || t(\"Array does not contain required item.\")\n        });\n      }\n      if (isNumber(schema.minContains) && containsCount < schema.minContains) {\n        validationResult.problems.push({\n          location: { offset: node2.offset, length: node2.length },\n          message: schema.errorMessage || t(\"Array has too few items that match the contains contraint. Expected {0} or more.\", schema.minContains)\n        });\n      }\n      if (isNumber(schema.maxContains) && containsCount > schema.maxContains) {\n        validationResult.problems.push({\n          location: { offset: node2.offset, length: node2.length },\n          message: schema.errorMessage || t(\"Array has too many items that match the contains contraint. Expected {0} or less.\", schema.maxContains)\n        });\n      }\n    }\n    const unevaluatedItems = schema.unevaluatedItems;\n    if (unevaluatedItems !== void 0) {\n      for (let i = 0; i < node2.items.length; i++) {\n        if (!validationResult.processedProperties.has(String(i))) {\n          if (unevaluatedItems === false) {\n            validationResult.problems.push({\n              location: { offset: node2.offset, length: node2.length },\n              message: t(\"Item does not match any validation rule from the array.\")\n            });\n          } else {\n            const itemValidationResult = new ValidationResult();\n            validate(node2.items[i], schema.unevaluatedItems, itemValidationResult, matchingSchemas, context);\n            validationResult.mergePropertyMatch(itemValidationResult);\n          }\n        }\n        validationResult.processedProperties.add(String(i));\n        validationResult.propertiesValueMatches++;\n      }\n    }\n    if (isNumber(schema.minItems) && node2.items.length < schema.minItems) {\n      validationResult.problems.push({\n        location: { offset: node2.offset, length: node2.length },\n        message: t(\"Array has too few items. Expected {0} or more.\", schema.minItems)\n      });\n    }\n    if (isNumber(schema.maxItems) && node2.items.length > schema.maxItems) {\n      validationResult.problems.push({\n        location: { offset: node2.offset, length: node2.length },\n        message: t(\"Array has too many items. Expected {0} or fewer.\", schema.maxItems)\n      });\n    }\n    if (schema.uniqueItems === true) {\n      let hasDuplicates = function() {\n        for (let i = 0; i < values.length - 1; i++) {\n          const value = values[i];\n          for (let j = i + 1; j < values.length; j++) {\n            if (equals(value, values[j])) {\n              return true;\n            }\n          }\n        }\n        return false;\n      };\n      const values = getNodeValue3(node2);\n      if (hasDuplicates()) {\n        validationResult.problems.push({\n          location: { offset: node2.offset, length: node2.length },\n          message: t(\"Array has duplicate items.\")\n        });\n      }\n    }\n  }\n  function _validateObjectNode(node2) {\n    const seenKeys = /* @__PURE__ */ Object.create(null);\n    const unprocessedProperties = /* @__PURE__ */ new Set();\n    for (const propertyNode of node2.properties) {\n      const key = propertyNode.keyNode.value;\n      seenKeys[key] = propertyNode.valueNode;\n      unprocessedProperties.add(key);\n    }\n    if (Array.isArray(schema.required)) {\n      for (const propertyName of schema.required) {\n        if (!seenKeys[propertyName]) {\n          const keyNode = node2.parent && node2.parent.type === \"property\" && node2.parent.keyNode;\n          const location = keyNode ? { offset: keyNode.offset, length: keyNode.length } : { offset: node2.offset, length: 1 };\n          validationResult.problems.push({\n            location,\n            message: t('Missing property \"{0}\".', propertyName)\n          });\n        }\n      }\n    }\n    const propertyProcessed = (prop) => {\n      unprocessedProperties.delete(prop);\n      validationResult.processedProperties.add(prop);\n    };\n    if (schema.properties) {\n      for (const propertyName of Object.keys(schema.properties)) {\n        propertyProcessed(propertyName);\n        const propertySchema = schema.properties[propertyName];\n        const child = seenKeys[propertyName];\n        if (child) {\n          if (isBoolean(propertySchema)) {\n            if (!propertySchema) {\n              const propertyNode = child.parent;\n              validationResult.problems.push({\n                location: { offset: propertyNode.keyNode.offset, length: propertyNode.keyNode.length },\n                message: schema.errorMessage || t(\"Property {0} is not allowed.\", propertyName)\n              });\n            } else {\n              validationResult.propertiesMatches++;\n              validationResult.propertiesValueMatches++;\n            }\n          } else {\n            const propertyValidationResult = new ValidationResult();\n            validate(child, propertySchema, propertyValidationResult, matchingSchemas, context);\n            validationResult.mergePropertyMatch(propertyValidationResult);\n          }\n        }\n      }\n    }\n    if (schema.patternProperties) {\n      for (const propertyPattern of Object.keys(schema.patternProperties)) {\n        const regex = extendedRegExp(propertyPattern);\n        if (regex) {\n          const processed = [];\n          for (const propertyName of unprocessedProperties) {\n            if (regex.test(propertyName)) {\n              processed.push(propertyName);\n              const child = seenKeys[propertyName];\n              if (child) {\n                const propertySchema = schema.patternProperties[propertyPattern];\n                if (isBoolean(propertySchema)) {\n                  if (!propertySchema) {\n                    const propertyNode = child.parent;\n                    validationResult.problems.push({\n                      location: { offset: propertyNode.keyNode.offset, length: propertyNode.keyNode.length },\n                      message: schema.errorMessage || t(\"Property {0} is not allowed.\", propertyName)\n                    });\n                  } else {\n                    validationResult.propertiesMatches++;\n                    validationResult.propertiesValueMatches++;\n                  }\n                } else {\n                  const propertyValidationResult = new ValidationResult();\n                  validate(child, propertySchema, propertyValidationResult, matchingSchemas, context);\n                  validationResult.mergePropertyMatch(propertyValidationResult);\n                }\n              }\n            }\n          }\n          processed.forEach(propertyProcessed);\n        }\n      }\n    }\n    const additionalProperties = schema.additionalProperties;\n    if (additionalProperties !== void 0) {\n      for (const propertyName of unprocessedProperties) {\n        propertyProcessed(propertyName);\n        const child = seenKeys[propertyName];\n        if (child) {\n          if (additionalProperties === false) {\n            const propertyNode = child.parent;\n            validationResult.problems.push({\n              location: { offset: propertyNode.keyNode.offset, length: propertyNode.keyNode.length },\n              message: schema.errorMessage || t(\"Property {0} is not allowed.\", propertyName)\n            });\n          } else if (additionalProperties !== true) {\n            const propertyValidationResult = new ValidationResult();\n            validate(child, additionalProperties, propertyValidationResult, matchingSchemas, context);\n            validationResult.mergePropertyMatch(propertyValidationResult);\n          }\n        }\n      }\n    }\n    const unevaluatedProperties = schema.unevaluatedProperties;\n    if (unevaluatedProperties !== void 0) {\n      const processed = [];\n      for (const propertyName of unprocessedProperties) {\n        if (!validationResult.processedProperties.has(propertyName)) {\n          processed.push(propertyName);\n          const child = seenKeys[propertyName];\n          if (child) {\n            if (unevaluatedProperties === false) {\n              const propertyNode = child.parent;\n              validationResult.problems.push({\n                location: { offset: propertyNode.keyNode.offset, length: propertyNode.keyNode.length },\n                message: schema.errorMessage || t(\"Property {0} is not allowed.\", propertyName)\n              });\n            } else if (unevaluatedProperties !== true) {\n              const propertyValidationResult = new ValidationResult();\n              validate(child, unevaluatedProperties, propertyValidationResult, matchingSchemas, context);\n              validationResult.mergePropertyMatch(propertyValidationResult);\n            }\n          }\n        }\n      }\n      processed.forEach(propertyProcessed);\n    }\n    if (isNumber(schema.maxProperties)) {\n      if (node2.properties.length > schema.maxProperties) {\n        validationResult.problems.push({\n          location: { offset: node2.offset, length: node2.length },\n          message: t(\"Object has more properties than limit of {0}.\", schema.maxProperties)\n        });\n      }\n    }\n    if (isNumber(schema.minProperties)) {\n      if (node2.properties.length < schema.minProperties) {\n        validationResult.problems.push({\n          location: { offset: node2.offset, length: node2.length },\n          message: t(\"Object has fewer properties than the required number of {0}\", schema.minProperties)\n        });\n      }\n    }\n    if (schema.dependentRequired) {\n      for (const key in schema.dependentRequired) {\n        const prop = seenKeys[key];\n        const propertyDeps = schema.dependentRequired[key];\n        if (prop && Array.isArray(propertyDeps)) {\n          _validatePropertyDependencies(key, propertyDeps);\n        }\n      }\n    }\n    if (schema.dependentSchemas) {\n      for (const key in schema.dependentSchemas) {\n        const prop = seenKeys[key];\n        const propertyDeps = schema.dependentSchemas[key];\n        if (prop && isObject(propertyDeps)) {\n          _validatePropertyDependencies(key, propertyDeps);\n        }\n      }\n    }\n    if (schema.dependencies) {\n      for (const key in schema.dependencies) {\n        const prop = seenKeys[key];\n        if (prop) {\n          _validatePropertyDependencies(key, schema.dependencies[key]);\n        }\n      }\n    }\n    const propertyNames = asSchema(schema.propertyNames);\n    if (propertyNames) {\n      for (const f2 of node2.properties) {\n        const key = f2.keyNode;\n        if (key) {\n          validate(key, propertyNames, validationResult, NoOpSchemaCollector.instance, context);\n        }\n      }\n    }\n    function _validatePropertyDependencies(key, propertyDep) {\n      if (Array.isArray(propertyDep)) {\n        for (const requiredProp of propertyDep) {\n          if (!seenKeys[requiredProp]) {\n            validationResult.problems.push({\n              location: { offset: node2.offset, length: node2.length },\n              message: t(\"Object is missing property {0} required by property {1}.\", requiredProp, key)\n            });\n          } else {\n            validationResult.propertiesValueMatches++;\n          }\n        }\n      } else {\n        const propertySchema = asSchema(propertyDep);\n        if (propertySchema) {\n          const propertyValidationResult = new ValidationResult();\n          validate(node2, propertySchema, propertyValidationResult, matchingSchemas, context);\n          validationResult.mergePropertyMatch(propertyValidationResult);\n        }\n      }\n    }\n  }\n}\nfunction parse3(textDocument, config) {\n  const problems = [];\n  let lastProblemOffset = -1;\n  const text = textDocument.getText();\n  const scanner = createScanner2(text, false);\n  const commentRanges = config && config.collectComments ? [] : void 0;\n  function _scanNext() {\n    while (true) {\n      const token2 = scanner.scan();\n      _checkScanError();\n      switch (token2) {\n        case 12:\n        case 13:\n          if (Array.isArray(commentRanges)) {\n            commentRanges.push(Range.create(textDocument.positionAt(scanner.getTokenOffset()), textDocument.positionAt(scanner.getTokenOffset() + scanner.getTokenLength())));\n          }\n          break;\n        case 15:\n        case 14:\n          break;\n        default:\n          return token2;\n      }\n    }\n  }\n  function _accept(token2) {\n    if (scanner.getToken() === token2) {\n      _scanNext();\n      return true;\n    }\n    return false;\n  }\n  function _errorAtRange(message, code, startOffset, endOffset, severity = DiagnosticSeverity.Error) {\n    if (problems.length === 0 || startOffset !== lastProblemOffset) {\n      const range = Range.create(textDocument.positionAt(startOffset), textDocument.positionAt(endOffset));\n      problems.push(Diagnostic.create(range, message, severity, code, textDocument.languageId));\n      lastProblemOffset = startOffset;\n    }\n  }\n  function _error(message, code, node = void 0, skipUntilAfter = [], skipUntil = []) {\n    let start = scanner.getTokenOffset();\n    let end = scanner.getTokenOffset() + scanner.getTokenLength();\n    if (start === end && start > 0) {\n      start--;\n      while (start > 0 && /\\s/.test(text.charAt(start))) {\n        start--;\n      }\n      end = start + 1;\n    }\n    _errorAtRange(message, code, start, end);\n    if (node) {\n      _finalize(node, false);\n    }\n    if (skipUntilAfter.length + skipUntil.length > 0) {\n      let token2 = scanner.getToken();\n      while (token2 !== 17) {\n        if (skipUntilAfter.indexOf(token2) !== -1) {\n          _scanNext();\n          break;\n        } else if (skipUntil.indexOf(token2) !== -1) {\n          break;\n        }\n        token2 = _scanNext();\n      }\n    }\n    return node;\n  }\n  function _checkScanError() {\n    switch (scanner.getTokenError()) {\n      case 4:\n        _error(t(\"Invalid unicode sequence in string.\"), ErrorCode.InvalidUnicode);\n        return true;\n      case 5:\n        _error(t(\"Invalid escape character in string.\"), ErrorCode.InvalidEscapeCharacter);\n        return true;\n      case 3:\n        _error(t(\"Unexpected end of number.\"), ErrorCode.UnexpectedEndOfNumber);\n        return true;\n      case 1:\n        _error(t(\"Unexpected end of comment.\"), ErrorCode.UnexpectedEndOfComment);\n        return true;\n      case 2:\n        _error(t(\"Unexpected end of string.\"), ErrorCode.UnexpectedEndOfString);\n        return true;\n      case 6:\n        _error(t(\"Invalid characters in string. Control characters must be escaped.\"), ErrorCode.InvalidCharacter);\n        return true;\n    }\n    return false;\n  }\n  function _finalize(node, scanNext) {\n    node.length = scanner.getTokenOffset() + scanner.getTokenLength() - node.offset;\n    if (scanNext) {\n      _scanNext();\n    }\n    return node;\n  }\n  function _parseArray(parent) {\n    if (scanner.getToken() !== 3) {\n      return void 0;\n    }\n    const node = new ArrayASTNodeImpl(parent, scanner.getTokenOffset());\n    _scanNext();\n    const count = 0;\n    let needsComma = false;\n    while (scanner.getToken() !== 4 && scanner.getToken() !== 17) {\n      if (scanner.getToken() === 5) {\n        if (!needsComma) {\n          _error(t(\"Value expected\"), ErrorCode.ValueExpected);\n        }\n        const commaOffset = scanner.getTokenOffset();\n        _scanNext();\n        if (scanner.getToken() === 4) {\n          if (needsComma) {\n            _errorAtRange(t(\"Trailing comma\"), ErrorCode.TrailingComma, commaOffset, commaOffset + 1);\n          }\n          continue;\n        }\n      } else if (needsComma) {\n        _error(t(\"Expected comma\"), ErrorCode.CommaExpected);\n      }\n      const item = _parseValue(node);\n      if (!item) {\n        _error(t(\"Value expected\"), ErrorCode.ValueExpected, void 0, [], [\n          4,\n          5\n          /* Json.SyntaxKind.CommaToken */\n        ]);\n      } else {\n        node.items.push(item);\n      }\n      needsComma = true;\n    }\n    if (scanner.getToken() !== 4) {\n      return _error(t(\"Expected comma or closing bracket\"), ErrorCode.CommaOrCloseBacketExpected, node);\n    }\n    return _finalize(node, true);\n  }\n  const keyPlaceholder = new StringASTNodeImpl(void 0, 0, 0);\n  function _parseProperty(parent, keysSeen) {\n    const node = new PropertyASTNodeImpl(parent, scanner.getTokenOffset(), keyPlaceholder);\n    let key = _parseString(node);\n    if (!key) {\n      if (scanner.getToken() === 16) {\n        _error(t(\"Property keys must be doublequoted\"), ErrorCode.PropertyKeysMustBeDoublequoted);\n        const keyNode = new StringASTNodeImpl(node, scanner.getTokenOffset(), scanner.getTokenLength());\n        keyNode.value = scanner.getTokenValue();\n        key = keyNode;\n        _scanNext();\n      } else {\n        return void 0;\n      }\n    }\n    node.keyNode = key;\n    if (key.value !== \"//\") {\n      const seen = keysSeen[key.value];\n      if (seen) {\n        _errorAtRange(t(\"Duplicate object key\"), ErrorCode.DuplicateKey, node.keyNode.offset, node.keyNode.offset + node.keyNode.length, DiagnosticSeverity.Warning);\n        if (isObject(seen)) {\n          _errorAtRange(t(\"Duplicate object key\"), ErrorCode.DuplicateKey, seen.keyNode.offset, seen.keyNode.offset + seen.keyNode.length, DiagnosticSeverity.Warning);\n        }\n        keysSeen[key.value] = true;\n      } else {\n        keysSeen[key.value] = node;\n      }\n    }\n    if (scanner.getToken() === 6) {\n      node.colonOffset = scanner.getTokenOffset();\n      _scanNext();\n    } else {\n      _error(t(\"Colon expected\"), ErrorCode.ColonExpected);\n      if (scanner.getToken() === 10 && textDocument.positionAt(key.offset + key.length).line < textDocument.positionAt(scanner.getTokenOffset()).line) {\n        node.length = key.length;\n        return node;\n      }\n    }\n    const value = _parseValue(node);\n    if (!value) {\n      return _error(t(\"Value expected\"), ErrorCode.ValueExpected, node, [], [\n        2,\n        5\n        /* Json.SyntaxKind.CommaToken */\n      ]);\n    }\n    node.valueNode = value;\n    node.length = value.offset + value.length - node.offset;\n    return node;\n  }\n  function _parseObject(parent) {\n    if (scanner.getToken() !== 1) {\n      return void 0;\n    }\n    const node = new ObjectASTNodeImpl(parent, scanner.getTokenOffset());\n    const keysSeen = /* @__PURE__ */ Object.create(null);\n    _scanNext();\n    let needsComma = false;\n    while (scanner.getToken() !== 2 && scanner.getToken() !== 17) {\n      if (scanner.getToken() === 5) {\n        if (!needsComma) {\n          _error(t(\"Property expected\"), ErrorCode.PropertyExpected);\n        }\n        const commaOffset = scanner.getTokenOffset();\n        _scanNext();\n        if (scanner.getToken() === 2) {\n          if (needsComma) {\n            _errorAtRange(t(\"Trailing comma\"), ErrorCode.TrailingComma, commaOffset, commaOffset + 1);\n          }\n          continue;\n        }\n      } else if (needsComma) {\n        _error(t(\"Expected comma\"), ErrorCode.CommaExpected);\n      }\n      const property = _parseProperty(node, keysSeen);\n      if (!property) {\n        _error(t(\"Property expected\"), ErrorCode.PropertyExpected, void 0, [], [\n          2,\n          5\n          /* Json.SyntaxKind.CommaToken */\n        ]);\n      } else {\n        node.properties.push(property);\n      }\n      needsComma = true;\n    }\n    if (scanner.getToken() !== 2) {\n      return _error(t(\"Expected comma or closing brace\"), ErrorCode.CommaOrCloseBraceExpected, node);\n    }\n    return _finalize(node, true);\n  }\n  function _parseString(parent) {\n    if (scanner.getToken() !== 10) {\n      return void 0;\n    }\n    const node = new StringASTNodeImpl(parent, scanner.getTokenOffset());\n    node.value = scanner.getTokenValue();\n    return _finalize(node, true);\n  }\n  function _parseNumber(parent) {\n    if (scanner.getToken() !== 11) {\n      return void 0;\n    }\n    const node = new NumberASTNodeImpl(parent, scanner.getTokenOffset());\n    if (scanner.getTokenError() === 0) {\n      const tokenValue = scanner.getTokenValue();\n      try {\n        const numberValue = JSON.parse(tokenValue);\n        if (!isNumber(numberValue)) {\n          return _error(t(\"Invalid number format.\"), ErrorCode.Undefined, node);\n        }\n        node.value = numberValue;\n      } catch (e) {\n        return _error(t(\"Invalid number format.\"), ErrorCode.Undefined, node);\n      }\n      node.isInteger = tokenValue.indexOf(\".\") === -1;\n    }\n    return _finalize(node, true);\n  }\n  function _parseLiteral(parent) {\n    let node;\n    switch (scanner.getToken()) {\n      case 7:\n        return _finalize(new NullASTNodeImpl(parent, scanner.getTokenOffset()), true);\n      case 8:\n        return _finalize(new BooleanASTNodeImpl(parent, true, scanner.getTokenOffset()), true);\n      case 9:\n        return _finalize(new BooleanASTNodeImpl(parent, false, scanner.getTokenOffset()), true);\n      default:\n        return void 0;\n    }\n  }\n  function _parseValue(parent) {\n    return _parseArray(parent) || _parseObject(parent) || _parseString(parent) || _parseNumber(parent) || _parseLiteral(parent);\n  }\n  let _root = void 0;\n  const token = _scanNext();\n  if (token !== 17) {\n    _root = _parseValue(_root);\n    if (!_root) {\n      _error(t(\"Expected a JSON object, array or literal.\"), ErrorCode.Undefined);\n    } else if (scanner.getToken() !== 17) {\n      _error(t(\"End of file expected.\"), ErrorCode.Undefined);\n    }\n  }\n  return new JSONDocument(_root, problems, commentRanges);\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/utils/json.js\nfunction stringifyObject(obj, indent, stringifyLiteral) {\n  if (obj !== null && typeof obj === \"object\") {\n    const newIndent = indent + \"\t\";\n    if (Array.isArray(obj)) {\n      if (obj.length === 0) {\n        return \"[]\";\n      }\n      let result = \"[\\n\";\n      for (let i = 0; i < obj.length; i++) {\n        result += newIndent + stringifyObject(obj[i], newIndent, stringifyLiteral);\n        if (i < obj.length - 1) {\n          result += \",\";\n        }\n        result += \"\\n\";\n      }\n      result += indent + \"]\";\n      return result;\n    } else {\n      const keys = Object.keys(obj);\n      if (keys.length === 0) {\n        return \"{}\";\n      }\n      let result = \"{\\n\";\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        result += newIndent + JSON.stringify(key) + \": \" + stringifyObject(obj[key], newIndent, stringifyLiteral);\n        if (i < keys.length - 1) {\n          result += \",\";\n        }\n        result += \"\\n\";\n      }\n      result += indent + \"}\";\n      return result;\n    }\n  }\n  return stringifyLiteral(obj);\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/services/jsonCompletion.js\nvar valueCommitCharacters = [\",\", \"}\", \"]\"];\nvar propertyCommitCharacters = [\":\"];\nvar JSONCompletion = class {\n  constructor(schemaService, contributions = [], promiseConstructor = Promise, clientCapabilities = {}) {\n    this.schemaService = schemaService;\n    this.contributions = contributions;\n    this.promiseConstructor = promiseConstructor;\n    this.clientCapabilities = clientCapabilities;\n  }\n  doResolve(item) {\n    for (let i = this.contributions.length - 1; i >= 0; i--) {\n      const resolveCompletion = this.contributions[i].resolveCompletion;\n      if (resolveCompletion) {\n        const resolver = resolveCompletion(item);\n        if (resolver) {\n          return resolver;\n        }\n      }\n    }\n    return this.promiseConstructor.resolve(item);\n  }\n  doComplete(document, position, doc) {\n    const result = {\n      items: [],\n      isIncomplete: false\n    };\n    const text = document.getText();\n    const offset = document.offsetAt(position);\n    let node = doc.getNodeFromOffset(offset, true);\n    if (this.isInComment(document, node ? node.offset : 0, offset)) {\n      return Promise.resolve(result);\n    }\n    if (node && offset === node.offset + node.length && offset > 0) {\n      const ch = text[offset - 1];\n      if (node.type === \"object\" && ch === \"}\" || node.type === \"array\" && ch === \"]\") {\n        node = node.parent;\n      }\n    }\n    const currentWord = this.getCurrentWord(document, offset);\n    let overwriteRange;\n    if (node && (node.type === \"string\" || node.type === \"number\" || node.type === \"boolean\" || node.type === \"null\")) {\n      overwriteRange = Range.create(document.positionAt(node.offset), document.positionAt(node.offset + node.length));\n    } else {\n      let overwriteStart = offset - currentWord.length;\n      if (overwriteStart > 0 && text[overwriteStart - 1] === '\"') {\n        overwriteStart--;\n      }\n      overwriteRange = Range.create(document.positionAt(overwriteStart), position);\n    }\n    const supportsCommitCharacters = false;\n    const proposed = /* @__PURE__ */ new Map();\n    const collector = {\n      add: (suggestion) => {\n        let label = suggestion.label;\n        const existing = proposed.get(label);\n        if (!existing) {\n          label = label.replace(/[\\n]/g, \"\\u21B5\");\n          if (label.length > 60) {\n            const shortendedLabel = label.substr(0, 57).trim() + \"...\";\n            if (!proposed.has(shortendedLabel)) {\n              label = shortendedLabel;\n            }\n          }\n          suggestion.textEdit = TextEdit.replace(overwriteRange, suggestion.insertText);\n          if (supportsCommitCharacters) {\n            suggestion.commitCharacters = suggestion.kind === CompletionItemKind.Property ? propertyCommitCharacters : valueCommitCharacters;\n          }\n          suggestion.label = label;\n          proposed.set(label, suggestion);\n          result.items.push(suggestion);\n        } else {\n          if (!existing.documentation) {\n            existing.documentation = suggestion.documentation;\n          }\n          if (!existing.detail) {\n            existing.detail = suggestion.detail;\n          }\n          if (!existing.labelDetails) {\n            existing.labelDetails = suggestion.labelDetails;\n          }\n        }\n      },\n      setAsIncomplete: () => {\n        result.isIncomplete = true;\n      },\n      error: (message) => {\n        console.error(message);\n      },\n      getNumberOfProposals: () => {\n        return result.items.length;\n      }\n    };\n    return this.schemaService.getSchemaForResource(document.uri, doc).then((schema) => {\n      const collectionPromises = [];\n      let addValue = true;\n      let currentKey = \"\";\n      let currentProperty = void 0;\n      if (node) {\n        if (node.type === \"string\") {\n          const parent = node.parent;\n          if (parent && parent.type === \"property\" && parent.keyNode === node) {\n            addValue = !parent.valueNode;\n            currentProperty = parent;\n            currentKey = text.substr(node.offset + 1, node.length - 2);\n            if (parent) {\n              node = parent.parent;\n            }\n          }\n        }\n      }\n      if (node && node.type === \"object\") {\n        if (node.offset === offset) {\n          return result;\n        }\n        const properties = node.properties;\n        properties.forEach((p) => {\n          if (!currentProperty || currentProperty !== p) {\n            proposed.set(p.keyNode.value, CompletionItem.create(\"__\"));\n          }\n        });\n        let separatorAfter = \"\";\n        if (addValue) {\n          separatorAfter = this.evaluateSeparatorAfter(document, document.offsetAt(overwriteRange.end));\n        }\n        if (schema) {\n          this.getPropertyCompletions(schema, doc, node, addValue, separatorAfter, collector);\n        } else {\n          this.getSchemaLessPropertyCompletions(doc, node, currentKey, collector);\n        }\n        const location = getNodePath3(node);\n        this.contributions.forEach((contribution) => {\n          const collectPromise = contribution.collectPropertyCompletions(document.uri, location, currentWord, addValue, separatorAfter === \"\", collector);\n          if (collectPromise) {\n            collectionPromises.push(collectPromise);\n          }\n        });\n        if (!schema && currentWord.length > 0 && text.charAt(offset - currentWord.length - 1) !== '\"') {\n          collector.add({\n            kind: CompletionItemKind.Property,\n            label: this.getLabelForValue(currentWord),\n            insertText: this.getInsertTextForProperty(currentWord, void 0, false, separatorAfter),\n            insertTextFormat: InsertTextFormat.Snippet,\n            documentation: \"\"\n          });\n          collector.setAsIncomplete();\n        }\n      }\n      const types = {};\n      if (schema) {\n        this.getValueCompletions(schema, doc, node, offset, document, collector, types);\n      } else {\n        this.getSchemaLessValueCompletions(doc, node, offset, document, collector);\n      }\n      if (this.contributions.length > 0) {\n        this.getContributedValueCompletions(doc, node, offset, document, collector, collectionPromises);\n      }\n      return this.promiseConstructor.all(collectionPromises).then(() => {\n        if (collector.getNumberOfProposals() === 0) {\n          let offsetForSeparator = offset;\n          if (node && (node.type === \"string\" || node.type === \"number\" || node.type === \"boolean\" || node.type === \"null\")) {\n            offsetForSeparator = node.offset + node.length;\n          }\n          const separatorAfter = this.evaluateSeparatorAfter(document, offsetForSeparator);\n          this.addFillerValueCompletions(types, separatorAfter, collector);\n        }\n        return result;\n      });\n    });\n  }\n  getPropertyCompletions(schema, doc, node, addValue, separatorAfter, collector) {\n    const matchingSchemas = doc.getMatchingSchemas(schema.schema, node.offset);\n    matchingSchemas.forEach((s) => {\n      if (s.node === node && !s.inverted) {\n        const schemaProperties = s.schema.properties;\n        if (schemaProperties) {\n          Object.keys(schemaProperties).forEach((key) => {\n            const propertySchema = schemaProperties[key];\n            if (typeof propertySchema === \"object\" && !propertySchema.deprecationMessage && !propertySchema.doNotSuggest) {\n              const proposal = {\n                kind: CompletionItemKind.Property,\n                label: key,\n                insertText: this.getInsertTextForProperty(key, propertySchema, addValue, separatorAfter),\n                insertTextFormat: InsertTextFormat.Snippet,\n                filterText: this.getFilterTextForValue(key),\n                documentation: this.fromMarkup(propertySchema.markdownDescription) || propertySchema.description || \"\"\n              };\n              if (propertySchema.suggestSortText !== void 0) {\n                proposal.sortText = propertySchema.suggestSortText;\n              }\n              if (proposal.insertText && endsWith(proposal.insertText, `$1${separatorAfter}`)) {\n                proposal.command = {\n                  title: \"Suggest\",\n                  command: \"editor.action.triggerSuggest\"\n                };\n              }\n              collector.add(proposal);\n            }\n          });\n        }\n        const schemaPropertyNames = s.schema.propertyNames;\n        if (typeof schemaPropertyNames === \"object\" && !schemaPropertyNames.deprecationMessage && !schemaPropertyNames.doNotSuggest) {\n          const propertyNameCompletionItem = (name, enumDescription = void 0) => {\n            const proposal = {\n              kind: CompletionItemKind.Property,\n              label: name,\n              insertText: this.getInsertTextForProperty(name, void 0, addValue, separatorAfter),\n              insertTextFormat: InsertTextFormat.Snippet,\n              filterText: this.getFilterTextForValue(name),\n              documentation: enumDescription || this.fromMarkup(schemaPropertyNames.markdownDescription) || schemaPropertyNames.description || \"\"\n            };\n            if (schemaPropertyNames.suggestSortText !== void 0) {\n              proposal.sortText = schemaPropertyNames.suggestSortText;\n            }\n            if (proposal.insertText && endsWith(proposal.insertText, `$1${separatorAfter}`)) {\n              proposal.command = {\n                title: \"Suggest\",\n                command: \"editor.action.triggerSuggest\"\n              };\n            }\n            collector.add(proposal);\n          };\n          if (schemaPropertyNames.enum) {\n            for (let i = 0; i < schemaPropertyNames.enum.length; i++) {\n              let enumDescription = void 0;\n              if (schemaPropertyNames.markdownEnumDescriptions && i < schemaPropertyNames.markdownEnumDescriptions.length) {\n                enumDescription = this.fromMarkup(schemaPropertyNames.markdownEnumDescriptions[i]);\n              } else if (schemaPropertyNames.enumDescriptions && i < schemaPropertyNames.enumDescriptions.length) {\n                enumDescription = schemaPropertyNames.enumDescriptions[i];\n              }\n              propertyNameCompletionItem(schemaPropertyNames.enum[i], enumDescription);\n            }\n          }\n          if (schemaPropertyNames.const) {\n            propertyNameCompletionItem(schemaPropertyNames.const);\n          }\n        }\n      }\n    });\n  }\n  getSchemaLessPropertyCompletions(doc, node, currentKey, collector) {\n    const collectCompletionsForSimilarObject = (obj) => {\n      obj.properties.forEach((p) => {\n        const key = p.keyNode.value;\n        collector.add({\n          kind: CompletionItemKind.Property,\n          label: key,\n          insertText: this.getInsertTextForValue(key, \"\"),\n          insertTextFormat: InsertTextFormat.Snippet,\n          filterText: this.getFilterTextForValue(key),\n          documentation: \"\"\n        });\n      });\n    };\n    if (node.parent) {\n      if (node.parent.type === \"property\") {\n        const parentKey = node.parent.keyNode.value;\n        doc.visit((n) => {\n          if (n.type === \"property\" && n !== node.parent && n.keyNode.value === parentKey && n.valueNode && n.valueNode.type === \"object\") {\n            collectCompletionsForSimilarObject(n.valueNode);\n          }\n          return true;\n        });\n      } else if (node.parent.type === \"array\") {\n        node.parent.items.forEach((n) => {\n          if (n.type === \"object\" && n !== node) {\n            collectCompletionsForSimilarObject(n);\n          }\n        });\n      }\n    } else if (node.type === \"object\") {\n      collector.add({\n        kind: CompletionItemKind.Property,\n        label: \"$schema\",\n        insertText: this.getInsertTextForProperty(\"$schema\", void 0, true, \"\"),\n        insertTextFormat: InsertTextFormat.Snippet,\n        documentation: \"\",\n        filterText: this.getFilterTextForValue(\"$schema\")\n      });\n    }\n  }\n  getSchemaLessValueCompletions(doc, node, offset, document, collector) {\n    let offsetForSeparator = offset;\n    if (node && (node.type === \"string\" || node.type === \"number\" || node.type === \"boolean\" || node.type === \"null\")) {\n      offsetForSeparator = node.offset + node.length;\n      node = node.parent;\n    }\n    if (!node) {\n      collector.add({\n        kind: this.getSuggestionKind(\"object\"),\n        label: \"Empty object\",\n        insertText: this.getInsertTextForValue({}, \"\"),\n        insertTextFormat: InsertTextFormat.Snippet,\n        documentation: \"\"\n      });\n      collector.add({\n        kind: this.getSuggestionKind(\"array\"),\n        label: \"Empty array\",\n        insertText: this.getInsertTextForValue([], \"\"),\n        insertTextFormat: InsertTextFormat.Snippet,\n        documentation: \"\"\n      });\n      return;\n    }\n    const separatorAfter = this.evaluateSeparatorAfter(document, offsetForSeparator);\n    const collectSuggestionsForValues = (value) => {\n      if (value.parent && !contains2(value.parent, offset, true)) {\n        collector.add({\n          kind: this.getSuggestionKind(value.type),\n          label: this.getLabelTextForMatchingNode(value, document),\n          insertText: this.getInsertTextForMatchingNode(value, document, separatorAfter),\n          insertTextFormat: InsertTextFormat.Snippet,\n          documentation: \"\"\n        });\n      }\n      if (value.type === \"boolean\") {\n        this.addBooleanValueCompletion(!value.value, separatorAfter, collector);\n      }\n    };\n    if (node.type === \"property\") {\n      if (offset > (node.colonOffset || 0)) {\n        const valueNode = node.valueNode;\n        if (valueNode && (offset > valueNode.offset + valueNode.length || valueNode.type === \"object\" || valueNode.type === \"array\")) {\n          return;\n        }\n        const parentKey = node.keyNode.value;\n        doc.visit((n) => {\n          if (n.type === \"property\" && n.keyNode.value === parentKey && n.valueNode) {\n            collectSuggestionsForValues(n.valueNode);\n          }\n          return true;\n        });\n        if (parentKey === \"$schema\" && node.parent && !node.parent.parent) {\n          this.addDollarSchemaCompletions(separatorAfter, collector);\n        }\n      }\n    }\n    if (node.type === \"array\") {\n      if (node.parent && node.parent.type === \"property\") {\n        const parentKey = node.parent.keyNode.value;\n        doc.visit((n) => {\n          if (n.type === \"property\" && n.keyNode.value === parentKey && n.valueNode && n.valueNode.type === \"array\") {\n            n.valueNode.items.forEach(collectSuggestionsForValues);\n          }\n          return true;\n        });\n      } else {\n        node.items.forEach(collectSuggestionsForValues);\n      }\n    }\n  }\n  getValueCompletions(schema, doc, node, offset, document, collector, types) {\n    let offsetForSeparator = offset;\n    let parentKey = void 0;\n    let valueNode = void 0;\n    if (node && (node.type === \"string\" || node.type === \"number\" || node.type === \"boolean\" || node.type === \"null\")) {\n      offsetForSeparator = node.offset + node.length;\n      valueNode = node;\n      node = node.parent;\n    }\n    if (!node) {\n      this.addSchemaValueCompletions(schema.schema, \"\", collector, types);\n      return;\n    }\n    if (node.type === \"property\" && offset > (node.colonOffset || 0)) {\n      const valueNode2 = node.valueNode;\n      if (valueNode2 && offset > valueNode2.offset + valueNode2.length) {\n        return;\n      }\n      parentKey = node.keyNode.value;\n      node = node.parent;\n    }\n    if (node && (parentKey !== void 0 || node.type === \"array\")) {\n      const separatorAfter = this.evaluateSeparatorAfter(document, offsetForSeparator);\n      const matchingSchemas = doc.getMatchingSchemas(schema.schema, node.offset, valueNode);\n      for (const s of matchingSchemas) {\n        if (s.node === node && !s.inverted && s.schema) {\n          if (node.type === \"array\" && s.schema.items) {\n            let c = collector;\n            if (s.schema.uniqueItems) {\n              const existingValues = /* @__PURE__ */ new Set();\n              node.children.forEach((n) => {\n                if (n.type !== \"array\" && n.type !== \"object\") {\n                  existingValues.add(this.getLabelForValue(getNodeValue3(n)));\n                }\n              });\n              c = {\n                ...collector,\n                add(suggestion) {\n                  if (!existingValues.has(suggestion.label)) {\n                    collector.add(suggestion);\n                  }\n                }\n              };\n            }\n            if (Array.isArray(s.schema.items)) {\n              const index = this.findItemAtOffset(node, document, offset);\n              if (index < s.schema.items.length) {\n                this.addSchemaValueCompletions(s.schema.items[index], separatorAfter, c, types);\n              }\n            } else {\n              this.addSchemaValueCompletions(s.schema.items, separatorAfter, c, types);\n            }\n          }\n          if (parentKey !== void 0) {\n            let propertyMatched = false;\n            if (s.schema.properties) {\n              const propertySchema = s.schema.properties[parentKey];\n              if (propertySchema) {\n                propertyMatched = true;\n                this.addSchemaValueCompletions(propertySchema, separatorAfter, collector, types);\n              }\n            }\n            if (s.schema.patternProperties && !propertyMatched) {\n              for (const pattern of Object.keys(s.schema.patternProperties)) {\n                const regex = extendedRegExp(pattern);\n                if (regex?.test(parentKey)) {\n                  propertyMatched = true;\n                  const propertySchema = s.schema.patternProperties[pattern];\n                  this.addSchemaValueCompletions(propertySchema, separatorAfter, collector, types);\n                }\n              }\n            }\n            if (s.schema.additionalProperties && !propertyMatched) {\n              const propertySchema = s.schema.additionalProperties;\n              this.addSchemaValueCompletions(propertySchema, separatorAfter, collector, types);\n            }\n          }\n        }\n      }\n      if (parentKey === \"$schema\" && !node.parent) {\n        this.addDollarSchemaCompletions(separatorAfter, collector);\n      }\n      if (types[\"boolean\"]) {\n        this.addBooleanValueCompletion(true, separatorAfter, collector);\n        this.addBooleanValueCompletion(false, separatorAfter, collector);\n      }\n      if (types[\"null\"]) {\n        this.addNullValueCompletion(separatorAfter, collector);\n      }\n    }\n  }\n  getContributedValueCompletions(doc, node, offset, document, collector, collectionPromises) {\n    if (!node) {\n      this.contributions.forEach((contribution) => {\n        const collectPromise = contribution.collectDefaultCompletions(document.uri, collector);\n        if (collectPromise) {\n          collectionPromises.push(collectPromise);\n        }\n      });\n    } else {\n      if (node.type === \"string\" || node.type === \"number\" || node.type === \"boolean\" || node.type === \"null\") {\n        node = node.parent;\n      }\n      if (node && node.type === \"property\" && offset > (node.colonOffset || 0)) {\n        const parentKey = node.keyNode.value;\n        const valueNode = node.valueNode;\n        if ((!valueNode || offset <= valueNode.offset + valueNode.length) && node.parent) {\n          const location = getNodePath3(node.parent);\n          this.contributions.forEach((contribution) => {\n            const collectPromise = contribution.collectValueCompletions(document.uri, location, parentKey, collector);\n            if (collectPromise) {\n              collectionPromises.push(collectPromise);\n            }\n          });\n        }\n      }\n    }\n  }\n  addSchemaValueCompletions(schema, separatorAfter, collector, types) {\n    if (typeof schema === \"object\") {\n      this.addEnumValueCompletions(schema, separatorAfter, collector);\n      this.addDefaultValueCompletions(schema, separatorAfter, collector);\n      this.collectTypes(schema, types);\n      if (Array.isArray(schema.allOf)) {\n        schema.allOf.forEach((s) => this.addSchemaValueCompletions(s, separatorAfter, collector, types));\n      }\n      if (Array.isArray(schema.anyOf)) {\n        schema.anyOf.forEach((s) => this.addSchemaValueCompletions(s, separatorAfter, collector, types));\n      }\n      if (Array.isArray(schema.oneOf)) {\n        schema.oneOf.forEach((s) => this.addSchemaValueCompletions(s, separatorAfter, collector, types));\n      }\n    }\n  }\n  addDefaultValueCompletions(schema, separatorAfter, collector, arrayDepth = 0) {\n    let hasProposals = false;\n    if (isDefined(schema.default)) {\n      let type = schema.type;\n      let value = schema.default;\n      for (let i = arrayDepth; i > 0; i--) {\n        value = [value];\n        type = \"array\";\n      }\n      const completionItem = {\n        kind: this.getSuggestionKind(type),\n        label: this.getLabelForValue(value),\n        insertText: this.getInsertTextForValue(value, separatorAfter),\n        insertTextFormat: InsertTextFormat.Snippet\n      };\n      if (this.doesSupportsLabelDetails()) {\n        completionItem.labelDetails = { description: t(\"Default value\") };\n      } else {\n        completionItem.detail = t(\"Default value\");\n      }\n      collector.add(completionItem);\n      hasProposals = true;\n    }\n    if (Array.isArray(schema.examples)) {\n      schema.examples.forEach((example) => {\n        let type = schema.type;\n        let value = example;\n        for (let i = arrayDepth; i > 0; i--) {\n          value = [value];\n          type = \"array\";\n        }\n        collector.add({\n          kind: this.getSuggestionKind(type),\n          label: this.getLabelForValue(value),\n          insertText: this.getInsertTextForValue(value, separatorAfter),\n          insertTextFormat: InsertTextFormat.Snippet\n        });\n        hasProposals = true;\n      });\n    }\n    if (Array.isArray(schema.defaultSnippets)) {\n      schema.defaultSnippets.forEach((s) => {\n        let type = schema.type;\n        let value = s.body;\n        let label = s.label;\n        let insertText;\n        let filterText;\n        if (isDefined(value)) {\n          let type2 = schema.type;\n          for (let i = arrayDepth; i > 0; i--) {\n            value = [value];\n            type2 = \"array\";\n          }\n          insertText = this.getInsertTextForSnippetValue(value, separatorAfter);\n          filterText = this.getFilterTextForSnippetValue(value);\n          label = label || this.getLabelForSnippetValue(value);\n        } else if (typeof s.bodyText === \"string\") {\n          let prefix = \"\", suffix = \"\", indent = \"\";\n          for (let i = arrayDepth; i > 0; i--) {\n            prefix = prefix + indent + \"[\\n\";\n            suffix = suffix + \"\\n\" + indent + \"]\";\n            indent += \"\t\";\n            type = \"array\";\n          }\n          insertText = prefix + indent + s.bodyText.split(\"\\n\").join(\"\\n\" + indent) + suffix + separatorAfter;\n          label = label || insertText, filterText = insertText.replace(/[\\n]/g, \"\");\n        } else {\n          return;\n        }\n        collector.add({\n          kind: this.getSuggestionKind(type),\n          label,\n          documentation: this.fromMarkup(s.markdownDescription) || s.description,\n          insertText,\n          insertTextFormat: InsertTextFormat.Snippet,\n          filterText\n        });\n        hasProposals = true;\n      });\n    }\n    if (!hasProposals && typeof schema.items === \"object\" && !Array.isArray(schema.items) && arrayDepth < 5) {\n      this.addDefaultValueCompletions(schema.items, separatorAfter, collector, arrayDepth + 1);\n    }\n  }\n  addEnumValueCompletions(schema, separatorAfter, collector) {\n    if (isDefined(schema.const)) {\n      collector.add({\n        kind: this.getSuggestionKind(schema.type),\n        label: this.getLabelForValue(schema.const),\n        insertText: this.getInsertTextForValue(schema.const, separatorAfter),\n        insertTextFormat: InsertTextFormat.Snippet,\n        documentation: this.fromMarkup(schema.markdownDescription) || schema.description\n      });\n    }\n    if (Array.isArray(schema.enum)) {\n      for (let i = 0, length = schema.enum.length; i < length; i++) {\n        const enm = schema.enum[i];\n        let documentation = this.fromMarkup(schema.markdownDescription) || schema.description;\n        if (schema.markdownEnumDescriptions && i < schema.markdownEnumDescriptions.length && this.doesSupportMarkdown()) {\n          documentation = this.fromMarkup(schema.markdownEnumDescriptions[i]);\n        } else if (schema.enumDescriptions && i < schema.enumDescriptions.length) {\n          documentation = schema.enumDescriptions[i];\n        }\n        collector.add({\n          kind: this.getSuggestionKind(schema.type),\n          label: this.getLabelForValue(enm),\n          insertText: this.getInsertTextForValue(enm, separatorAfter),\n          insertTextFormat: InsertTextFormat.Snippet,\n          documentation\n        });\n      }\n    }\n  }\n  collectTypes(schema, types) {\n    if (Array.isArray(schema.enum) || isDefined(schema.const)) {\n      return;\n    }\n    const type = schema.type;\n    if (Array.isArray(type)) {\n      type.forEach((t2) => types[t2] = true);\n    } else if (type) {\n      types[type] = true;\n    }\n  }\n  addFillerValueCompletions(types, separatorAfter, collector) {\n    if (types[\"object\"]) {\n      collector.add({\n        kind: this.getSuggestionKind(\"object\"),\n        label: \"{}\",\n        insertText: this.getInsertTextForGuessedValue({}, separatorAfter),\n        insertTextFormat: InsertTextFormat.Snippet,\n        detail: t(\"New object\"),\n        documentation: \"\"\n      });\n    }\n    if (types[\"array\"]) {\n      collector.add({\n        kind: this.getSuggestionKind(\"array\"),\n        label: \"[]\",\n        insertText: this.getInsertTextForGuessedValue([], separatorAfter),\n        insertTextFormat: InsertTextFormat.Snippet,\n        detail: t(\"New array\"),\n        documentation: \"\"\n      });\n    }\n  }\n  addBooleanValueCompletion(value, separatorAfter, collector) {\n    collector.add({\n      kind: this.getSuggestionKind(\"boolean\"),\n      label: value ? \"true\" : \"false\",\n      insertText: this.getInsertTextForValue(value, separatorAfter),\n      insertTextFormat: InsertTextFormat.Snippet,\n      documentation: \"\"\n    });\n  }\n  addNullValueCompletion(separatorAfter, collector) {\n    collector.add({\n      kind: this.getSuggestionKind(\"null\"),\n      label: \"null\",\n      insertText: \"null\" + separatorAfter,\n      insertTextFormat: InsertTextFormat.Snippet,\n      documentation: \"\"\n    });\n  }\n  addDollarSchemaCompletions(separatorAfter, collector) {\n    const schemaIds = this.schemaService.getRegisteredSchemaIds((schema) => schema === \"http\" || schema === \"https\");\n    schemaIds.forEach((schemaId) => {\n      if (schemaId.startsWith(\"http://json-schema.org/draft-\")) {\n        schemaId = schemaId + \"#\";\n      }\n      collector.add({\n        kind: CompletionItemKind.Module,\n        label: this.getLabelForValue(schemaId),\n        filterText: this.getFilterTextForValue(schemaId),\n        insertText: this.getInsertTextForValue(schemaId, separatorAfter),\n        insertTextFormat: InsertTextFormat.Snippet,\n        documentation: \"\"\n      });\n    });\n  }\n  getLabelForValue(value) {\n    return JSON.stringify(value);\n  }\n  getValueFromLabel(value) {\n    return JSON.parse(value);\n  }\n  getFilterTextForValue(value) {\n    return JSON.stringify(value);\n  }\n  getFilterTextForSnippetValue(value) {\n    return JSON.stringify(value).replace(/\\$\\{\\d+:([^}]+)\\}|\\$\\d+/g, \"$1\");\n  }\n  getLabelForSnippetValue(value) {\n    const label = JSON.stringify(value);\n    return label.replace(/\\$\\{\\d+:([^}]+)\\}|\\$\\d+/g, \"$1\");\n  }\n  getInsertTextForPlainText(text) {\n    return text.replace(/[\\\\\\$\\}]/g, \"\\\\$&\");\n  }\n  getInsertTextForValue(value, separatorAfter) {\n    const text = JSON.stringify(value, null, \"\t\");\n    if (text === \"{}\") {\n      return \"{$1}\" + separatorAfter;\n    } else if (text === \"[]\") {\n      return \"[$1]\" + separatorAfter;\n    }\n    return this.getInsertTextForPlainText(text + separatorAfter);\n  }\n  getInsertTextForSnippetValue(value, separatorAfter) {\n    const replacer = (value2) => {\n      if (typeof value2 === \"string\") {\n        if (value2[0] === \"^\") {\n          return value2.substr(1);\n        }\n      }\n      return JSON.stringify(value2);\n    };\n    return stringifyObject(value, \"\", replacer) + separatorAfter;\n  }\n  getInsertTextForGuessedValue(value, separatorAfter) {\n    switch (typeof value) {\n      case \"object\":\n        if (value === null) {\n          return \"${1:null}\" + separatorAfter;\n        }\n        return this.getInsertTextForValue(value, separatorAfter);\n      case \"string\":\n        let snippetValue = JSON.stringify(value);\n        snippetValue = snippetValue.substr(1, snippetValue.length - 2);\n        snippetValue = this.getInsertTextForPlainText(snippetValue);\n        return '\"${1:' + snippetValue + '}\"' + separatorAfter;\n      case \"number\":\n      case \"boolean\":\n        return \"${1:\" + JSON.stringify(value) + \"}\" + separatorAfter;\n    }\n    return this.getInsertTextForValue(value, separatorAfter);\n  }\n  getSuggestionKind(type) {\n    if (Array.isArray(type)) {\n      const array = type;\n      type = array.length > 0 ? array[0] : void 0;\n    }\n    if (!type) {\n      return CompletionItemKind.Value;\n    }\n    switch (type) {\n      case \"string\":\n        return CompletionItemKind.Value;\n      case \"object\":\n        return CompletionItemKind.Module;\n      case \"property\":\n        return CompletionItemKind.Property;\n      default:\n        return CompletionItemKind.Value;\n    }\n  }\n  getLabelTextForMatchingNode(node, document) {\n    switch (node.type) {\n      case \"array\":\n        return \"[]\";\n      case \"object\":\n        return \"{}\";\n      default:\n        const content = document.getText().substr(node.offset, node.length);\n        return content;\n    }\n  }\n  getInsertTextForMatchingNode(node, document, separatorAfter) {\n    switch (node.type) {\n      case \"array\":\n        return this.getInsertTextForValue([], separatorAfter);\n      case \"object\":\n        return this.getInsertTextForValue({}, separatorAfter);\n      default:\n        const content = document.getText().substr(node.offset, node.length) + separatorAfter;\n        return this.getInsertTextForPlainText(content);\n    }\n  }\n  getInsertTextForProperty(key, propertySchema, addValue, separatorAfter) {\n    const propertyText = this.getInsertTextForValue(key, \"\");\n    if (!addValue) {\n      return propertyText;\n    }\n    const resultText = propertyText + \": \";\n    let value;\n    let nValueProposals = 0;\n    if (propertySchema) {\n      if (Array.isArray(propertySchema.defaultSnippets)) {\n        if (propertySchema.defaultSnippets.length === 1) {\n          const body = propertySchema.defaultSnippets[0].body;\n          if (isDefined(body)) {\n            value = this.getInsertTextForSnippetValue(body, \"\");\n          }\n        }\n        nValueProposals += propertySchema.defaultSnippets.length;\n      }\n      if (propertySchema.enum) {\n        if (!value && propertySchema.enum.length === 1) {\n          value = this.getInsertTextForGuessedValue(propertySchema.enum[0], \"\");\n        }\n        nValueProposals += propertySchema.enum.length;\n      }\n      if (isDefined(propertySchema.const)) {\n        if (!value) {\n          value = this.getInsertTextForGuessedValue(propertySchema.const, \"\");\n        }\n        nValueProposals++;\n      }\n      if (isDefined(propertySchema.default)) {\n        if (!value) {\n          value = this.getInsertTextForGuessedValue(propertySchema.default, \"\");\n        }\n        nValueProposals++;\n      }\n      if (Array.isArray(propertySchema.examples) && propertySchema.examples.length) {\n        if (!value) {\n          value = this.getInsertTextForGuessedValue(propertySchema.examples[0], \"\");\n        }\n        nValueProposals += propertySchema.examples.length;\n      }\n      if (nValueProposals === 0) {\n        let type = Array.isArray(propertySchema.type) ? propertySchema.type[0] : propertySchema.type;\n        if (!type) {\n          if (propertySchema.properties) {\n            type = \"object\";\n          } else if (propertySchema.items) {\n            type = \"array\";\n          }\n        }\n        switch (type) {\n          case \"boolean\":\n            value = \"$1\";\n            break;\n          case \"string\":\n            value = '\"$1\"';\n            break;\n          case \"object\":\n            value = \"{$1}\";\n            break;\n          case \"array\":\n            value = \"[$1]\";\n            break;\n          case \"number\":\n          case \"integer\":\n            value = \"${1:0}\";\n            break;\n          case \"null\":\n            value = \"${1:null}\";\n            break;\n          default:\n            return propertyText;\n        }\n      }\n    }\n    if (!value || nValueProposals > 1) {\n      value = \"$1\";\n    }\n    return resultText + value + separatorAfter;\n  }\n  getCurrentWord(document, offset) {\n    let i = offset - 1;\n    const text = document.getText();\n    while (i >= 0 && ' \t\\n\\r\\v\":{[,]}'.indexOf(text.charAt(i)) === -1) {\n      i--;\n    }\n    return text.substring(i + 1, offset);\n  }\n  evaluateSeparatorAfter(document, offset) {\n    const scanner = createScanner2(document.getText(), true);\n    scanner.setPosition(offset);\n    const token = scanner.scan();\n    switch (token) {\n      case 5:\n      case 2:\n      case 4:\n      case 17:\n        return \"\";\n      default:\n        return \",\";\n    }\n  }\n  findItemAtOffset(node, document, offset) {\n    const scanner = createScanner2(document.getText(), true);\n    const children = node.items;\n    for (let i = children.length - 1; i >= 0; i--) {\n      const child = children[i];\n      if (offset > child.offset + child.length) {\n        scanner.setPosition(child.offset + child.length);\n        const token = scanner.scan();\n        if (token === 5 && offset >= scanner.getTokenOffset() + scanner.getTokenLength()) {\n          return i + 1;\n        }\n        return i;\n      } else if (offset >= child.offset) {\n        return i;\n      }\n    }\n    return 0;\n  }\n  isInComment(document, start, offset) {\n    const scanner = createScanner2(document.getText(), false);\n    scanner.setPosition(start);\n    let token = scanner.scan();\n    while (token !== 17 && scanner.getTokenOffset() + scanner.getTokenLength() < offset) {\n      token = scanner.scan();\n    }\n    return (token === 12 || token === 13) && scanner.getTokenOffset() <= offset;\n  }\n  fromMarkup(markupString) {\n    if (markupString && this.doesSupportMarkdown()) {\n      return {\n        kind: MarkupKind.Markdown,\n        value: markupString\n      };\n    }\n    return void 0;\n  }\n  doesSupportMarkdown() {\n    if (!isDefined(this.supportsMarkdown)) {\n      const documentationFormat = this.clientCapabilities.textDocument?.completion?.completionItem?.documentationFormat;\n      this.supportsMarkdown = Array.isArray(documentationFormat) && documentationFormat.indexOf(MarkupKind.Markdown) !== -1;\n    }\n    return this.supportsMarkdown;\n  }\n  doesSupportsCommitCharacters() {\n    if (!isDefined(this.supportsCommitCharacters)) {\n      this.labelDetailsSupport = this.clientCapabilities.textDocument?.completion?.completionItem?.commitCharactersSupport;\n    }\n    return this.supportsCommitCharacters;\n  }\n  doesSupportsLabelDetails() {\n    if (!isDefined(this.labelDetailsSupport)) {\n      this.labelDetailsSupport = this.clientCapabilities.textDocument?.completion?.completionItem?.labelDetailsSupport;\n    }\n    return this.labelDetailsSupport;\n  }\n};\n\n// node_modules/vscode-json-languageservice/lib/esm/services/jsonHover.js\nvar JSONHover = class {\n  constructor(schemaService, contributions = [], promiseConstructor) {\n    this.schemaService = schemaService;\n    this.contributions = contributions;\n    this.promise = promiseConstructor || Promise;\n  }\n  doHover(document, position, doc) {\n    const offset = document.offsetAt(position);\n    let node = doc.getNodeFromOffset(offset);\n    if (!node || (node.type === \"object\" || node.type === \"array\") && offset > node.offset + 1 && offset < node.offset + node.length - 1) {\n      return this.promise.resolve(null);\n    }\n    const hoverRangeNode = node;\n    if (node.type === \"string\") {\n      const parent = node.parent;\n      if (parent && parent.type === \"property\" && parent.keyNode === node) {\n        node = parent.valueNode;\n        if (!node) {\n          return this.promise.resolve(null);\n        }\n      }\n    }\n    const hoverRange = Range.create(document.positionAt(hoverRangeNode.offset), document.positionAt(hoverRangeNode.offset + hoverRangeNode.length));\n    const createHover = (contents) => {\n      const result = {\n        contents,\n        range: hoverRange\n      };\n      return result;\n    };\n    const location = getNodePath3(node);\n    for (let i = this.contributions.length - 1; i >= 0; i--) {\n      const contribution = this.contributions[i];\n      const promise = contribution.getInfoContribution(document.uri, location);\n      if (promise) {\n        return promise.then((htmlContent) => createHover(htmlContent));\n      }\n    }\n    return this.schemaService.getSchemaForResource(document.uri, doc).then((schema) => {\n      if (schema && node) {\n        const matchingSchemas = doc.getMatchingSchemas(schema.schema, node.offset);\n        let title = void 0;\n        let markdownDescription = void 0;\n        let markdownEnumValueDescription = void 0, enumValue = void 0;\n        matchingSchemas.every((s) => {\n          if (s.node === node && !s.inverted && s.schema) {\n            title = title || s.schema.title;\n            markdownDescription = markdownDescription || s.schema.markdownDescription || toMarkdown(s.schema.description);\n            if (s.schema.enum) {\n              const idx = s.schema.enum.indexOf(getNodeValue3(node));\n              if (s.schema.markdownEnumDescriptions) {\n                markdownEnumValueDescription = s.schema.markdownEnumDescriptions[idx];\n              } else if (s.schema.enumDescriptions) {\n                markdownEnumValueDescription = toMarkdown(s.schema.enumDescriptions[idx]);\n              }\n              if (markdownEnumValueDescription) {\n                enumValue = s.schema.enum[idx];\n                if (typeof enumValue !== \"string\") {\n                  enumValue = JSON.stringify(enumValue);\n                }\n              }\n            }\n          }\n          return true;\n        });\n        let result = \"\";\n        if (title) {\n          result = toMarkdown(title);\n        }\n        if (markdownDescription) {\n          if (result.length > 0) {\n            result += \"\\n\\n\";\n          }\n          result += markdownDescription;\n        }\n        if (markdownEnumValueDescription) {\n          if (result.length > 0) {\n            result += \"\\n\\n\";\n          }\n          result += `\\`${toMarkdownCodeBlock(enumValue)}\\`: ${markdownEnumValueDescription}`;\n        }\n        return createHover([result]);\n      }\n      return null;\n    });\n  }\n};\nfunction toMarkdown(plain) {\n  if (plain) {\n    const res = plain.replace(/([^\\n\\r])(\\r?\\n)([^\\n\\r])/gm, \"$1\\n\\n$3\");\n    return res.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\");\n  }\n  return void 0;\n}\nfunction toMarkdownCodeBlock(content) {\n  if (content.indexOf(\"`\") !== -1) {\n    return \"`` \" + content + \" ``\";\n  }\n  return content;\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/services/jsonValidation.js\nvar JSONValidation = class {\n  constructor(jsonSchemaService, promiseConstructor) {\n    this.jsonSchemaService = jsonSchemaService;\n    this.promise = promiseConstructor;\n    this.validationEnabled = true;\n  }\n  configure(raw) {\n    if (raw) {\n      this.validationEnabled = raw.validate !== false;\n      this.commentSeverity = raw.allowComments ? void 0 : DiagnosticSeverity.Error;\n    }\n  }\n  doValidation(textDocument, jsonDocument, documentSettings, schema) {\n    if (!this.validationEnabled) {\n      return this.promise.resolve([]);\n    }\n    const diagnostics = [];\n    const added = {};\n    const addProblem = (problem) => {\n      const signature = problem.range.start.line + \" \" + problem.range.start.character + \" \" + problem.message;\n      if (!added[signature]) {\n        added[signature] = true;\n        diagnostics.push(problem);\n      }\n    };\n    const getDiagnostics = (schema2) => {\n      let trailingCommaSeverity = documentSettings?.trailingCommas ? toDiagnosticSeverity(documentSettings.trailingCommas) : DiagnosticSeverity.Error;\n      let commentSeverity = documentSettings?.comments ? toDiagnosticSeverity(documentSettings.comments) : this.commentSeverity;\n      let schemaValidation = documentSettings?.schemaValidation ? toDiagnosticSeverity(documentSettings.schemaValidation) : DiagnosticSeverity.Warning;\n      let schemaRequest = documentSettings?.schemaRequest ? toDiagnosticSeverity(documentSettings.schemaRequest) : DiagnosticSeverity.Warning;\n      if (schema2) {\n        const addSchemaProblem = (errorMessage, errorCode) => {\n          if (jsonDocument.root && schemaRequest) {\n            const astRoot = jsonDocument.root;\n            const property = astRoot.type === \"object\" ? astRoot.properties[0] : void 0;\n            if (property && property.keyNode.value === \"$schema\") {\n              const node = property.valueNode || property;\n              const range = Range.create(textDocument.positionAt(node.offset), textDocument.positionAt(node.offset + node.length));\n              addProblem(Diagnostic.create(range, errorMessage, schemaRequest, errorCode));\n            } else {\n              const range = Range.create(textDocument.positionAt(astRoot.offset), textDocument.positionAt(astRoot.offset + 1));\n              addProblem(Diagnostic.create(range, errorMessage, schemaRequest, errorCode));\n            }\n          }\n        };\n        if (schema2.errors.length) {\n          addSchemaProblem(schema2.errors[0], ErrorCode.SchemaResolveError);\n        } else if (schemaValidation) {\n          for (const warning of schema2.warnings) {\n            addSchemaProblem(warning, ErrorCode.SchemaUnsupportedFeature);\n          }\n          const semanticErrors = jsonDocument.validate(textDocument, schema2.schema, schemaValidation, documentSettings?.schemaDraft);\n          if (semanticErrors) {\n            semanticErrors.forEach(addProblem);\n          }\n        }\n        if (schemaAllowsComments(schema2.schema)) {\n          commentSeverity = void 0;\n        }\n        if (schemaAllowsTrailingCommas(schema2.schema)) {\n          trailingCommaSeverity = void 0;\n        }\n      }\n      for (const p of jsonDocument.syntaxErrors) {\n        if (p.code === ErrorCode.TrailingComma) {\n          if (typeof trailingCommaSeverity !== \"number\") {\n            continue;\n          }\n          p.severity = trailingCommaSeverity;\n        }\n        addProblem(p);\n      }\n      if (typeof commentSeverity === \"number\") {\n        const message = t(\"Comments are not permitted in JSON.\");\n        jsonDocument.comments.forEach((c) => {\n          addProblem(Diagnostic.create(c, message, commentSeverity, ErrorCode.CommentNotPermitted));\n        });\n      }\n      return diagnostics;\n    };\n    if (schema) {\n      const uri = schema.id || \"schemaservice://untitled/\" + idCounter++;\n      const handle = this.jsonSchemaService.registerExternalSchema({ uri, schema });\n      return handle.getResolvedSchema().then((resolvedSchema) => {\n        return getDiagnostics(resolvedSchema);\n      });\n    }\n    return this.jsonSchemaService.getSchemaForResource(textDocument.uri, jsonDocument).then((schema2) => {\n      return getDiagnostics(schema2);\n    });\n  }\n  getLanguageStatus(textDocument, jsonDocument) {\n    return { schemas: this.jsonSchemaService.getSchemaURIsForResource(textDocument.uri, jsonDocument) };\n  }\n};\nvar idCounter = 0;\nfunction schemaAllowsComments(schemaRef) {\n  if (schemaRef && typeof schemaRef === \"object\") {\n    if (isBoolean(schemaRef.allowComments)) {\n      return schemaRef.allowComments;\n    }\n    if (schemaRef.allOf) {\n      for (const schema of schemaRef.allOf) {\n        const allow = schemaAllowsComments(schema);\n        if (isBoolean(allow)) {\n          return allow;\n        }\n      }\n    }\n  }\n  return void 0;\n}\nfunction schemaAllowsTrailingCommas(schemaRef) {\n  if (schemaRef && typeof schemaRef === \"object\") {\n    if (isBoolean(schemaRef.allowTrailingCommas)) {\n      return schemaRef.allowTrailingCommas;\n    }\n    const deprSchemaRef = schemaRef;\n    if (isBoolean(deprSchemaRef[\"allowsTrailingCommas\"])) {\n      return deprSchemaRef[\"allowsTrailingCommas\"];\n    }\n    if (schemaRef.allOf) {\n      for (const schema of schemaRef.allOf) {\n        const allow = schemaAllowsTrailingCommas(schema);\n        if (isBoolean(allow)) {\n          return allow;\n        }\n      }\n    }\n  }\n  return void 0;\n}\nfunction toDiagnosticSeverity(severityLevel) {\n  switch (severityLevel) {\n    case \"error\":\n      return DiagnosticSeverity.Error;\n    case \"warning\":\n      return DiagnosticSeverity.Warning;\n    case \"ignore\":\n      return void 0;\n  }\n  return void 0;\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/utils/colors.js\nvar Digit0 = 48;\nvar Digit9 = 57;\nvar A = 65;\nvar a = 97;\nvar f = 102;\nfunction hexDigit(charCode) {\n  if (charCode < Digit0) {\n    return 0;\n  }\n  if (charCode <= Digit9) {\n    return charCode - Digit0;\n  }\n  if (charCode < a) {\n    charCode += a - A;\n  }\n  if (charCode >= a && charCode <= f) {\n    return charCode - a + 10;\n  }\n  return 0;\n}\nfunction colorFromHex(text) {\n  if (text[0] !== \"#\") {\n    return void 0;\n  }\n  switch (text.length) {\n    case 4:\n      return {\n        red: hexDigit(text.charCodeAt(1)) * 17 / 255,\n        green: hexDigit(text.charCodeAt(2)) * 17 / 255,\n        blue: hexDigit(text.charCodeAt(3)) * 17 / 255,\n        alpha: 1\n      };\n    case 5:\n      return {\n        red: hexDigit(text.charCodeAt(1)) * 17 / 255,\n        green: hexDigit(text.charCodeAt(2)) * 17 / 255,\n        blue: hexDigit(text.charCodeAt(3)) * 17 / 255,\n        alpha: hexDigit(text.charCodeAt(4)) * 17 / 255\n      };\n    case 7:\n      return {\n        red: (hexDigit(text.charCodeAt(1)) * 16 + hexDigit(text.charCodeAt(2))) / 255,\n        green: (hexDigit(text.charCodeAt(3)) * 16 + hexDigit(text.charCodeAt(4))) / 255,\n        blue: (hexDigit(text.charCodeAt(5)) * 16 + hexDigit(text.charCodeAt(6))) / 255,\n        alpha: 1\n      };\n    case 9:\n      return {\n        red: (hexDigit(text.charCodeAt(1)) * 16 + hexDigit(text.charCodeAt(2))) / 255,\n        green: (hexDigit(text.charCodeAt(3)) * 16 + hexDigit(text.charCodeAt(4))) / 255,\n        blue: (hexDigit(text.charCodeAt(5)) * 16 + hexDigit(text.charCodeAt(6))) / 255,\n        alpha: (hexDigit(text.charCodeAt(7)) * 16 + hexDigit(text.charCodeAt(8))) / 255\n      };\n  }\n  return void 0;\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/services/jsonDocumentSymbols.js\nvar JSONDocumentSymbols = class {\n  constructor(schemaService) {\n    this.schemaService = schemaService;\n  }\n  findDocumentSymbols(document, doc, context = { resultLimit: Number.MAX_VALUE }) {\n    const root = doc.root;\n    if (!root) {\n      return [];\n    }\n    let limit = context.resultLimit || Number.MAX_VALUE;\n    const resourceString = document.uri;\n    if (resourceString === \"vscode://defaultsettings/keybindings.json\" || endsWith(resourceString.toLowerCase(), \"/user/keybindings.json\")) {\n      if (root.type === \"array\") {\n        const result2 = [];\n        for (const item of root.items) {\n          if (item.type === \"object\") {\n            for (const property of item.properties) {\n              if (property.keyNode.value === \"key\" && property.valueNode) {\n                const location = Location.create(document.uri, getRange(document, item));\n                result2.push({ name: getName(property.valueNode), kind: SymbolKind.Function, location });\n                limit--;\n                if (limit <= 0) {\n                  if (context && context.onResultLimitExceeded) {\n                    context.onResultLimitExceeded(resourceString);\n                  }\n                  return result2;\n                }\n              }\n            }\n          }\n        }\n        return result2;\n      }\n    }\n    const toVisit = [\n      { node: root, containerName: \"\" }\n    ];\n    let nextToVisit = 0;\n    let limitExceeded = false;\n    const result = [];\n    const collectOutlineEntries = (node, containerName) => {\n      if (node.type === \"array\") {\n        node.items.forEach((node2) => {\n          if (node2) {\n            toVisit.push({ node: node2, containerName });\n          }\n        });\n      } else if (node.type === \"object\") {\n        node.properties.forEach((property) => {\n          const valueNode = property.valueNode;\n          if (valueNode) {\n            if (limit > 0) {\n              limit--;\n              const location = Location.create(document.uri, getRange(document, property));\n              const childContainerName = containerName ? containerName + \".\" + property.keyNode.value : property.keyNode.value;\n              result.push({ name: this.getKeyLabel(property), kind: this.getSymbolKind(valueNode.type), location, containerName });\n              toVisit.push({ node: valueNode, containerName: childContainerName });\n            } else {\n              limitExceeded = true;\n            }\n          }\n        });\n      }\n    };\n    while (nextToVisit < toVisit.length) {\n      const next = toVisit[nextToVisit++];\n      collectOutlineEntries(next.node, next.containerName);\n    }\n    if (limitExceeded && context && context.onResultLimitExceeded) {\n      context.onResultLimitExceeded(resourceString);\n    }\n    return result;\n  }\n  findDocumentSymbols2(document, doc, context = { resultLimit: Number.MAX_VALUE }) {\n    const root = doc.root;\n    if (!root) {\n      return [];\n    }\n    let limit = context.resultLimit || Number.MAX_VALUE;\n    const resourceString = document.uri;\n    if (resourceString === \"vscode://defaultsettings/keybindings.json\" || endsWith(resourceString.toLowerCase(), \"/user/keybindings.json\")) {\n      if (root.type === \"array\") {\n        const result2 = [];\n        for (const item of root.items) {\n          if (item.type === \"object\") {\n            for (const property of item.properties) {\n              if (property.keyNode.value === \"key\" && property.valueNode) {\n                const range = getRange(document, item);\n                const selectionRange = getRange(document, property.keyNode);\n                result2.push({ name: getName(property.valueNode), kind: SymbolKind.Function, range, selectionRange });\n                limit--;\n                if (limit <= 0) {\n                  if (context && context.onResultLimitExceeded) {\n                    context.onResultLimitExceeded(resourceString);\n                  }\n                  return result2;\n                }\n              }\n            }\n          }\n        }\n        return result2;\n      }\n    }\n    const result = [];\n    const toVisit = [\n      { node: root, result }\n    ];\n    let nextToVisit = 0;\n    let limitExceeded = false;\n    const collectOutlineEntries = (node, result2) => {\n      if (node.type === \"array\") {\n        node.items.forEach((node2, index) => {\n          if (node2) {\n            if (limit > 0) {\n              limit--;\n              const range = getRange(document, node2);\n              const selectionRange = range;\n              const name = String(index);\n              const symbol = { name, kind: this.getSymbolKind(node2.type), range, selectionRange, children: [] };\n              result2.push(symbol);\n              toVisit.push({ result: symbol.children, node: node2 });\n            } else {\n              limitExceeded = true;\n            }\n          }\n        });\n      } else if (node.type === \"object\") {\n        node.properties.forEach((property) => {\n          const valueNode = property.valueNode;\n          if (valueNode) {\n            if (limit > 0) {\n              limit--;\n              const range = getRange(document, property);\n              const selectionRange = getRange(document, property.keyNode);\n              const children = [];\n              const symbol = { name: this.getKeyLabel(property), kind: this.getSymbolKind(valueNode.type), range, selectionRange, children, detail: this.getDetail(valueNode) };\n              result2.push(symbol);\n              toVisit.push({ result: children, node: valueNode });\n            } else {\n              limitExceeded = true;\n            }\n          }\n        });\n      }\n    };\n    while (nextToVisit < toVisit.length) {\n      const next = toVisit[nextToVisit++];\n      collectOutlineEntries(next.node, next.result);\n    }\n    if (limitExceeded && context && context.onResultLimitExceeded) {\n      context.onResultLimitExceeded(resourceString);\n    }\n    return result;\n  }\n  getSymbolKind(nodeType) {\n    switch (nodeType) {\n      case \"object\":\n        return SymbolKind.Module;\n      case \"string\":\n        return SymbolKind.String;\n      case \"number\":\n        return SymbolKind.Number;\n      case \"array\":\n        return SymbolKind.Array;\n      case \"boolean\":\n        return SymbolKind.Boolean;\n      default:\n        return SymbolKind.Variable;\n    }\n  }\n  getKeyLabel(property) {\n    let name = property.keyNode.value;\n    if (name) {\n      name = name.replace(/[\\n]/g, \"\\u21B5\");\n    }\n    if (name && name.trim()) {\n      return name;\n    }\n    return `\"${name}\"`;\n  }\n  getDetail(node) {\n    if (!node) {\n      return void 0;\n    }\n    if (node.type === \"boolean\" || node.type === \"number\" || node.type === \"null\" || node.type === \"string\") {\n      return String(node.value);\n    } else {\n      if (node.type === \"array\") {\n        return node.children.length ? void 0 : \"[]\";\n      } else if (node.type === \"object\") {\n        return node.children.length ? void 0 : \"{}\";\n      }\n    }\n    return void 0;\n  }\n  findDocumentColors(document, doc, context) {\n    return this.schemaService.getSchemaForResource(document.uri, doc).then((schema) => {\n      const result = [];\n      if (schema) {\n        let limit = context && typeof context.resultLimit === \"number\" ? context.resultLimit : Number.MAX_VALUE;\n        const matchingSchemas = doc.getMatchingSchemas(schema.schema);\n        const visitedNode = {};\n        for (const s of matchingSchemas) {\n          if (!s.inverted && s.schema && (s.schema.format === \"color\" || s.schema.format === \"color-hex\") && s.node && s.node.type === \"string\") {\n            const nodeId = String(s.node.offset);\n            if (!visitedNode[nodeId]) {\n              const color = colorFromHex(getNodeValue3(s.node));\n              if (color) {\n                const range = getRange(document, s.node);\n                result.push({ color, range });\n              }\n              visitedNode[nodeId] = true;\n              limit--;\n              if (limit <= 0) {\n                if (context && context.onResultLimitExceeded) {\n                  context.onResultLimitExceeded(document.uri);\n                }\n                return result;\n              }\n            }\n          }\n        }\n      }\n      return result;\n    });\n  }\n  getColorPresentations(document, doc, color, range) {\n    const result = [];\n    const red256 = Math.round(color.red * 255), green256 = Math.round(color.green * 255), blue256 = Math.round(color.blue * 255);\n    function toTwoDigitHex(n) {\n      const r = n.toString(16);\n      return r.length !== 2 ? \"0\" + r : r;\n    }\n    let label;\n    if (color.alpha === 1) {\n      label = `#${toTwoDigitHex(red256)}${toTwoDigitHex(green256)}${toTwoDigitHex(blue256)}`;\n    } else {\n      label = `#${toTwoDigitHex(red256)}${toTwoDigitHex(green256)}${toTwoDigitHex(blue256)}${toTwoDigitHex(Math.round(color.alpha * 255))}`;\n    }\n    result.push({ label, textEdit: TextEdit.replace(range, JSON.stringify(label)) });\n    return result;\n  }\n};\nfunction getRange(document, node) {\n  return Range.create(document.positionAt(node.offset), document.positionAt(node.offset + node.length));\n}\nfunction getName(node) {\n  return getNodeValue3(node) || t(\"<empty>\");\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/services/configuration.js\nvar schemaContributions = {\n  schemaAssociations: [],\n  schemas: {\n    // bundle the schema-schema to include (localized) descriptions\n    \"http://json-schema.org/draft-04/schema#\": {\n      \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n      \"definitions\": {\n        \"schemaArray\": {\n          \"type\": \"array\",\n          \"minItems\": 1,\n          \"items\": {\n            \"$ref\": \"#\"\n          }\n        },\n        \"positiveInteger\": {\n          \"type\": \"integer\",\n          \"minimum\": 0\n        },\n        \"positiveIntegerDefault0\": {\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/positiveInteger\"\n            },\n            {\n              \"default\": 0\n            }\n          ]\n        },\n        \"simpleTypes\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"array\",\n            \"boolean\",\n            \"integer\",\n            \"null\",\n            \"number\",\n            \"object\",\n            \"string\"\n          ]\n        },\n        \"stringArray\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"minItems\": 1,\n          \"uniqueItems\": true\n        }\n      },\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"string\",\n          \"format\": \"uri\"\n        },\n        \"$schema\": {\n          \"type\": \"string\",\n          \"format\": \"uri\"\n        },\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"default\": {},\n        \"multipleOf\": {\n          \"type\": \"number\",\n          \"minimum\": 0,\n          \"exclusiveMinimum\": true\n        },\n        \"maximum\": {\n          \"type\": \"number\"\n        },\n        \"exclusiveMaximum\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"minimum\": {\n          \"type\": \"number\"\n        },\n        \"exclusiveMinimum\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"maxLength\": {\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/positiveInteger\"\n            }\n          ]\n        },\n        \"minLength\": {\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/positiveIntegerDefault0\"\n            }\n          ]\n        },\n        \"pattern\": {\n          \"type\": \"string\",\n          \"format\": \"regex\"\n        },\n        \"additionalItems\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"$ref\": \"#\"\n            }\n          ],\n          \"default\": {}\n        },\n        \"items\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#\"\n            },\n            {\n              \"$ref\": \"#/definitions/schemaArray\"\n            }\n          ],\n          \"default\": {}\n        },\n        \"maxItems\": {\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/positiveInteger\"\n            }\n          ]\n        },\n        \"minItems\": {\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/positiveIntegerDefault0\"\n            }\n          ]\n        },\n        \"uniqueItems\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"maxProperties\": {\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/positiveInteger\"\n            }\n          ]\n        },\n        \"minProperties\": {\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/positiveIntegerDefault0\"\n            }\n          ]\n        },\n        \"required\": {\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/stringArray\"\n            }\n          ]\n        },\n        \"additionalProperties\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"$ref\": \"#\"\n            }\n          ],\n          \"default\": {}\n        },\n        \"definitions\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#\"\n          },\n          \"default\": {}\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#\"\n          },\n          \"default\": {}\n        },\n        \"patternProperties\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#\"\n          },\n          \"default\": {}\n        },\n        \"dependencies\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#\"\n              },\n              {\n                \"$ref\": \"#/definitions/stringArray\"\n              }\n            ]\n          }\n        },\n        \"enum\": {\n          \"type\": \"array\",\n          \"minItems\": 1,\n          \"uniqueItems\": true\n        },\n        \"type\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/definitions/simpleTypes\"\n            },\n            {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/definitions/simpleTypes\"\n              },\n              \"minItems\": 1,\n              \"uniqueItems\": true\n            }\n          ]\n        },\n        \"format\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\",\n              \"enum\": [\n                \"date-time\",\n                \"uri\",\n                \"email\",\n                \"hostname\",\n                \"ipv4\",\n                \"ipv6\",\n                \"regex\"\n              ]\n            },\n            {\n              \"type\": \"string\"\n            }\n          ]\n        },\n        \"allOf\": {\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/schemaArray\"\n            }\n          ]\n        },\n        \"anyOf\": {\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/schemaArray\"\n            }\n          ]\n        },\n        \"oneOf\": {\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/schemaArray\"\n            }\n          ]\n        },\n        \"not\": {\n          \"allOf\": [\n            {\n              \"$ref\": \"#\"\n            }\n          ]\n        }\n      },\n      \"dependencies\": {\n        \"exclusiveMaximum\": [\n          \"maximum\"\n        ],\n        \"exclusiveMinimum\": [\n          \"minimum\"\n        ]\n      },\n      \"default\": {}\n    },\n    \"http://json-schema.org/draft-07/schema#\": {\n      \"definitions\": {\n        \"schemaArray\": {\n          \"type\": \"array\",\n          \"minItems\": 1,\n          \"items\": { \"$ref\": \"#\" }\n        },\n        \"nonNegativeInteger\": {\n          \"type\": \"integer\",\n          \"minimum\": 0\n        },\n        \"nonNegativeIntegerDefault0\": {\n          \"allOf\": [\n            { \"$ref\": \"#/definitions/nonNegativeInteger\" },\n            { \"default\": 0 }\n          ]\n        },\n        \"simpleTypes\": {\n          \"enum\": [\n            \"array\",\n            \"boolean\",\n            \"integer\",\n            \"null\",\n            \"number\",\n            \"object\",\n            \"string\"\n          ]\n        },\n        \"stringArray\": {\n          \"type\": \"array\",\n          \"items\": { \"type\": \"string\" },\n          \"uniqueItems\": true,\n          \"default\": []\n        }\n      },\n      \"type\": [\"object\", \"boolean\"],\n      \"properties\": {\n        \"$id\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"$schema\": {\n          \"type\": \"string\",\n          \"format\": \"uri\"\n        },\n        \"$ref\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"$comment\": {\n          \"type\": \"string\"\n        },\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"default\": true,\n        \"readOnly\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"examples\": {\n          \"type\": \"array\",\n          \"items\": true\n        },\n        \"multipleOf\": {\n          \"type\": \"number\",\n          \"exclusiveMinimum\": 0\n        },\n        \"maximum\": {\n          \"type\": \"number\"\n        },\n        \"exclusiveMaximum\": {\n          \"type\": \"number\"\n        },\n        \"minimum\": {\n          \"type\": \"number\"\n        },\n        \"exclusiveMinimum\": {\n          \"type\": \"number\"\n        },\n        \"maxLength\": { \"$ref\": \"#/definitions/nonNegativeInteger\" },\n        \"minLength\": { \"$ref\": \"#/definitions/nonNegativeIntegerDefault0\" },\n        \"pattern\": {\n          \"type\": \"string\",\n          \"format\": \"regex\"\n        },\n        \"additionalItems\": { \"$ref\": \"#\" },\n        \"items\": {\n          \"anyOf\": [\n            { \"$ref\": \"#\" },\n            { \"$ref\": \"#/definitions/schemaArray\" }\n          ],\n          \"default\": true\n        },\n        \"maxItems\": { \"$ref\": \"#/definitions/nonNegativeInteger\" },\n        \"minItems\": { \"$ref\": \"#/definitions/nonNegativeIntegerDefault0\" },\n        \"uniqueItems\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"contains\": { \"$ref\": \"#\" },\n        \"maxProperties\": { \"$ref\": \"#/definitions/nonNegativeInteger\" },\n        \"minProperties\": { \"$ref\": \"#/definitions/nonNegativeIntegerDefault0\" },\n        \"required\": { \"$ref\": \"#/definitions/stringArray\" },\n        \"additionalProperties\": { \"$ref\": \"#\" },\n        \"definitions\": {\n          \"type\": \"object\",\n          \"additionalProperties\": { \"$ref\": \"#\" },\n          \"default\": {}\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"additionalProperties\": { \"$ref\": \"#\" },\n          \"default\": {}\n        },\n        \"patternProperties\": {\n          \"type\": \"object\",\n          \"additionalProperties\": { \"$ref\": \"#\" },\n          \"propertyNames\": { \"format\": \"regex\" },\n          \"default\": {}\n        },\n        \"dependencies\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"anyOf\": [\n              { \"$ref\": \"#\" },\n              { \"$ref\": \"#/definitions/stringArray\" }\n            ]\n          }\n        },\n        \"propertyNames\": { \"$ref\": \"#\" },\n        \"const\": true,\n        \"enum\": {\n          \"type\": \"array\",\n          \"items\": true,\n          \"minItems\": 1,\n          \"uniqueItems\": true\n        },\n        \"type\": {\n          \"anyOf\": [\n            { \"$ref\": \"#/definitions/simpleTypes\" },\n            {\n              \"type\": \"array\",\n              \"items\": { \"$ref\": \"#/definitions/simpleTypes\" },\n              \"minItems\": 1,\n              \"uniqueItems\": true\n            }\n          ]\n        },\n        \"format\": { \"type\": \"string\" },\n        \"contentMediaType\": { \"type\": \"string\" },\n        \"contentEncoding\": { \"type\": \"string\" },\n        \"if\": { \"$ref\": \"#\" },\n        \"then\": { \"$ref\": \"#\" },\n        \"else\": { \"$ref\": \"#\" },\n        \"allOf\": { \"$ref\": \"#/definitions/schemaArray\" },\n        \"anyOf\": { \"$ref\": \"#/definitions/schemaArray\" },\n        \"oneOf\": { \"$ref\": \"#/definitions/schemaArray\" },\n        \"not\": { \"$ref\": \"#\" }\n      },\n      \"default\": true\n    }\n  }\n};\nvar descriptions = {\n  id: t(\"A unique identifier for the schema.\"),\n  $schema: t(\"The schema to verify this document against.\"),\n  title: t(\"A descriptive title of the element.\"),\n  description: t(\"A long description of the element. Used in hover menus and suggestions.\"),\n  default: t(\"A default value. Used by suggestions.\"),\n  multipleOf: t(\"A number that should cleanly divide the current value (i.e. have no remainder).\"),\n  maximum: t(\"The maximum numerical value, inclusive by default.\"),\n  exclusiveMaximum: t(\"Makes the maximum property exclusive.\"),\n  minimum: t(\"The minimum numerical value, inclusive by default.\"),\n  exclusiveMinimum: t(\"Makes the minimum property exclusive.\"),\n  maxLength: t(\"The maximum length of a string.\"),\n  minLength: t(\"The minimum length of a string.\"),\n  pattern: t(\"A regular expression to match the string against. It is not implicitly anchored.\"),\n  additionalItems: t(\"For arrays, only when items is set as an array. If it is a schema, then this schema validates items after the ones specified by the items array. If it is false, then additional items will cause validation to fail.\"),\n  items: t(\"For arrays. Can either be a schema to validate every element against or an array of schemas to validate each item against in order (the first schema will validate the first element, the second schema will validate the second element, and so on.\"),\n  maxItems: t(\"The maximum number of items that can be inside an array. Inclusive.\"),\n  minItems: t(\"The minimum number of items that can be inside an array. Inclusive.\"),\n  uniqueItems: t(\"If all of the items in the array must be unique. Defaults to false.\"),\n  maxProperties: t(\"The maximum number of properties an object can have. Inclusive.\"),\n  minProperties: t(\"The minimum number of properties an object can have. Inclusive.\"),\n  required: t(\"An array of strings that lists the names of all properties required on this object.\"),\n  additionalProperties: t(\"Either a schema or a boolean. If a schema, then used to validate all properties not matched by 'properties' or 'patternProperties'. If false, then any properties not matched by either will cause this schema to fail.\"),\n  definitions: t(\"Not used for validation. Place subschemas here that you wish to reference inline with $ref.\"),\n  properties: t(\"A map of property names to schemas for each property.\"),\n  patternProperties: t(\"A map of regular expressions on property names to schemas for matching properties.\"),\n  dependencies: t(\"A map of property names to either an array of property names or a schema. An array of property names means the property named in the key depends on the properties in the array being present in the object in order to be valid. If the value is a schema, then the schema is only applied to the object if the property in the key exists on the object.\"),\n  enum: t(\"The set of literal values that are valid.\"),\n  type: t(\"Either a string of one of the basic schema types (number, integer, null, array, object, boolean, string) or an array of strings specifying a subset of those types.\"),\n  format: t(\"Describes the format expected for the value.\"),\n  allOf: t(\"An array of schemas, all of which must match.\"),\n  anyOf: t(\"An array of schemas, where at least one must match.\"),\n  oneOf: t(\"An array of schemas, exactly one of which must match.\"),\n  not: t(\"A schema which must not match.\"),\n  $id: t(\"A unique identifier for the schema.\"),\n  $ref: t(\"Reference a definition hosted on any location.\"),\n  $comment: t(\"Comments from schema authors to readers or maintainers of the schema.\"),\n  readOnly: t(\"Indicates that the value of the instance is managed exclusively by the owning authority.\"),\n  examples: t(\"Sample JSON values associated with a particular schema, for the purpose of illustrating usage.\"),\n  contains: t('An array instance is valid against \"contains\" if at least one of its elements is valid against the given schema.'),\n  propertyNames: t(\"If the instance is an object, this keyword validates if every property name in the instance validates against the provided schema.\"),\n  const: t(\"An instance validates successfully against this keyword if its value is equal to the value of the keyword.\"),\n  contentMediaType: t(\"Describes the media type of a string property.\"),\n  contentEncoding: t(\"Describes the content encoding of a string property.\"),\n  if: t('The validation outcome of the \"if\" subschema controls which of the \"then\" or \"else\" keywords are evaluated.'),\n  then: t('The \"if\" subschema is used for validation when the \"if\" subschema succeeds.'),\n  else: t('The \"else\" subschema is used for validation when the \"if\" subschema fails.')\n};\nfor (const schemaName in schemaContributions.schemas) {\n  const schema = schemaContributions.schemas[schemaName];\n  for (const property in schema.properties) {\n    let propertyObject = schema.properties[property];\n    if (typeof propertyObject === \"boolean\") {\n      propertyObject = schema.properties[property] = {};\n    }\n    const description = descriptions[property];\n    if (description) {\n      propertyObject[\"description\"] = description;\n    }\n  }\n}\n\n// node_modules/vscode-uri/lib/esm/index.mjs\nvar LIB;\n(() => {\n  \"use strict\";\n  var t2 = { 470: (t3) => {\n    function e2(t4) {\n      if (\"string\" != typeof t4)\n        throw new TypeError(\"Path must be a string. Received \" + JSON.stringify(t4));\n    }\n    function r2(t4, e3) {\n      for (var r3, n3 = \"\", i = 0, o = -1, s = 0, h = 0; h <= t4.length; ++h) {\n        if (h < t4.length)\n          r3 = t4.charCodeAt(h);\n        else {\n          if (47 === r3)\n            break;\n          r3 = 47;\n        }\n        if (47 === r3) {\n          if (o === h - 1 || 1 === s)\n            ;\n          else if (o !== h - 1 && 2 === s) {\n            if (n3.length < 2 || 2 !== i || 46 !== n3.charCodeAt(n3.length - 1) || 46 !== n3.charCodeAt(n3.length - 2)) {\n              if (n3.length > 2) {\n                var a2 = n3.lastIndexOf(\"/\");\n                if (a2 !== n3.length - 1) {\n                  -1 === a2 ? (n3 = \"\", i = 0) : i = (n3 = n3.slice(0, a2)).length - 1 - n3.lastIndexOf(\"/\"), o = h, s = 0;\n                  continue;\n                }\n              } else if (2 === n3.length || 1 === n3.length) {\n                n3 = \"\", i = 0, o = h, s = 0;\n                continue;\n              }\n            }\n            e3 && (n3.length > 0 ? n3 += \"/..\" : n3 = \"..\", i = 2);\n          } else\n            n3.length > 0 ? n3 += \"/\" + t4.slice(o + 1, h) : n3 = t4.slice(o + 1, h), i = h - o - 1;\n          o = h, s = 0;\n        } else\n          46 === r3 && -1 !== s ? ++s : s = -1;\n      }\n      return n3;\n    }\n    var n2 = { resolve: function() {\n      for (var t4, n3 = \"\", i = false, o = arguments.length - 1; o >= -1 && !i; o--) {\n        var s;\n        o >= 0 ? s = arguments[o] : (void 0 === t4 && (t4 = process.cwd()), s = t4), e2(s), 0 !== s.length && (n3 = s + \"/\" + n3, i = 47 === s.charCodeAt(0));\n      }\n      return n3 = r2(n3, !i), i ? n3.length > 0 ? \"/\" + n3 : \"/\" : n3.length > 0 ? n3 : \".\";\n    }, normalize: function(t4) {\n      if (e2(t4), 0 === t4.length)\n        return \".\";\n      var n3 = 47 === t4.charCodeAt(0), i = 47 === t4.charCodeAt(t4.length - 1);\n      return 0 !== (t4 = r2(t4, !n3)).length || n3 || (t4 = \".\"), t4.length > 0 && i && (t4 += \"/\"), n3 ? \"/\" + t4 : t4;\n    }, isAbsolute: function(t4) {\n      return e2(t4), t4.length > 0 && 47 === t4.charCodeAt(0);\n    }, join: function() {\n      if (0 === arguments.length)\n        return \".\";\n      for (var t4, r3 = 0; r3 < arguments.length; ++r3) {\n        var i = arguments[r3];\n        e2(i), i.length > 0 && (void 0 === t4 ? t4 = i : t4 += \"/\" + i);\n      }\n      return void 0 === t4 ? \".\" : n2.normalize(t4);\n    }, relative: function(t4, r3) {\n      if (e2(t4), e2(r3), t4 === r3)\n        return \"\";\n      if ((t4 = n2.resolve(t4)) === (r3 = n2.resolve(r3)))\n        return \"\";\n      for (var i = 1; i < t4.length && 47 === t4.charCodeAt(i); ++i)\n        ;\n      for (var o = t4.length, s = o - i, h = 1; h < r3.length && 47 === r3.charCodeAt(h); ++h)\n        ;\n      for (var a2 = r3.length - h, c = s < a2 ? s : a2, f2 = -1, u = 0; u <= c; ++u) {\n        if (u === c) {\n          if (a2 > c) {\n            if (47 === r3.charCodeAt(h + u))\n              return r3.slice(h + u + 1);\n            if (0 === u)\n              return r3.slice(h + u);\n          } else\n            s > c && (47 === t4.charCodeAt(i + u) ? f2 = u : 0 === u && (f2 = 0));\n          break;\n        }\n        var l = t4.charCodeAt(i + u);\n        if (l !== r3.charCodeAt(h + u))\n          break;\n        47 === l && (f2 = u);\n      }\n      var g = \"\";\n      for (u = i + f2 + 1; u <= o; ++u)\n        u !== o && 47 !== t4.charCodeAt(u) || (0 === g.length ? g += \"..\" : g += \"/..\");\n      return g.length > 0 ? g + r3.slice(h + f2) : (h += f2, 47 === r3.charCodeAt(h) && ++h, r3.slice(h));\n    }, _makeLong: function(t4) {\n      return t4;\n    }, dirname: function(t4) {\n      if (e2(t4), 0 === t4.length)\n        return \".\";\n      for (var r3 = t4.charCodeAt(0), n3 = 47 === r3, i = -1, o = true, s = t4.length - 1; s >= 1; --s)\n        if (47 === (r3 = t4.charCodeAt(s))) {\n          if (!o) {\n            i = s;\n            break;\n          }\n        } else\n          o = false;\n      return -1 === i ? n3 ? \"/\" : \".\" : n3 && 1 === i ? \"//\" : t4.slice(0, i);\n    }, basename: function(t4, r3) {\n      if (void 0 !== r3 && \"string\" != typeof r3)\n        throw new TypeError('\"ext\" argument must be a string');\n      e2(t4);\n      var n3, i = 0, o = -1, s = true;\n      if (void 0 !== r3 && r3.length > 0 && r3.length <= t4.length) {\n        if (r3.length === t4.length && r3 === t4)\n          return \"\";\n        var h = r3.length - 1, a2 = -1;\n        for (n3 = t4.length - 1; n3 >= 0; --n3) {\n          var c = t4.charCodeAt(n3);\n          if (47 === c) {\n            if (!s) {\n              i = n3 + 1;\n              break;\n            }\n          } else\n            -1 === a2 && (s = false, a2 = n3 + 1), h >= 0 && (c === r3.charCodeAt(h) ? -1 == --h && (o = n3) : (h = -1, o = a2));\n        }\n        return i === o ? o = a2 : -1 === o && (o = t4.length), t4.slice(i, o);\n      }\n      for (n3 = t4.length - 1; n3 >= 0; --n3)\n        if (47 === t4.charCodeAt(n3)) {\n          if (!s) {\n            i = n3 + 1;\n            break;\n          }\n        } else\n          -1 === o && (s = false, o = n3 + 1);\n      return -1 === o ? \"\" : t4.slice(i, o);\n    }, extname: function(t4) {\n      e2(t4);\n      for (var r3 = -1, n3 = 0, i = -1, o = true, s = 0, h = t4.length - 1; h >= 0; --h) {\n        var a2 = t4.charCodeAt(h);\n        if (47 !== a2)\n          -1 === i && (o = false, i = h + 1), 46 === a2 ? -1 === r3 ? r3 = h : 1 !== s && (s = 1) : -1 !== r3 && (s = -1);\n        else if (!o) {\n          n3 = h + 1;\n          break;\n        }\n      }\n      return -1 === r3 || -1 === i || 0 === s || 1 === s && r3 === i - 1 && r3 === n3 + 1 ? \"\" : t4.slice(r3, i);\n    }, format: function(t4) {\n      if (null === t4 || \"object\" != typeof t4)\n        throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof t4);\n      return function(t5, e3) {\n        var r3 = e3.dir || e3.root, n3 = e3.base || (e3.name || \"\") + (e3.ext || \"\");\n        return r3 ? r3 === e3.root ? r3 + n3 : r3 + \"/\" + n3 : n3;\n      }(0, t4);\n    }, parse: function(t4) {\n      e2(t4);\n      var r3 = { root: \"\", dir: \"\", base: \"\", ext: \"\", name: \"\" };\n      if (0 === t4.length)\n        return r3;\n      var n3, i = t4.charCodeAt(0), o = 47 === i;\n      o ? (r3.root = \"/\", n3 = 1) : n3 = 0;\n      for (var s = -1, h = 0, a2 = -1, c = true, f2 = t4.length - 1, u = 0; f2 >= n3; --f2)\n        if (47 !== (i = t4.charCodeAt(f2)))\n          -1 === a2 && (c = false, a2 = f2 + 1), 46 === i ? -1 === s ? s = f2 : 1 !== u && (u = 1) : -1 !== s && (u = -1);\n        else if (!c) {\n          h = f2 + 1;\n          break;\n        }\n      return -1 === s || -1 === a2 || 0 === u || 1 === u && s === a2 - 1 && s === h + 1 ? -1 !== a2 && (r3.base = r3.name = 0 === h && o ? t4.slice(1, a2) : t4.slice(h, a2)) : (0 === h && o ? (r3.name = t4.slice(1, s), r3.base = t4.slice(1, a2)) : (r3.name = t4.slice(h, s), r3.base = t4.slice(h, a2)), r3.ext = t4.slice(s, a2)), h > 0 ? r3.dir = t4.slice(0, h - 1) : o && (r3.dir = \"/\"), r3;\n    }, sep: \"/\", delimiter: \":\", win32: null, posix: null };\n    n2.posix = n2, t3.exports = n2;\n  } }, e = {};\n  function r(n2) {\n    var i = e[n2];\n    if (void 0 !== i)\n      return i.exports;\n    var o = e[n2] = { exports: {} };\n    return t2[n2](o, o.exports, r), o.exports;\n  }\n  r.d = (t3, e2) => {\n    for (var n2 in e2)\n      r.o(e2, n2) && !r.o(t3, n2) && Object.defineProperty(t3, n2, { enumerable: true, get: e2[n2] });\n  }, r.o = (t3, e2) => Object.prototype.hasOwnProperty.call(t3, e2), r.r = (t3) => {\n    \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t3, Symbol.toStringTag, { value: \"Module\" }), Object.defineProperty(t3, \"__esModule\", { value: true });\n  };\n  var n = {};\n  (() => {\n    let t3;\n    if (r.r(n), r.d(n, { URI: () => f2, Utils: () => P }), \"object\" == typeof process)\n      t3 = \"win32\" === process.platform;\n    else if (\"object\" == typeof navigator) {\n      let e3 = navigator.userAgent;\n      t3 = e3.indexOf(\"Windows\") >= 0;\n    }\n    const e2 = /^\\w[\\w\\d+.-]*$/, i = /^\\//, o = /^\\/\\//;\n    function s(t4, r2) {\n      if (!t4.scheme && r2)\n        throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${t4.authority}\", path: \"${t4.path}\", query: \"${t4.query}\", fragment: \"${t4.fragment}\"}`);\n      if (t4.scheme && !e2.test(t4.scheme))\n        throw new Error(\"[UriError]: Scheme contains illegal characters.\");\n      if (t4.path) {\n        if (t4.authority) {\n          if (!i.test(t4.path))\n            throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n        } else if (o.test(t4.path))\n          throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n      }\n    }\n    const h = \"\", a2 = \"/\", c = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n    class f2 {\n      static isUri(t4) {\n        return t4 instanceof f2 || !!t4 && \"string\" == typeof t4.authority && \"string\" == typeof t4.fragment && \"string\" == typeof t4.path && \"string\" == typeof t4.query && \"string\" == typeof t4.scheme && \"string\" == typeof t4.fsPath && \"function\" == typeof t4.with && \"function\" == typeof t4.toString;\n      }\n      scheme;\n      authority;\n      path;\n      query;\n      fragment;\n      constructor(t4, e3, r2, n2, i2, o2 = false) {\n        \"object\" == typeof t4 ? (this.scheme = t4.scheme || h, this.authority = t4.authority || h, this.path = t4.path || h, this.query = t4.query || h, this.fragment = t4.fragment || h) : (this.scheme = /* @__PURE__ */ function(t5, e4) {\n          return t5 || e4 ? t5 : \"file\";\n        }(t4, o2), this.authority = e3 || h, this.path = function(t5, e4) {\n          switch (t5) {\n            case \"https\":\n            case \"http\":\n            case \"file\":\n              e4 ? e4[0] !== a2 && (e4 = a2 + e4) : e4 = a2;\n          }\n          return e4;\n        }(this.scheme, r2 || h), this.query = n2 || h, this.fragment = i2 || h, s(this, o2));\n      }\n      get fsPath() {\n        return m(this, false);\n      }\n      with(t4) {\n        if (!t4)\n          return this;\n        let { scheme: e3, authority: r2, path: n2, query: i2, fragment: o2 } = t4;\n        return void 0 === e3 ? e3 = this.scheme : null === e3 && (e3 = h), void 0 === r2 ? r2 = this.authority : null === r2 && (r2 = h), void 0 === n2 ? n2 = this.path : null === n2 && (n2 = h), void 0 === i2 ? i2 = this.query : null === i2 && (i2 = h), void 0 === o2 ? o2 = this.fragment : null === o2 && (o2 = h), e3 === this.scheme && r2 === this.authority && n2 === this.path && i2 === this.query && o2 === this.fragment ? this : new l(e3, r2, n2, i2, o2);\n      }\n      static parse(t4, e3 = false) {\n        const r2 = c.exec(t4);\n        return r2 ? new l(r2[2] || h, C(r2[4] || h), C(r2[5] || h), C(r2[7] || h), C(r2[9] || h), e3) : new l(h, h, h, h, h);\n      }\n      static file(e3) {\n        let r2 = h;\n        if (t3 && (e3 = e3.replace(/\\\\/g, a2)), e3[0] === a2 && e3[1] === a2) {\n          const t4 = e3.indexOf(a2, 2);\n          -1 === t4 ? (r2 = e3.substring(2), e3 = a2) : (r2 = e3.substring(2, t4), e3 = e3.substring(t4) || a2);\n        }\n        return new l(\"file\", r2, e3, h, h);\n      }\n      static from(t4) {\n        const e3 = new l(t4.scheme, t4.authority, t4.path, t4.query, t4.fragment);\n        return s(e3, true), e3;\n      }\n      toString(t4 = false) {\n        return y(this, t4);\n      }\n      toJSON() {\n        return this;\n      }\n      static revive(t4) {\n        if (t4) {\n          if (t4 instanceof f2)\n            return t4;\n          {\n            const e3 = new l(t4);\n            return e3._formatted = t4.external, e3._fsPath = t4._sep === u ? t4.fsPath : null, e3;\n          }\n        }\n        return t4;\n      }\n    }\n    const u = t3 ? 1 : void 0;\n    class l extends f2 {\n      _formatted = null;\n      _fsPath = null;\n      get fsPath() {\n        return this._fsPath || (this._fsPath = m(this, false)), this._fsPath;\n      }\n      toString(t4 = false) {\n        return t4 ? y(this, true) : (this._formatted || (this._formatted = y(this, false)), this._formatted);\n      }\n      toJSON() {\n        const t4 = { $mid: 1 };\n        return this._fsPath && (t4.fsPath = this._fsPath, t4._sep = u), this._formatted && (t4.external = this._formatted), this.path && (t4.path = this.path), this.scheme && (t4.scheme = this.scheme), this.authority && (t4.authority = this.authority), this.query && (t4.query = this.query), this.fragment && (t4.fragment = this.fragment), t4;\n      }\n    }\n    const g = { 58: \"%3A\", 47: \"%2F\", 63: \"%3F\", 35: \"%23\", 91: \"%5B\", 93: \"%5D\", 64: \"%40\", 33: \"%21\", 36: \"%24\", 38: \"%26\", 39: \"%27\", 40: \"%28\", 41: \"%29\", 42: \"%2A\", 43: \"%2B\", 44: \"%2C\", 59: \"%3B\", 61: \"%3D\", 32: \"%20\" };\n    function d(t4, e3, r2) {\n      let n2, i2 = -1;\n      for (let o2 = 0; o2 < t4.length; o2++) {\n        const s2 = t4.charCodeAt(o2);\n        if (s2 >= 97 && s2 <= 122 || s2 >= 65 && s2 <= 90 || s2 >= 48 && s2 <= 57 || 45 === s2 || 46 === s2 || 95 === s2 || 126 === s2 || e3 && 47 === s2 || r2 && 91 === s2 || r2 && 93 === s2 || r2 && 58 === s2)\n          -1 !== i2 && (n2 += encodeURIComponent(t4.substring(i2, o2)), i2 = -1), void 0 !== n2 && (n2 += t4.charAt(o2));\n        else {\n          void 0 === n2 && (n2 = t4.substr(0, o2));\n          const e4 = g[s2];\n          void 0 !== e4 ? (-1 !== i2 && (n2 += encodeURIComponent(t4.substring(i2, o2)), i2 = -1), n2 += e4) : -1 === i2 && (i2 = o2);\n        }\n      }\n      return -1 !== i2 && (n2 += encodeURIComponent(t4.substring(i2))), void 0 !== n2 ? n2 : t4;\n    }\n    function p(t4) {\n      let e3;\n      for (let r2 = 0; r2 < t4.length; r2++) {\n        const n2 = t4.charCodeAt(r2);\n        35 === n2 || 63 === n2 ? (void 0 === e3 && (e3 = t4.substr(0, r2)), e3 += g[n2]) : void 0 !== e3 && (e3 += t4[r2]);\n      }\n      return void 0 !== e3 ? e3 : t4;\n    }\n    function m(e3, r2) {\n      let n2;\n      return n2 = e3.authority && e3.path.length > 1 && \"file\" === e3.scheme ? `//${e3.authority}${e3.path}` : 47 === e3.path.charCodeAt(0) && (e3.path.charCodeAt(1) >= 65 && e3.path.charCodeAt(1) <= 90 || e3.path.charCodeAt(1) >= 97 && e3.path.charCodeAt(1) <= 122) && 58 === e3.path.charCodeAt(2) ? r2 ? e3.path.substr(1) : e3.path[1].toLowerCase() + e3.path.substr(2) : e3.path, t3 && (n2 = n2.replace(/\\//g, \"\\\\\")), n2;\n    }\n    function y(t4, e3) {\n      const r2 = e3 ? p : d;\n      let n2 = \"\", { scheme: i2, authority: o2, path: s2, query: h2, fragment: c2 } = t4;\n      if (i2 && (n2 += i2, n2 += \":\"), (o2 || \"file\" === i2) && (n2 += a2, n2 += a2), o2) {\n        let t5 = o2.indexOf(\"@\");\n        if (-1 !== t5) {\n          const e4 = o2.substr(0, t5);\n          o2 = o2.substr(t5 + 1), t5 = e4.lastIndexOf(\":\"), -1 === t5 ? n2 += r2(e4, false, false) : (n2 += r2(e4.substr(0, t5), false, false), n2 += \":\", n2 += r2(e4.substr(t5 + 1), false, true)), n2 += \"@\";\n        }\n        o2 = o2.toLowerCase(), t5 = o2.lastIndexOf(\":\"), -1 === t5 ? n2 += r2(o2, false, true) : (n2 += r2(o2.substr(0, t5), false, true), n2 += o2.substr(t5));\n      }\n      if (s2) {\n        if (s2.length >= 3 && 47 === s2.charCodeAt(0) && 58 === s2.charCodeAt(2)) {\n          const t5 = s2.charCodeAt(1);\n          t5 >= 65 && t5 <= 90 && (s2 = `/${String.fromCharCode(t5 + 32)}:${s2.substr(3)}`);\n        } else if (s2.length >= 2 && 58 === s2.charCodeAt(1)) {\n          const t5 = s2.charCodeAt(0);\n          t5 >= 65 && t5 <= 90 && (s2 = `${String.fromCharCode(t5 + 32)}:${s2.substr(2)}`);\n        }\n        n2 += r2(s2, true, false);\n      }\n      return h2 && (n2 += \"?\", n2 += r2(h2, false, false)), c2 && (n2 += \"#\", n2 += e3 ? c2 : d(c2, false, false)), n2;\n    }\n    function v(t4) {\n      try {\n        return decodeURIComponent(t4);\n      } catch {\n        return t4.length > 3 ? t4.substr(0, 3) + v(t4.substr(3)) : t4;\n      }\n    }\n    const b = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\n    function C(t4) {\n      return t4.match(b) ? t4.replace(b, (t5) => v(t5)) : t4;\n    }\n    var A2 = r(470);\n    const w = A2.posix || A2, x = \"/\";\n    var P;\n    !function(t4) {\n      t4.joinPath = function(t5, ...e3) {\n        return t5.with({ path: w.join(t5.path, ...e3) });\n      }, t4.resolvePath = function(t5, ...e3) {\n        let r2 = t5.path, n2 = false;\n        r2[0] !== x && (r2 = x + r2, n2 = true);\n        let i2 = w.resolve(r2, ...e3);\n        return n2 && i2[0] === x && !t5.authority && (i2 = i2.substring(1)), t5.with({ path: i2 });\n      }, t4.dirname = function(t5) {\n        if (0 === t5.path.length || t5.path === x)\n          return t5;\n        let e3 = w.dirname(t5.path);\n        return 1 === e3.length && 46 === e3.charCodeAt(0) && (e3 = \"\"), t5.with({ path: e3 });\n      }, t4.basename = function(t5) {\n        return w.basename(t5.path);\n      }, t4.extname = function(t5) {\n        return w.extname(t5.path);\n      };\n    }(P || (P = {}));\n  })(), LIB = n;\n})();\nvar { URI: URI2, Utils } = LIB;\n\n// node_modules/vscode-json-languageservice/lib/esm/utils/glob.js\nfunction createRegex(glob, opts) {\n  if (typeof glob !== \"string\") {\n    throw new TypeError(\"Expected a string\");\n  }\n  const str = String(glob);\n  let reStr = \"\";\n  const extended = opts ? !!opts.extended : false;\n  const globstar = opts ? !!opts.globstar : false;\n  let inGroup = false;\n  const flags = opts && typeof opts.flags === \"string\" ? opts.flags : \"\";\n  let c;\n  for (let i = 0, len = str.length; i < len; i++) {\n    c = str[i];\n    switch (c) {\n      case \"/\":\n      case \"$\":\n      case \"^\":\n      case \"+\":\n      case \".\":\n      case \"(\":\n      case \")\":\n      case \"=\":\n      case \"!\":\n      case \"|\":\n        reStr += \"\\\\\" + c;\n        break;\n      case \"?\":\n        if (extended) {\n          reStr += \".\";\n          break;\n        }\n      case \"[\":\n      case \"]\":\n        if (extended) {\n          reStr += c;\n          break;\n        }\n      case \"{\":\n        if (extended) {\n          inGroup = true;\n          reStr += \"(\";\n          break;\n        }\n      case \"}\":\n        if (extended) {\n          inGroup = false;\n          reStr += \")\";\n          break;\n        }\n      case \",\":\n        if (inGroup) {\n          reStr += \"|\";\n          break;\n        }\n        reStr += \"\\\\\" + c;\n        break;\n      case \"*\":\n        const prevChar = str[i - 1];\n        let starCount = 1;\n        while (str[i + 1] === \"*\") {\n          starCount++;\n          i++;\n        }\n        const nextChar = str[i + 1];\n        if (!globstar) {\n          reStr += \".*\";\n        } else {\n          const isGlobstar = starCount > 1 && (prevChar === \"/\" || prevChar === void 0 || prevChar === \"{\" || prevChar === \",\") && (nextChar === \"/\" || nextChar === void 0 || nextChar === \",\" || nextChar === \"}\");\n          if (isGlobstar) {\n            if (nextChar === \"/\") {\n              i++;\n            } else if (prevChar === \"/\" && reStr.endsWith(\"\\\\/\")) {\n              reStr = reStr.substr(0, reStr.length - 2);\n            }\n            reStr += \"((?:[^/]*(?:/|$))*)\";\n          } else {\n            reStr += \"([^/]*)\";\n          }\n        }\n        break;\n      default:\n        reStr += c;\n    }\n  }\n  if (!flags || !~flags.indexOf(\"g\")) {\n    reStr = \"^\" + reStr + \"$\";\n  }\n  return new RegExp(reStr, flags);\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/services/jsonSchemaService.js\nvar BANG = \"!\";\nvar PATH_SEP = \"/\";\nvar FilePatternAssociation = class {\n  constructor(pattern, folderUri, uris) {\n    this.folderUri = folderUri;\n    this.uris = uris;\n    this.globWrappers = [];\n    try {\n      for (let patternString of pattern) {\n        const include = patternString[0] !== BANG;\n        if (!include) {\n          patternString = patternString.substring(1);\n        }\n        if (patternString.length > 0) {\n          if (patternString[0] === PATH_SEP) {\n            patternString = patternString.substring(1);\n          }\n          this.globWrappers.push({\n            regexp: createRegex(\"**/\" + patternString, { extended: true, globstar: true }),\n            include\n          });\n        }\n      }\n      ;\n      if (folderUri) {\n        folderUri = normalizeResourceForMatching(folderUri);\n        if (!folderUri.endsWith(\"/\")) {\n          folderUri = folderUri + \"/\";\n        }\n        this.folderUri = folderUri;\n      }\n    } catch (e) {\n      this.globWrappers.length = 0;\n      this.uris = [];\n    }\n  }\n  matchesPattern(fileName) {\n    if (this.folderUri && !fileName.startsWith(this.folderUri)) {\n      return false;\n    }\n    let match = false;\n    for (const { regexp, include } of this.globWrappers) {\n      if (regexp.test(fileName)) {\n        match = include;\n      }\n    }\n    return match;\n  }\n  getURIs() {\n    return this.uris;\n  }\n};\nvar SchemaHandle = class {\n  constructor(service, uri, unresolvedSchemaContent) {\n    this.service = service;\n    this.uri = uri;\n    this.dependencies = /* @__PURE__ */ new Set();\n    this.anchors = void 0;\n    if (unresolvedSchemaContent) {\n      this.unresolvedSchema = this.service.promise.resolve(new UnresolvedSchema(unresolvedSchemaContent));\n    }\n  }\n  getUnresolvedSchema() {\n    if (!this.unresolvedSchema) {\n      this.unresolvedSchema = this.service.loadSchema(this.uri);\n    }\n    return this.unresolvedSchema;\n  }\n  getResolvedSchema() {\n    if (!this.resolvedSchema) {\n      this.resolvedSchema = this.getUnresolvedSchema().then((unresolved) => {\n        return this.service.resolveSchemaContent(unresolved, this);\n      });\n    }\n    return this.resolvedSchema;\n  }\n  clearSchema() {\n    const hasChanges = !!this.unresolvedSchema;\n    this.resolvedSchema = void 0;\n    this.unresolvedSchema = void 0;\n    this.dependencies.clear();\n    this.anchors = void 0;\n    return hasChanges;\n  }\n};\nvar UnresolvedSchema = class {\n  constructor(schema, errors = []) {\n    this.schema = schema;\n    this.errors = errors;\n  }\n};\nvar ResolvedSchema = class {\n  constructor(schema, errors = [], warnings = [], schemaDraft) {\n    this.schema = schema;\n    this.errors = errors;\n    this.warnings = warnings;\n    this.schemaDraft = schemaDraft;\n  }\n  getSection(path) {\n    const schemaRef = this.getSectionRecursive(path, this.schema);\n    if (schemaRef) {\n      return asSchema(schemaRef);\n    }\n    return void 0;\n  }\n  getSectionRecursive(path, schema) {\n    if (!schema || typeof schema === \"boolean\" || path.length === 0) {\n      return schema;\n    }\n    const next = path.shift();\n    if (schema.properties && typeof schema.properties[next]) {\n      return this.getSectionRecursive(path, schema.properties[next]);\n    } else if (schema.patternProperties) {\n      for (const pattern of Object.keys(schema.patternProperties)) {\n        const regex = extendedRegExp(pattern);\n        if (regex?.test(next)) {\n          return this.getSectionRecursive(path, schema.patternProperties[pattern]);\n        }\n      }\n    } else if (typeof schema.additionalProperties === \"object\") {\n      return this.getSectionRecursive(path, schema.additionalProperties);\n    } else if (next.match(\"[0-9]+\")) {\n      if (Array.isArray(schema.items)) {\n        const index = parseInt(next, 10);\n        if (!isNaN(index) && schema.items[index]) {\n          return this.getSectionRecursive(path, schema.items[index]);\n        }\n      } else if (schema.items) {\n        return this.getSectionRecursive(path, schema.items);\n      }\n    }\n    return void 0;\n  }\n};\nvar JSONSchemaService = class {\n  constructor(requestService, contextService, promiseConstructor) {\n    this.contextService = contextService;\n    this.requestService = requestService;\n    this.promiseConstructor = promiseConstructor || Promise;\n    this.callOnDispose = [];\n    this.contributionSchemas = {};\n    this.contributionAssociations = [];\n    this.schemasById = {};\n    this.filePatternAssociations = [];\n    this.registeredSchemasIds = {};\n  }\n  getRegisteredSchemaIds(filter) {\n    return Object.keys(this.registeredSchemasIds).filter((id) => {\n      const scheme = URI2.parse(id).scheme;\n      return scheme !== \"schemaservice\" && (!filter || filter(scheme));\n    });\n  }\n  get promise() {\n    return this.promiseConstructor;\n  }\n  dispose() {\n    while (this.callOnDispose.length > 0) {\n      this.callOnDispose.pop()();\n    }\n  }\n  onResourceChange(uri) {\n    this.cachedSchemaForResource = void 0;\n    let hasChanges = false;\n    uri = normalizeId(uri);\n    const toWalk = [uri];\n    const all = Object.keys(this.schemasById).map((key) => this.schemasById[key]);\n    while (toWalk.length) {\n      const curr = toWalk.pop();\n      for (let i = 0; i < all.length; i++) {\n        const handle = all[i];\n        if (handle && (handle.uri === curr || handle.dependencies.has(curr))) {\n          if (handle.uri !== curr) {\n            toWalk.push(handle.uri);\n          }\n          if (handle.clearSchema()) {\n            hasChanges = true;\n          }\n          all[i] = void 0;\n        }\n      }\n    }\n    return hasChanges;\n  }\n  setSchemaContributions(schemaContributions2) {\n    if (schemaContributions2.schemas) {\n      const schemas = schemaContributions2.schemas;\n      for (const id in schemas) {\n        const normalizedId = normalizeId(id);\n        this.contributionSchemas[normalizedId] = this.addSchemaHandle(normalizedId, schemas[id]);\n      }\n    }\n    if (Array.isArray(schemaContributions2.schemaAssociations)) {\n      const schemaAssociations = schemaContributions2.schemaAssociations;\n      for (let schemaAssociation of schemaAssociations) {\n        const uris = schemaAssociation.uris.map(normalizeId);\n        const association = this.addFilePatternAssociation(schemaAssociation.pattern, schemaAssociation.folderUri, uris);\n        this.contributionAssociations.push(association);\n      }\n    }\n  }\n  addSchemaHandle(id, unresolvedSchemaContent) {\n    const schemaHandle = new SchemaHandle(this, id, unresolvedSchemaContent);\n    this.schemasById[id] = schemaHandle;\n    return schemaHandle;\n  }\n  getOrAddSchemaHandle(id, unresolvedSchemaContent) {\n    return this.schemasById[id] || this.addSchemaHandle(id, unresolvedSchemaContent);\n  }\n  addFilePatternAssociation(pattern, folderUri, uris) {\n    const fpa = new FilePatternAssociation(pattern, folderUri, uris);\n    this.filePatternAssociations.push(fpa);\n    return fpa;\n  }\n  registerExternalSchema(config) {\n    const id = normalizeId(config.uri);\n    this.registeredSchemasIds[id] = true;\n    this.cachedSchemaForResource = void 0;\n    if (config.fileMatch && config.fileMatch.length) {\n      this.addFilePatternAssociation(config.fileMatch, config.folderUri, [id]);\n    }\n    return config.schema ? this.addSchemaHandle(id, config.schema) : this.getOrAddSchemaHandle(id);\n  }\n  clearExternalSchemas() {\n    this.schemasById = {};\n    this.filePatternAssociations = [];\n    this.registeredSchemasIds = {};\n    this.cachedSchemaForResource = void 0;\n    for (const id in this.contributionSchemas) {\n      this.schemasById[id] = this.contributionSchemas[id];\n      this.registeredSchemasIds[id] = true;\n    }\n    for (const contributionAssociation of this.contributionAssociations) {\n      this.filePatternAssociations.push(contributionAssociation);\n    }\n  }\n  getResolvedSchema(schemaId) {\n    const id = normalizeId(schemaId);\n    const schemaHandle = this.schemasById[id];\n    if (schemaHandle) {\n      return schemaHandle.getResolvedSchema();\n    }\n    return this.promise.resolve(void 0);\n  }\n  loadSchema(url) {\n    if (!this.requestService) {\n      const errorMessage = t(\"Unable to load schema from '{0}'. No schema request service available\", toDisplayString(url));\n      return this.promise.resolve(new UnresolvedSchema({}, [errorMessage]));\n    }\n    if (url.startsWith(\"http://json-schema.org/\")) {\n      url = \"https\" + url.substring(4);\n    }\n    return this.requestService(url).then((content) => {\n      if (!content) {\n        const errorMessage = t(\"Unable to load schema from '{0}': No content.\", toDisplayString(url));\n        return new UnresolvedSchema({}, [errorMessage]);\n      }\n      const errors = [];\n      if (content.charCodeAt(0) === 65279) {\n        errors.push(t(\"Problem reading content from '{0}': UTF-8 with BOM detected, only UTF 8 is allowed.\", toDisplayString(url)));\n        content = content.trimStart();\n      }\n      let schemaContent = {};\n      const jsonErrors = [];\n      schemaContent = parse2(content, jsonErrors);\n      if (jsonErrors.length) {\n        errors.push(t(\"Unable to parse content from '{0}': Parse error at offset {1}.\", toDisplayString(url), jsonErrors[0].offset));\n      }\n      return new UnresolvedSchema(schemaContent, errors);\n    }, (error) => {\n      let errorMessage = error.toString();\n      const errorSplit = error.toString().split(\"Error: \");\n      if (errorSplit.length > 1) {\n        errorMessage = errorSplit[1];\n      }\n      if (endsWith(errorMessage, \".\")) {\n        errorMessage = errorMessage.substr(0, errorMessage.length - 1);\n      }\n      return new UnresolvedSchema({}, [t(\"Unable to load schema from '{0}': {1}.\", toDisplayString(url), errorMessage)]);\n    });\n  }\n  resolveSchemaContent(schemaToResolve, handle) {\n    const resolveErrors = schemaToResolve.errors.slice(0);\n    const schema = schemaToResolve.schema;\n    let schemaDraft = schema.$schema ? normalizeId(schema.$schema) : void 0;\n    if (schemaDraft === \"http://json-schema.org/draft-03/schema\") {\n      return this.promise.resolve(new ResolvedSchema({}, [t(\"Draft-03 schemas are not supported.\")], [], schemaDraft));\n    }\n    let usesUnsupportedFeatures = /* @__PURE__ */ new Set();\n    const contextService = this.contextService;\n    const findSectionByJSONPointer = (schema2, path) => {\n      path = decodeURIComponent(path);\n      let current = schema2;\n      if (path[0] === \"/\") {\n        path = path.substring(1);\n      }\n      path.split(\"/\").some((part) => {\n        part = part.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n        current = current[part];\n        return !current;\n      });\n      return current;\n    };\n    const findSchemaById = (schema2, handle2, id) => {\n      if (!handle2.anchors) {\n        handle2.anchors = collectAnchors(schema2);\n      }\n      return handle2.anchors.get(id);\n    };\n    const merge = (target, section) => {\n      for (const key in section) {\n        if (section.hasOwnProperty(key) && key !== \"id\" && key !== \"$id\") {\n          target[key] = section[key];\n        }\n      }\n    };\n    const mergeRef = (target, sourceRoot, sourceHandle, refSegment) => {\n      let section;\n      if (refSegment === void 0 || refSegment.length === 0) {\n        section = sourceRoot;\n      } else if (refSegment.charAt(0) === \"/\") {\n        section = findSectionByJSONPointer(sourceRoot, refSegment);\n      } else {\n        section = findSchemaById(sourceRoot, sourceHandle, refSegment);\n      }\n      if (section) {\n        merge(target, section);\n      } else {\n        resolveErrors.push(t(\"$ref '{0}' in '{1}' can not be resolved.\", refSegment || \"\", sourceHandle.uri));\n      }\n    };\n    const resolveExternalLink = (node, uri, refSegment, parentHandle) => {\n      if (contextService && !/^[A-Za-z][A-Za-z0-9+\\-.+]*:\\/\\/.*/.test(uri)) {\n        uri = contextService.resolveRelativePath(uri, parentHandle.uri);\n      }\n      uri = normalizeId(uri);\n      const referencedHandle = this.getOrAddSchemaHandle(uri);\n      return referencedHandle.getUnresolvedSchema().then((unresolvedSchema) => {\n        parentHandle.dependencies.add(uri);\n        if (unresolvedSchema.errors.length) {\n          const loc = refSegment ? uri + \"#\" + refSegment : uri;\n          resolveErrors.push(t(\"Problems loading reference '{0}': {1}\", loc, unresolvedSchema.errors[0]));\n        }\n        mergeRef(node, unresolvedSchema.schema, referencedHandle, refSegment);\n        return resolveRefs(node, unresolvedSchema.schema, referencedHandle);\n      });\n    };\n    const resolveRefs = (node, parentSchema, parentHandle) => {\n      const openPromises = [];\n      this.traverseNodes(node, (next) => {\n        const seenRefs = /* @__PURE__ */ new Set();\n        while (next.$ref) {\n          const ref = next.$ref;\n          const segments = ref.split(\"#\", 2);\n          delete next.$ref;\n          if (segments[0].length > 0) {\n            openPromises.push(resolveExternalLink(next, segments[0], segments[1], parentHandle));\n            return;\n          } else {\n            if (!seenRefs.has(ref)) {\n              const id = segments[1];\n              mergeRef(next, parentSchema, parentHandle, id);\n              seenRefs.add(ref);\n            }\n          }\n        }\n        if (next.$recursiveRef) {\n          usesUnsupportedFeatures.add(\"$recursiveRef\");\n        }\n        if (next.$dynamicRef) {\n          usesUnsupportedFeatures.add(\"$dynamicRef\");\n        }\n      });\n      return this.promise.all(openPromises);\n    };\n    const collectAnchors = (root) => {\n      const result = /* @__PURE__ */ new Map();\n      this.traverseNodes(root, (next) => {\n        const id = next.$id || next.id;\n        const anchor = isString(id) && id.charAt(0) === \"#\" ? id.substring(1) : next.$anchor;\n        if (anchor) {\n          if (result.has(anchor)) {\n            resolveErrors.push(t(\"Duplicate anchor declaration: '{0}'\", anchor));\n          } else {\n            result.set(anchor, next);\n          }\n        }\n        if (next.$recursiveAnchor) {\n          usesUnsupportedFeatures.add(\"$recursiveAnchor\");\n        }\n        if (next.$dynamicAnchor) {\n          usesUnsupportedFeatures.add(\"$dynamicAnchor\");\n        }\n      });\n      return result;\n    };\n    return resolveRefs(schema, schema, handle).then((_) => {\n      let resolveWarnings = [];\n      if (usesUnsupportedFeatures.size) {\n        resolveWarnings.push(t(\"The schema uses meta-schema features ({0}) that are not yet supported by the validator.\", Array.from(usesUnsupportedFeatures.keys()).join(\", \")));\n      }\n      return new ResolvedSchema(schema, resolveErrors, resolveWarnings, schemaDraft);\n    });\n  }\n  traverseNodes(root, handle) {\n    if (!root || typeof root !== \"object\") {\n      return Promise.resolve(null);\n    }\n    const seen = /* @__PURE__ */ new Set();\n    const collectEntries = (...entries) => {\n      for (const entry of entries) {\n        if (isObject(entry)) {\n          toWalk.push(entry);\n        }\n      }\n    };\n    const collectMapEntries = (...maps) => {\n      for (const map of maps) {\n        if (isObject(map)) {\n          for (const k in map) {\n            const key = k;\n            const entry = map[key];\n            if (isObject(entry)) {\n              toWalk.push(entry);\n            }\n          }\n        }\n      }\n    };\n    const collectArrayEntries = (...arrays) => {\n      for (const array of arrays) {\n        if (Array.isArray(array)) {\n          for (const entry of array) {\n            if (isObject(entry)) {\n              toWalk.push(entry);\n            }\n          }\n        }\n      }\n    };\n    const collectEntryOrArrayEntries = (items) => {\n      if (Array.isArray(items)) {\n        for (const entry of items) {\n          if (isObject(entry)) {\n            toWalk.push(entry);\n          }\n        }\n      } else if (isObject(items)) {\n        toWalk.push(items);\n      }\n    };\n    const toWalk = [root];\n    let next = toWalk.pop();\n    while (next) {\n      if (!seen.has(next)) {\n        seen.add(next);\n        handle(next);\n        collectEntries(next.additionalItems, next.additionalProperties, next.not, next.contains, next.propertyNames, next.if, next.then, next.else, next.unevaluatedItems, next.unevaluatedProperties);\n        collectMapEntries(next.definitions, next.$defs, next.properties, next.patternProperties, next.dependencies, next.dependentSchemas);\n        collectArrayEntries(next.anyOf, next.allOf, next.oneOf, next.prefixItems);\n        collectEntryOrArrayEntries(next.items);\n      }\n      next = toWalk.pop();\n    }\n  }\n  getSchemaFromProperty(resource, document) {\n    if (document.root?.type === \"object\") {\n      for (const p of document.root.properties) {\n        if (p.keyNode.value === \"$schema\" && p.valueNode?.type === \"string\") {\n          let schemaId = p.valueNode.value;\n          if (this.contextService && !/^\\w[\\w\\d+.-]*:/.test(schemaId)) {\n            schemaId = this.contextService.resolveRelativePath(schemaId, resource);\n          }\n          return schemaId;\n        }\n      }\n    }\n    return void 0;\n  }\n  getAssociatedSchemas(resource) {\n    const seen = /* @__PURE__ */ Object.create(null);\n    const schemas = [];\n    const normalizedResource = normalizeResourceForMatching(resource);\n    for (const entry of this.filePatternAssociations) {\n      if (entry.matchesPattern(normalizedResource)) {\n        for (const schemaId of entry.getURIs()) {\n          if (!seen[schemaId]) {\n            schemas.push(schemaId);\n            seen[schemaId] = true;\n          }\n        }\n      }\n    }\n    return schemas;\n  }\n  getSchemaURIsForResource(resource, document) {\n    let schemeId = document && this.getSchemaFromProperty(resource, document);\n    if (schemeId) {\n      return [schemeId];\n    }\n    return this.getAssociatedSchemas(resource);\n  }\n  getSchemaForResource(resource, document) {\n    if (document) {\n      let schemeId = this.getSchemaFromProperty(resource, document);\n      if (schemeId) {\n        const id = normalizeId(schemeId);\n        return this.getOrAddSchemaHandle(id).getResolvedSchema();\n      }\n    }\n    if (this.cachedSchemaForResource && this.cachedSchemaForResource.resource === resource) {\n      return this.cachedSchemaForResource.resolvedSchema;\n    }\n    const schemas = this.getAssociatedSchemas(resource);\n    const resolvedSchema = schemas.length > 0 ? this.createCombinedSchema(resource, schemas).getResolvedSchema() : this.promise.resolve(void 0);\n    this.cachedSchemaForResource = { resource, resolvedSchema };\n    return resolvedSchema;\n  }\n  createCombinedSchema(resource, schemaIds) {\n    if (schemaIds.length === 1) {\n      return this.getOrAddSchemaHandle(schemaIds[0]);\n    } else {\n      const combinedSchemaId = \"schemaservice://combinedSchema/\" + encodeURIComponent(resource);\n      const combinedSchema = {\n        allOf: schemaIds.map((schemaId) => ({ $ref: schemaId }))\n      };\n      return this.addSchemaHandle(combinedSchemaId, combinedSchema);\n    }\n  }\n  getMatchingSchemas(document, jsonDocument, schema) {\n    if (schema) {\n      const id = schema.id || \"schemaservice://untitled/matchingSchemas/\" + idCounter2++;\n      const handle = this.addSchemaHandle(id, schema);\n      return handle.getResolvedSchema().then((resolvedSchema) => {\n        return jsonDocument.getMatchingSchemas(resolvedSchema.schema).filter((s) => !s.inverted);\n      });\n    }\n    return this.getSchemaForResource(document.uri, jsonDocument).then((schema2) => {\n      if (schema2) {\n        return jsonDocument.getMatchingSchemas(schema2.schema).filter((s) => !s.inverted);\n      }\n      return [];\n    });\n  }\n};\nvar idCounter2 = 0;\nfunction normalizeId(id) {\n  try {\n    return URI2.parse(id).toString(true);\n  } catch (e) {\n    return id;\n  }\n}\nfunction normalizeResourceForMatching(resource) {\n  try {\n    return URI2.parse(resource).with({ fragment: null, query: null }).toString(true);\n  } catch (e) {\n    return resource;\n  }\n}\nfunction toDisplayString(url) {\n  try {\n    const uri = URI2.parse(url);\n    if (uri.scheme === \"file\") {\n      return uri.fsPath;\n    }\n  } catch (e) {\n  }\n  return url;\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/services/jsonFolding.js\nfunction getFoldingRanges(document, context) {\n  const ranges = [];\n  const nestingLevels = [];\n  const stack = [];\n  let prevStart = -1;\n  const scanner = createScanner2(document.getText(), false);\n  let token = scanner.scan();\n  function addRange(range) {\n    ranges.push(range);\n    nestingLevels.push(stack.length);\n  }\n  while (token !== 17) {\n    switch (token) {\n      case 1:\n      case 3: {\n        const startLine = document.positionAt(scanner.getTokenOffset()).line;\n        const range = { startLine, endLine: startLine, kind: token === 1 ? \"object\" : \"array\" };\n        stack.push(range);\n        break;\n      }\n      case 2:\n      case 4: {\n        const kind = token === 2 ? \"object\" : \"array\";\n        if (stack.length > 0 && stack[stack.length - 1].kind === kind) {\n          const range = stack.pop();\n          const line = document.positionAt(scanner.getTokenOffset()).line;\n          if (range && line > range.startLine + 1 && prevStart !== range.startLine) {\n            range.endLine = line - 1;\n            addRange(range);\n            prevStart = range.startLine;\n          }\n        }\n        break;\n      }\n      case 13: {\n        const startLine = document.positionAt(scanner.getTokenOffset()).line;\n        const endLine = document.positionAt(scanner.getTokenOffset() + scanner.getTokenLength()).line;\n        if (scanner.getTokenError() === 1 && startLine + 1 < document.lineCount) {\n          scanner.setPosition(document.offsetAt(Position.create(startLine + 1, 0)));\n        } else {\n          if (startLine < endLine) {\n            addRange({ startLine, endLine, kind: FoldingRangeKind.Comment });\n            prevStart = startLine;\n          }\n        }\n        break;\n      }\n      case 12: {\n        const text = document.getText().substr(scanner.getTokenOffset(), scanner.getTokenLength());\n        const m = text.match(/^\\/\\/\\s*#(region\\b)|(endregion\\b)/);\n        if (m) {\n          const line = document.positionAt(scanner.getTokenOffset()).line;\n          if (m[1]) {\n            const range = { startLine: line, endLine: line, kind: FoldingRangeKind.Region };\n            stack.push(range);\n          } else {\n            let i = stack.length - 1;\n            while (i >= 0 && stack[i].kind !== FoldingRangeKind.Region) {\n              i--;\n            }\n            if (i >= 0) {\n              const range = stack[i];\n              stack.length = i;\n              if (line > range.startLine && prevStart !== range.startLine) {\n                range.endLine = line;\n                addRange(range);\n                prevStart = range.startLine;\n              }\n            }\n          }\n        }\n        break;\n      }\n    }\n    token = scanner.scan();\n  }\n  const rangeLimit = context && context.rangeLimit;\n  if (typeof rangeLimit !== \"number\" || ranges.length <= rangeLimit) {\n    return ranges;\n  }\n  if (context && context.onRangeLimitExceeded) {\n    context.onRangeLimitExceeded(document.uri);\n  }\n  const counts = [];\n  for (let level of nestingLevels) {\n    if (level < 30) {\n      counts[level] = (counts[level] || 0) + 1;\n    }\n  }\n  let entries = 0;\n  let maxLevel = 0;\n  for (let i = 0; i < counts.length; i++) {\n    const n = counts[i];\n    if (n) {\n      if (n + entries > rangeLimit) {\n        maxLevel = i;\n        break;\n      }\n      entries += n;\n    }\n  }\n  const result = [];\n  for (let i = 0; i < ranges.length; i++) {\n    const level = nestingLevels[i];\n    if (typeof level === \"number\") {\n      if (level < maxLevel || level === maxLevel && entries++ < rangeLimit) {\n        result.push(ranges[i]);\n      }\n    }\n  }\n  return result;\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/services/jsonSelectionRanges.js\nfunction getSelectionRanges(document, positions, doc) {\n  function getSelectionRange(position) {\n    let offset = document.offsetAt(position);\n    let node = doc.getNodeFromOffset(offset, true);\n    const result = [];\n    while (node) {\n      switch (node.type) {\n        case \"string\":\n        case \"object\":\n        case \"array\":\n          const cStart = node.offset + 1, cEnd = node.offset + node.length - 1;\n          if (cStart < cEnd && offset >= cStart && offset <= cEnd) {\n            result.push(newRange(cStart, cEnd));\n          }\n          result.push(newRange(node.offset, node.offset + node.length));\n          break;\n        case \"number\":\n        case \"boolean\":\n        case \"null\":\n        case \"property\":\n          result.push(newRange(node.offset, node.offset + node.length));\n          break;\n      }\n      if (node.type === \"property\" || node.parent && node.parent.type === \"array\") {\n        const afterCommaOffset = getOffsetAfterNextToken(\n          node.offset + node.length,\n          5\n          /* SyntaxKind.CommaToken */\n        );\n        if (afterCommaOffset !== -1) {\n          result.push(newRange(node.offset, afterCommaOffset));\n        }\n      }\n      node = node.parent;\n    }\n    let current = void 0;\n    for (let index = result.length - 1; index >= 0; index--) {\n      current = SelectionRange.create(result[index], current);\n    }\n    if (!current) {\n      current = SelectionRange.create(Range.create(position, position));\n    }\n    return current;\n  }\n  function newRange(start, end) {\n    return Range.create(document.positionAt(start), document.positionAt(end));\n  }\n  const scanner = createScanner2(document.getText(), true);\n  function getOffsetAfterNextToken(offset, expectedToken) {\n    scanner.setPosition(offset);\n    let token = scanner.scan();\n    if (token === expectedToken) {\n      return scanner.getTokenOffset() + scanner.getTokenLength();\n    }\n    return -1;\n  }\n  return positions.map(getSelectionRange);\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/utils/format.js\nfunction format4(documentToFormat, formattingOptions, formattingRange) {\n  let range = void 0;\n  if (formattingRange) {\n    const offset = documentToFormat.offsetAt(formattingRange.start);\n    const length = documentToFormat.offsetAt(formattingRange.end) - offset;\n    range = { offset, length };\n  }\n  const options = {\n    tabSize: formattingOptions ? formattingOptions.tabSize : 4,\n    insertSpaces: formattingOptions?.insertSpaces === true,\n    insertFinalNewline: formattingOptions?.insertFinalNewline === true,\n    eol: \"\\n\",\n    keepLines: formattingOptions?.keepLines === true\n  };\n  return format2(documentToFormat.getText(), range, options).map((edit) => {\n    return TextEdit.replace(Range.create(documentToFormat.positionAt(edit.offset), documentToFormat.positionAt(edit.offset + edit.length)), edit.content);\n  });\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/utils/propertyTree.js\nvar Container;\n(function(Container2) {\n  Container2[Container2[\"Object\"] = 0] = \"Object\";\n  Container2[Container2[\"Array\"] = 1] = \"Array\";\n})(Container || (Container = {}));\nvar PropertyTree = class {\n  constructor(propertyName, beginningLineNumber) {\n    this.propertyName = propertyName ?? \"\";\n    this.beginningLineNumber = beginningLineNumber;\n    this.childrenProperties = [];\n    this.lastProperty = false;\n    this.noKeyName = false;\n  }\n  addChildProperty(childProperty) {\n    childProperty.parent = this;\n    if (this.childrenProperties.length > 0) {\n      let insertionIndex = 0;\n      if (childProperty.noKeyName) {\n        insertionIndex = this.childrenProperties.length;\n      } else {\n        insertionIndex = binarySearchOnPropertyArray(this.childrenProperties, childProperty, compareProperties);\n      }\n      if (insertionIndex < 0) {\n        insertionIndex = insertionIndex * -1 - 1;\n      }\n      this.childrenProperties.splice(insertionIndex, 0, childProperty);\n    } else {\n      this.childrenProperties.push(childProperty);\n    }\n    return childProperty;\n  }\n};\nfunction compareProperties(propertyTree1, propertyTree2) {\n  const propertyName1 = propertyTree1.propertyName.toLowerCase();\n  const propertyName2 = propertyTree2.propertyName.toLowerCase();\n  if (propertyName1 < propertyName2) {\n    return -1;\n  } else if (propertyName1 > propertyName2) {\n    return 1;\n  }\n  return 0;\n}\nfunction binarySearchOnPropertyArray(propertyTreeArray, propertyTree, compare_fn) {\n  const propertyName = propertyTree.propertyName.toLowerCase();\n  const firstPropertyInArrayName = propertyTreeArray[0].propertyName.toLowerCase();\n  const lastPropertyInArrayName = propertyTreeArray[propertyTreeArray.length - 1].propertyName.toLowerCase();\n  if (propertyName < firstPropertyInArrayName) {\n    return 0;\n  }\n  if (propertyName > lastPropertyInArrayName) {\n    return propertyTreeArray.length;\n  }\n  let m = 0;\n  let n = propertyTreeArray.length - 1;\n  while (m <= n) {\n    let k = n + m >> 1;\n    let cmp = compare_fn(propertyTree, propertyTreeArray[k]);\n    if (cmp > 0) {\n      m = k + 1;\n    } else if (cmp < 0) {\n      n = k - 1;\n    } else {\n      return k;\n    }\n  }\n  return -m - 1;\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/utils/sort.js\nfunction sort(documentToSort, formattingOptions) {\n  const options = {\n    ...formattingOptions,\n    keepLines: false\n    // keepLines must be false so that the properties are on separate lines for the sorting\n  };\n  const formattedJsonString = TextDocument2.applyEdits(documentToSort, format4(documentToSort, options, void 0));\n  const formattedJsonDocument = TextDocument2.create(\"test://test.json\", \"json\", 0, formattedJsonString);\n  const jsonPropertyTree = findJsoncPropertyTree(formattedJsonDocument);\n  const sortedJsonDocument = sortJsoncDocument(formattedJsonDocument, jsonPropertyTree);\n  const edits = format4(sortedJsonDocument, options, void 0);\n  const sortedAndFormattedJsonDocument = TextDocument2.applyEdits(sortedJsonDocument, edits);\n  return [TextEdit.replace(Range.create(Position.create(0, 0), documentToSort.positionAt(documentToSort.getText().length)), sortedAndFormattedJsonDocument)];\n}\nfunction findJsoncPropertyTree(formattedDocument) {\n  const formattedString = formattedDocument.getText();\n  const scanner = createScanner2(formattedString, false);\n  let rootTree = new PropertyTree();\n  let currentTree = rootTree;\n  let currentProperty = rootTree;\n  let lastProperty = rootTree;\n  let token = void 0;\n  let lastTokenLine = 0;\n  let numberOfCharactersOnPreviousLines = 0;\n  let lastNonTriviaNonCommentToken = void 0;\n  let secondToLastNonTriviaNonCommentToken = void 0;\n  let lineOfLastNonTriviaNonCommentToken = -1;\n  let endIndexOfLastNonTriviaNonCommentToken = -1;\n  let beginningLineNumber = 0;\n  let endLineNumber = 0;\n  let currentContainerStack = [];\n  let updateLastPropertyEndLineNumber = false;\n  let updateBeginningLineNumber = false;\n  while ((token = scanner.scan()) !== 17) {\n    if (updateLastPropertyEndLineNumber === true && token !== 14 && token !== 15 && token !== 12 && token !== 13 && currentProperty.endLineNumber === void 0) {\n      let endLineNumber2 = scanner.getTokenStartLine();\n      if (secondToLastNonTriviaNonCommentToken === 2 || secondToLastNonTriviaNonCommentToken === 4) {\n        lastProperty.endLineNumber = endLineNumber2 - 1;\n      } else {\n        currentProperty.endLineNumber = endLineNumber2 - 1;\n      }\n      beginningLineNumber = endLineNumber2;\n      updateLastPropertyEndLineNumber = false;\n    }\n    if (updateBeginningLineNumber === true && token !== 14 && token !== 15 && token !== 12 && token !== 13) {\n      beginningLineNumber = scanner.getTokenStartLine();\n      updateBeginningLineNumber = false;\n    }\n    if (scanner.getTokenStartLine() !== lastTokenLine) {\n      for (let i = lastTokenLine; i < scanner.getTokenStartLine(); i++) {\n        const lengthOfLine = formattedDocument.getText(Range.create(Position.create(i, 0), Position.create(i + 1, 0))).length;\n        numberOfCharactersOnPreviousLines = numberOfCharactersOnPreviousLines + lengthOfLine;\n      }\n      lastTokenLine = scanner.getTokenStartLine();\n    }\n    switch (token) {\n      case 10: {\n        if (lastNonTriviaNonCommentToken === void 0 || lastNonTriviaNonCommentToken === 1 || lastNonTriviaNonCommentToken === 5 && currentContainerStack[currentContainerStack.length - 1] === Container.Object) {\n          const childProperty = new PropertyTree(scanner.getTokenValue(), beginningLineNumber);\n          lastProperty = currentProperty;\n          currentProperty = currentTree.addChildProperty(childProperty);\n        }\n        break;\n      }\n      case 3: {\n        if (rootTree.beginningLineNumber === void 0) {\n          rootTree.beginningLineNumber = scanner.getTokenStartLine();\n        }\n        if (currentContainerStack[currentContainerStack.length - 1] === Container.Object) {\n          currentTree = currentProperty;\n        } else if (currentContainerStack[currentContainerStack.length - 1] === Container.Array) {\n          const childProperty = new PropertyTree(scanner.getTokenValue(), beginningLineNumber);\n          childProperty.noKeyName = true;\n          lastProperty = currentProperty;\n          currentProperty = currentTree.addChildProperty(childProperty);\n          currentTree = currentProperty;\n        }\n        currentContainerStack.push(Container.Array);\n        currentProperty.type = Container.Array;\n        beginningLineNumber = scanner.getTokenStartLine();\n        beginningLineNumber++;\n        break;\n      }\n      case 1: {\n        if (rootTree.beginningLineNumber === void 0) {\n          rootTree.beginningLineNumber = scanner.getTokenStartLine();\n        } else if (currentContainerStack[currentContainerStack.length - 1] === Container.Array) {\n          const childProperty = new PropertyTree(scanner.getTokenValue(), beginningLineNumber);\n          childProperty.noKeyName = true;\n          lastProperty = currentProperty;\n          currentProperty = currentTree.addChildProperty(childProperty);\n        }\n        currentProperty.type = Container.Object;\n        currentContainerStack.push(Container.Object);\n        currentTree = currentProperty;\n        beginningLineNumber = scanner.getTokenStartLine();\n        beginningLineNumber++;\n        break;\n      }\n      case 4: {\n        endLineNumber = scanner.getTokenStartLine();\n        currentContainerStack.pop();\n        if (currentProperty.endLineNumber === void 0 && (lastNonTriviaNonCommentToken === 2 || lastNonTriviaNonCommentToken === 4)) {\n          currentProperty.endLineNumber = endLineNumber - 1;\n          currentProperty.lastProperty = true;\n          currentProperty.lineWhereToAddComma = lineOfLastNonTriviaNonCommentToken;\n          currentProperty.indexWhereToAddComa = endIndexOfLastNonTriviaNonCommentToken;\n          lastProperty = currentProperty;\n          currentProperty = currentProperty ? currentProperty.parent : void 0;\n          currentTree = currentProperty;\n        }\n        rootTree.endLineNumber = endLineNumber;\n        beginningLineNumber = endLineNumber + 1;\n        break;\n      }\n      case 2: {\n        endLineNumber = scanner.getTokenStartLine();\n        currentContainerStack.pop();\n        if (lastNonTriviaNonCommentToken !== 1) {\n          if (currentProperty.endLineNumber === void 0) {\n            currentProperty.endLineNumber = endLineNumber - 1;\n            currentProperty.lastProperty = true;\n            currentProperty.lineWhereToAddComma = lineOfLastNonTriviaNonCommentToken;\n            currentProperty.indexWhereToAddComa = endIndexOfLastNonTriviaNonCommentToken;\n          }\n          lastProperty = currentProperty;\n          currentProperty = currentProperty ? currentProperty.parent : void 0;\n          currentTree = currentProperty;\n        }\n        rootTree.endLineNumber = scanner.getTokenStartLine();\n        beginningLineNumber = endLineNumber + 1;\n        break;\n      }\n      case 5: {\n        endLineNumber = scanner.getTokenStartLine();\n        if (currentProperty.endLineNumber === void 0 && (currentContainerStack[currentContainerStack.length - 1] === Container.Object || currentContainerStack[currentContainerStack.length - 1] === Container.Array && (lastNonTriviaNonCommentToken === 2 || lastNonTriviaNonCommentToken === 4))) {\n          currentProperty.endLineNumber = endLineNumber;\n          currentProperty.commaIndex = scanner.getTokenOffset() - numberOfCharactersOnPreviousLines;\n          currentProperty.commaLine = endLineNumber;\n        }\n        if (lastNonTriviaNonCommentToken === 2 || lastNonTriviaNonCommentToken === 4) {\n          lastProperty = currentProperty;\n          currentProperty = currentProperty ? currentProperty.parent : void 0;\n          currentTree = currentProperty;\n        }\n        beginningLineNumber = endLineNumber + 1;\n        break;\n      }\n      case 13: {\n        if (lastNonTriviaNonCommentToken === 5 && lineOfLastNonTriviaNonCommentToken === scanner.getTokenStartLine() && (currentContainerStack[currentContainerStack.length - 1] === Container.Array && (secondToLastNonTriviaNonCommentToken === 2 || secondToLastNonTriviaNonCommentToken === 4) || currentContainerStack[currentContainerStack.length - 1] === Container.Object)) {\n          if (currentContainerStack[currentContainerStack.length - 1] === Container.Array && (secondToLastNonTriviaNonCommentToken === 2 || secondToLastNonTriviaNonCommentToken === 4) || currentContainerStack[currentContainerStack.length - 1] === Container.Object) {\n            currentProperty.endLineNumber = void 0;\n            updateLastPropertyEndLineNumber = true;\n          }\n        }\n        if ((lastNonTriviaNonCommentToken === 1 || lastNonTriviaNonCommentToken === 3) && lineOfLastNonTriviaNonCommentToken === scanner.getTokenStartLine()) {\n          updateBeginningLineNumber = true;\n        }\n        break;\n      }\n    }\n    if (token !== 14 && token !== 13 && token !== 12 && token !== 15) {\n      secondToLastNonTriviaNonCommentToken = lastNonTriviaNonCommentToken;\n      lastNonTriviaNonCommentToken = token;\n      lineOfLastNonTriviaNonCommentToken = scanner.getTokenStartLine();\n      endIndexOfLastNonTriviaNonCommentToken = scanner.getTokenOffset() + scanner.getTokenLength() - numberOfCharactersOnPreviousLines;\n    }\n  }\n  return rootTree;\n}\nfunction sortJsoncDocument(jsonDocument, propertyTree) {\n  if (propertyTree.childrenProperties.length === 0) {\n    return jsonDocument;\n  }\n  const sortedJsonDocument = TextDocument2.create(\"test://test.json\", \"json\", 0, jsonDocument.getText());\n  const queueToSort = [];\n  updateSortingQueue(queueToSort, propertyTree, propertyTree.beginningLineNumber);\n  while (queueToSort.length > 0) {\n    const dataToSort = queueToSort.shift();\n    const propertyTreeArray = dataToSort.propertyTreeArray;\n    let beginningLineNumber = dataToSort.beginningLineNumber;\n    for (let i = 0; i < propertyTreeArray.length; i++) {\n      const propertyTree2 = propertyTreeArray[i];\n      const range = Range.create(Position.create(propertyTree2.beginningLineNumber, 0), Position.create(propertyTree2.endLineNumber + 1, 0));\n      const jsonContentToReplace = jsonDocument.getText(range);\n      const jsonDocumentToReplace = TextDocument2.create(\"test://test.json\", \"json\", 0, jsonContentToReplace);\n      if (propertyTree2.lastProperty === true && i !== propertyTreeArray.length - 1) {\n        const lineWhereToAddComma = propertyTree2.lineWhereToAddComma - propertyTree2.beginningLineNumber;\n        const indexWhereToAddComma = propertyTree2.indexWhereToAddComa;\n        const edit2 = {\n          range: Range.create(Position.create(lineWhereToAddComma, indexWhereToAddComma), Position.create(lineWhereToAddComma, indexWhereToAddComma)),\n          text: \",\"\n        };\n        TextDocument2.update(jsonDocumentToReplace, [edit2], 1);\n      } else if (propertyTree2.lastProperty === false && i === propertyTreeArray.length - 1) {\n        const commaIndex = propertyTree2.commaIndex;\n        const commaLine = propertyTree2.commaLine;\n        const lineWhereToRemoveComma = commaLine - propertyTree2.beginningLineNumber;\n        const edit2 = {\n          range: Range.create(Position.create(lineWhereToRemoveComma, commaIndex), Position.create(lineWhereToRemoveComma, commaIndex + 1)),\n          text: \"\"\n        };\n        TextDocument2.update(jsonDocumentToReplace, [edit2], 1);\n      }\n      const length = propertyTree2.endLineNumber - propertyTree2.beginningLineNumber + 1;\n      const edit = {\n        range: Range.create(Position.create(beginningLineNumber, 0), Position.create(beginningLineNumber + length, 0)),\n        text: jsonDocumentToReplace.getText()\n      };\n      TextDocument2.update(sortedJsonDocument, [edit], 1);\n      updateSortingQueue(queueToSort, propertyTree2, beginningLineNumber);\n      beginningLineNumber = beginningLineNumber + length;\n    }\n  }\n  return sortedJsonDocument;\n}\nfunction updateSortingQueue(queue, propertyTree, beginningLineNumber) {\n  if (propertyTree.childrenProperties.length === 0) {\n    return;\n  }\n  if (propertyTree.type === Container.Object) {\n    let minimumBeginningLineNumber = Infinity;\n    for (const childProperty of propertyTree.childrenProperties) {\n      if (childProperty.beginningLineNumber < minimumBeginningLineNumber) {\n        minimumBeginningLineNumber = childProperty.beginningLineNumber;\n      }\n    }\n    const diff = minimumBeginningLineNumber - propertyTree.beginningLineNumber;\n    beginningLineNumber = beginningLineNumber + diff;\n    queue.push(new SortingRange(beginningLineNumber, propertyTree.childrenProperties));\n  } else if (propertyTree.type === Container.Array) {\n    updateSortingQueueForArrayProperties(queue, propertyTree, beginningLineNumber);\n  }\n}\nfunction updateSortingQueueForArrayProperties(queue, propertyTree, beginningLineNumber) {\n  for (const subObject of propertyTree.childrenProperties) {\n    if (subObject.type === Container.Object) {\n      let minimumBeginningLineNumber = Infinity;\n      for (const childProperty of subObject.childrenProperties) {\n        if (childProperty.beginningLineNumber < minimumBeginningLineNumber) {\n          minimumBeginningLineNumber = childProperty.beginningLineNumber;\n        }\n      }\n      const diff = minimumBeginningLineNumber - subObject.beginningLineNumber;\n      queue.push(new SortingRange(beginningLineNumber + subObject.beginningLineNumber - propertyTree.beginningLineNumber + diff, subObject.childrenProperties));\n    }\n    if (subObject.type === Container.Array) {\n      updateSortingQueueForArrayProperties(queue, subObject, beginningLineNumber + subObject.beginningLineNumber - propertyTree.beginningLineNumber);\n    }\n  }\n}\nvar SortingRange = class {\n  constructor(beginningLineNumber, propertyTreeArray) {\n    this.beginningLineNumber = beginningLineNumber;\n    this.propertyTreeArray = propertyTreeArray;\n  }\n};\n\n// node_modules/vscode-json-languageservice/lib/esm/services/jsonLinks.js\nfunction findLinks(document, doc) {\n  const links = [];\n  doc.visit((node) => {\n    if (node.type === \"property\" && node.keyNode.value === \"$ref\" && node.valueNode?.type === \"string\") {\n      const path = node.valueNode.value;\n      const targetNode = findTargetNode(doc, path);\n      if (targetNode) {\n        const targetPos = document.positionAt(targetNode.offset);\n        links.push({\n          target: `${document.uri}#${targetPos.line + 1},${targetPos.character + 1}`,\n          range: createRange(document, node.valueNode)\n        });\n      }\n    }\n    return true;\n  });\n  return Promise.resolve(links);\n}\nfunction createRange(document, node) {\n  return Range.create(document.positionAt(node.offset + 1), document.positionAt(node.offset + node.length - 1));\n}\nfunction findTargetNode(doc, path) {\n  const tokens = parseJSONPointer(path);\n  if (!tokens) {\n    return null;\n  }\n  return findNode(tokens, doc.root);\n}\nfunction findNode(pointer, node) {\n  if (!node) {\n    return null;\n  }\n  if (pointer.length === 0) {\n    return node;\n  }\n  const token = pointer.shift();\n  if (node && node.type === \"object\") {\n    const propertyNode = node.properties.find((propertyNode2) => propertyNode2.keyNode.value === token);\n    if (!propertyNode) {\n      return null;\n    }\n    return findNode(pointer, propertyNode.valueNode);\n  } else if (node && node.type === \"array\") {\n    if (token.match(/^(0|[1-9][0-9]*)$/)) {\n      const index = Number.parseInt(token);\n      const arrayItem = node.items[index];\n      if (!arrayItem) {\n        return null;\n      }\n      return findNode(pointer, arrayItem);\n    }\n  }\n  return null;\n}\nfunction parseJSONPointer(path) {\n  if (path === \"#\") {\n    return [];\n  }\n  if (path[0] !== \"#\" || path[1] !== \"/\") {\n    return null;\n  }\n  return path.substring(2).split(/\\//).map(unescape);\n}\nfunction unescape(str) {\n  return str.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/jsonLanguageService.js\nfunction getLanguageService(params) {\n  const promise = params.promiseConstructor || Promise;\n  const jsonSchemaService = new JSONSchemaService(params.schemaRequestService, params.workspaceContext, promise);\n  jsonSchemaService.setSchemaContributions(schemaContributions);\n  const jsonCompletion = new JSONCompletion(jsonSchemaService, params.contributions, promise, params.clientCapabilities);\n  const jsonHover = new JSONHover(jsonSchemaService, params.contributions, promise);\n  const jsonDocumentSymbols = new JSONDocumentSymbols(jsonSchemaService);\n  const jsonValidation = new JSONValidation(jsonSchemaService, promise);\n  return {\n    configure: (settings) => {\n      jsonSchemaService.clearExternalSchemas();\n      settings.schemas?.forEach(jsonSchemaService.registerExternalSchema.bind(jsonSchemaService));\n      jsonValidation.configure(settings);\n    },\n    resetSchema: (uri) => jsonSchemaService.onResourceChange(uri),\n    doValidation: jsonValidation.doValidation.bind(jsonValidation),\n    getLanguageStatus: jsonValidation.getLanguageStatus.bind(jsonValidation),\n    parseJSONDocument: (document) => parse3(document, { collectComments: true }),\n    newJSONDocument: (root, diagnostics) => newJSONDocument(root, diagnostics),\n    getMatchingSchemas: jsonSchemaService.getMatchingSchemas.bind(jsonSchemaService),\n    doResolve: jsonCompletion.doResolve.bind(jsonCompletion),\n    doComplete: jsonCompletion.doComplete.bind(jsonCompletion),\n    findDocumentSymbols: jsonDocumentSymbols.findDocumentSymbols.bind(jsonDocumentSymbols),\n    findDocumentSymbols2: jsonDocumentSymbols.findDocumentSymbols2.bind(jsonDocumentSymbols),\n    findDocumentColors: jsonDocumentSymbols.findDocumentColors.bind(jsonDocumentSymbols),\n    getColorPresentations: jsonDocumentSymbols.getColorPresentations.bind(jsonDocumentSymbols),\n    doHover: jsonHover.doHover.bind(jsonHover),\n    getFoldingRanges,\n    getSelectionRanges,\n    findDefinition: () => Promise.resolve([]),\n    findLinks,\n    format: (document, range, options) => format4(document, options, range),\n    sort: (document, options) => sort(document, options)\n  };\n}\n\n// src/language/json/jsonWorker.ts\nvar defaultSchemaRequestService;\nif (typeof fetch !== \"undefined\") {\n  defaultSchemaRequestService = function(url) {\n    return fetch(url).then((response) => response.text());\n  };\n}\nvar JSONWorker = class {\n  constructor(ctx, createData) {\n    this._ctx = ctx;\n    this._languageSettings = createData.languageSettings;\n    this._languageId = createData.languageId;\n    this._languageService = getLanguageService({\n      workspaceContext: {\n        resolveRelativePath: (relativePath, resource) => {\n          const base = resource.substr(0, resource.lastIndexOf(\"/\") + 1);\n          return resolvePath(base, relativePath);\n        }\n      },\n      schemaRequestService: createData.enableSchemaRequest ? defaultSchemaRequestService : void 0,\n      clientCapabilities: ClientCapabilities.LATEST\n    });\n    this._languageService.configure(this._languageSettings);\n  }\n  async doValidation(uri) {\n    let document = this._getTextDocument(uri);\n    if (document) {\n      let jsonDocument = this._languageService.parseJSONDocument(document);\n      return this._languageService.doValidation(document, jsonDocument, this._languageSettings);\n    }\n    return Promise.resolve([]);\n  }\n  async doComplete(uri, position) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return null;\n    }\n    let jsonDocument = this._languageService.parseJSONDocument(document);\n    return this._languageService.doComplete(document, position, jsonDocument);\n  }\n  async doResolve(item) {\n    return this._languageService.doResolve(item);\n  }\n  async doHover(uri, position) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return null;\n    }\n    let jsonDocument = this._languageService.parseJSONDocument(document);\n    return this._languageService.doHover(document, position, jsonDocument);\n  }\n  async format(uri, range, options) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return [];\n    }\n    let textEdits = this._languageService.format(document, range, options);\n    return Promise.resolve(textEdits);\n  }\n  async resetSchema(uri) {\n    return Promise.resolve(this._languageService.resetSchema(uri));\n  }\n  async findDocumentSymbols(uri) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return [];\n    }\n    let jsonDocument = this._languageService.parseJSONDocument(document);\n    let symbols = this._languageService.findDocumentSymbols2(document, jsonDocument);\n    return Promise.resolve(symbols);\n  }\n  async findDocumentColors(uri) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return [];\n    }\n    let jsonDocument = this._languageService.parseJSONDocument(document);\n    let colorSymbols = this._languageService.findDocumentColors(document, jsonDocument);\n    return Promise.resolve(colorSymbols);\n  }\n  async getColorPresentations(uri, color, range) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return [];\n    }\n    let jsonDocument = this._languageService.parseJSONDocument(document);\n    let colorPresentations = this._languageService.getColorPresentations(\n      document,\n      jsonDocument,\n      color,\n      range\n    );\n    return Promise.resolve(colorPresentations);\n  }\n  async getFoldingRanges(uri, context) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return [];\n    }\n    let ranges = this._languageService.getFoldingRanges(document, context);\n    return Promise.resolve(ranges);\n  }\n  async getSelectionRanges(uri, positions) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return [];\n    }\n    let jsonDocument = this._languageService.parseJSONDocument(document);\n    let ranges = this._languageService.getSelectionRanges(document, positions, jsonDocument);\n    return Promise.resolve(ranges);\n  }\n  async parseJSONDocument(uri) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return null;\n    }\n    let jsonDocument = this._languageService.parseJSONDocument(document);\n    return Promise.resolve(jsonDocument);\n  }\n  async getMatchingSchemas(uri) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return [];\n    }\n    let jsonDocument = this._languageService.parseJSONDocument(document);\n    return Promise.resolve(this._languageService.getMatchingSchemas(document, jsonDocument));\n  }\n  _getTextDocument(uri) {\n    let models = this._ctx.getMirrorModels();\n    for (let model of models) {\n      if (model.uri.toString() === uri) {\n        return TextDocument2.create(\n          uri,\n          this._languageId,\n          model.version,\n          model.getValue()\n        );\n      }\n    }\n    return null;\n  }\n};\nvar Slash = \"/\".charCodeAt(0);\nvar Dot = \".\".charCodeAt(0);\nfunction isAbsolutePath(path) {\n  return path.charCodeAt(0) === Slash;\n}\nfunction resolvePath(uriString, path) {\n  if (isAbsolutePath(path)) {\n    const uri = URI2.parse(uriString);\n    const parts = path.split(\"/\");\n    return uri.with({ path: normalizePath(parts) }).toString();\n  }\n  return joinPath(uriString, path);\n}\nfunction normalizePath(parts) {\n  const newParts = [];\n  for (const part of parts) {\n    if (part.length === 0 || part.length === 1 && part.charCodeAt(0) === Dot) {\n    } else if (part.length === 2 && part.charCodeAt(0) === Dot && part.charCodeAt(1) === Dot) {\n      newParts.pop();\n    } else {\n      newParts.push(part);\n    }\n  }\n  if (parts.length > 1 && parts[parts.length - 1].length === 0) {\n    newParts.push(\"\");\n  }\n  let res = newParts.join(\"/\");\n  if (parts[0].length === 0) {\n    res = \"/\" + res;\n  }\n  return res;\n}\nfunction joinPath(uriString, ...paths) {\n  const uri = URI2.parse(uriString);\n  const parts = uri.path.split(\"/\");\n  for (let path of paths) {\n    parts.push(...path.split(\"/\"));\n  }\n  return uri.with({ path: normalizePath(parts) }).toString();\n}\n\n// src/language/json/json.worker.ts\nself.onmessage = () => {\n  worker.initialize((ctx, createData) => {\n    return new JSONWorker(ctx, createData);\n  });\n};\n"],"names":["tail","array","n","length","tail2","arr","Error","slice","equals","one","other","itemEquals","a","b","i","len","removeFastWithoutKeepingOrder","index","last","pop","binarySearch","key","comparator","binarySearch2","compareToKey","low","high","mid","comp","quickSelect","nth","data","compare","TypeError","pivotValue","Math","floor","random","lower","higher","pivots","value","val","push","groupBy","result","currentGroup","element","sort","groupAdjacentBy","items","shouldBeGrouped","item","undefined","forEachAdjacent","f","forEachWithNeighbors","coalesce","filter","e","coalesceInPlace","to","isFalsyOrEmpty","obj","Array","isArray","isNonEmptyArray","distinct","keyFn","seen","Set","has","add","firstOrDefault","notFoundValue","range","arg","from","arrayInsert","target","insertIndex","insertArr","before","after","concat","pushToStart","indexOf","splice","unshift","pushToEnd","pushMany","asArray","x","insertInto","start","newItems","startIdx","getActualStartIndex","originalLength","newItemsLength","deleteCount","max","min","CompareResult","compareBy","selector","tieBreakComparators","comparators","item1","item2","isNeitherLessOrGreaterThan","neitherLessOrGreaterThan","isLessThan","isLessThanOrEqual","isGreaterThan","greaterThan","lessThan","numberComparator","booleanComparator","reverseOrder","ArrayQueue","constructor","this","firstIdx","lastIdx","takeWhile","predicate","takeFromEndWhile","endIdx","peek","dequeue","takeCount","count","CallbackIterable","empty","_callback","iterate","toArray","cb","map","mapFn","findLast","findLastMaxBy","first","Permutation","_indexMap","createSortPermutation","compareFn","sortIndices","keys","index1","index2","apply","_","inverse","inverseIndexMap","idx","findLastIdx","fromIndex","findLastMonotonous","findLastIdxMonotonous","endIdxEx","j","k","findFirstMonotonous","findFirstIdxMonotonousOrArrLen","MonotonousArray","assertInvariants","_array","_findLastMonotonousLastIdx","_prevFindLastPredicate","findFirstMax","findLastMax","findFirstMin","findMaxIdx","maxIdx","mapFindFirst","mapped","ok","message","assertNever","softAssert","condition","onUnexpectedError","BugIndicatingError","assertFn","checkAdjacentItems","isThenable","then","createCancelablePromise","callback","source","CancellationTokenSource","thenable","token","promise","Promise","resolve","reject","subscription","onCancellationRequested","dispose","CancellationError","err","cancel","onfinally","finally","raceCancellation","defaultValue","ref","Throttler","isDisposed","activePromise","queuedPromise","queuedPromiseFactory","queue","promiseFactory","onComplete","Delayer","defaultDelay","deferred","completionPromise","doResolve","doReject","task","trigger","delay","cancelTimeout","fn","MicrotaskDelay","scheduled","queueMicrotask","isTriggered","microtaskDeferred","timeout","handle","setTimeout","clearTimeout","timeoutDeferred","ThrottledDelayer","delayer","throttler","millis","disposable","disposableTimeout","handler","store","timer","toDisposable","deleteAndLeak","promiseFactories","shouldStop","t","loop","factory","TimeoutTimer","runner","_isDisposed","_token","setIfNotSet","cancelAndSet","IntervalTimer","interval","context","globalThis","setInterval","clearInterval","RunOnceScheduler","timeoutToken","timeoutHandler","onTimeout","bind","isScheduled","schedule","doRun","runWhenGlobalIdle","_runWhenIdle","requestIdleCallback","cancelIdleCallback","_targetWindow","setTimeout0","disposed","end","Date","now","deadline","didTimeout","timeRemaining","Object","freeze","targetWindow","AbstractIdleValue","executor","_didRun","_executor","_value","_error","_handle","isInitialized","GlobalIdleValue","super","DeferredPromise","isRejected","outcome","isSettled","p","c","completeCallback","errorCallback","complete","error","Promises","settled","async","promises","firstError","all","withAsyncBody","bodyFn","AsyncIterableObject","fromArray","writer","emitMany","fromPromise","emitter","fromPromises","emitOne","merge","iterables","iterable","EMPTY","onReturn","_state","_results","_onReturn","_onStateChanged","Emitter","Symbol","asyncIterator","next","done","Event","toPromise","event","return","filterFn","fire","values","CancelableAsyncIterableObject","_source","createCancelableAsyncIterable","innerIterable","isCancellationRequested","hasBuffer","Buffer","Lazy","Uint8Array","textDecoder","VSBuffer","wrap","actual","isBuffer","buffer","byteOffset","byteLength","toString","TextDecoder","decode","readUInt16LE","offset","writeUInt16LE","destination","readUInt32BE","writeUInt32BE","readUInt8","writeUInt8","identity","LRUCachedFunction","arg1","arg2","lastCache","lastArgKey","_fn","_computeKey","getCacheKey","get","CachedFunction","cachedValues","_map","Map","_map2","set","shortcutEvent","CancellationToken","isCancellationToken","thing","None","Cancelled","MutableToken","_isCancelled","_emitter","parent","_parentListener","cancelOnDispose","codiconsDerived","dialogError","register","dialogWarning","dialogInfo","dialogClose","treeItemExpanded","treeFilterOnTypeOn","treeFilterOnTypeOff","treeFilterClear","treeItemLoading","menuSelection","menuSubmenu","menuBarMore","scrollbarButtonLeft","scrollbarButtonRight","scrollbarButtonUp","scrollbarButtonDown","toolBarMore","quickInputBack","dropDownButton","symbolCustomColor","exportIcon","workspaceUnspecified","newLine","thumbsDownFilled","thumbsUpFilled","gitFetch","lightbulbSparkleAutofix","debugBreakpointPending","Codicon","codiconsLibrary","plus","gistNew","repoCreate","lightbulb","lightBulb","repo","repoDelete","gistFork","repoForked","gitPullRequest","gitPullRequestAbandoned","recordKeys","keyboard","tag","gitPullRequestLabel","tagAdd","tagRemove","person","personFollow","personOutline","personFilled","gitBranch","gitBranchCreate","gitBranchDelete","sourceControl","mirror","mirrorPublic","star","starAdd","starDelete","starEmpty","comment","commentAdd","alert","warning","search","searchSave","logOut","signOut","logIn","signIn","eye","eyeUnwatch","eyeWatch","circleFilled","primitiveDot","closeDirty","debugBreakpoint","debugBreakpointDisabled","debugHint","terminalDecorationSuccess","primitiveSquare","edit","pencil","info","issueOpened","gistPrivate","gitForkPrivate","lock","mirrorPrivate","close","removeClose","repoSync","sync","clone","desktopDownload","beaker","microscope","vm","deviceDesktop","file","fileText","more","ellipsis","kebabHorizontal","mailReply","reply","organization","organizationFilled","organizationOutline","newFile","fileAdd","newFolder","fileDirectoryCreate","trash","trashcan","history","clock","folder","fileDirectory","symbolFolder","logoGithub","markGithub","github","terminal","console","repl","zap","symbolEvent","stop","variable","symbolVariable","symbolArray","symbolModule","symbolPackage","symbolNamespace","symbolObject","symbolMethod","symbolFunction","symbolConstructor","symbolBoolean","symbolNull","symbolNumeric","symbolNumber","symbolStructure","symbolStruct","symbolParameter","symbolTypeParameter","symbolKey","symbolText","symbolReference","goToFile","symbolEnum","symbolValue","symbolRuler","symbolUnit","activateBreakpoints","archive","arrowBoth","arrowDown","arrowLeft","arrowRight","arrowSmallDown","arrowSmallLeft","arrowSmallRight","arrowSmallUp","arrowUp","bell","bold","book","bookmark","debugBreakpointConditionalUnverified","debugBreakpointConditional","debugBreakpointConditionalDisabled","debugBreakpointDataUnverified","debugBreakpointData","debugBreakpointDataDisabled","debugBreakpointLogUnverified","debugBreakpointLog","debugBreakpointLogDisabled","briefcase","broadcast","browser","bug","calendar","caseSensitive","check","checklist","chevronDown","chevronLeft","chevronRight","chevronUp","chromeClose","chromeMaximize","chromeMinimize","chromeRestore","circleOutline","circle","debugBreakpointUnverified","terminalDecorationIncomplete","circleSlash","circuitBoard","clearAll","clippy","closeAll","cloudDownload","cloudUpload","code","collapseAll","colorMode","commentDiscussion","creditCard","dash","dashboard","database","debugContinue","debugDisconnect","debugPause","debugRestart","debugStart","debugStepInto","debugStepOut","debugStepOver","debugStop","debug","deviceCameraVideo","deviceCamera","deviceMobile","diffAdded","diffIgnored","diffModified","diffRemoved","diffRenamed","diff","diffSidebyside","discard","editorLayout","emptyWindow","exclude","extensions","eyeClosed","fileBinary","fileCode","fileMedia","filePdf","fileSubmodule","fileSymlinkDirectory","fileSymlinkFile","fileZip","files","flame","foldDown","foldUp","fold","folderActive","folderOpened","gear","gift","gistSecret","gist","gitCommit","gitCompare","compareChanges","gitMerge","githubAction","githubAlt","globe","grabber","graph","gripper","heart","home","horizontalRule","hubot","inbox","issueReopened","issues","italic","jersey","json","kebabVertical","law","lightbulbAutofix","linkExternal","link","listOrdered","listUnordered","liveShare","loading","location","mailRead","mail","markdown","megaphone","mention","milestone","gitPullRequestMilestone","mortarBoard","move","multipleWindows","mute","noNewline","note","octoface","openPreview","package","paintcan","pin","play","run","plug","preserveCase","preview","project","pulse","question","quote","radioTower","reactions","references","refresh","regex","remoteExplorer","remote","remove","replaceAll","replace","repoClone","repoForcePush","repoPull","repoPush","report","requestChanges","rocket","rootFolderOpened","rootFolder","rss","ruby","saveAll","saveAs","save","screenFull","screenNormal","searchStop","server","settingsGear","settings","shield","smiley","sortPrecedence","splitHorizontal","splitVertical","squirrel","starFull","starHalf","symbolClass","symbolColor","symbolConstant","symbolEnumMember","symbolField","symbolFile","symbolInterface","symbolKeyword","symbolMisc","symbolOperator","symbolProperty","wrench","wrenchSubaction","symbolSnippet","tasklist","telescope","textSize","threeBars","thumbsdown","thumbsup","tools","triangleDown","triangleLeft","triangleRight","triangleUp","twitter","unfold","unlock","unmute","unverified","verified","versions","vmActive","vmOutline","vmRunning","watch","whitespace","wholeWord","window","wordWrap","zoomIn","zoomOut","listFilter","listFlat","listSelection","selection","listTree","debugBreakpointFunctionUnverified","debugBreakpointFunction","debugBreakpointFunctionDisabled","debugStackframeActive","circleSmallFilled","debugStackframeDot","terminalDecorationMark","debugStackframe","debugStackframeFocused","debugBreakpointUnsupported","symbolString","debugReverseContinue","debugStepBack","debugRestartFrame","debugAlt","callIncoming","callOutgoing","menu","expandAll","feedback","gitPullRequestReviewer","groupByRefType","ungroupByRefType","account","gitPullRequestAssignee","bellDot","debugConsole","library","output","runAll","syncIgnored","pinned","githubInverted","serverProcess","serverEnvironment","pass","issueClosed","stopCircle","playCircle","record","debugAltSmall","vmConnect","cloud","export","graphLeft","magnet","notebook","redo","checkAll","pinnedDirty","passFilled","circleLargeFilled","circleLarge","circleLargeOutline","combine","gather","table","variableGroup","typeHierarchy","typeHierarchySub","typeHierarchySuper","gitPullRequestCreate","runAbove","runBelow","notebookTemplate","debugRerun","workspaceTrusted","workspaceUntrusted","workspaceUnknown","terminalCmd","terminalDebian","terminalLinux","terminalPowershell","terminalTmux","terminalUbuntu","terminalBash","arrowSwap","copy","personAdd","filterFilled","wand","debugLineByLine","inspect","layers","layersDot","layersActive","compass","compassDot","compassActive","azure","issueDraft","gitPullRequestClosed","gitPullRequestDraft","debugAll","debugCoverage","runErrors","folderLibrary","debugContinueSmall","beakerStop","graphLine","graphScatter","pieChart","bracket","bracketDot","bracketError","lockSmall","azureDevops","verifiedFilled","newline","layout","layoutActivitybarLeft","layoutActivitybarRight","layoutPanelLeft","layoutPanelCenter","layoutPanelJustify","layoutPanelRight","layoutPanel","layoutSidebarLeft","layoutSidebarRight","layoutStatusbar","layoutMenubar","layoutCentered","indent","recordSmall","errorSmall","terminalDecorationError","arrowCircleDown","arrowCircleLeft","arrowCircleRight","arrowCircleUp","layoutSidebarRightOff","layoutPanelOff","layoutSidebarLeftOff","blank","heartFilled","mapHorizontal","foldHorizontal","mapFilled","mapHorizontalFilled","foldHorizontalFilled","circleSmall","bellSlash","bellSlashDot","commentUnresolved","gitPullRequestGoToChanges","gitPullRequestNewChanges","searchFuzzy","commentDraft","send","sparkle","insert","mic","thumbsdownFilled","thumbsupFilled","coffee","snake","game","vr","chip","piano","music","micFilled","repoFetch","copilot","lightbulbSparkle","robot","sparkleFilled","diffSingle","diffMultiple","surroundWith","share","gitStash","gitStashApply","gitStashPop","vscode","vscodeInsiders","codeOss","runCoverage","runAllCoverage","coverage","githubProject","mapVertical","foldVertical","mapVerticalFilled","foldVerticalFilled","goToSearch","percentage","sortPercentage","attach","_codiconFontCharacters","create","id","fontCharacter","isString","getCodiconFontCharacters","diffSets","removed","added","intersection","setA","setB","elem","roundFloat","number","decimalPoints","decimal","pow","round","RGBA","r","g","_rgbaBrand","HSLA","h","s","l","_hslaBrand","fromRGBA","rgba","chroma","_hue2rgb","q","toRGBA","hsla","HSVA","v","_hsvaBrand","cmax","delta","m","hsva","abs","Color","fromHex","hex","Format","CSS","parseHex","red","_hsla","_hsva","getRelativeLuminance","_relativeLuminanceForComponent","color","isLighter","isLighterThan","another","isDarkerThan","lighten","factor","darken","transparent","isTransparent","isOpaque","opposite","makeOpaque","opaqueBackground","_toString","format","getLighterColor","of","relative","lum1","lum2","getDarkerColor","white","black","blue","green","cyan","lightgrey","_toTwoDigitHex","_parseHexDigit","charCode","formatRGB","formatRGBA","toFixed","formatHSL","formatHSLA","formatHex","formatHexA","compact","charCodeAt","StringDiffSequence","getElements","characters","Int32Array","stringDiff","original","modified","pretty","LcsDiff","ComputeDiff","changes","Debug","Assert","MyArray","Copy","sourceArray","sourceIndex","destinationArray","destinationIndex","Copy2","DiffChangeHelper","m_changes","m_originalStart","m_modifiedStart","m_originalCount","m_modifiedCount","MarkNextChange","DiffChange","AddOriginalElement","originalIndex","modifiedIndex","AddModifiedElement","getChanges","getReverseChanges","reverse","originalSequence","modifiedSequence","continueProcessingPredicate","ContinueProcessingPredicate","_originalSequence","_modifiedSequence","originalStringElements","originalElementsOrHash","originalHasStrings","_getElements","modifiedStringElements","modifiedElementsOrHash","modifiedHasStrings","_hasStrings","_originalStringElements","_originalElementsOrHash","_modifiedStringElements","_modifiedElementsOrHash","m_forwardHistory","m_reverseHistory","_isStringArray","sequence","elements","hashes","stringHash","ElementsAreEqual","newIndex","ElementsAreStrictEqual","_getStrictElement","getStrictElement","OriginalElementsAreEqual","ModifiedElementsAreEqual","_ComputeDiff","originalStart","originalEnd","modifiedStart","modifiedEnd","quitEarlyArr","ComputeDiffRecursive","PrettifyChanges","quitEarly","midOriginalArr","midModifiedArr","ComputeRecursionPoint","midOriginal","midModified","leftChanges","rightChanges","ConcatenateChanges","WALKTRACE","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","forwardChanges","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","historyIndex","diagonal","originalStartPoint","modifiedStartPoint","lastForwardChange","getOriginalEnd","getModifiedEnd","maxDifferences","numDiagonals","numDifferences","furthestOriginalIndex","furthestModifiedIndex","ClipDiagonalBound","tempOriginalIndex","matchLengthOfLongest","temp","change","originalStop","modifiedStop","checkOriginal","checkModified","modifiedLength","startStrictEqual","mergedChangeArr","ChangesOverlap","prevChange","bestDelta","bestScore","_boundaryScore","score","aChange","bChange","matchedLength","aOriginalStart","bOriginalEnd","abOriginalLength","aModifiedStart","bModifiedEnd","abModifiedLength","_findBetterContiguousSequence","originalMatchStart","modifiedMatchStart","desiredLength","originalMax","modifiedMax","bestOriginalStart","bestModifiedStart","_contiguousSequenceScore","_OriginalIsBoundary","test","_OriginalRegionIsBoundary","_ModifiedIsBoundary","_ModifiedRegionIsBoundary","left","right","diagonalBaseIndex","diffEven","strictEquals","itemsEquals","equalsIfDefined","equalsOrV1","v2","v1","structuralEquals","getPrototypeOf","prototype","aObj","bObj","keysA","keysB","keysBSet","WeakMap","ErrorHandler","listeners","unexpectedErrorHandler","stack","ErrorNoTelemetry","isErrorNoTelemetry","emit","forEach","listener","onUnexpectedExternalError","errorHandler","isCancellationError","transformErrorForSerialization","name","$isError","stacktrace","noTelemetry","canceledName","canceled","illegalArgument","illegalState","NotSupportedError","msg","fromError","setPrototypeOf","_addLeakageTraceLogic","options","once","thisArgs","disposables","didFire","call","snapshot","onWillAddFirstListener","onDidRemoveLastListener","debounce","leading","flushOnListenerRemove","leakWarningThreshold","doFire","numDebouncedCalls","cur","_output","onWillRemoveListener","Disposable","defer","onceIf","each","signal","any","events","d","addAndReturnDisposable","combinedDisposable","reduce","initial","accumulate","latch","cache","firstCall","shouldEmit","split","isT","flushAfterTimeout","_buffer","flush","onDidAddFirstListener","chain","sythensize","cs","ChainableSynthesis","evaluate","HaltChainable","steps","step","fromNodeEventEmitter","eventName","args","on","removeListener","fromDOMEventEmitter","addEventListener","removeEventListener","res","forward","runAndSubscribe","EmitterObserver","_observable","_counter","_hasChanged","addObserver","reportChanges","removeObserver","beginUpdate","handlePossibleChange","handleChange","_change","endUpdate","fromObservable","obs","fromObservableLight","observable","didChange","observer","DisposableStore","EventProfiling","_idPool","listenerCount","invocationCount","elapsedOverall","durations","_stopWatch","StopWatch","elapsed","LeakageMonitor","_errorHandler","threshold","padStart","_warnCountdown","_stacks","clear","topStack","topCount","getMostFrequentStack","warn","ListenerLeakError","Stacktrace","print","join","ListenerRefusalError","UniqueContainer","_listenerFinalizers","_size","_options","_leakageMon","onListenerError","_perfMon","_profName","_deliveryQueue","deliveryQueue","_disposed","current","reset","_listeners","_event","tuple","contained","removeMonitor","ceil","EventDeliveryQueuePrivate","unregister","_removeListener","trim","match","exec","log","JSON","stringify","adjustDeliveryQueue","_deliver","_deliverQueue","dq","enqueue","hasListeners","createEventDeliveryQueue","PauseableEmitter","_isPaused","_eventQueue","LinkedList","_mergeFn","pause","resume","size","shift","DebounceEmitter","_delay","MicrotaskEmitter","_queuedEvents","EventMultiplexer","onFirstListenerAdd","onLastListenerRemove","hook","createSingleCallFunction","unhook","EventBufferer","wrapEvent","buffers","reduceData","reducedResult","bufferEvents","Relay","listening","inputEvent","inputEventListener","input","isPathSeparator","toSlashes","osPath","posix","sep","toPosixPath","getRoot","path","firstLetter","pos","isWindowsDriveLetter","isEqualOrParent","base","parentCandidate","ignoreCase","separator","startsWithIgnoreCase","sepOffset","charAt","char0","hasDriveLetter","isWindowsOS","isWindows","fnDidRunCallback","_this","didCall","arguments","GLOBSTAR","GLOB_SPLIT","PATH_REGEX","NO_PATH_REGEX","ALL_FORWARD_SLASHES","starsToRegExp","starCount","isLastPattern","splitGlobAware","pattern","splitChar","segments","inBraces","inBrackets","curVal","char","parseRegExp","regEx","every","segment","previousSegmentWasGlobStar","braceVal","bracketVal","braceRegExp","choice","escapeRegExpCharacters","T1","T2","T3","T3_2","T4","T5","CACHE","LRUCache","FALSE","NULL","parsePattern","patternKey","trimForExclusions","parsedPattern","basename","endsWith","trivia1","substr","slashBase","backslashBase","basenames","patterns","allBasenames","trivia2","parsedPatterns","aggregateBasenameMatches","patternsLength","withBasenames","find","allPaths","trivia3","trivia4and5","regExp","RegExp","lastIndex","toRegExp","wrapRelativePattern","wrappedPattern","isLinux","ltrim","targetPath","matchPathEnds","usingPosixSep","nativePath","nativePathEnd","targetPathEnd","hasSibling","parse","isRelativePattern","resultPattern","expression","getOwnPropertyNames","when","matched","requiresSiblings","parseExpressionPattern","some","resultExpression","resultPromises","resultPromise","extname","parsedExpression","rp","basenamePatterns","aggregate","ch","aggregatedPatterns","hash","doHash","hashVal","numberHash","initialHashVal","objectHash","booleanHash","leftRotate","bits","totalBits","fill","dest","toHexString","bufferOrValue","bitsize","ArrayBuffer","leftPad","StringSHA1","_bigBlock32","DataView","_h0","_h1","_h2","_h3","_h4","_buff","_buffDV","_buffLen","_totalLen","_leftoverHighSurrogate","_finished","update","str","strLen","buff","buffLen","leftoverHighSurrogate","codePoint","nextCharCode","_push","_step","digest","_wrapUp","ml","setUint32","bigBlock32","getUint32","Iterable","is","iterator","_empty","single","iterableOrElement","isEmpty","flatMap","reducer","initialValue","consume","atMost","Number","POSITIVE_INFINITY","consumed","asyncToArray","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","define","keyCode","toLowerCase","keyCodeToStr","strToKeyCode","uiMap","userSettingsUSMap","userSettingsGeneralMap","EVENT_KEY_CODE_MAP","NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE","scanCodeIntToStr","scanCodeStrToInt","scanCodeLowerCaseStrToInt","IMMUTABLE_CODE_TO_KEY_CODE","IMMUTABLE_KEY_CODE_TO_CODE","KeyCodeUtils","KeyChord","firstPart","secondPart","mappings","seenKeyCode","seenScanCode","mapping","immutable","scanCode","scanCodeStr","keyCodeStr","eventKeyCode","vkey","usUserSettingsLabel","generalUserSettingsLabel","fromString","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","toElectronAccelerator","rawValue","disposableTracker","setDisposableTracker","tracker","trackDisposable","markAsDisposed","setParentOfDisposable","child","setParent","markAsSingleton","singleton","isDisposable","errors","AggregateError","children","setParentOfDisposables","self","DISABLE_DISPOSED_WARNING","_toDispose","o","delete","_store","_register","MutableDisposable","RefCountedDisposable","_disposable","acquire","release","ImmortalReference","object","DisposableMap","clearAndDisposeAll","skipDisposeOnOverwrite","deleteAndDispose","Node","Undefined","prev","_first","_last","node","_insert","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","anchor","_a","_b","ResourceMapEntry","uri","ResourceMap","defaultToKey","resource","toKey","isEntries","clb","thisArg","entry","entries","toStringTag","LinkedMap","_head","_tail","touch","previous","addItemLast","addItemFirst","removeItem","callbackfn","state","trimOld","newSize","currentSize","trimNew","toJSON","fromJSON","Cache","limit","ratio","_limit","_ratio","checkTrim","BidirectionalMap","_m1","_m2","getKey","SetMap","Mimes","text","binary","unknown","latex","uriList","Schemas","matchesScheme","scheme","URI","isUri","equalsIgnoreCase","matchesSomeScheme","schemes","inMemory","internal","walkThrough","walkThroughSnippet","http","https","mailto","untitled","command","vscodeRemote","vscodeRemoteResource","vscodeManagedRemoteResource","vscodeUserData","vscodeCustomEditor","vscodeNotebookCell","vscodeNotebookCellMetadata","vscodeNotebookCellMetadataDiff","vscodeNotebookCellOutput","vscodeNotebookCellOutputDiff","vscodeNotebookMetadata","vscodeInteractiveInput","vscodeSettings","vscodeWorkspaceTrust","vscodeTerminal","vscodeChatCodeBlock","vscodeChatCodeCompareBlock","vscodeChatSesssion","webviewPanel","vscodeWebview","extension","vscodeFileResource","tmp","vsls","vscodeSourceControl","commentsInput","codeSetting","outputChannel","connectionTokenQueryName","RemoteAuthorities","_hosts","_ports","_connectionTokens","_preferredWebSchema","_delegate","_serverRootPath","setPreferredWebSchema","schema","_remoteResourcesPath","rewrite","authority","host","port","connectionToken","query","encodeURIComponent","VSCODE_AUTHORITY","FileAccessImpl","FALLBACK_AUTHORITY","asBrowserUri","resourcePath","toUri","uriToBrowserUri","with","fragment","uriOrModule","moduleIdToUrl","_VSCODE_FILE_ROOT","rootUriOrPath","joinPath","modulePath","toUrl","FileAccess","COI","coiHeaders","CoopAndCoep","coiSearchParamName","getHeadersFromQuery","url","params","URL","searchParams","addSearchParam","urlOrSearch","coop","coep","crossOriginIsolated","URLSearchParams","clamp","MovingAverage","_n","_val","SlidingWindowAverage","_values","_index","_sum","oldValue","deepClone","deepFreeze","_hasOwnProperty","prop","isFrozen","isTypedArray","hasOwnProperty","cloneAndChange","changer","_cloneAndChange","isUndefinedOrNull","changed","r1","isObject","r2","i2","mixin","overwrite","oneKeys","otherKeys","getAllPropertyNames","getAllMethodNames","methods","createProxyObject","methodNames","invoke","createProxyMethod","method","methodName","observableValueOpts","lazy","LazyObservableValue","DebugNameData","owner","debugName","equalsFn","ObservableValue","autorun","AutorunObserver","autorunOpts","debugReferenceFn","autorunHandleChanges","createEmptyChangeSummary","autorunWithStoreHandleChanges","reader","changeSummary","autorunWithStore","_debugNameData","getDebugName","_runFn","createChangeSummary","_handleChange","updateCount","dependencies","dependenciesToBeRemoved","getLogger","handleAutorunCreated","_runIfNeeded","emptySet","handleAutorunTriggered","handleAutorunFinished","changedObservable","readObservable","Observer","_recomputeInitiallyAndOnChange","_keepObserved","_derived","_globalTransaction","_setRecomputeInitiallyAndOnChange","recomputeInitiallyAndOnChange","_setKeepObserved","keepObserved","_setDerivedOpts","derived","ConvenientObservable","TChange","read","fnOrOwner","fnOrUndefined","getFunctionName","flatten","handleValue","BaseObservable","observers","onFirstObserverAdded","onLastObserverRemoved","transaction","tx","TransactionImpl","finish","globalTransaction","asyncTransaction","subtransaction","_getDebugName","updatingObservers","handleBeginTransaction","updateObserver","handleEndTransaction","observableValue","nameOrOwner","debugNameData","_equalityComparator","_tx","_setValue","handleObservableChanged","newValue","hadValue","disposableObservableValue","DisposableObservableValue","debugNameSource","referenceFn","countPerName","cachedDebugName","cached","dbgName","ownerStr","ownerId","className","ctor","getClassName","countPerClassName","formatOwner","findKey","computeDebugName","fnSrc","computeFnOrOwner","computeFn","Derived","derivedWithSetter","setter","DerivedWithSetter","derivedOpts","derivedHandleChanges","equalityComparer","derivedWithStore","computeFnOrUndefined","derivedDisposable","_computeFn","_handleLastObserverRemoved","handleDerivedCreated","_recomputeIfNeeded","handleDerivedRecomputed","propagateBeginUpdate","shouldReact","wasUpToDate","shouldCallBeginUpdate","shouldCallEndUpdate","handleLastObserverRemoved","equalityComparator","_isUpToDate","_deltas","_updateCounter","_update","_beginUpdate","_endUpdate","globalObservableLogger","setLogger","logger","ConsoleObservableLogger","indentation","changedObservablesSets","textToConsoleArgs","styles","firstArg","process","style","consoleTextToArgs","normalText","repeat","formatInfo","styled","formatValue","strikeThrough","formatKind","formatChanges","existingHandleChange","changedObservables","handleFromEventObservableTriggered","_getValue","transactionName","kind","padStr","styleObj","styleString","propName","propValue","availableLen","formatArray","formatObject","ObservablePromise","fromFn","promiseResult","PromiseResult","waitForState","isError","cancellationToken","isImmediateRun","shouldDispose","stateObs","isFinished","dc","constObservable","ConstObservable","observableFromEvent","getValue","FromEventObservable","observableFromEventOpts","_getTransaction","hasValue","handleEvent","didRunTransaction","observableSignalFromEvent","FromEventObservableSignal","batchEventsGlobally","didSet","observableSignal","debugNameOrOwner","ObservableSignal","_owner","_debugName","KeepAliveObserver","_forceRecompute","_handleValue","derivedObservableWithCache","lastValue","derivedObservableWithWritableCache","onChange","assign","clearCache","setCache","mapObservableArrayCached","keySelector","ArrayMap","setItems","getItems","_keySelector","_cache","_items","itemsToRemove","out","ValueWithChangeEventFromObservable","onDidChange","observableFromValueWithChangeEvent","derivedConstOnceDefined","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","CHAR_COLON","ErrorInvalidArgType","expected","determiner","type","validateString","platformIsWin32","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","allowAboveRoot","lastSegmentLength","lastSlash","dots","lastSlashIndex","lastIndexOf","_format","pathObject","validateObject","dir","root","ext","win32","pathSegments","resolvedDevice","resolvedTail","resolvedAbsolute","rootEnd","device","isAbsolute","normalize","paths","joined","needsReplace","slashCount","firstLen","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","toNamespacedPath","resolvedPath","dirname","matchedSlash","suffix","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","ret","delimiter","posixCwd","regexp","cwd","trailingSeparator","hasRoot","LANGUAGE_DEFAULT","_locale","_translationsConfigFile","_userAgent","_isWindows","_isMacintosh","_isLinux","_isLinuxSnap","_isNative","_isWeb","_isElectron","_isIOS","_isCI","_isMobile","_language","_platformLocale","$globalThis","nodeProcess","isElectronProcess","electron","isElectronRenderer","platform","env","rawNlsConfig","nlsConfig","userLocale","osLocale","resolvedLanguage","languagePack","translationsConfigFile","navigator","userAgent","maxTouchPoints","language","_platform","isMacintosh","isNative","isWeb","isWebWorker","importScripts","webWorkerOrigin","origin","isIOS","isMobile","setTimeout0IsFaster","postMessage","pending","vscodeScheduleAsyncWork","candidate","lastId","myId","OS","_isLittleEndian","_isLittleEndianComputed","isLittleEndian","view","Uint16Array","isChrome","isFirefox","isSafari","isEdge","isAndroid","safeProcess","vscodeGlobal","sandboxProcess","arch","originalFSPath","uriToFsPath","ExtUri","_ignorePathCasing","uri1","uri2","ignoreFragment","getComparisonKey","isEqual","isEqualAuthority","pathFragment","basenameOrAuthority","normalizePath","normalizedPath","relativePath","fromPath","toPath","resolvePath","newURI","isAbsolutePath","a1","a2","hasTrailingPathSeparator","fsp","fsPath","removeTrailingPathSeparator","addTrailingPathSeparator","isRootSep","extUri","extUriBiasedIgnorePathCase","extUriIgnorePathCase","DataUri","META_DATA_LABEL","META_DATA_DESCRIPTION","META_DATA_SIZE","META_DATA_MIME","parseMetaData","dataUri","metadata","substring","property","mime","Severity","_warning","_info","fromValue","Warning","Info","Ignore","severity","hasPerformanceNow","performance","highResolution","_now","_startTime","_stopTime","isFalsyOrWhitespace","_formatRegexp","group","parseInt","isNaN","htmlAttributeEncodeValue","escape","html","haystack","needle","rtrim","needleLen","haystackLen","convertSimple2RegExpPattern","stripWildcards","createRegExp","searchString","isRegex","modifiers","global","matchCase","multiline","unicode","regExpLeadsToEndlessLoop","splitLines","splitLinesIncludeSeparators","linesWithSeparators","splitLinesAndSeparators","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","lastNonWhitespaceIndex","startIndex","compareSubstring","aStart","aEnd","bStart","bEnd","codeA","codeB","aLen","bLen","compareIgnoreCase","compareSubstringIgnoreCase","isLowerAsciiLetter","isAsciiDigit","isUpperAsciiLetter","candidateLength","commonPrefixLength","commonSuffixLength","aLastIndex","bLastIndex","isHighSurrogate","isLowSurrogate","computeCodePoint","highSurrogate","lowSurrogate","getNextCodePoint","CodePointIterator","_offset","_str","_len","setOffset","prevCodePoint","prevCharCode","getPrevCodePoint","nextCodePoint","eol","GraphemeIterator","_iterator","nextGraphemeLength","graphemeBreakTree","GraphemeBreakTree","getInstance","initialOffset","graphemeBreakType","getGraphemeBreakType","nextGraphemeBreakType","breakBetweenGraphemeBreakType","prevGraphemeLength","prevGraphemeBreakType","nextCharLength","prevCharLength","getCharContainingOffset","endOffset","CONTAINS_RTL","containsRTL","IS_BASIC_ASCII","isBasicASCII","UNUSUAL_LINE_TERMINATORS","containsUnusualLineTerminators","isFullWidthCharacter","isEmojiImprecise","UTF8_BOM_CHARACTER","String","fromCharCode","startsWithUTF8BOM","containsUppercaseCharacter","ignoreEscapedChars","singleLetterHash","breakTypeA","breakTypeB","_INSTANCE","_data","nodeCount","nodeIndex","getLeftDeleteOffset","emojiOffset","isEmojiModifier","resultOffset","getOffsetBeforeLastEmojiComponent","noBreakWhitespace","AmbiguousCharacters","ambiguousCharacterData","locales","arrayToMap","intersectMaps","map1","map2","languageSpecificMap","filteredLocales","startsWith","locale","mergeMaps","_locales","getLocales","confusableDictionary","isAmbiguous","getPrimaryConfusable","getConfusableCodePoints","InvisibleCharacters","getRawData","getData","isInvisibleCharacter","codePoints","ThemeColor","ThemeIcon","isThemeColor","iconNameSegment","iconNameExpression","iconModifierExpression","iconNameCharacter","ThemeIconIdRegex","asClassNameArray","icon","modifier","classNames","asClassName","asCSSSelector","isThemeIcon","_regexFromString","fromId","modify","tildeIndex","getModifier","ti1","ti2","TypedArray","isNumber","isIterable","isBoolean","isUndefined","isDefined","assertType","assertIsDefined","isFunction","validateConstraints","constraints","validateConstraint","constraint","toUint8","toUint32","_schemePattern","_singleSlashStart","_doubleSlashStart","_slash","_regexp","schemeOrData","_strict","_schemeFix","_referenceResolution","_validateUri","Uri","percentDecode","components","strict","newPath","skipEncoding","_asFormatted","revive","_formatted","external","_fsPath","_sep","_pathSepMarker","$mid","encodeTable","encodeURIComponentFast","uriComponent","isPath","isAuthority","nativeEncodePos","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","encoder","userinfo","decodeURIComponentGraceful","decodeURIComponent","_rEncodedAsHex","DEFAULT_CHANNEL","INITIALIZE","webWorkerWarningLogged","logOnceWebWorkerWarning","RequestMessage","vsWorker","req","channel","ReplyMessage","seq","SubscribeEventMessage","EventMessage","UnsubscribeEventMessage","SimpleWorkerProtocol","_workerId","_handler","_lastSentReq","_pendingReplies","_pendingEmitters","_pendingEvents","setWorkerId","workerId","sendMessage","_send","listen","handleMessage","_handleMessage","createProxyToRemoteChannel","sendMessageBarrier","propertyIsDynamicEvent","propertyIsEvent","myArgs","Proxy","_handleReplyMessage","_handleRequestMessage","_handleSubscribeEventMessage","_handleEventMessage","_handleUnsubscribeEventMessage","replyMessage","requestMessage","detail","transfer","SimpleWorkerClient","workerFactory","workerDescriptor","_localChannels","_worker","amdModuleId","esmModuleLocation","label","_protocol","_handleEvent","getId","loaderConfiguration","globalRequire","require","getConfig","requirejs","contexts","config","_onModuleLoaded","proxy","catch","_onError","channelName","setChannel","SimpleWorkerServer","requestHandlerFactory","_remoteChannels","_requestHandlerFactory","_requestHandler","onmessage","initialize","requestHandler","getChannel","inst","loaderConfig","moduleId","baseUrl","vs","trustedTypesPolicy","catchError","module","webpackAsyncContext","__webpack_require__","exports","CharacterClassifier","_defaultValue","_asciiMap","_createAsciiMap","asciiMap","CharacterSet","_actual","CursorColumns","_nextVisibleColumn","visibleColumn","tabSize","nextRenderTabStop","visibleColumnFromColumn","lineContent","column","textLen","columnFromVisibleColumn","lineContentLength","beforeVisibleColumn","beforeColumn","afterVisibleColumn","afterColumn","nextIndentTabStop","indentSize","prevRenderTabStop","prevIndentTabStop","editorLineHighlight","registerColor","editorLineHighlightBorder","dark","light","hcDark","hcLight","contrastBorder","editorRangeHighlight","editorRangeHighlightBorder","activeContrastBorder","editorSymbolHighlight","editorFindMatchHighlight","editorSymbolHighlightBorder","editorCursorForeground","editorCursorBackground","editorMultiCursorPrimaryForeground","editorMultiCursorPrimaryBackground","editorMultiCursorSecondaryForeground","editorMultiCursorSecondaryBackground","editorWhitespaces","editorLineNumbers","deprecatedEditorIndentGuides","deprecatedEditorActiveIndentGuides","editorIndentGuide1","editorIndentGuide2","editorIndentGuide3","editorIndentGuide4","editorIndentGuide5","editorIndentGuide6","editorActiveIndentGuide1","editorActiveIndentGuide2","editorActiveIndentGuide3","editorActiveIndentGuide4","editorActiveIndentGuide5","editorActiveIndentGuide6","deprecatedEditorActiveLineNumber","editorActiveLineNumber","editorDimmedLineNumber","editorRuler","editorCodeLensForeground","editorBracketMatchBackground","editorBracketMatchBorder","editorOverviewRulerBorder","editorOverviewRulerBackground","editorGutter","editorBackground","editorUnnecessaryCodeBorder","editorUnnecessaryCodeOpacity","ghostTextBorder","ghostTextForeground","ghostTextBackground","rulerRangeDefault","overviewRulerRangeHighlight","overviewRulerError","overviewRulerWarning","editorWarningForeground","editorWarningBorder","overviewRulerInfo","editorInfoForeground","editorInfoBorder","editorBracketHighlightingForeground1","editorBracketHighlightingForeground2","editorBracketHighlightingForeground3","editorBracketHighlightingForeground4","editorBracketHighlightingForeground5","editorBracketHighlightingForeground6","editorBracketHighlightingUnexpectedBracketForeground","editorBracketPairGuideBackground1","editorBracketPairGuideBackground2","editorBracketPairGuideBackground3","editorBracketPairGuideBackground4","editorBracketPairGuideBackground5","editorBracketPairGuideBackground6","editorBracketPairGuideActiveBackground1","editorBracketPairGuideActiveBackground2","editorBracketPairGuideActiveBackground3","editorBracketPairGuideActiveBackground4","editorBracketPairGuideActiveBackground5","editorBracketPairGuideActiveBackground6","editorUnicodeHighlightBorder","editorUnicodeHighlightBackground","editorWarningBackground","registerThemingParticipant","theme","collector","background","getColor","lineHighlight","imeBackground","addRule","countEOL","eolCount","firstLineLength","lastLineStart","chr","normalizeIndentation","insertSpaces","spacesCnt","tabsCnt","_normalizeIndentationFromWhitespace","LineRange","fromRangeInclusive","startLineNumber","endLineNumber","joinMany","lineRanges","LineRangeSet","getUnion","ranges","endLineNumberExclusive","ofLength","deserialize","lineRange","contains","lineNumber","deltaLength","intersect","intersectsStrict","overlapOrTouch","toInclusiveRange","Range","MAX_SAFE_INTEGER","toExclusiveRange","mapToLineArray","serialize","includes","toOffsetRange","OffsetRange","_normalizedRanges","addRange","joinRangeStartIdx","joinRangeEndIdxExclusive","joinRange","rangeThatStartsBeforeEnd","intersects","i1","lineRange1","lineRange2","subtractFrom","getIntersection","getWithDelta","sortedRanges","endExclusive","tryCreate","ofStartAndLength","deltaStart","deltaEnd","isBefore","isAfter","clip","clipCyclic","OffsetRangeSet","_sortedRanges","intersectWithRange","intersectWithRangeLength","Position","newLineNumber","newColumn","deltaLineNumber","deltaColumn","isBeforeOrEqual","aLineNumber","bLineNumber","lift","isIPosition","PositionOffsetTransformer","lineStartOffsetByLineIdx","getOffset","position","getOffsetRange","getStartPosition","getEndPosition","textLength","lineIdx","TextLength","startColumn","endColumn","containsPosition","strictContainsPosition","containsRange","otherRange","strictContainsRange","plusRange","intersectRanges","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","equalsRange","setEndPosition","setStartPosition","collapseToStart","collapseToEnd","lineCount","fromPositions","isIRange","areIntersectingOrTouching","areIntersecting","compareRangesUsingStarts","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","compareRangesUsingEnds","spansMultipleLines","Selection","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","equalsSelection","selectionsEqual","getDirection","getPosition","getSelectionStart","fromRange","direction","liftSelection","sel","selectionsArrEqual","isISelection","createWithDirection","_utf16LE_TextDecoder","_utf16BE_TextDecoder","_platformTextDecoder","getUTF16LE_TextDecoder","getPlatformTextDecoder","decodeUTF16LE","resultLen","compatDecodeUTF16LE","StringBuilder","capacity","_capacity","_completedStrings","_bufferLength","build","_flushBuffer","_buildBuffer","bufferString","appendCharCode","remainingSpace","appendASCIICharCode","appendString","escapeNewLine","TextChange","oldLength","oldText","oldEnd","oldPosition","newLength","newText","newEnd","newPosition","_writeStringSize","_writeString","_readString","writeSize","write","compressConsecutiveTextChanges","prevEdits","currEdits","TextChangeCompressor","compress","_prevEdits","_currEdits","_result","_resultLen","_prevLen","_prevDeltaOffset","_currLen","_currDeltaOffset","prevIndex","currIndex","prevEdit","_getPrev","currEdit","_getCurr","_acceptCurr","_acceptPrev","e1","e2","_splitCurr","_splitPrev","mergePrev","mergeCurr","merged","_merge","_removeNoOps","_rebaseCurr","_rebasePrev","prevDeltaOffset","currDeltaOffset","preText","postText","edits","curr","TextEdit","lastEditEnd","editRange","editStart","editEnd","rangeFromPositions","getValueOfRange","endPositionExclusive","applyToString","strText","StringText","getNewRanges","newRanges","previousEditEndLineNumber","lineOffset","columnOffset","ofText","newRangeStart","newRange","createRange","SingleTextEdit","toSingleEditOperation","AbstractText","addToPosition","_t","zero","betweenPositions","position1","position2","ofRange","line","columnCount","isGreaterThanOrEqualTo","startPosition","EDITOR_MODEL_DEFAULTS","detectIndentation","trimAutoWhitespace","largeFileOptimizations","bracketPairColorizationOptions","enabled","independentColorPoolPerBracketType","WordCharacterClassifier","wordSeparators","intlSegmenterLocales","_segmenter","_cachedLine","_cachedSegments","Intl","Segmenter","granularity","findPrevIntlWordBeforeOrAtOffset","_getIntlSegmenterWordsOnLine","findNextIntlWordAtOrAfterOffset","_filterWordSegments","_isWordLike","isWordLike","wordClassifierCache","getMapForWordSeparators","USUAL_WORD_SEPARATORS","DEFAULT_WORD_REGEXP","allowInWords","createWordRegExp","ensureValidWordDefinition","wordDefinition","flags","_defaultConfig","getWordAtText","textOffset","maxLen","t1","prevRegexIndex","timeBudget","regexIndex","windowSize","thisMatch","_findRegexMatchEnclosingPosition","word","stopPos","matchIndex","DiffAlgorithmResult","trivial","seq1","seq2","SequenceDiff","trivialTimedOut","diffs","hitTimeout","invert","sequenceDiffs","doc1Length","fromOffsetPairs","getEndExclusives","OffsetPair","getStarts","seq2Range","seq1Range","offset1","offset2","assertSorted","swap","InfiniteTimeout","instance","isValid","DateTimeout","startTime","valid","DynamicProgrammingDiffing","compute","sequence1","sequence2","equalityScore","lcsLengths","Array2D","directions","lengths","s1","s2","horizontalLen","verticalLen","extendedSeqScore","getElement","prevLen","lastAligningPosS1","lastAligningPosS2","reportDecreasingAligningPositions","MyersDiffAlgorithm","seqX","seqY","getXAfterSnake","y","V","FastInt32Array","FastArrayNegativeIndices","SnakePath","lowerBound","upperBound","maxXofDLineTop","maxXofDLineLeft","newMaxX","lastPath","endX","endY","positiveArr","negativeArr","computeMovedLines","originalLines","modifiedLines","hashedOriginalLines","hashedModifiedLines","moves","excludedChanges","deletions","LineRangeFragment","insertions","deletion","best","highestSimilarity","insertion","similarity","computeSimilarity","LineRangeMapping","computeMovesFromSimpleDeletionsToSimpleInsertions","unchangedMoves","original3LineHashes","possibleMappings","lastMappings","currentModifiedRange","nextMappings","lastMapping","originalLineRange","modifiedLineRange","modifiedSet","originalSet","diffOrigToMod","modifiedSections","originalTranslatedSections","modifiedIntersectedSections","monotonousChanges","firstTouchingChangeOrig","firstTouchingChangeMod","linesAbove","lastTouchingChangeOrig","lastTouchingChangeMod","linesBelow","extendToTop","extendToBottom","origLine","modLine","areLinesSimilar","computeUnchangedMoves","originalDist","modifiedDist","joinCloseConsecutiveMoves","lines","countWhere","changesMonotonous","removeMovesInSameDiff","line1","line2","LinesSliceCharSequence","commonNonSpaceCharCount","inverted","isSpace","longerLineLength","countNonWsChars","DefaultLinesDiffComputer","dynamicProgrammingDiffing","myersDiffingAlgorithm","computeDiff","LinesDiff","DetailedLineRangeMapping","RangeMapping","maxComputationTimeMs","considerWhitespaceChanges","ignoreTrimWhitespace","perfectHashes","getOrCreateHash","originalLinesHashes","modifiedLinesHashes","LineSequence","lineAlignmentResult","lineAlignments","optimizeSequenceDiffs","removeVeryShortMatchingLinesBetweenDiffs","alignments","scanForWhitespaceChanges","equalLinesCount","seq1Offset","seq1LastStart","seq2Offset","seq2LastStart","characterDiffs","refineDiff","lineRangeMappingFromRangeMappings","computeMoves","validatePosition","validateRange","innerChanges","ic","modifiedRange","originalRange","MovedText","sequenceDiff","rangeMapping","toRangeMapping2","slice1","slice2","diffResult","extendDiffsToEntireWordIfAppropriate","removeShortMatches","removeVeryShortMatchingTextBetweenLongDiffs","translateRange","dontAssertStartLine","getLineRangeMapping","m1","m2","lineStartDelta","lineEndDelta","joinSequenceDiffsByShifting","getBoundaryScore","prevDiff","nextDiff","seq1ValidRange","seq2ValidRange","shiftDiffToBetterPosition","shiftSequenceDiffs","prevResult","result2","nextResult","isStronglyEqual","deltaBefore","deltaAfter","seq2OffsetStart","seq2OffsetEndExclusive","equalMappings","additional","lastPoint","scanWord","pair","equalMapping","w1","findWordContaining","w2","w","equalPart","equalChars1","equalChars2","sequenceDiffs1","sequenceDiffs2","sd1","sd2","mergeSequenceDiffs","_sequence2","shouldRepeat","counter","lastResult","shouldJoinDiffs","unchangedRange","getText","countLinesIn","unchangedText","beforeLineCount1","beforeSeq1Length","beforeLineCount2","beforeSeq2Length","afterLineCount1","afterSeq1Length","afterLineCount2","afterSeq2Length","cap","newDiffs","newDiff","shouldMarkAsChanged","fullRange1","extendToFullLines","prefix","availableSpace","trimmedHash","getIndentation","firstElementOffsetByLineIdx","lineStartOffsets","trimmedWsLengthsByLineIdx","lineStartOffset","trimmedWsLength","trimmedStartLine","trimStart","trimEnd","lineLength","prevCategory","getCategory","nextCategory","getCategoryBoundaryScore","translateOffset","preference","pos1","pos2","isWordChar","category","width","height","chrKeys","histogram","totalCount","sumDifferences","maxLength","LegacyLinesDiffComputer","DiffComputer","maxComputationTime","shouldIgnoreTrimWhitespace","shouldComputeCharChanges","shouldMakePrettyDiff","shouldPostProcessCharChanges","lastChange","originalEndLineNumber","originalStartLineNumber","modifiedEndLineNumber","modifiedStartLineNumber","charChanges","originalStartColumn","originalEndColumn","modifiedStartColumn","modifiedEndColumn","startColumns","endColumns","getFirstNonBlankColumn","getLastNonBlankColumn","_startColumns","_endColumns","getStartLineNumber","getEndLineNumber","createCharSequence","endIndex","charCodes","lineNumbers","columns","col","CharSequence","_charCodes","_lineNumbers","_columns","_assertIndex","getStartColumn","getEndColumn","CharChange","createFromDiffChange","diffChange","originalCharSequence","modifiedCharSequence","LineChange","createFromDiffResult","originalLineSequence","modifiedLineSequence","continueCharDiff","rawChanges","currChange","originalMatchingLength","modifiedMatchingLength","postProcessCharChanges","opts","continueLineDiff","createContinueProcessingPredicate","lineChanges","originalLineIndex","modifiedLineIndex","nextChange","originalLine","modifiedLine","_pushTrimWhitespaceCharChange","originalMaxColumn","modifiedMaxColumn","originalLineNumber","modifiedLineNumber","_mergeTrimWhitespaceCharChange","txt","maximumRuntime","lineRangeMapping","linesDiffComputers","getLegacy","getDefault","originalLineCount","modifiedLineCount","lastOriginalEndLineNumber","lastModifiedEndLineNumber","flip","toRangeMapping","origInclusiveRange","modInclusiveRange","isValidLineNumber","normalizePosition","content","fromRangeMappings","rangeMappings","withInnerChangesFromLineRanges","toTextEdit","TokenMetadata","getLanguageId","getTokenType","containsBalancedBrackets","getFontStyle","getForeground","getBackground","getClassNameFromMetadata","fontStyle","getInlineStyleFromMetadata","colorMap","foreground","textDecoration","getPresentationFromMetadata","Boolean","underline","strikethrough","isExclusive","exclusive","MatchCandidate","languageId","notebookUri","notebookType","recursive","LanguageFeatureRegistry","_notebookInfoResolver","_clock","_entries","_onDidChange","provider","_score","_time","_lastCandidate","model","_updateScores","ordered","_orderedForEach","orderedGroups","lastBucket","lastBucketScore","notebookInfo","shouldSynchronizeModel","_compareByScoreAndTime","isBuiltinSelector","isBuiltin","candidateUri","candidateLanguage","candidateIsSynchronized","candidateNotebookUri","candidateNotebookType","hasAccessToAllModels","normalizedPattern","HoverVerbosityAction","CompletionItemKinds","InlineCompletionTriggerKind","DocumentPasteTriggerKind","SignatureHelpTriggerKind","DocumentHighlightKind","Token","_tokenBrand","TokenizationResult","tokens","endState","_tokenizationResultBrand","EncodedTokenizationResult","_encodedTokenizationResultBrand","byKind","toIcon","codicon","SelectedSuggestionInfo","completionKind","isSnippetText","isLocationLink","originSelectionRange","targetSelectionRange","symbolKindNames","localize","getAriaLabelForSymbol","symbolName","SymbolKinds","NewSymbolNameTag","NewSymbolNameTriggerKind","Command","InlayHintKind","FoldingRangeKind","Comment","Imports","Region","title","LazyTokenizationSupport","createSupport","_tokenizationSupport","support","tokenizationSupport","TokenizationRegistry","TreeSitterTokenizationRegistry","InlineEditTriggerKind","_parseCaptureGroups","captureGroups","captureGroup","parsedNumber","_toIColor","alpha","_findRange","positionAt","_findHexColorInformation","hexValue","parsedHexColor","_findRGBColorInformation","matches","isAlpha","parsedRegex","_findHSLColorInformation","colorEquivalent","_findMatches","matchAll","findMatches","computeDefaultDocumentColors","initialValidationMatches","initialMatch","initialCaptureGroups","colorScheme","colorParameters","colorInformation","regexParameters","computeColors","ILanguageService","createDecorator","IndentAction","StandardAutoClosingPairConditional","_neutralCharacter","_neutralCharacterSearched","open","_inString","_inComment","_inRegEx","notIn","isOK","standardToken","shouldAutoClose","getTokenCount","tokenIndex","findTokenIndexAtOffset","standardTokenType","getStandardTokenType","_findNeutralCharacterInRange","toCharCode","character","findNeutralCharacter","AutoClosingPairs","autoClosingPairs","autoClosingPairsOpenByStart","autoClosingPairsOpenByEnd","autoClosingPairsCloseByStart","autoClosingPairsCloseByEnd","autoClosingPairsCloseSingleChar","appendEntry","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","LanguageConfigurationServiceChangeEvent","affects","ILanguageConfigurationService","LanguageConfigurationService","configurationService","languageService","_registry","LanguageConfigurationRegistry","onDidChangeEmitter","configurations","languageConfigKeys","customizedLanguageConfigKeys","onDidChangeConfiguration","globalConfigChanged","localConfigChanged","overrides","overrideLangName","isRegisteredLanguageId","configuration","priority","getLanguageConfiguration","registry","languageConfig","ResolvedLanguageConfiguration","customizedConfig","brackets","overrideIdentifier","colorizedBracketPairs","validateBracketPairs","getCustomizedLanguageConfig","combineLanguageConfigurations","underlyingConfig","computeConfig","IConfigurationService","getIndentationAtPosition","lineText","getLineContent","ComposedLanguageConfiguration","_resolved","_order","LanguageConfigurationContribution","getResolvedConfiguration","_resolve","cmp","configs","comments","wordPattern","indentationRules","onEnterRules","surroundingPairs","autoCloseBefore","folding","__electricCharacterSupport","order","LanguageConfigurationChangeEvent","PLAINTEXT_LANGUAGE_ID","offSide","_brackets","_electricCharacter","_onEnterSupport","OnEnterSupport","_handleComments","characterPair","CharacterPairSupport","indentRulesSupport","IndentRulesSupport","foldingRules","bracketsNew","LanguageBracketsConfiguration","getWordDefinition","RichEditBrackets","electricCharacter","BracketElectricCharacterSupport","onEnter","autoIndent","previousLineText","beforeEnterText","afterEnterText","getAutoClosingPairs","getAutoCloseBeforeSet","forQuotes","getSurroundingPairs","conf","commentRule","lineComment","lineCommentToken","blockComment","blockStart","blockEnd","blockCommentStartToken","blockCommentEndToken","registerSingleton","Uint8Matrix","rows","cols","row","StateMachine","edges","maxCharCode","maxState","states","_states","_maxCharCode","nextState","currentState","_stateMachine","_classifier","LinkComputer","_createLink","classifier","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","charCodeBeforeLink","lastCharCodeInLink","computeLinks","stateMachine","getStateMachine","FORCE_TERMINATION_CHARACTERS","CANNOT_END_WITH_CHARACTERS","getClassifier","getLineCount","linkBeginChCode","hasOpenParens","hasOpenSquareBracket","inSquareBrackets","hasOpenCurlyBracket","resetStateMachine","chClass","Extensions","ModesRegistry","EditorModesRegistry","_onDidChangeLanguages","onDidChangeLanguages","_languages","registerLanguage","def","getLanguages","Registry","PLAINTEXT_EXTENSION","aliases","mimetypes","as","Configuration","registerDefaultConfigurations","NullState","nullTokenize","nullTokenizeEncoded","Uint32Array","createScopedLineTokens","tokenCount","getCount","desiredLanguageId","lastTokenIndex","firstTokenIndex","ScopedLineTokens","getStartOffset","getEndOffset","firstCharOffset","lastCharOffset","_scopedLineTokensBrand","_firstTokenIndex","_lastTokenIndex","_lastCharOffset","languageIdCodec","getLineLength","getActualLineContentBefore","toIViewLineTokens","sliceAndInflate","ignoreBracketsInToken","DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED_QUOTES","DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED_BRACKETS","_autoClosingPairs","el","docComment","_autoCloseBeforeForQuotes","_autoCloseBeforeForBrackets","_surroundingPairs","richEditBrackets","_richEditBrackets","getElectricCharacters","lastChar","onElectricCharacter","reversedBracketRegex","reversedRegex","BracketsUtils","findPrevBracketInRange","bracketText","textIsOpenBracket","textBeforeBracket","matchOpenBracket","resetGlobalRegex","reg","_indentationRules","shouldIncrease","increaseIndentPattern","shouldDecrease","decreaseIndentPattern","shouldIndentNextLine","indentNextLinePattern","shouldIgnore","unIndentedLinePattern","getIndentMetadata","BasicInplaceReplace","_defaultValueSet","INSTANCE","navigateValueSet","range1","text1","range2","text2","up","doNavigateValueSet","numberResult","numberReplace","textReplace","precision","n1","n2","parseFloat","valueSetsReplace","valueSets","valueSetReplace","valueSet","bracketPairs","filterValidBrackets","openingBracketInfos","closing","OpeningBracketKind","closingBracketInfos","opening","openingColorized","ClosingBracketKind","_openingBrackets","_closingBrackets","openingBrackets","closingBrackets","getOpeningBracketInfo","getClosingBracketInfo","getBracketInfo","getBracketRegExp","createBracketOrRegExp","BracketKindBase","openedBrackets","isOpeningBracket","openingColorizedBrackets","closes","closesColorized","getOpeningBrackets","openRegExp","_createOpenBracketRegExp","closeRegExp","_createCloseBracketRegExp","_regExpRules","rule","beforeText","afterText","action","indentAction","IndentOutdent","Indent","_safeRegExp","RichEditBracket","forwardRegex","_richEditBracketBrand","_openSet","_toSet","_closeSet","isOpen","isClose","_richEditBracketsBrand","N","areOverlapping","aOpen","aClose","bOpen","bClose","mergeGroups","g1","g2","newG","oldG","currentOpen","currentClose","groupFuzzyBrackets","currentIndex","pieces","collectSuperstrings","unique","lengthcmp","getRegexForBracketPair","toReversedString","getReversedRegexForBracketPair","getRegexForBrackets","getReversedRegexForBrackets","textIsBracket","maxBracketLength","prepareBracketForRegExp","insertWordBoundaries","regexStr","lastInput","lastOutput","_findPrevBracketInText","reversedText","matchOffset","matchLength","absoluteMatchOffset","startOffset","reversedSubstr","findNextBracketInText","bracketRegex","findNextBracketInRange","OverviewRulerLane","GlyphMarginLane","InjectedTextCursorStops","TextModelResolvedOptions","originalIndentSize","_indentSizeIsTabSize","src","_textModelResolvedOptionsBrand","defaultEOL","createChangeEvent","newOpts","FindMatch","_findMatchBrand","isITextSnapshot","ValidAnnotatedEditOperation","identifier","forceMoveMarkers","isAutoWhitespaceEdit","_isTracked","SearchData","simpleSearch","ApplyEditsResult","reverseEdits","trimAutoWhitespaceLineNumbers","isTooLargeForSyncing","isForSimpleWidget","BracketPairsTextModelPart","canBuildAST","textModel","getValueLength","languageConfigurationService","bracketPairsTree","bracketsRequested","handleLanguageConfigurationServiceChange","didLanguageChange","updateBracketPairsTree","handleDidChangeOptions","handleDidChangeLanguage","handleDidChangeContent","handleContentChanged","handleDidChangeBackgroundTokenizationState","handleDidChangeTokens","BracketPairsTree","getBracketPairsInRange","getBracketPairsInRangeWithMinIndentation","getBracketsInRange","onlyColorizedBrackets","findMatchingBracketUp","_bracket","_position","maxDuration","getLanguageIdAtPosition","closingBracketInfo","bracketPair","openingBracketInfo","openingBracketRange","bracketsSupport","stripBracketSearchCanceled","_findMatchingBracketUp","createTimeBasedContinueBracketSearchPredicate","matchBracket","closingBracketRange","continueSearchPredicate","_matchBracket","_establishBracketSearchOffsets","lineTokens","modeBrackets","currentLanguageId","searchStartOffset","tokenEndOffset","searchEndOffset","tokenStartOffset","tokenization","getLineTokens","currentModeBrackets","bestResult","foundBracket","foundBracketText","_matchFoundBracket","BracketSearchCanceled","prevTokenIndex","prevModeBrackets","_findMatchingBracketDown","totalCallCount","searchPrevMatchingBracketInRange","hitText","prevSearchInToken","searchInToken","searchNextMatchingBracketInRange","findPrevBracket","getFirstBracketBefore","bracketConfig","tokenLanguageId","_toFoundBracket","findNextBracket","getFirstBracketAfter","findEnclosingBrackets","savedCounts","counts","resetCounts","searchInRange","getValueInRange","bracketInfo","_searchCanceledBrand","BaseAstNode","_length","PairAstNode","openingBracket","closingBracket","lengthAdd","missingOpeningBracketIds","SmallImmutableSet","getEmpty","listHeight","childrenLength","getChild","canBeReused","openBracketIds","computeMinIndentation","ListAstNode","create23","item3","missingBracketIds","Immutable23ListAstNode","TwoThreeListAstNode","ImmutableArrayListAstNode","lengthZero","_missingOpeningBracketIds","cachedMinIndentation","throwIfImmutable","makeLastElementMutable","childCount","lastChild","mutable","toMutable","setChild","makeFirstElementMutable","firstChild","lastLength","handleChildrenChanged","unopenedBrackets","minIndentation","childOffset","_item3","_item1","_item2","appendChildOfSameHeight","unappendChild","prependChildOfSameHeight","unprependChild","ArrayListAstNode","_children","emptyArray","ImmutableLeafAstNode","TextAstNode","_openedBracketIds","lengthToObj","lengthGetLineCount","firstNonWsColumn","getLineFirstNonWhitespaceColumn","getOptions","BracketAstNode","bracketIds","InvalidBracketAstNode","openedBracketIds","TextEditInfo","fromModelContentChanges","positionToLength","lengthOfString","BeforeEditPositionMapper","nextEditIdx","deltaOldToNewLineCount","deltaOldToNewColumnCount","deltaLineIdxInOld","TextEditInfoCache","getOffsetBeforeChange","adjustNextEdit","translateCurToOld","getDistanceToNextChange","nextEdit","nextChangeOffset","translateOldToCur","offsetObj","lengthDiffNonNegative","oldOffsetObj","toLength","newOffset","nextEditEndOffsetInCur","endOffsetAfterObj","lengthLessThanEqual","nextEditEndOffsetInCurObj","nextEditEndOffsetBeforeInCurObj","endOffsetBeforeObj","lineDelta","previousColumnDelta","columnDelta","didChangeEmitter","denseKeyProvider","DenseKeyProvider","LanguageAgnosticBracketTokens","queuedTextEditsForInitialAstWithoutTokens","queuedTextEdits","hasTokens","backgroundTokenizationState","initialAstWithoutTokens","astWithTokens","parseDocumentFromTextBuffer","getSingleLanguageBracketTokens","tokenizer","FastTokenizer","parseDocument","wasUndefined","fromLineNumber","toLineNumber","handleEdits","tokenChange","combineTextEditInfos","flushQueue","previousAst","previousAstClone","TextBufferTokenizer","collectBrackets","includeMinIndentation","startLength","endLength","CollectBracketPairsContext","collectBracketPairs","nodeOffsetStart","nodeOffsetEnd","lengthLessThan","lengthsToRange","level","nestingLevelOfEqualBracketType","levelPerBracketType","parentPairIsIncomplete","whileLoop","lengthGreaterThanEqual","colorize","levelPerBracket","existing","BracketInfo","shouldContinue","openingBracketEnd","BracketPairWithMinIndentationInfo","curOffset","BracketTokens","createFromLanguage","openingTextId","identityKeyProvider","hasRegExp","_regExpGlobal","getRegExpStr","regExpGlobal","regExpStr","getToken","findClosingTokenText","openingBracketIds","closingText","languageIdToBracketTokens","singleLanguageBracketTokens","textEditInfoFirst","textEditInfoSecond","s0ToS1Map","toLengthMapping","s1ToS2Map","lengthBefore","lengthAfter","curItem","nextS0ToS1MapWithS1LengthOf","s1Length","lengthIsZero","remainingItem","splitAt","LengthMapping","pushEdit","lengthEquals","s0offset","s1ToS2","s0Length","sumLengths","s0EndOffset","s0startOffset","remainingLengthAfter","textEditInfos","lastOffset","textEditInfo","spaceLength","concat23Trees","readNode","concat23TreesOfSameHeight","second","heightDiff","createImmutableLists","node1","node2","list","nodeToAppend","curNode","parents","nodeToAppendOfCorrectHeight","append","nodeToPrependOfCorrectHeight","prepend","lengthDiff","startLineCount","startColumnCount","endLineCount","endColumnCount","lengthGetColumnCountIfZeroLineCount","l1","l2","lengthFn","length1","length2","lineCount1","lineCount2","colCount2","lengthStart","lengthEnd","colCount","NodeReader","nextNodes","offsets","idxs","readLongestNodeAt","lastOrUndefined","curNodeOffset","nextNodeAfterCurrent","nextChildIdx","getNextChildIdx","currentOffset","currentNode","curIdx","oldNode","Parser","_itemsConstructed","_itemsFromCache","oldNodeReader","positionMapper","parseList","tryReadChildFromCache","parseChild","maxCacheableLength","cachedNode","skip","astNode","nextToken","bracketId","emptyArr","additionalItems","keyProvider","newItem","bracketTokens","NonPeekableTextBufferTokenizer","didPeek","peeked","textBufferLineCount","textBufferLastLineLength","setPosition","lineCharOffset","lineTokenOffset","peekedToken","startLineIdx","startLineCharOffset","lengthHeuristic","peekedBracketToken","tokenMetadata","getMetadata","isOther","containsBracketType","curLineCount","lastLineBreakOffset","lastTokenEndOffset","lastTokenEndLine","smallTextTokens0Line","smallTextTokens1Line","ColorizedBracketPairsDecorationProvider","colorProvider","ColorProvider","colorizationOptions","getDecorationsInRange","filterOutValidation","onlyMinimapDecorations","nestingLevel","description","inlineClassName","getInlineClassName","getAllDecorations","unexpectedClosingBracketClassName","isInvalid","getInlineClassNameOfLevel","colors","colorValues","uriGetComparisonKey","SingleModelEditStackData","beforeCursorState","alternativeVersionId","getAlternativeVersionId","getModelEOL","beforeVersionId","afterVersionId","beforeEOL","afterEOL","afterCursorState","textChanges","_writeSelectionsSize","selections","_writeSelections","_readSelections","necessarySize","changeCount","SingleModelEditStackElement","matchesResource","setModel","canAppend","undo","_applyUndo","_applyRedo","heapSize","MultiModelEditStackElement","resources","_editStackElementsArr","editStackElement","editStackElements","_isOpen","_editStackElementsMap","prepareUndoRedo","getEOL","isEditStackElement","EditStack","undoRedoService","_model","_undoRedoService","pushStackElement","lastElement","getLastElement","popStackElement","removeElements","_getOrCreateEditStackElement","newElement","pushElement","pushEOL","setEOL","pushEditOperation","editOperations","cursorStateComputer","inverseEditOperations","applyEdits","_computeCursorState","op","textChange","FixedArray","_default","arrayFill","deleteIndex","insertCount","GuidesTextModelPart","TextModelPart","_computeIndentLevel","lineIndex","computeIndentLevel","getActiveIndentGuide","minLineNumber","maxLineNumber","assertNotDisposed","up_aboveContentLineIndex","up_aboveContentLineIndent","up_belowContentLineIndex","up_belowContentLineIndent","up_resolveIndents","down_aboveContentLineIndex","down_aboveContentLineIndent","down_belowContentLineIndex","down_belowContentLineIndent","down_resolveIndents","goUp","goDown","initialIndent","distance","upLineNumber","downLineNumber","upLineIndentLevel","currentIndent","_getIndentLevelForWhitespaceLine","downLineIndentLevel","getLinesBracketGuides","activePosition","includeSingleLinePairs","getLineMaxColumn","activeBracketPairRange","bracketsContainingActivePosition","bp","BracketPairGuidesClassNames","isActive","includeInactive","highlightActive","activeClassName","horizontalGuides","HorizontalGuidesState","Enabled","EnabledForActive","IndentGuide","IndentGuideHorizontalLine","endVisibleColumn","getVisibleColumnFromPosition","startVisibleColumn","guideVisibleColumn","minVisibleColumnIndentation","renderHorizontalEndLineAtTheBottom","visibleGuideStartLineNumber","visibleGuideEndLineNumber","guides","getLinesIndentGuides","aboveContentLineIndex","aboveContentLineIndent","belowContentLineIndex","belowContentLineIndent","resultIndex","SpacesDiffResult","spacesDiff","looksLikeAlignment","aLength","bLength","aSpacesCnt","aTabsCount","bSpacesCnt","bTabsCount","tabsDiff","guessIndentation","defaultTabSize","defaultInsertSpaces","linesCount","linesIndentedWithTabsCount","linesIndentedWithSpacesCount","previousLineIndentation","ALLOWED_TAB_SIZE_GUESSES","spacesDiffCount","currentLineLength","currentLineText","useCurrentLineText","currentLineHasContent","currentLineIndentation","currentLineSpacesCount","currentLineTabsCount","lenJ","getLineCharCode","currentSpacesDiff","tabSizeScore","possibleTabSize","possibleTabSizeScore","getNodeColor","setNodeColor","getNodeIsVisited","setNodeIsVisited","getNodeIsForValidation","setNodeIsForValidation","getNodeIsInGlyphMargin","setNodeIsInGlyphMargin","_setNodeStickiness","stickiness","setCollapseOnReplaceEdit","IntervalNode","maxEnd","cachedVersionId","cachedAbsoluteStart","cachedAbsoluteEnd","versionId","setOptions","glyphMarginClassName","collapseOnReplaceEdit","setCachedOffsets","absoluteStart","absoluteEnd","detach","SENTINEL","IntervalTree","requestNormalizeDelta","intervalSearch","filterOwnerId","onlyMarginDecorations","T","intervalStart","intervalEnd","nodeMaxEnd","nodeStart","nodeEnd","include","collectNodesFromOwner","collectNodesPostOrder","rbTreeInsert","_normalizeDeltaIfNecessary","rbTreeDelete","resolveNode","initialNode","acceptReplace","nodesOfInterest","searchForEditing","editDelta","recomputeMaxEnd","noOverlapReplace","nodeAcceptEdit","normalizeDelta","adjustMarkerBeforeColumn","markerOffset","markerStickToPreviousCharacter","checkOffset","moveSemantics","nodeStickiness","getNodeStickiness","startStickToPreviousCharacter","endStickToPreviousCharacter","deletingCnt","insertingCnt","commonLength","startDone","endDone","getCollapseOnReplaceEdit","z","zAbsoluteStart","zAbsoluteEnd","intervalCompare","treeInsert","recomputeMaxEndWalkToRoot","rightRotate","leftest","resetSentinel","yWasRed","computeMaxEnd","leftMaxEnd","rightMaxEnd","MirrorTextModel","_uri","_lines","_eol","_versionId","_lineStarts","_cachedTextValue","version","onEvents","_acceptDeleteRange","_acceptInsertText","_ensureLineStarts","eolLength","linesLength","lineStartValues","PrefixSumComputer","_setLineText","setValue","removeValues","insertText","insertLines","newLengths","insertValues","AverageBufferSize","createUintArray","LineStarts","lineStarts","cr","lf","crlf","createLineStartsFast","readonly","rLength","createLineStarts","Piece","bufferIndex","lineFeedCnt","StringBuffer","PieceTreeSnapshot","tree","BOM","_pieces","_tree","_BOM","piece","getPieceContent","PieceTreeSearchCache","nodePos","nodeStartOffset","get2","nodeStartLineNumber","nodePosition","validate","hasInvalidVal","newArr","PieceTreeBase","chunks","eolNormalized","_buffers","_lastChangeBufferPos","_lineCnt","_EOL","_EOLLength","_EOLNormalized","lastNode","rbInsertRight","_searchCache","_lastVisitedLine","computeBufferMetadata","normalizeEOL","averageBufferSize","tempChunk","tempChunkLen","getNodeContent","newEOL","createSnapshot","getOffsetAt","leftLen","lf_left","size_left","getAccumulatedValue","getPositionAt","lfCnt","originalOffset","getIndexOf","remainder","nodeAt2","endPosition","getValueInRange2","offsetInBuffer","getLinesContent","currentLine","danglingCR","pieceLength","pieceStartLine","pieceEndLine","pieceStartOffset","getLength","getLineRawContent","_getCharCode","matchingNode","targetOffset","findMatchesInNode","searcher","startCursor","endCursor","searchData","captureMatches","limitResultCount","startOffsetInBuffer","searchText","_wordSeparators","positionInBuffer","getLineFeedCnt","retStartColumn","retEndColumn","createFindMatch","findMatchesLineByLine","searchRange","Searcher","lineBreakCnt","nextLineStartOffset","_findMatchesInLine","deltaOffset","searchStringLen","lastMatchIndex","isValidMatch","nodeAt","insertPosInBuffer","appendToNode","insertContentToNodeLeft","nodesToDel","newRightPiece","shouldCheckCRLF","endWithCR","nodeCharCodeAt","newStart","startWithLF","previousPos","deleteNodeTail","newPieces","createNewPieces","tmpNode","deleteNodes","insertContentToNodeRight","rbInsertLeft","cnt","startNode","endNode","startSplitPosInBuffer","endSplitPosInBuffer","rbDelete","validateCRLFWithPrevNode","deleteNodeHead","validateCRLFWithNextNode","shrinkNode","nPiece","updateTreeMetadata","adjustCarriageReturnFromNext","midStop","midStart","previousCharOffset","cursor","nodes","splitText","endPos","newPiece","prevAccumulatedValue","accumulatedValue","lineCnt","realLineCnt","expectedLineStartIndex","originalLFCnt","originalEndOffset","newEndOffset","newLineFeedCnt","lf_delta","size_delta","originalStartOffset","originalStartPos","originalEndPos","oldLFCnt","hitCRLF","prevStartOffset","oldLineFeedCnt","prevAccumualtedValue","offsetOfNode","nextNode","fixCRLF","prevNewLength","prevNewLFCnt","leftRet","TreeNode","fixInsert","prevNode","righttest","PieceTreeTextBuffer","_onDidChangeContent","_mightContainNonBasicASCII","_mightContainRTL","_mightContainUnusualLineTerminators","_pieceTree","mightContainRTL","mightContainUnusualLineTerminators","resetMightContainUnusualLineTerminators","mightContainNonBasicASCII","getBOM","preserveBOM","getRangeAt","lineEnding","_getEndOfLine","getValueLengthInRange","eolOffsetCompensation","desiredEOL","actualEOL","getCharacterCountInRange","fromOffset","toOffset","getLineLastNonWhitespaceColumn","rawOperations","recordTrimAutoWhitespace","computeUndoEdits","canReduceOperations","operations","validatedRange","textMightContainNonBasicASCII","validText","lastLineLength","strEOL","bufferEOL","sortIndex","rangeOffset","rangeLength","_sortOpsAscending","hasTouchingRanges","rangeEnd","nextRangeStart","_reduceOperations","reverseRanges","_getInverseEditRanges","newTrimAutoWhitespaceCandidates","reverseRange","currentLineContent","oldContent","reverseOperations","reverseRangeDeltaOffset","bufferText","reverseRangeOffset","contentChanges","_doApplyEdits","prevContent","_toSingleEditOperation","firstEditRange","lastEditRange","entireEditRange","lastEndLineNumber","lastEndColumn","operation","_sortOpsDescending","contentChangeRange","prevOpEndLineNumber","prevOpEndColumn","prevOp","resultRange","PieceTreeTextBufferFactory","_chunks","_bom","_cr","_lf","_crlf","_containsRTL","_containsUnusualLineTerminators","_isBasicASCII","_normalizeEOL","_getEOL","totalEOLCount","totalCRCount","newLineStart","textBuffer","PieceTreeTextBufferBuilder","_hasPreviousChar","_previousChar","_tmpLineStarts","acceptChunk","chunk","_acceptChunk1","allowEmptyStrings","_acceptChunk2","_finish","lastChunk","newLineStarts","calculateSize","calculateLF","recomputeTreeMetadata","newSizeLeft","newLFLeft","lineFeedCntDelta","prefixSum","prefixSumValidIndex","oldValues","oldPrefixSum","insertValuesLen","subarray","maxCount","getTotalSum","_getPrefixSum","getPrefixSum","sum","PrefixSumIndexOfResult","ConstantTimePrefixSumComputer","_isValid","_validEndIndex","_prefixSum","_indexBySum","_ensureValid","viewLinesAbove","_invalidate","sumAbove","_prefixSumIndexOfResultBrand","TextModel_1","createTextBufferFactory","builder","createTextBufferFactoryFromSnapshot","createTextBuffer","MODEL_ID","TextModelSnapshot","_eos","resultCnt","resultLength","invalidFunc","TextModel","_MODEL_SYNC_LIMIT","LARGE_FILE_SIZE_THRESHOLD","LARGE_FILE_LINE_COUNT_THRESHOLD","LARGE_FILE_HEAP_OPERATION_THRESHOLD","DEFAULT_CREATION_OPTIONS","resolveOptions","guessedIndentation","onDidChangeLanguage","_tokenizationTextModelPart","onDidChangeLanguageConfiguration","onDidChangeTokens","onDidChangeContent","_eventEmitter","slowEvent","contentChangedEvent","onDidChangeContentOrInjectedText","fastEvent","_onDidChangeInjectedText","_isDisposing","__isDisposing","_bracketPairs","_guidesTextModelPart","languageIdOrSelection","creationOptions","associatedResource","_languageService","_languageConfigurationService","instantiationService","_onWillDispose","onWillDispose","_onDidChangeDecorations","DidChangeDecorationsEmitter","affectedInjectedTextLines","handleBeforeFireDecorationsChangedEvent","onDidChangeDecorations","_onDidChangeOptions","onDidChangeOptions","_onDidChangeAttached","onDidChangeAttached","DidChangeContentEmitter","_languageSelectionListener","_deltaDecorationCallCnt","_attachedViews","AttachedViews","_associatedResource","_attachedEditorCount","_bufferDisposable","_setLanguage","_decorationProvider","createInstance","TokenizationTextModelPart","bufferLineCount","bufferTextLength","_isTooLargeForTokenization","_isTooLargeForHeapOperation","_isTooLargeForSyncing","_alternativeVersionId","_initialUndoRedoSnapshot","_instanceId","_lastDecorationId","_decorations","_decorationsTree","DecorationsTrees","_commandManager","_isUndoing","_isRedoing","_trimAutoWhitespaceLines","beginDeferredEmit","endDeferredEmit","requestRichLanguageFeatures","emptyDisposedTextBuffer","_assertNotDisposed","_emitContentChangedEvent","rawChange","InternalModelContentChangeEvent","_setValueFromTextBuffer","_createContentChanged2","isUndoing","isRedoing","isFlush","isEolChange","getVersionId","textBufferDisposable","oldFullModelRange","getFullModelRange","oldModelValueLength","_increaseVersionId","ModelRawContentChangedEvent","ModelRawFlush","_onBeforeEOLChange","_onAfterEOLChange","ModelRawEOLChanged","ensureAllNodesHaveRanges","allDecorations","onBeforeAttached","handleDidChangeAttached","attachView","onBeforeDetached","detachView","isAttachedToEditor","getAttachedEditorCount","isTooLargeForTokenization","isTooLargeForHeapOperation","isDominatedByLongLines","smallLineCharCount","longLineCharCount","getFormattingOptions","updateOptions","_newOpts","bracketColorizationOptions","removeUnusualLineTerminators","pushEditOperations","getInitialUndoRedoSnapshot","rawPosition","_validatePosition","rawOffset","_overwriteVersionId","_overwriteAlternativeVersionId","newAlternativeVersionId","_overwriteInitialUndoRedoSnapshot","newInitialUndoRedoSnapshot","fullModelRange","fullModelValue","rawRange","getEndOfLineSequence","getLineMinColumn","_validateRangeRelaxedNoAllocations","initialStartLineNumber","initialStartColumn","maxColumn","initialEndLineNumber","initialEndColumn","_isValidPosition","validationType","charCodeBefore","_lineNumber","_column","_isValidRange","charCodeBeforeStart","charCodeBeforeEnd","startInsideSurrogatePair","endInsideSurrogatePair","_range","modifyPosition","rawSearchScope","searchRanges","searchScope","d1","d2","uniqueSearchRanges","matchMapper","SearchParams","parseSearchRequest","TextModelSearch","findNextMatch","rawSearchStart","searchStart","findPreviousMatch","_validateEditOperation","rawOperation","_validateEditOperations","_pushEditOperations","incomingEdits","editsAreNearCursors","foundEditNearSel","selIsAbove","selIsBelow","trimLineNumber","maxLineColumn","allowTrimLine","editText","trimRange","resultingAlternativeVersionId","resultingSelection","rangeStart","_applyUndoRedoEdits","oldLineCount","newLineCount","rawContentChanges","deletingLinesCnt","insertingLinesCnt","editingLinesCnt","changeLineCountDelta","currentEditStartLineNumber","firstEditLineNumber","lastInsertedLineNumber","decorationsWithInjectedTextInEditedRange","getInjectedTextInInterval","injectedTextInEditedRange","LineInjectedText","fromDecorations","injectedTextInEditedRangeQueue","editLineNumber","currentEditLineNumber","decorationsInCurrentLine","ModelRawLineChanged","spliceStartLineNumber","ModelRawLinesDeleted","spliceLineNumber","injectedTexts","newLines","ModelRawLinesInserted","canUndo","canRedo","lineChangeEvents","_getInjectedTextInLine","ModelInjectedTextChangedEvent","changeDecorations","_changeDecorations","changeAccessor","addDecoration","_deltaDecorationsImpl","changeDecoration","_changeDecorationImpl","changeDecorationOptions","_changeDecorationOptionsImpl","_normalizeOptions","removeDecoration","deltaDecorations","oldDecorations","newDecorations","_getTrackedRange","getDecorationRange","_setTrackedRange","newStickiness","TRACKED_RANGE_OPTIONS","removeAllDecorationsWithOwnerId","getDecorationOptions","decorationId","getNodeRange","getLineDecorations","getLinesDecorations","_startLineNumber","_endLineNumber","decorations","_getDecorationsInRange","getOverviewRulerDecorations","getAll","getInjectedTextDecorations","getAllInjectedText","getAllMarginDecorations","filterRange","getAllInInterval","oldRange","recordLineAffectedByInjectedText","checkAffectedAndFire","nodeWasInOverviewRuler","overviewRuler","nodeIsInOverviewRuler","nodeRange","movedInOverviewRuler","changedWhetherInjectedText","isOptionsInjectedText","isNodeInjectedText","oldDecorationsIds","suppressEvents","oldDecorationsLen","oldDecorationIndex","newDecorationsLen","newDecorationIndex","internalDecorationId","newDecoration","setLanguage","setLanguageId","getWordAtPosition","getWordUntilPosition","affinity","getLineIndentColumn","indentOfLine","isNodeInOverviewRuler","IUndoRedoService","IInstantiationService","_decorationsTree0","_decorationsTree1","_injectedTextDecorationsTree","_ensureNodesHaveRanges","_intervalSearch","r0","showIfCollapsed","overviewRulerOnly","_search","_resolveNode","cleanClassName","DecorationOptions","darkColor","ModelDecorationOverviewRulerOptions","_resolvedColor","Center","_resolveColor","invalidateCachedColor","ModelDecorationGlyphMarginOptions","persistLane","ModelDecorationMinimapOptions","sectionHeaderStyle","sectionHeaderText","ModelDecorationInjectedTextOptions","inlineClassNameAffectsLetterSpacing","attachedData","cursorStops","ModelDecorationOptions","createDynamic","blockClassName","blockDoesNotCollapse","blockIsAfterEnd","blockPadding","zIndex","shouldFillLineOnLineBreak","hoverMessage","glyphMarginHoverMessage","lineNumberHoverMessage","isWholeLine","minimap","glyphMargin","linesDecorationsClassName","lineNumberClassName","linesDecorationsTooltip","firstLineDecorationClassName","marginClassName","beforeContentClassName","afterContentClassName","hideInCommentTokens","hideInStringTokens","handleBeforeFire","_affectedInjectedTextLines","_deferredCnt","_shouldFireDeferred","_affectsMinimap","_affectsOverviewRuler","_affectsGlyphMargin","_affectsLineNumber","tryFire","affectsMinimap","affectsOverviewRuler","affectsGlyphMargin","affectsLineNumber","_fastEmitter","_slowEmitter","_deferredEvent","rawContentChangedEvent","isMultilineRegexSource","canUseSimpleSearch","toUpperCase","nextChCode","rawMatches","LineFeedCounter","lineFeedsOffsets","lineFeedsOffsetsLen","_lineFeedsOffsets","findLineFeedCountBeforeOffset","_doFindMatchesMultiline","_doFindMatchesLineByLine","_getMultilineMatchRange","lfCounter","match0","lineFeedCountBeforeMatch","lineFeedCountInMatch","_doFindNextMatchMultiline","_doFindNextMatchLineByLine","searchTextStart","_findFirstMatchInLine","fromColumn","_doFindPreviousMatchMultiline","_doFindPreviousMatchLineByLine","_findLastMatchInLine","matchStartIndex","charBefore","firstCharInMatch","leftIsWordBounday","charAfter","lastCharInMatch","rightIsWordBounday","searchRegex","_searchRegex","_prevMatchStartIndex","_prevMatchLength","TokenizerWithStateStore","initialState","getInitialState","TrackingTokenizationStateStore","getStartState","getFirstInvalidLine","TokenizerWithStateStoreAndTextModel","_textModel","_languageIdCodec","updateTokensUntilLine","lineToTokenize","safeTokenize","startState","setEndState","getTokenTypeIfInsertingCharacter","lineStartState","LineTokens","tokenizeLineWithEdit","curLineContent","newLineContent","hasAccurateTokensForLine","getFirstInvalidEndStateLineNumberOrMax","isCheapToTokenize","firstInvalidLineNumber","tokenizeHeuristically","heuristicTokens","guessStartState","nonWhitespaceColumn","likelyRelevantLines","newNonWhitespaceIndex","_tokenizationStateStore","TokenizationStateStore","_invalidEndStatesLineNumbers","RangePriorityQueueImpl","getEndState","acceptChange","addRangeAndResize","acceptChanges","invalidateEndStateRange","getFirstInvalidEndStateLineNumber","allStatesValid","_lineEndStates","oldState","_ranges","findIndex","idxFirstMightBeIntersecting","idxFirstIsAfter","endEx","hasEOL","tokenizeEncoded","encodeLanguageId","convertToEndOffset","DefaultBackgroundTokenizer","_tokenizerWithStateStore","_backgroundTokenStore","_isScheduled","handleChanges","_beginBackgroundTokenization","_hasLinesToTokenize","_backgroundTokenizeWithDeadline","endTime","execute","_backgroundTokenizeForAtLeast1ms","ContiguousMultilineTokensBuilder","sw","_tokenizeOneInvalidLine","setTokens","finalize","checkFinished","firstInvalidLine","backgroundTokenizationFinished","requestTokens","TokenizationTextModelPart_1","_bracketPairsTextModelPart","_languageId","_treeSitterService","_semanticTokens","SparseTokensStore","_onDidChangeLanguage","_onDidChangeLanguageConfiguration","_onDidChangeTokens","_tokensDisposables","changedLanguages","createPreferredTokenProvider","createGrammarTokens","GrammarTokens","createTreeSitterTokens","TreeSitterTokens","createTokens","useTreeSitter","needsReset","_tokens","_emitModelTokensChangedEvent","onDidChangeBackgroundTokenizationState","resetTokenization","acceptEdit","validateLineNumber","syntacticTokens","addSparseTokens","forceTokenization","tokenizeIfCheap","setSemanticTokens","isComplete","semanticTokensApplied","hasCompleteSemanticTokens","hasSomeSemanticTokens","setPartialSemanticTokens","changedRange","setPartial","rbStartOffset","rbEndOffset","_findLanguageBoundaries","rightBiasedWord","lbStartOffset","lbEndOffset","leftBiasedWord","wordAtPosition","oldLanguage","newLanguage","ITreeSitterParserService","AbstractTokens","attachedViews","_tokenizer","_defaultBackgroundTokenizer","_backgroundTokenizer","ContiguousTokensStore","_debugBackgroundTokenizer","_attachedViewStates","onDidChangeVisibleRanges","AttachedViewHandler","refreshRanges","handleStateChange","fireTokenChangeEvent","_debugBackgroundTokens","_debugBackgroundStates","initializeTokenization","_backgroundTokenizationState","_onDidChangeBackgroundTokenizationState","firstInvalidEndStateLineNumber","createBackgroundTokenizer","backgroundTokenizerShouldOnlyVerifyTokens","setMultilineTokens","refreshAllVisibleLineTokens","refreshRange","changedTokens","getTokens","backgroundResult","reportMismatchingTokens","validatedPosition","_onDidChangeVisibleRanges","_views","AttachedViewImpl","setVisibleLines","visibleLines","stabilized","visibleLineRanges","_lineRanges","_refreshTokens","_computedLineRanges","_initialize","_lastLanguageId","rawTokens","createEmpty","getParseResult","KeyMod","CtrlCmd","Shift","Alt","WinCtrl","chord","createMonacoBaseAPI","editor","languages","KeyCode","SelectionDirection","MarkerSeverity","MarkerTag","BaseEditorSimpleWorker","_workerTextModelSyncServer","WorkerTextModelSyncServer","_getModel","getModel","_getModels","getModels","$acceptNewModel","$acceptModelChanged","$acceptRemovedModel","$computeUnicodeHighlights","UnicodeTextModelHighlighter","computeUnicodeHighlights","hasMore","ambiguousCharacterCount","invisibleCharacterCount","nonBasicAsciiCharacterCount","$findSectionHeaders","findSectionHeaders","$computeDiff","originalUrl","modifiedUrl","algorithm","EditorSimpleWorker","originalTextModel","modifiedTextModel","diffAlgorithm","getLineChanges","identical","_modelsAreIdentical","_diffLimit","$computeMoreMinimalEdits","modelUrl","lastEol","writeIndex","readIndex","editOffset","offsetAt","newEdit","$computeLinks","$computeDefaultDocumentColors","_suggestionsLimit","$textualSuggest","modelUrls","leadingWord","wordDef","wordDefFlags","wordDefRegExp","outer","words","duration","$computeWordRanges","getLineWords","$navigateValueSet","selectionText","wordRange","_host","_foreignModuleFactory","_foreignModule","$ping","$loadForeignModule","createData","foreignHostMethods","ctx","$fhr","getMirrorModels","onModuleCallback","foreignModule","$fmr","workerServer","EditorWorkerHost","monaco","IEditorWorkerService","CHANNEL_NAME","workerClient","markRegex","trimDashesRegex","headers","findRegionSectionHeaders","markers","regionHeaders","sectionHeader","getHeaderText","shouldBeInComments","hasSeparatorLine","collectRegionHeaders","findMarkSectionHeaders","markHeaders","addMarkHeaderIfFound","collectMarkHeaders","sectionHeaders","indices","fileIconDirectoryRegex","getIconClasses","modelService","fileKind","classes","FileKind","ROOT_FOLDER","FOLDER","cssEscape","dotSegments","detectedLanguageId","getLanguageIdByMimeType","guessLanguageIdByFilepathOrFirstLine","detectLanguageId","ILanguageFeatureDebounceService","IdentityHash","_hashes","pool","NullDebounceInformation","FeatureDebounceInformation","_logService","_name","_min","_max","_key","avg","default","trace","_overall","LanguageFeatureDebounceService","envService","_isDev","isExtensionDevelopment","isBuilt","feature","extra","_overallAverage","ILogService","IEnvironmentService","ILanguageFeaturesService","LanguageFeaturesService","referenceProvider","renameProvider","newSymbolNamesProvider","codeActionProvider","definitionProvider","typeDefinitionProvider","declarationProvider","implementationProvider","documentSymbolProvider","inlayHintsProvider","codeLensProvider","documentFormattingEditProvider","documentRangeFormattingEditProvider","onTypeFormattingEditProvider","signatureHelpProvider","hoverProvider","documentHighlightProvider","multiDocumentHighlightProvider","selectionRangeProvider","foldingRangeProvider","linkProvider","inlineCompletionsProvider","inlineEditProvider","completionProvider","linkedEditingRangeProvider","documentRangeSemanticTokensProvider","documentSemanticTokensProvider","documentDropEditProvider","documentPasteEditProvider","_notebookTypeResolver","LanguageService","instanceCount","warnOnOverwrite","_onDidRequestBasicLanguageFeatures","onDidRequestBasicLanguageFeatures","_onDidRequestRichLanguageFeatures","onDidRequestRichLanguageFeatures","_requestedBasicLanguages","_requestedRichLanguages","LanguagesRegistry","getLanguageIdByLanguageName","languageName","mimeType","firstLine","languageIds","createById","LanguageSelection","_createAndGetLanguageIdentifier","createByFilepathOrFirstLine","requestBasicLanguageFeatures","getOrCreate","registeredAssociations","nonUserRegisteredAssociations","userRegisteredAssociations","registerPlatformLanguageAssociation","association","userConfigured","associationItem","filename","filepattern","firstline","filenameLowercase","extensionLowercase","filepatternLowercase","filepatternOnPath","toLanguageAssociationItem","_registerLanguageAssociation","clearPlatformLanguageAssociations","getLanguageIds","configuredLanguage","getAssociationByPath","registeredLanguage","firstlineLanguage","getAssociationByFirstline","getAssociations","associations","filenameMatch","patternMatch","extensionMatch","NULL_LANGUAGE_ID","LanguageIdCodec","_languageIdToLanguage","_languageToLanguageId","_nextLanguageId","decodeLanguageId","useModesRegistry","_warnOnOverwrite","_dynamicLanguages","_mimeTypesMap","_nameMap","_lowercaseNameMap","_initializeFromRegistry","_registerLanguages","_registerLanguage","langId","alias","mimetype","registerOverrideIdentifiers","getRegisteredLanguageIds","lang","filenames","configurationFiles","icons","_mergeLanguage","primaryMime","filenamePatterns","filenamePattern","firstLineRegexStr","firstLineRegex","langAliases","langAlias","containsAliases","bestName","languageNameLower","IMarkerDecorationsService","MarkerDecorationsService","_markerService","_onDidChangeMarker","_markerDecorations","_onModelAdded","onModelAdded","onModelRemoved","_onModelRemoved","onMarkerChanged","_handleMarkerChange","getMarker","decoration","markerDecorations","changedResources","_updateDecorations","MarkerDecorations","marker","take","IModelService","IMarkerService","oldIds","_createDecorationRange","_createDecorationOption","ids","removedMarker","rawMarker","Hint","_hasMarkerTag","MAX_VALUE","minColumn","themeColorFromId","minimapInfo","minimapWarning","minimapError","tags","Right","ModelService_1","ModelData","_modelEventListeners","DEFAULT_EOL","DisposedModelInfo","initialUndoRedoSnapshot","time","sharesUndoRedoStack","sha1","ModelService","MAX_MEMORY_FOR_CLOSED_FILES_UNDO_STACK","_configurationService","_resourcePropertiesService","_instantiationService","_onModelModeChanged","onModelLanguageChanged","_modelCreationOptionsByLanguageAndResource","_models","_disposedModels","_disposedModelsHeapSize","_updateModelOptions","_readModelOptions","parsedTabSize","parsedIndentSize","newDefaultEOL","bracketPairColorization","_shouldRestoreUndoStack","getCreationOptions","oldOptionsByLanguageAndResource","modelId","modelData","affectsConfiguration","oldOptions","newOptions","_setModelOptionsForModel","currentOptions","_insertDisposedModel","disposedModelData","_removeDisposedModel","_ensureDisposedModelsHeapSize","maxModelsHeapSize","disposedModels","disposedModel","restoreSnapshot","_createModelData","sha1Computer","_getSHA1Computer","sha1IsEqual","canComputeSHA1","computeSHA1","past","future","setElementsValidFlag","createModel","languageSelection","_schemaShouldMaintainUndoRedoElements","getUriComparisonKey","maintainUndoRedoStack","maxMemory","oldLanguageId","newLanguageId","DefaultModelSHA1Computer","ITextResourcePropertiesService","MAX_MODEL_SIZE","shaComputer","ITextModelService","encodeSemanticTokensDto","semanticTokens","deltas","encodeSemanticTokensDtoSize","uint8Arr","b0","b1","b2","b3","reverseEndianness","toLittleEndianBuffer","ENABLE_TRACE","SemanticTokensProviderStyling","_legend","_themeService","_hasWarnedOverlappingTokens","_hasWarnedInvalidLengthTokens","_hasWarnedInvalidEditStart","_hashTable","HashTable","tokenTypeIndex","tokenModifierSet","encodedLanguageId","tokenType","tokenTypes","tokenModifiers","modifierSet","modifierIndex","tokenStyle","getColorTheme","getTokenStyleMetadata","warnOverlappingSemanticTokens","warnInvalidLengthSemanticTokens","warnInvalidEditStart","previousResultId","resultId","editIndex","maxExpectedStart","toMultilineTokens2","styling","srcData","tokensPerArea","lastLineNumber","lastStartCharacter","tokenStartIndex","tokenEndIndex","smallTokenEndIndex","bigTokenEndIndex","destData","destOffset","areaLine","prevLineNumber","prevEndCharacter","srcOffset","deltaLine","deltaCharacter","startCharacter","endCharacter","SparseMultilineTokens","IThemeService","HashTableEntry","_SIZES","_elementsCount","_currentLengthIndex","_currentLength","_growCount","_elements","_nullOutEntries","_hash2","_hashFunc","oldElements","oldNext","_add","ISemanticTokensStylingService","SemanticTokensStylingService","_caches","onDidColorThemeChange","getStyling","getLegend","STOP_SYNC_MODEL_DELTA_TIME_MS","WorkerTextModelSyncClient","keepIdleModels","_syncedModels","_syncedModelsLastUsedTime","_proxy","_modelService","_checkStopModelSync","ensureSyncedResources","forceLargeModels","resourceStr","_beginModelSync","getTime","currentTime","toRemove","_stopModelSync","EOL","toDispose","MirrorModel","offsetToAdd","iteratorOverMatches","wordAtText","wordenize","_wordenize","wordRangesIdx","wordRanges","_validateRange","startLineIndex","endLineIndex","resultLines","hasChanged","maxCharacter","ITextResourceConfigurationService","TreeViewsDnDService","_dragOperations","removeDragOperationTransfer","uuid","DraggedTreeItemsIdentifier","ITreeViewsDnDService","startLine","endLine","codePointHighlighter","CodePointHighlighter","candidates","getCandidateCodePoints","fromCodePoint","forLoop","highlightReason","shouldHighlightNonBasicASCII","MAX_RESULT_LENGTH","computeUnicodeHighlightReason","codePointAt","primaryConfusable","ambiguousCharacters","notAmbiguousInLocales","allowedLocales","confusableWith","allowedCodePoints","nonBasicASCII","invisibleCharacters","cp","isAllowedInvisibleCharacter","wordContext","hasBasicASCIICharacters","hasNonConfusableNonBasicAsciiCharacter","webpackContext","webpackContextResolve","AccessibilitySupport","CodeActionTriggerType","CompletionItemInsertTextRule","CompletionItemKind","CompletionItemTag","CompletionTriggerKind","ContentWidgetPositionPreference","CursorChangeReason","DefaultEndOfLine","EditorAutoIndentStrategy","EditorOption","EndOfLinePreference","EndOfLineSequence","MinimapPosition","MinimapSectionHeaderStyle","MouseTargetType","OverlayWidgetPositionPreference","PartialAcceptTriggerKind","PositionAffinity","RenderLineNumbersType","RenderMinimap","ScrollType","ScrollbarVisibility","ShowLightbulbIconMode","SymbolKind","SymbolTag","TextEditorCursorBlinkingStyle","TextEditorCursorStyle","TrackedRangeStickiness","WrappingIndent","BracketPairInfo","bracketPairNode","changeType","applyInjectedText","lastOriginalOffset","injectedText","containsEvent","_mergeChangeEvents","horizontalLine","forWrappedLinesAfterColumn","forWrappedLinesBeforeOrAtColumn","top","_tokenizationSupports","_factories","_colorMap","changedColorMap","registerFactory","myData","TokenizationSupportFactoryData","isResolved","setColorMap","getColorMap","getDefaultBackground","_isResolved","_factory","_resolvePromise","_create","ContiguousMultilineTokens","appendLineTokens","EMPTY_LINE_TOKENS","ContiguousTokensEditing","deleteBeginning","toChIndex","deleteEnding","fromChIndex","toUint32Array","lineTextLength","tokensCount","fromTokenIndex","findIndexInTokensArray","fromTokenStartOffset","lastEnd","_otherTokens","myTokens","otherTokens","otherTokensCount","chIndex","_lineTokens","topLevelLanguageId","rawLineTokens","getDefaultMetadata","_massageTokens","hasDifferentLanguageId","_ensureLine","_deleteLines","_insertLines","checkEquality","oldTokens","_equals","firstLineIndex","lastLineIndex","lastLineTokens","minChangedLineNumber","maxChangedLineNumber","hasChange","defaultTokenMetadata","decoder","defaultMetadata","createFromTextAndMetadata","fullText","_lineTokensBrand","_tokensCount","_text","slicedEquals","sliceFromTokenIndex","sliceTokenCount","getInlineStyle","getPresentation","inflate","SliceLineTokens","desiredIndex","withInserted","insertTokens","nextOriginalTokenIdx","nextInsertTokenIdx","newTokens","nextOriginalTokenEndOffset","nextInsertToken","getTokenText","_startOffset","_endOffset","_deltaOffset","adjustedTokenIndex","getStandardTokenTypeAtPosition","SparseMultilineTokensStorage","getMaxDeltaLine","_updateEndLineNumber","getRange","deltaRange","removeTokens","bDeltaLine","applyEdit","firstCharCode","deletedLinesCount","tokenMaxDeltaLine","deletedBefore","acceptDeleteRange","acceptInsertText","_tokenCount","_getDeltaLine","_getStartCharacter","_getEndCharacter","_getTokenCount","startChar","maxDeltaLine","endChar","midDeltaLine","SparseLineTokens","startDeltaLine","endDeltaLine","newTokenCount","hasDeletedTokens","firstDeltaLine","tokenDeltaLine","tokenStartCharacter","tokenEndCharacter","aTokens","bTokens","destTokens","destFirstDeltaLine","horizontalShiftForFirstLineTokens","deletedLineCount","isInsertingPreciselyOneWordCharacter","tokenLength","getStartCharacter","getEndCharacter","_isComplete","_firstRange","_lastRange","insertPosition","_findFirstPieceWithLine","aIndex","lastEndOffset","emitToken","bIndex","bStartCharacter","bEndCharacter","bMetadata","bMask","aMask","aMergeIndex","initialized","simpleWorker","isPseudo","getNLSLanguage","document","rest","lookupMessage","fallback","getNLSMessages","localize2","originalMessage","_VSCODE_NLS_MESSAGES","_VSCODE_NLS_LANGUAGE","toValuesTree","properties","conflictReporter","addToValueTree","settingsTreeRoot","removeFromValueTree","valueTree","doRemoveFromValueTree","getConfigurationValue","settingPath","component","accessSetting","getLanguageTagSettingPlainKey","settingKey","allSettings","patternProperties","applicationSettings","machineSettings","machineOverridableSettings","windowSettings","resourceSettings","resourceLanguageSettingsSchemaId","contributionRegistry","JSONContribution","OVERRIDE_IDENTIFIER_PATTERN","OVERRIDE_IDENTIFIER_REGEX","OVERRIDE_PROPERTY_PATTERN","OVERRIDE_PROPERTY_REGEX","overrideIdentifiersFromKey","identifiers","getDefaultValue","configurationRegistry","registeredConfigurationDefaults","overrideIdentifiers","_onDidSchemaChange","_onDidUpdateConfiguration","configurationDefaultsOverrides","defaultLanguageConfigurationOverridesNode","configurationContributors","resourceLanguageSettingsSchema","additionalProperties","allowTrailingCommas","allowComments","configurationProperties","policyConfigurations","excludedConfigurationProperties","registerSchema","registerOverridePropertyPatternKey","registerConfiguration","registerConfigurations","doRegisterConfigurations","configurationDefaults","doRegisterDefaultConfigurations","defaultsOverrides","bucket","configurationDefaultOverridesForKey","configurationDefaultOverrides","newDefaultOverride","mergeDefaultConfigurationsForOverrideIdentifier","configurationDefaultOverrideValue","updateDefaultOverrideProperty","mergeDefaultConfigurationsForConfigurationProperty","updatePropertyDefaultValue","updateSchema","doRegisterOverrideIdentifiers","$ref","defaultDefaultValue","defaultValueSource","configurationValueObject","valueSource","existingDefaultOverride","propertyKey","propertyDefaultValue","objectKey","valuesSource","existingDefaultValue","updateOverridePropertyPatternKey","validateAndRegisterProperties","extensionInfo","restrictedProperties","registerJSONConfiguration","scope","validateProperty","restricted","included","policy","deprecationMessage","markdownDeprecationMessage","subNodes","allOf","getConfigurationProperties","getPolicyConfigurations","overrideIdentifierProperty","resourceLanguagePropertiesSchema","errorMessage","configurationdefaultOverride","defaultSource","disallowConfigurationDefault","CONSTANT_VALUES","defaultConfig","regexParsingWithErrorRecovery","errorEmptyString","hintEmptyString","errorNoInAfterNot","errorClosingParenthesis","errorUnexpectedToken","hintUnexpectedToken","errorUnexpectedEOF","hintUnexpectedEOF","_parseError","_config","_scanner","Scanner","_current","_parsingErrors","_flagsGYRe","scan","expr","_expr","_isAtEnd","_peek","additionalInfo","lexeme","getLexeme","_or","_and","_matchOne","ContextKeyExpr","or","_term","and","_advance","ContextKeyFalseExpr","ContextKeyTrueExpr","_consume","negate","ContextKeyNotExpr","_errExpectedButGot","_primary","true","false","regexLexeme","closingSlashIndex","_removeFlagsGY","ContextKeyRegexExpr","lexemeReconstruction","followingToken","parenBalance","serializedValue","caseIgnoreFlag","_e","_previous","not","notEquals","ContextKeySmallerExpr","ContextKeySmallerEqualsExpr","ContextKeyGreaterExpr","ContextKeyGreaterEqualsExpr","in","_check","got","ContextKeyDefinedExpr","ContextKeyEqualsExpr","ContextKeyNotEqualsExpr","ContextKeyInExpr","ContextKeyNotInExpr","ContextKeyAndExpr","ContextKeyOrExpr","_parser","serialized","expressionsAreEqualWithConstantSubstitution","aExpr","substituteConstants","bExpr","negated","constantValue","cmp1","cmp2","trueValue","valueKey","_negated","falseValue","withFloatOrStr","thisSource","otherSource","ContextKeyNotRegexExpr","eliminateConstantsInArray","newExpr","extraRedundantCheck","_normalizeArr","exprArr","hasTrue","secondToLastElement","resultElement","hasFalse","LEFT","RIGHT","getTerminals","RawContextKey","metaOrHide","bindTo","createKey","getContextKeyValue","toNegated","isEqualTo","IContextKeyService","key1","key2","value1","value2","implies","allElementsIncluded","pIndex","qIndex","hintDidYouMean","meant","hintDidYouForgetToOpenOrCloseQuote","hintDidYouForgetToEscapeSlash","_input","_start","_errors","stringRe","isTripleEq","_regexFlags","_keywords","_addToken","_match","_quotedString","_regex","_string","errToken","keyword","inEscape","inCharacterClass","SyncDescriptor","staticArguments","supportsDelayedInstantiation","ctorOrDescriptor","getSingletonServiceDescriptors","_util","serviceIds","DI_TARGET","DI_DEPENDENCIES","getServiceDependencies","serviceId","storeServiceDependency","jsonContributionRegistry","_onDidChangeSchema","schemasById","unresolvedSchemaContent","notifySchemaChanged","LogLevel","DEFAULT_LOG_LEVEL","AbstractLogger","_onDidChangeLogLevel","onDidChangeLogLevel","setLevel","getLevel","checkLogLevel","Off","ConsoleLogger","logLevel","useColors","Trace","MultiplexLogger","loggers","LogLevelToString","CONTEXT_LOG_LEVEL","IMarkerData","_displayStrings","fromSeverity","toSeverity","emptyString","makeKeyOptionalMessage","markerData","useMessage","makeKey","asCssVariableName","colorIdent","asCssVariable","asCssVariableWithDefault","defaultCssValue","isColorDefaults","ColorContribution","DEFAULT_COLOR_CONFIG_VALUE","colorRegistry","onDidChangeSchema","colorSchema","colorReferenceSchema","enum","enumDescriptions","colorsById","defaults","needsTransparency","colorContribution","propertySchema","defaultSnippets","body","patternErrorMessage","oneOf","const","getColors","resolveDefaultColor","colorDesc","resolveColorValue","getColorSchema","cat1","cat2","localeCompare","executeTransform","transform","backgroundColor","defines","if","else","transparency","colorValue","ifDefinedThenElse","ifArg","thenArg","elseArg","lessProminent","backgroundColorValue","workbenchColorsSchemaId","schemaRegistry","disabledForeground","errorForeground","descriptionForeground","iconForeground","focusBorder","selectionBackground","textLinkForeground","textLinkActiveForeground","textSeparatorForeground","textPreformatForeground","textPreformatBackground","textBlockQuoteBackground","textBlockQuoteBorder","textCodeBlockBackground","chartsForeground","chartsLines","chartsRed","editorErrorForeground","chartsBlue","chartsYellow","chartsOrange","minimapFindMatch","chartsGreen","chartsPurple","editorForeground","editorStickyScrollBackground","editorStickyScrollHoverBackground","editorStickyScrollBorder","editorStickyScrollShadow","scrollbarShadow","editorWidgetBackground","editorWidgetForeground","editorWidgetBorder","editorWidgetResizeBorder","editorErrorBackground","editorErrorBorder","editorInfoBackground","editorHintForeground","editorHintBorder","editorActiveLinkForeground","editorSelectionBackground","editorSelectionForeground","editorInactiveSelection","editorSelectionHighlight","editorSelectionHighlightBorder","editorFindMatch","editorFindMatchForeground","editorFindMatchHighlightForeground","editorFindRangeHighlight","editorFindMatchBorder","editorFindMatchHighlightBorder","editorFindRangeHighlightBorder","editorHoverHighlight","editorHoverBackground","editorHoverForeground","editorHoverBorder","editorHoverStatusBarBackground","editorInlayHintForeground","editorInlayHintBackground","badgeBackground","editorInlayHintTypeForeground","editorInlayHintTypeBackground","editorInlayHintParameterForeground","editorInlayHintParameterBackground","editorLightBulbForeground","editorLightBulbAutoFixForeground","editorLightBulbAiForeground","snippetTabstopHighlightBackground","snippetTabstopHighlightBorder","snippetFinalTabstopHighlightBackground","snippetFinalTabstopHighlightBorder","defaultInsertColor","defaultRemoveColor","diffInserted","diffInsertedLine","diffRemovedLine","diffInsertedLineGutter","diffRemovedLineGutter","diffOverviewRulerInserted","diffOverviewRulerRemoved","diffInsertedOutline","diffRemovedOutline","diffBorder","diffDiagonalFill","diffUnchangedRegionBackground","diffUnchangedRegionForeground","diffUnchangedTextBackground","widgetShadow","widgetBorder","toolbarHoverBackground","toolbarHoverOutline","toolbarActiveBackground","breadcrumbsForeground","breadcrumbsBackground","breadcrumbsFocusForeground","breadcrumbsActiveSelectionForeground","breadcrumbsPickerBackground","currentBaseColor","incomingBaseColor","commonBaseColor","mergeCurrentHeaderBackground","mergeCurrentContentBackground","mergeIncomingHeaderBackground","mergeIncomingContentBackground","mergeCommonHeaderBackground","mergeCommonContentBackground","mergeBorder","overviewRulerCurrentContentForeground","overviewRulerIncomingContentForeground","overviewRulerCommonContentForeground","overviewRulerFindMatchForeground","overviewRulerSelectionHighlightForeground","problemsErrorIconForeground","problemsWarningIconForeground","problemsInfoIconForeground","inputBackground","inputForeground","inputBorder","inputActiveOptionBorder","inputActiveOptionHoverBackground","inputActiveOptionBackground","inputActiveOptionForeground","inputPlaceholderForeground","inputValidationInfoBackground","inputValidationInfoForeground","inputValidationInfoBorder","inputValidationWarningBackground","inputValidationWarningForeground","inputValidationWarningBorder","inputValidationErrorBackground","inputValidationErrorForeground","inputValidationErrorBorder","selectBackground","selectListBackground","selectForeground","selectBorder","buttonForeground","buttonSeparator","buttonBackground","buttonHoverBackground","buttonBorder","buttonSecondaryForeground","buttonSecondaryBackground","buttonSecondaryHoverBackground","radioActiveForeground","radioActiveBackground","radioActiveBorder","radioInactiveForeground","radioInactiveBackground","radioInactiveBorder","radioInactiveHoverBackground","checkboxBackground","checkboxSelectBackground","checkboxForeground","checkboxBorder","checkboxSelectBorder","keybindingLabelBackground","keybindingLabelForeground","keybindingLabelBorder","keybindingLabelBottomBorder","listFocusBackground","listFocusForeground","listFocusOutline","listFocusAndSelectionOutline","listActiveSelectionBackground","listActiveSelectionForeground","listActiveSelectionIconForeground","listInactiveSelectionBackground","listInactiveSelectionForeground","listInactiveSelectionIconForeground","listInactiveFocusBackground","listInactiveFocusOutline","listHoverBackground","listHoverForeground","listDropOverBackground","listDropBetweenBackground","listHighlightForeground","listFocusHighlightForeground","listInvalidItemForeground","listErrorForeground","listWarningForeground","listFilterWidgetBackground","listFilterWidgetOutline","listFilterWidgetNoMatchesOutline","listFilterWidgetShadow","listFilterMatchHighlight","listFilterMatchHighlightBorder","listDeemphasizedForeground","treeIndentGuidesStroke","treeInactiveIndentGuidesStroke","tableColumnsBorder","tableOddRowsBackgroundColor","editorActionListBackground","editorActionListForeground","editorActionListFocusForeground","editorActionListFocusBackground","menuBorder","menuForeground","menuBackground","menuSelectionForeground","menuSelectionBackground","menuSelectionBorder","menuSeparatorBackground","minimapSelectionOccurrenceHighlight","minimapSelection","minimapBackground","minimapForegroundOpacity","minimapSliderBackground","scrollbarSliderBackground","minimapSliderHoverBackground","scrollbarSliderHoverBackground","minimapSliderActiveBackground","scrollbarSliderActiveBackground","sashHoverBorder","badgeForeground","progressBarBackground","quickInputBackground","quickInputForeground","quickInputTitleBackground","pickerGroupForeground","pickerGroupBorder","_deprecatedQuickInputListFocusBackground","quickInputListFocusForeground","quickInputListFocusIconForeground","quickInputListFocusBackground","searchResultsInfoForeground","searchEditorFindMatch","searchEditorFindMatchBorder","ColorScheme","isHighContrast","HIGH_CONTRAST_DARK","HIGH_CONTRAST_LIGHT","isDark","DARK","getThemeTypeSelector","ThemingContribution","themingRegistry","themingParticipants","onThemingParticipantAddedEmitter","onColorThemeChange","participant","getThemingParticipants","Themable","themeService","onThemeChange","updateStyles","ResourceEditStackSnapshot","UndoRedoGroup","_ID","nextOrder","UndoRedoSource","__webpack_module_cache__","cachedModule","__webpack_modules__","definition","enumerable","CharacterCodes","CharacterCodes2","createScanner","ignoreTrivia","tokenOffset","tokenLineStartOffset","prevTokenLineStartOffset","scanError","scanHexDigits","exact","digits","scanNext","isWhiteSpace","isLineBreak","ch3","scanString","safeLength","commentClosed","isDigit","scanNumber","isUnknownContentCharacter","getTokenValue","getTokenOffset","getTokenLength","getTokenStartLine","getTokenStartCharacter","getTokenError","ParseOptions","cachedSpaces","maxCachedValues","cachedBreakLinesWithSpaces","supportedEols","documentText","initialIndentLevel","formatText","formatTextStart","isEOL","nChars","eolFastPathSupported","indentValue","numberLineBreaks","indentLevel","indentType","scanner","hasError","newLinesAndIndent","amountOfSpaces","keepLines","addEdit","firstToken","firstTokenStart","firstTokenEnd","secondToken","replaceContent","needsLineBreak","commentTokenStart","insertFinalNewline","DEFAULT","allowTrailingComma","ScanError","ScanError2","SyntaxKind","SyntaxKind2","createScanner2","ParseErrorCode","ParseErrorCode2","DocumentUri","integer","integer2","uinteger","uinteger2","Position2","Range2","Location","Location2","LocationLink","LocationLink2","Color2","ColorInformation","ColorInformation2","ColorPresentation","ColorPresentation2","FoldingRangeKind2","FoldingRange","FoldingRange2","DiagnosticRelatedInformation","DiagnosticRelatedInformation2","DiagnosticSeverity","DiagnosticSeverity2","DiagnosticTag","DiagnosticTag2","CodeDescription","Diagnostic","Diagnostic2","Command2","TextEdit2","ChangeAnnotation","ChangeAnnotation2","ChangeAnnotationIdentifier","AnnotatedTextEdit","AnnotatedTextEdit2","TextDocumentEdit","TextDocumentEdit2","CreateFile","CreateFile2","RenameFile","RenameFile2","DeleteFile","DeleteFile2","WorkspaceEdit","TextDocumentIdentifier","TextDocumentIdentifier2","VersionedTextDocumentIdentifier","VersionedTextDocumentIdentifier2","OptionalVersionedTextDocumentIdentifier","OptionalVersionedTextDocumentIdentifier2","TextDocumentItem","TextDocumentItem2","MarkupKind","MarkupKind2","MarkupContent","CompletionItemKind2","InsertTextFormat","InsertTextFormat2","InsertReplaceEdit","InsertReplaceEdit2","InsertTextMode","InsertTextMode2","CompletionItemLabelDetails","CompletionItem","CompletionList","MarkedString","MarkedString2","Hover","ParameterInformation","SignatureInformation","DocumentHighlightKind2","DocumentHighlight","SymbolKind2","SymbolInformation","WorkspaceSymbol","DocumentSymbol","DocumentSymbol2","CodeActionKind","CodeActionKind2","CodeActionTriggerKind","CodeActionTriggerKind2","CodeActionContext","CodeActionContext2","CodeAction","CodeAction2","CodeLens","CodeLens2","FormattingOptions","FormattingOptions2","DocumentLink","DocumentLink2","SelectionRange","SelectionRange2","SemanticTokenTypes","SemanticTokenTypes2","SemanticTokenModifiers","SemanticTokenModifiers2","SemanticTokens","InlineValueText","InlineValueText2","InlineValueVariableLookup","InlineValueVariableLookup2","InlineValueEvaluatableExpression","InlineValueEvaluatableExpression2","InlineValueContext","InlineValueContext2","InlayHintKind2","InlayHintLabelPart","InlayHintLabelPart2","InlayHint","InlayHint2","StringValue","InlineCompletionItem","InlineCompletionList","InlineCompletionTriggerKind2","SelectedCompletionInfo","InlineCompletionContext","WorkspaceFolder","TextDocument","parse2","currentProperty","currentParent","previousParents","onValue","visitor","_jsonPath","toNoArgVisit","visitFunction","toNoArgVisitWithPath","toOneArgVisit","toOneArgVisitWithPath","onObjectBegin","onObjectProperty","onObjectEnd","onArrayBegin","onArrayEnd","onLiteralValue","onSeparator","onComment","onError","disallowComments","handleError","skipUntilAfter","skipUntil","parseString","isValue","parseLiteral","tokenValue","parseProperty","parseValue","parseObject","needsComma","parseArray","isFirstElement","allowEmptyContent","visit","findNodeAtOffset2","findNodeAtOffset","includeRightBound","getNodePath2","getNodePath","getNodeValue2","getNodeValue","valueNode","extendedRegExp","stringLength","MIN_VALUE","Is","objectLiteral","two","three","four","string","targetUri","targetRange","numberRange","textEdit","additionalTextEdits","typedArray","collapsedText","defined","Information","Unnecessary","Deprecated","href","relatedInformation","codeDescription","del","needsConfirmation","boolean","annotation","annotationId","textDocument","ignoreIfExists","oldUri","newUri","ignoreIfNotExists","documentChanges","PlainText","Markdown","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","File","Reference","Folder","EnumMember","Constant","Struct","Operator","TypeParameter","asIs","adjustIndentation","isIncomplete","fromPlainText","plainText","contents","documentation","parameters","Read","Write","Namespace","Package","Key","Null","containerName","selectionRange","deprecated","Empty","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","SourceFixAll","Invoked","Automatic","diagnostics","only","triggerKind","kindOrCommandOrEdit","checkKind","isPreferred","variableName","caseSensitiveLookup","frameId","stoppedLocation","Type","Parameter","tooltip","textEdits","paddingLeft","paddingRight","createSnippet","filterText","selectedCompletionInfo","TextDocument3","mergeSort2","leftIdx","rightIdx","FullTextDocument","func","sortedEdits","lastModifiedOffset","_version","_content","_lineOffsets","getLineOffsets","lineOffsets","isLineStart","nextLineOffset","Is2","TextDocument2","ErrorCode","ErrorCode2","SchemaDraft","SchemaDraft2","ClientCapabilities","FullTextDocument2","_FullTextDocument","isIncremental","getWellformedRange","addedLineOffsets","computeLineOffsets","isFull","mergeSort","isAtLineStart","getWellformedEdit","formatArgs","replacements","format3","spans","LATEST","completion","completionItem","documentationFormat","commitCharactersSupport","labelDetailsSupport","_format2Regexp","template","EnumMatch","EnumMatch2","formats","ASTNodeImpl","NullASTNodeImpl","BooleanASTNodeImpl","boolValue","ArrayASTNodeImpl","NumberASTNodeImpl","isInteger","NaN","StringASTNodeImpl","PropertyASTNodeImpl","keyNode","colonOffset","ObjectASTNodeImpl","asSchema","schemaDraftFromId","v3","v4","v6","v7","v2019_09","v2020_12","EvaluationContext","schemaDraft","SchemaCollector","_SchemaCollector","focusOffset","schemas","contains2","newSub","NoOpSchemaCollector","_schema","_other","_node","ValidationResult","problems","propertiesMatches","processedProperties","propertiesValueMatches","primaryValueMatches","enumValueMatch","enumValues","hasProblems","validationResult","mergeProcessedProperties","mergeEnumValues","EnumValueMismatch","mergePropertyMatch","propertyValidationResult","getNodeValue3","getNodePath3","JSONDocument","syntaxErrors","getNodeFromOffset","doVisit","ctn","getSchemaDraft","getMatchingSchemas","matchingSchemas","fallBack","schemaId","$schema","matchesType","subSchemaRef","subValidationResult","subMatchingSchemas","notSchema","ms","testAlternatives","alternatives","maxOneMatch","bestMatch","subSchema","compareResult","anyOf","testBranch","schema2","ifSchema","ifSchema2","thenSchema","elseSchema","testCondition","targetNode","_validateNode","seenKeys","unprocessedProperties","propertyNode","required","propertyName","propertyProcessed","propertyPattern","processed","unevaluatedProperties","maxProperties","minProperties","dependentRequired","propertyDeps","_validatePropertyDependencies","dependentSchemas","propertyNames","f2","propertyDep","requiredProp","_validateObjectNode","prefixItemsSchemas","additionalItemSchema","prefixItems","itemValidationResult","containsSchema","containsCount","minContains","maxContains","unevaluatedItems","minItems","maxItems","uniqueItems","hasDuplicates","_validateArrayNode","minLength","format5","_validateStringNode","normalizeFloats","float","parts","multiplier","multipleOf","normMultipleOf","normValue","getExclusiveLimit","getLimit","exclusiveMinimum","minimum","exclusiveMaximum","maximum","_validateNumberNode","parse3","lastProblemOffset","commentRanges","collectComments","_scanNext","token2","_checkScanError","_errorAtRange","_finalize","InvalidUnicode","InvalidEscapeCharacter","UnexpectedEndOfNumber","UnexpectedEndOfComment","UnexpectedEndOfString","InvalidCharacter","keyPlaceholder","_parseProperty","keysSeen","_parseString","PropertyKeysMustBeDoublequoted","DuplicateKey","ColonExpected","_parseValue","ValueExpected","commaOffset","TrailingComma","CommaExpected","CommaOrCloseBacketExpected","_parseArray","PropertyExpected","CommaOrCloseBraceExpected","_parseObject","numberValue","_parseNumber","_parseLiteral","_root","stringifyObject","stringifyLiteral","newIndent","JSONCompletion","schemaService","contributions","promiseConstructor","clientCapabilities","resolveCompletion","resolver","doComplete","doc","isInComment","currentWord","getCurrentWord","overwriteRange","overwriteStart","proposed","suggestion","labelDetails","shortendedLabel","setAsIncomplete","getNumberOfProposals","getSchemaForResource","collectionPromises","addValue","currentKey","separatorAfter","evaluateSeparatorAfter","getPropertyCompletions","getSchemaLessPropertyCompletions","contribution","collectPromise","collectPropertyCompletions","getLabelForValue","getInsertTextForProperty","insertTextFormat","types","getValueCompletions","getSchemaLessValueCompletions","getContributedValueCompletions","offsetForSeparator","addFillerValueCompletions","schemaProperties","doNotSuggest","proposal","getFilterTextForValue","fromMarkup","markdownDescription","suggestSortText","sortText","schemaPropertyNames","propertyNameCompletionItem","enumDescription","markdownEnumDescriptions","collectCompletionsForSimilarObject","getInsertTextForValue","parentKey","getSuggestionKind","collectSuggestionsForValues","getLabelTextForMatchingNode","getInsertTextForMatchingNode","addBooleanValueCompletion","addDollarSchemaCompletions","valueNode2","existingValues","findItemAtOffset","addSchemaValueCompletions","propertyMatched","addNullValueCompletion","collectValueCompletions","collectDefaultCompletions","addEnumValueCompletions","addDefaultValueCompletions","collectTypes","arrayDepth","hasProposals","doesSupportsLabelDetails","examples","example","type2","getInsertTextForSnippetValue","getFilterTextForSnippetValue","getLabelForSnippetValue","bodyText","enm","doesSupportMarkdown","t2","getInsertTextForGuessedValue","getRegisteredSchemaIds","getValueFromLabel","getInsertTextForPlainText","snippetValue","propertyText","resultText","nValueProposals","markupString","supportsMarkdown","doesSupportsCommitCharacters","supportsCommitCharacters","JSONHover","doHover","hoverRangeNode","hoverRange","createHover","getInfoContribution","htmlContent","markdownEnumValueDescription","enumValue","toMarkdown","toMarkdownCodeBlock","plain","JSONValidation","jsonSchemaService","validationEnabled","configure","raw","commentSeverity","doValidation","jsonDocument","documentSettings","addProblem","problem","signature","getDiagnostics","trailingCommaSeverity","trailingCommas","toDiagnosticSeverity","schemaValidation","schemaRequest","addSchemaProblem","errorCode","astRoot","SchemaResolveError","warnings","SchemaUnsupportedFeature","semanticErrors","schemaAllowsComments","schemaAllowsTrailingCommas","CommentNotPermitted","idCounter","registerExternalSchema","getResolvedSchema","resolvedSchema","getLanguageStatus","getSchemaURIsForResource","schemaRef","allow","deprSchemaRef","severityLevel","hexDigit","colorFromHex","JSONDocumentSymbols","findDocumentSymbols","resultLimit","resourceString","getName","onResultLimitExceeded","toVisit","nextToVisit","limitExceeded","collectOutlineEntries","childContainerName","getKeyLabel","getSymbolKind","findDocumentSymbols2","symbol","getDetail","nodeType","findDocumentColors","visitedNode","nodeId","getColorPresentations","red256","green256","blue256","toTwoDigitHex","LIB","schemaContributions","schemaAssociations","descriptions","definitions","$id","$comment","readOnly","contentMediaType","contentEncoding","schemaName","propertyObject","t3","t4","e3","r3","n3","u","_makeLong","Utils","P","o2","t5","e4","C","h2","c2","A2","URI2","createRegex","glob","reStr","extended","globstar","inGroup","prevChar","nextChar","Container","Container2","FilePatternAssociation","folderUri","uris","globWrappers","patternString","normalizeResourceForMatching","matchesPattern","fileName","getURIs","SchemaHandle","service","anchors","unresolvedSchema","UnresolvedSchema","getUnresolvedSchema","loadSchema","unresolved","resolveSchemaContent","clearSchema","hasChanges","ResolvedSchema","getSection","getSectionRecursive","JSONSchemaService","requestService","contextService","callOnDispose","contributionSchemas","contributionAssociations","filePatternAssociations","registeredSchemasIds","onResourceChange","cachedSchemaForResource","toWalk","normalizeId","setSchemaContributions","schemaContributions2","normalizedId","addSchemaHandle","schemaAssociation","addFilePatternAssociation","schemaHandle","getOrAddSchemaHandle","fpa","fileMatch","clearExternalSchemas","contributionAssociation","toDisplayString","schemaContent","jsonErrors","errorSplit","schemaToResolve","resolveErrors","usesUnsupportedFeatures","mergeRef","sourceRoot","sourceHandle","refSegment","section","handle2","part","findSectionByJSONPointer","collectAnchors","resolveExternalLink","parentHandle","resolveRelativePath","referencedHandle","loc","resolveRefs","parentSchema","openPromises","traverseNodes","seenRefs","$recursiveRef","$dynamicRef","$anchor","$recursiveAnchor","$dynamicAnchor","resolveWarnings","collectEntries","collectMapEntries","maps","collectArrayEntries","arrays","collectEntryOrArrayEntries","$defs","getSchemaFromProperty","getAssociatedSchemas","normalizedResource","schemeId","createCombinedSchema","schemaIds","combinedSchemaId","combinedSchema","idCounter2","getFoldingRanges","nestingLevels","prevStart","rangeLimit","onRangeLimitExceeded","maxLevel","getSelectionRanges","positions","getOffsetAfterNextToken","expectedToken","cStart","cEnd","afterCommaOffset","format4","documentToFormat","formattingOptions","formattingRange","format2","PropertyTree","beginningLineNumber","childrenProperties","lastProperty","noKeyName","addChildProperty","childProperty","insertionIndex","propertyTreeArray","propertyTree","compare_fn","firstPropertyInArrayName","lastPropertyInArrayName","binarySearchOnPropertyArray","compareProperties","propertyTree1","propertyTree2","propertyName1","propertyName2","documentToSort","formattedJsonString","formattedJsonDocument","sortedJsonDocument","queueToSort","updateSortingQueue","dataToSort","jsonContentToReplace","jsonDocumentToReplace","lineWhereToAddComma","indexWhereToAddComma","indexWhereToAddComa","edit2","commaIndex","lineWhereToRemoveComma","commaLine","sortJsoncDocument","formattedDocument","formattedString","lastNonTriviaNonCommentToken","secondToLastNonTriviaNonCommentToken","rootTree","currentTree","lastTokenLine","numberOfCharactersOnPreviousLines","lineOfLastNonTriviaNonCommentToken","endIndexOfLastNonTriviaNonCommentToken","currentContainerStack","updateLastPropertyEndLineNumber","updateBeginningLineNumber","endLineNumber2","findJsoncPropertyTree","sortedAndFormattedJsonDocument","minimumBeginningLineNumber","Infinity","SortingRange","updateSortingQueueForArrayProperties","subObject","defaultSchemaRequestService","findLinks","links","unescape","parseJSONPointer","findNode","findTargetNode","targetPos","pointer","propertyNode2","arrayItem","getLanguageService","schemaRequestService","workspaceContext","jsonCompletion","jsonHover","jsonDocumentSymbols","jsonValidation","resetSchema","parseJSONDocument","newJSONDocument","findDefinition","fetch","response","JSONWorker","_ctx","_languageSettings","languageSettings","uriString","Slash","enableSchemaRequest","_getTextDocument","symbols","colorSymbols","colorPresentations","models","Dot","newParts"],"sourceRoot":""}