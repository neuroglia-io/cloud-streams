@namespace CloudStreams.Dashboard.Pages.Overview
@page "/"
@using System.Reactive.Linq
@using CloudStreams.Dashboard.StateManagement
@inject ICloudStreamsGatewayApiClient CloudStreamsGatewayApi

<PageTitle>Overview</PageTitle>

<h5>Events</h5>
<div class="row">
    <div class="col-6">
        <div class="card">
            <div class="card-header"><h6>Stream</h6></div>
            <div class="card-body">
                <table class="table table-striped mb-3">
                    <tbody>
                        <tr>
                            <td>Created at</td>
                            <td><input type="text" readonly value="@stream?.FirstEvent?.ToString("R")" title="The date and time of the first cloud event published on the stream" class="form-control" /></td>
                        </tr>
                        <tr>
                            <td>Last modified</td>
                            <td><input type="text" readonly value="@stream?.LastEvent?.ToString("R")" title="The date and time of the last cloud event published on the stream" class="form-control" /></td>
                        </tr>
                            <tr>
                            <td>Length</td>
                            <td><input type="text" readonly value="@stream?.Length" title="The amount of cloud events on the stream" class="form-control" /></td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="col-6">
       <div class="card">
            <div class="card-header"><h6>Partitions</h6></div>
            <div class="card-body">
                <b>Source</b>
                <table class="table table-striped mb-3">
                    <tbody>
                        <tr>
                            <td>Partitions</td>
                            <td>
                                <select class="form-control">
                                    @if(sourcePartitions != null)
                                    {
                                        @foreach(var partition in this.sourcePartitions)
                                        {
                                            <option>@partition.Id</option>
                                        }
                                    }
                                </select>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


@code{

    CloudEventStreamMetadata? stream;
    List<CloudEventPartitionMetadata>? sourcePartitions;
    List<CloudEventPartitionMetadata>? typePartitions;
    List<CloudEventPartitionMetadata>? subjectPartitions;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        this.stream = await this.CloudStreamsGatewayApi.CloudEvents.Stream.GetStreamMetadataAsync().ConfigureAwait(false);
        this.sourcePartitions = (await (await this.CloudStreamsGatewayApi.CloudEvents.Partitions.ListPartitionsByTypeAsync(CloudEventPartitionType.BySource).ConfigureAwait(false)).ToListAsync())!;
        this.typePartitions = (await (await this.CloudStreamsGatewayApi.CloudEvents.Partitions.ListPartitionsByTypeAsync(CloudEventPartitionType.ByType).ConfigureAwait(false)).ToListAsync())!;
        this.subjectPartitions = (await (await this.CloudStreamsGatewayApi.CloudEvents.Partitions.ListPartitionsByTypeAsync(CloudEventPartitionType.BySubject).ConfigureAwait(false)).ToListAsync())!;
    }

}