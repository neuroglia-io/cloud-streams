version: '3.4'

services:

  eventstore:
    image: eventstore/eventstore:latest
    environment:
      - EVENTSTORE_INSECURE=true
      - EVENTSTORE_EXT_TCP_PORT=1113
      - EVENTSTORE_HTTP_PORT=2113
      - EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP=true
      - EVENTSTORE_RUN_PROJECTIONS=all
      - EVENTSTORE_START_STANDARD_PROJECTIONS=true
    ports:
      - "1113:1113"
      - "2113:2113"
    volumes:
      - type: volume
        source: eventstore-data
        target: /var/lib/eventstore
      - type: volume
        source: eventstore-logs
        target: /var/log/eventstore

  postgres:
    image: postgres
    environment:
      POSTGRES_DB: apicurio-registry
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  apicurio:
    image: apicurio/apicurio-registry-sql:latest-release
    environment:
      REGISTRY_DATASOURCE_URL: jdbc:postgresql://postgres/apicurio-registry
      REGISTRY_DATASOURCE_USERNAME: ${POSTGRES_USERNAME}
      REGISTRY_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 9666:8080
    depends_on:
      - postgres

  otl-collector:
    image: otel/opentelemetry-collector-contrib
    command: [ "--config=/etc/collector.yaml" ]
    volumes:
      - ./otel/collector/config.yaml:/etc/collector.yaml

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/config.yaml:/etc/prometheus/prometheus.yml

  tempo:
    image: grafana/tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo/config.yaml:/etc/tempo.yaml

  loki:
    image: grafana/loki
    command: [ "-config.file=/etc/loki/local-config.yaml" ]

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/data-sources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    depends_on:
      - prometheus
      - tempo
      - loki

  gateway-1:
    image: ${DOCKER_REGISTRY-}cloudstreams-gateway
    build:
      context: ../../
      dockerfile: src/gateway/server/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:80
      CLOUDSTREAMS_GATEWAY_NAME: gateway-1
      CONNECTIONSTRINGS__EVENTSTORE: esdb://eventstore:2113?tls=false
      CONNECTIONSTRINGS__APICURIO: http://apicurio:8080
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otl-collector:4317
    ports:
      - 9696:80
    volumes:
      - ./k8s/config:/root/.kube/config
    depends_on:
      - eventstore
      - postgres
      - apicurio

  broker-1:
    image: ${DOCKER_REGISTRY-}cloudstreams-broker
    build:
      context: ../../
      dockerfile: src/broker/server/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:80
      CLOUDSTREAMS_BROKER_NAME: broker-1
      CONNECTIONSTRINGS__EVENTSTORE: esdb://eventstore:2113?tls=false
      CONNECTIONSTRINGS__APICURIO: http://apicurio:8080
    ports:
      - 9697:80
    volumes:
      - ./k8s/config:/root/.kube/config
    depends_on:
      - eventstore
      - postgres
      - apicurio

volumes:
  eventstore-data:
  eventstore-logs:
  postgres_data:
